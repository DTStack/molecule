(self["webpackJsonp"] = self["webpackJsonp"] || []).push([[2],{

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/_deps/vscode-languageserver-types/main.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return Position; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return Range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Location\", function() { return Location; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LocationLink\", function() { return LocationLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return Color; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColorInformation\", function() { return ColorInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColorPresentation\", function() { return ColorPresentation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FoldingRangeKind\", function() { return FoldingRangeKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FoldingRange\", function() { return FoldingRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticRelatedInformation\", function() { return DiagnosticRelatedInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticSeverity\", function() { return DiagnosticSeverity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticTag\", function() { return DiagnosticTag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticCode\", function() { return DiagnosticCode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Diagnostic\", function() { return Diagnostic; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Command\", function() { return Command; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return TextEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentEdit\", function() { return TextDocumentEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CreateFile\", function() { return CreateFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenameFile\", function() { return RenameFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeleteFile\", function() { return DeleteFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceEdit\", function() { return WorkspaceEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceChange\", function() { return WorkspaceChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentIdentifier\", function() { return TextDocumentIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VersionedTextDocumentIdentifier\", function() { return VersionedTextDocumentIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentItem\", function() { return TextDocumentItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkupKind\", function() { return MarkupKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkupContent\", function() { return MarkupContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemKind\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InsertTextFormat\", function() { return InsertTextFormat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemTag\", function() { return CompletionItemTag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InsertReplaceEdit\", function() { return InsertReplaceEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItem\", function() { return CompletionItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionList\", function() { return CompletionList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkedString\", function() { return MarkedString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Hover\", function() { return Hover; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParameterInformation\", function() { return ParameterInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignatureInformation\", function() { return SignatureInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlightKind\", function() { return DocumentHighlightKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlight\", function() { return DocumentHighlight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolKind\", function() { return SymbolKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolTag\", function() { return SymbolTag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolInformation\", function() { return SymbolInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentSymbol\", function() { return DocumentSymbol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeActionKind\", function() { return CodeActionKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeActionContext\", function() { return CodeActionContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeAction\", function() { return CodeAction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeLens\", function() { return CodeLens; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormattingOptions\", function() { return FormattingOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentLink\", function() { return DocumentLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectionRange\", function() { return SelectionRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EOL\", function() { return EOL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocument\", function() { return TextDocument; });\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nvar Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nvar Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nvar Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * [LocationLink](#LocationLink) literals.\n */\nvar LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nvar Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.number(candidate.red)\n            && Is.number(candidate.green)\n            && Is.number(candidate.blue)\n            && Is.number(candidate.alpha);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nvar ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nvar ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * Enum of known range kinds\n */\nvar FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nvar FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nvar DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nvar DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nvar DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The DiagnosticCode namespace provides functions to deal with complex diagnostic codes.\n *\n * @since 3.16.0 - Proposed state\n */\nvar DiagnosticCode;\n(function (DiagnosticCode) {\n    /**\n     * Checks whether the given liternal conforms to the [DiagnosticCode](#DiagnosticCode) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && (Is.number(candidate.value) || Is.string(candidate.value)) && Is.string(candidate.target);\n    }\n    DiagnosticCode.is = is;\n})(DiagnosticCode || (DiagnosticCode = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nvar Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nvar Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nvar TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nvar TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nvar CreateFile;\n(function (CreateFile) {\n    function create(uri, options) {\n        var result = {\n            kind: 'create',\n            uri: uri\n        };\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n            result.options = options;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\n            (candidate.options === void 0 ||\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nvar RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options) {\n        var result = {\n            kind: 'rename',\n            oldUri: oldUri,\n            newUri: newUri\n        };\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\n            result.options = options;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\n            (candidate.options === void 0 ||\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nvar DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options) {\n        var result = {\n            kind: 'delete',\n            uri: uri\n        };\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\n            result.options = options;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\n            (candidate.options === void 0 ||\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nvar WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (change) {\n                    if (TextDocumentEdit.is(change)) {\n                        var textEditChange = new TextEditChangeImpl(change.edits);\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            if (this._workspaceEdit === undefined) {\n                return { documentChanges: [] };\n            }\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    WorkspaceChange.prototype.createFile = function (uri, options) {\n        this.checkDocumentChanges();\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\n    };\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\n        this.checkDocumentChanges();\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\n    };\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\n        this.checkDocumentChanges();\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\n    };\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n    };\n    return WorkspaceChange;\n}());\n\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nvar TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nvar VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nvar TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nvar MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n(function (MarkupKind) {\n    /**\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nvar MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nvar CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nvar InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nvar CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0 - Proposed state\n */\nvar InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText: newText, insert: insert, replace: replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [InsertReplaceEdit](#InsertReplaceEdit) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nvar CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nvar CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nvar MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nvar Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nvar ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nvar SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nvar DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nvar SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n * @since 3.15\n */\nvar SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nvar SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nvar DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== void 0) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === void 0 || Array.isArray(candidate.children)) &&\n            (candidate.tags === void 0 || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nvar CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nvar CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only) {\n        var result = { diagnostics: diagnostics };\n        if (only !== void 0 && only !== null) {\n            result.only = only;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nvar CodeAction;\n(function (CodeAction) {\n    function create(title, commandOrEdit, kind) {\n        var result = { title: title };\n        if (Command.is(commandOrEdit)) {\n            result.command = commandOrEdit;\n        }\n        else {\n            result.edit = commandOrEdit;\n        }\n        if (kind !== void 0) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\n            (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nvar CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nvar FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\nvar DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nvar SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range: range, parent: parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\nvar EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nvar TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL19kZXBzL3ZzY29kZS1sYW5ndWFnZXNlcnZlci10eXBlcy9tYWluLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9fZGVwcy92c2NvZGUtbGFuZ3VhZ2VzZXJ2ZXItdHlwZXMvbWFpbi5qcz82MDZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbid1c2Ugc3RyaWN0Jztcbi8qKlxuICogVGhlIFBvc2l0aW9uIG5hbWVzcGFjZSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb25zIHRvIHdvcmsgd2l0aFxuICogW1Bvc2l0aW9uXSgjUG9zaXRpb24pIGxpdGVyYWxzLlxuICovXG5leHBvcnQgdmFyIFBvc2l0aW9uO1xuKGZ1bmN0aW9uIChQb3NpdGlvbikge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgUG9zaXRpb24gbGl0ZXJhbCBmcm9tIHRoZSBnaXZlbiBsaW5lIGFuZCBjaGFyYWN0ZXIuXG4gICAgICogQHBhcmFtIGxpbmUgVGhlIHBvc2l0aW9uJ3MgbGluZS5cbiAgICAgKiBAcGFyYW0gY2hhcmFjdGVyIFRoZSBwb3NpdGlvbidzIGNoYXJhY3Rlci5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUobGluZSwgY2hhcmFjdGVyKSB7XG4gICAgICAgIHJldHVybiB7IGxpbmU6IGxpbmUsIGNoYXJhY3RlcjogY2hhcmFjdGVyIH07XG4gICAgfVxuICAgIFBvc2l0aW9uLmNyZWF0ZSA9IGNyZWF0ZTtcbiAgICAvKipcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgZ2l2ZW4gbGl0ZXJuYWwgY29uZm9ybXMgdG8gdGhlIFtQb3NpdGlvbl0oI1Bvc2l0aW9uKSBpbnRlcmZhY2UuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIElzLm51bWJlcihjYW5kaWRhdGUubGluZSkgJiYgSXMubnVtYmVyKGNhbmRpZGF0ZS5jaGFyYWN0ZXIpO1xuICAgIH1cbiAgICBQb3NpdGlvbi5pcyA9IGlzO1xufSkoUG9zaXRpb24gfHwgKFBvc2l0aW9uID0ge30pKTtcbi8qKlxuICogVGhlIFJhbmdlIG5hbWVzcGFjZSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb25zIHRvIHdvcmsgd2l0aFxuICogW1JhbmdlXSgjUmFuZ2UpIGxpdGVyYWxzLlxuICovXG5leHBvcnQgdmFyIFJhbmdlO1xuKGZ1bmN0aW9uIChSYW5nZSkge1xuICAgIGZ1bmN0aW9uIGNyZWF0ZShvbmUsIHR3bywgdGhyZWUsIGZvdXIpIHtcbiAgICAgICAgaWYgKElzLm51bWJlcihvbmUpICYmIElzLm51bWJlcih0d28pICYmIElzLm51bWJlcih0aHJlZSkgJiYgSXMubnVtYmVyKGZvdXIpKSB7XG4gICAgICAgICAgICByZXR1cm4geyBzdGFydDogUG9zaXRpb24uY3JlYXRlKG9uZSwgdHdvKSwgZW5kOiBQb3NpdGlvbi5jcmVhdGUodGhyZWUsIGZvdXIpIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoUG9zaXRpb24uaXMob25lKSAmJiBQb3NpdGlvbi5pcyh0d28pKSB7XG4gICAgICAgICAgICByZXR1cm4geyBzdGFydDogb25lLCBlbmQ6IHR3byB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmFuZ2UjY3JlYXRlIGNhbGxlZCB3aXRoIGludmFsaWQgYXJndW1lbnRzW1wiICsgb25lICsgXCIsIFwiICsgdHdvICsgXCIsIFwiICsgdGhyZWUgKyBcIiwgXCIgKyBmb3VyICsgXCJdXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFJhbmdlLmNyZWF0ZSA9IGNyZWF0ZTtcbiAgICAvKipcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgZ2l2ZW4gbGl0ZXJhbCBjb25mb3JtcyB0byB0aGUgW1JhbmdlXSgjUmFuZ2UpIGludGVyZmFjZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBJcy5vYmplY3RMaXRlcmFsKGNhbmRpZGF0ZSkgJiYgUG9zaXRpb24uaXMoY2FuZGlkYXRlLnN0YXJ0KSAmJiBQb3NpdGlvbi5pcyhjYW5kaWRhdGUuZW5kKTtcbiAgICB9XG4gICAgUmFuZ2UuaXMgPSBpcztcbn0pKFJhbmdlIHx8IChSYW5nZSA9IHt9KSk7XG4vKipcbiAqIFRoZSBMb2NhdGlvbiBuYW1lc3BhY2UgcHJvdmlkZXMgaGVscGVyIGZ1bmN0aW9ucyB0byB3b3JrIHdpdGhcbiAqIFtMb2NhdGlvbl0oI0xvY2F0aW9uKSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBMb2NhdGlvbjtcbihmdW5jdGlvbiAoTG9jYXRpb24pIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgTG9jYXRpb24gbGl0ZXJhbC5cbiAgICAgKiBAcGFyYW0gdXJpIFRoZSBsb2NhdGlvbidzIHVyaS5cbiAgICAgKiBAcGFyYW0gcmFuZ2UgVGhlIGxvY2F0aW9uJ3MgcmFuZ2UuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKHVyaSwgcmFuZ2UpIHtcbiAgICAgICAgcmV0dXJuIHsgdXJpOiB1cmksIHJhbmdlOiByYW5nZSB9O1xuICAgIH1cbiAgICBMb2NhdGlvbi5jcmVhdGUgPSBjcmVhdGU7XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIGxpdGVyYWwgY29uZm9ybXMgdG8gdGhlIFtMb2NhdGlvbl0oI0xvY2F0aW9uKSBpbnRlcmZhY2UuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5yYW5nZSkgJiYgKElzLnN0cmluZyhjYW5kaWRhdGUudXJpKSB8fCBJcy51bmRlZmluZWQoY2FuZGlkYXRlLnVyaSkpO1xuICAgIH1cbiAgICBMb2NhdGlvbi5pcyA9IGlzO1xufSkoTG9jYXRpb24gfHwgKExvY2F0aW9uID0ge30pKTtcbi8qKlxuICogVGhlIExvY2F0aW9uTGluayBuYW1lc3BhY2UgcHJvdmlkZXMgaGVscGVyIGZ1bmN0aW9ucyB0byB3b3JrIHdpdGhcbiAqIFtMb2NhdGlvbkxpbmtdKCNMb2NhdGlvbkxpbmspIGxpdGVyYWxzLlxuICovXG5leHBvcnQgdmFyIExvY2F0aW9uTGluaztcbihmdW5jdGlvbiAoTG9jYXRpb25MaW5rKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIExvY2F0aW9uTGluayBsaXRlcmFsLlxuICAgICAqIEBwYXJhbSB0YXJnZXRVcmkgVGhlIGRlZmluaXRpb24ncyB1cmkuXG4gICAgICogQHBhcmFtIHRhcmdldFJhbmdlIFRoZSBmdWxsIHJhbmdlIG9mIHRoZSBkZWZpbml0aW9uLlxuICAgICAqIEBwYXJhbSB0YXJnZXRTZWxlY3Rpb25SYW5nZSBUaGUgc3BhbiBvZiB0aGUgc3ltYm9sIGRlZmluaXRpb24gYXQgdGhlIHRhcmdldC5cbiAgICAgKiBAcGFyYW0gb3JpZ2luU2VsZWN0aW9uUmFuZ2UgVGhlIHNwYW4gb2YgdGhlIHN5bWJvbCBiZWluZyBkZWZpbmVkIGluIHRoZSBvcmlnaW5hdGluZyBzb3VyY2UgZmlsZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUodGFyZ2V0VXJpLCB0YXJnZXRSYW5nZSwgdGFyZ2V0U2VsZWN0aW9uUmFuZ2UsIG9yaWdpblNlbGVjdGlvblJhbmdlKSB7XG4gICAgICAgIHJldHVybiB7IHRhcmdldFVyaTogdGFyZ2V0VXJpLCB0YXJnZXRSYW5nZTogdGFyZ2V0UmFuZ2UsIHRhcmdldFNlbGVjdGlvblJhbmdlOiB0YXJnZXRTZWxlY3Rpb25SYW5nZSwgb3JpZ2luU2VsZWN0aW9uUmFuZ2U6IG9yaWdpblNlbGVjdGlvblJhbmdlIH07XG4gICAgfVxuICAgIExvY2F0aW9uTGluay5jcmVhdGUgPSBjcmVhdGU7XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIGxpdGVyYWwgY29uZm9ybXMgdG8gdGhlIFtMb2NhdGlvbkxpbmtdKCNMb2NhdGlvbkxpbmspIGludGVyZmFjZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBJcy5kZWZpbmVkKGNhbmRpZGF0ZSkgJiYgUmFuZ2UuaXMoY2FuZGlkYXRlLnRhcmdldFJhbmdlKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLnRhcmdldFVyaSlcbiAgICAgICAgICAgICYmIChSYW5nZS5pcyhjYW5kaWRhdGUudGFyZ2V0U2VsZWN0aW9uUmFuZ2UpIHx8IElzLnVuZGVmaW5lZChjYW5kaWRhdGUudGFyZ2V0U2VsZWN0aW9uUmFuZ2UpKVxuICAgICAgICAgICAgJiYgKFJhbmdlLmlzKGNhbmRpZGF0ZS5vcmlnaW5TZWxlY3Rpb25SYW5nZSkgfHwgSXMudW5kZWZpbmVkKGNhbmRpZGF0ZS5vcmlnaW5TZWxlY3Rpb25SYW5nZSkpO1xuICAgIH1cbiAgICBMb2NhdGlvbkxpbmsuaXMgPSBpcztcbn0pKExvY2F0aW9uTGluayB8fCAoTG9jYXRpb25MaW5rID0ge30pKTtcbi8qKlxuICogVGhlIENvbG9yIG5hbWVzcGFjZSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb25zIHRvIHdvcmsgd2l0aFxuICogW0NvbG9yXSgjQ29sb3IpIGxpdGVyYWxzLlxuICovXG5leHBvcnQgdmFyIENvbG9yO1xuKGZ1bmN0aW9uIChDb2xvcikge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgQ29sb3IgbGl0ZXJhbC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUocmVkLCBncmVlbiwgYmx1ZSwgYWxwaGEpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlZDogcmVkLFxuICAgICAgICAgICAgZ3JlZW46IGdyZWVuLFxuICAgICAgICAgICAgYmx1ZTogYmx1ZSxcbiAgICAgICAgICAgIGFscGhhOiBhbHBoYSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgQ29sb3IuY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbQ29sb3JdKCNDb2xvcikgaW50ZXJmYWNlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XG4gICAgICAgIHZhciBjYW5kaWRhdGUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIElzLm51bWJlcihjYW5kaWRhdGUucmVkKVxuICAgICAgICAgICAgJiYgSXMubnVtYmVyKGNhbmRpZGF0ZS5ncmVlbilcbiAgICAgICAgICAgICYmIElzLm51bWJlcihjYW5kaWRhdGUuYmx1ZSlcbiAgICAgICAgICAgICYmIElzLm51bWJlcihjYW5kaWRhdGUuYWxwaGEpO1xuICAgIH1cbiAgICBDb2xvci5pcyA9IGlzO1xufSkoQ29sb3IgfHwgKENvbG9yID0ge30pKTtcbi8qKlxuICogVGhlIENvbG9ySW5mb3JtYXRpb24gbmFtZXNwYWNlIHByb3ZpZGVzIGhlbHBlciBmdW5jdGlvbnMgdG8gd29yayB3aXRoXG4gKiBbQ29sb3JJbmZvcm1hdGlvbl0oI0NvbG9ySW5mb3JtYXRpb24pIGxpdGVyYWxzLlxuICovXG5leHBvcnQgdmFyIENvbG9ySW5mb3JtYXRpb247XG4oZnVuY3Rpb24gKENvbG9ySW5mb3JtYXRpb24pIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IENvbG9ySW5mb3JtYXRpb24gbGl0ZXJhbC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUocmFuZ2UsIGNvbG9yKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByYW5nZTogcmFuZ2UsXG4gICAgICAgICAgICBjb2xvcjogY29sb3IsXG4gICAgICAgIH07XG4gICAgfVxuICAgIENvbG9ySW5mb3JtYXRpb24uY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbQ29sb3JJbmZvcm1hdGlvbl0oI0NvbG9ySW5mb3JtYXRpb24pIGludGVyZmFjZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBSYW5nZS5pcyhjYW5kaWRhdGUucmFuZ2UpICYmIENvbG9yLmlzKGNhbmRpZGF0ZS5jb2xvcik7XG4gICAgfVxuICAgIENvbG9ySW5mb3JtYXRpb24uaXMgPSBpcztcbn0pKENvbG9ySW5mb3JtYXRpb24gfHwgKENvbG9ySW5mb3JtYXRpb24gPSB7fSkpO1xuLyoqXG4gKiBUaGUgQ29sb3IgbmFtZXNwYWNlIHByb3ZpZGVzIGhlbHBlciBmdW5jdGlvbnMgdG8gd29yayB3aXRoXG4gKiBbQ29sb3JQcmVzZW50YXRpb25dKCNDb2xvclByZXNlbnRhdGlvbikgbGl0ZXJhbHMuXG4gKi9cbmV4cG9ydCB2YXIgQ29sb3JQcmVzZW50YXRpb247XG4oZnVuY3Rpb24gKENvbG9yUHJlc2VudGF0aW9uKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBDb2xvckluZm9ybWF0aW9uIGxpdGVyYWwuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKGxhYmVsLCB0ZXh0RWRpdCwgYWRkaXRpb25hbFRleHRFZGl0cykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbGFiZWw6IGxhYmVsLFxuICAgICAgICAgICAgdGV4dEVkaXQ6IHRleHRFZGl0LFxuICAgICAgICAgICAgYWRkaXRpb25hbFRleHRFZGl0czogYWRkaXRpb25hbFRleHRFZGl0cyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgQ29sb3JQcmVzZW50YXRpb24uY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbQ29sb3JJbmZvcm1hdGlvbl0oI0NvbG9ySW5mb3JtYXRpb24pIGludGVyZmFjZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBJcy5zdHJpbmcoY2FuZGlkYXRlLmxhYmVsKVxuICAgICAgICAgICAgJiYgKElzLnVuZGVmaW5lZChjYW5kaWRhdGUudGV4dEVkaXQpIHx8IFRleHRFZGl0LmlzKGNhbmRpZGF0ZSkpXG4gICAgICAgICAgICAmJiAoSXMudW5kZWZpbmVkKGNhbmRpZGF0ZS5hZGRpdGlvbmFsVGV4dEVkaXRzKSB8fCBJcy50eXBlZEFycmF5KGNhbmRpZGF0ZS5hZGRpdGlvbmFsVGV4dEVkaXRzLCBUZXh0RWRpdC5pcykpO1xuICAgIH1cbiAgICBDb2xvclByZXNlbnRhdGlvbi5pcyA9IGlzO1xufSkoQ29sb3JQcmVzZW50YXRpb24gfHwgKENvbG9yUHJlc2VudGF0aW9uID0ge30pKTtcbi8qKlxuICogRW51bSBvZiBrbm93biByYW5nZSBraW5kc1xuICovXG5leHBvcnQgdmFyIEZvbGRpbmdSYW5nZUtpbmQ7XG4oZnVuY3Rpb24gKEZvbGRpbmdSYW5nZUtpbmQpIHtcbiAgICAvKipcbiAgICAgKiBGb2xkaW5nIHJhbmdlIGZvciBhIGNvbW1lbnRcbiAgICAgKi9cbiAgICBGb2xkaW5nUmFuZ2VLaW5kW1wiQ29tbWVudFwiXSA9IFwiY29tbWVudFwiO1xuICAgIC8qKlxuICAgICAqIEZvbGRpbmcgcmFuZ2UgZm9yIGEgaW1wb3J0cyBvciBpbmNsdWRlc1xuICAgICAqL1xuICAgIEZvbGRpbmdSYW5nZUtpbmRbXCJJbXBvcnRzXCJdID0gXCJpbXBvcnRzXCI7XG4gICAgLyoqXG4gICAgICogRm9sZGluZyByYW5nZSBmb3IgYSByZWdpb24gKGUuZy4gYCNyZWdpb25gKVxuICAgICAqL1xuICAgIEZvbGRpbmdSYW5nZUtpbmRbXCJSZWdpb25cIl0gPSBcInJlZ2lvblwiO1xufSkoRm9sZGluZ1JhbmdlS2luZCB8fCAoRm9sZGluZ1JhbmdlS2luZCA9IHt9KSk7XG4vKipcbiAqIFRoZSBmb2xkaW5nIHJhbmdlIG5hbWVzcGFjZSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb25zIHRvIHdvcmsgd2l0aFxuICogW0ZvbGRpbmdSYW5nZV0oI0ZvbGRpbmdSYW5nZSkgbGl0ZXJhbHMuXG4gKi9cbmV4cG9ydCB2YXIgRm9sZGluZ1JhbmdlO1xuKGZ1bmN0aW9uIChGb2xkaW5nUmFuZ2UpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IEZvbGRpbmdSYW5nZSBsaXRlcmFsLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNyZWF0ZShzdGFydExpbmUsIGVuZExpbmUsIHN0YXJ0Q2hhcmFjdGVyLCBlbmRDaGFyYWN0ZXIsIGtpbmQpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHtcbiAgICAgICAgICAgIHN0YXJ0TGluZTogc3RhcnRMaW5lLFxuICAgICAgICAgICAgZW5kTGluZTogZW5kTGluZVxuICAgICAgICB9O1xuICAgICAgICBpZiAoSXMuZGVmaW5lZChzdGFydENoYXJhY3RlcikpIHtcbiAgICAgICAgICAgIHJlc3VsdC5zdGFydENoYXJhY3RlciA9IHN0YXJ0Q2hhcmFjdGVyO1xuICAgICAgICB9XG4gICAgICAgIGlmIChJcy5kZWZpbmVkKGVuZENoYXJhY3RlcikpIHtcbiAgICAgICAgICAgIHJlc3VsdC5lbmRDaGFyYWN0ZXIgPSBlbmRDaGFyYWN0ZXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKElzLmRlZmluZWQoa2luZCkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5raW5kID0ga2luZDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBGb2xkaW5nUmFuZ2UuY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbRm9sZGluZ1JhbmdlXSgjRm9sZGluZ1JhbmdlKSBpbnRlcmZhY2UuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gSXMubnVtYmVyKGNhbmRpZGF0ZS5zdGFydExpbmUpICYmIElzLm51bWJlcihjYW5kaWRhdGUuc3RhcnRMaW5lKVxuICAgICAgICAgICAgJiYgKElzLnVuZGVmaW5lZChjYW5kaWRhdGUuc3RhcnRDaGFyYWN0ZXIpIHx8IElzLm51bWJlcihjYW5kaWRhdGUuc3RhcnRDaGFyYWN0ZXIpKVxuICAgICAgICAgICAgJiYgKElzLnVuZGVmaW5lZChjYW5kaWRhdGUuZW5kQ2hhcmFjdGVyKSB8fCBJcy5udW1iZXIoY2FuZGlkYXRlLmVuZENoYXJhY3RlcikpXG4gICAgICAgICAgICAmJiAoSXMudW5kZWZpbmVkKGNhbmRpZGF0ZS5raW5kKSB8fCBJcy5zdHJpbmcoY2FuZGlkYXRlLmtpbmQpKTtcbiAgICB9XG4gICAgRm9sZGluZ1JhbmdlLmlzID0gaXM7XG59KShGb2xkaW5nUmFuZ2UgfHwgKEZvbGRpbmdSYW5nZSA9IHt9KSk7XG4vKipcbiAqIFRoZSBEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uIG5hbWVzcGFjZSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb25zIHRvIHdvcmsgd2l0aFxuICogW0RpYWdub3N0aWNSZWxhdGVkSW5mb3JtYXRpb25dKCNEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uKSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uO1xuKGZ1bmN0aW9uIChEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uIGxpdGVyYWwuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKGxvY2F0aW9uLCBtZXNzYWdlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgICBtZXNzYWdlOiBtZXNzYWdlXG4gICAgICAgIH07XG4gICAgfVxuICAgIERpYWdub3N0aWNSZWxhdGVkSW5mb3JtYXRpb24uY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbRGlhZ25vc3RpY1JlbGF0ZWRJbmZvcm1hdGlvbl0oI0RpYWdub3N0aWNSZWxhdGVkSW5mb3JtYXRpb24pIGludGVyZmFjZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBJcy5kZWZpbmVkKGNhbmRpZGF0ZSkgJiYgTG9jYXRpb24uaXMoY2FuZGlkYXRlLmxvY2F0aW9uKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLm1lc3NhZ2UpO1xuICAgIH1cbiAgICBEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uLmlzID0gaXM7XG59KShEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uIHx8IChEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uID0ge30pKTtcbi8qKlxuICogVGhlIGRpYWdub3N0aWMncyBzZXZlcml0eS5cbiAqL1xuZXhwb3J0IHZhciBEaWFnbm9zdGljU2V2ZXJpdHk7XG4oZnVuY3Rpb24gKERpYWdub3N0aWNTZXZlcml0eSkge1xuICAgIC8qKlxuICAgICAqIFJlcG9ydHMgYW4gZXJyb3IuXG4gICAgICovXG4gICAgRGlhZ25vc3RpY1NldmVyaXR5LkVycm9yID0gMTtcbiAgICAvKipcbiAgICAgKiBSZXBvcnRzIGEgd2FybmluZy5cbiAgICAgKi9cbiAgICBEaWFnbm9zdGljU2V2ZXJpdHkuV2FybmluZyA9IDI7XG4gICAgLyoqXG4gICAgICogUmVwb3J0cyBhbiBpbmZvcm1hdGlvbi5cbiAgICAgKi9cbiAgICBEaWFnbm9zdGljU2V2ZXJpdHkuSW5mb3JtYXRpb24gPSAzO1xuICAgIC8qKlxuICAgICAqIFJlcG9ydHMgYSBoaW50LlxuICAgICAqL1xuICAgIERpYWdub3N0aWNTZXZlcml0eS5IaW50ID0gNDtcbn0pKERpYWdub3N0aWNTZXZlcml0eSB8fCAoRGlhZ25vc3RpY1NldmVyaXR5ID0ge30pKTtcbi8qKlxuICogVGhlIGRpYWdub3N0aWMgdGFncy5cbiAqXG4gKiBAc2luY2UgMy4xNS4wXG4gKi9cbmV4cG9ydCB2YXIgRGlhZ25vc3RpY1RhZztcbihmdW5jdGlvbiAoRGlhZ25vc3RpY1RhZykge1xuICAgIC8qKlxuICAgICAqIFVudXNlZCBvciB1bm5lY2Vzc2FyeSBjb2RlLlxuICAgICAqXG4gICAgICogQ2xpZW50cyBhcmUgYWxsb3dlZCB0byByZW5kZXIgZGlhZ25vc3RpY3Mgd2l0aCB0aGlzIHRhZyBmYWRlZCBvdXQgaW5zdGVhZCBvZiBoYXZpbmdcbiAgICAgKiBhbiBlcnJvciBzcXVpZ2dsZS5cbiAgICAgKi9cbiAgICBEaWFnbm9zdGljVGFnLlVubmVjZXNzYXJ5ID0gMTtcbiAgICAvKipcbiAgICAgKiBEZXByZWNhdGVkIG9yIG9ic29sZXRlIGNvZGUuXG4gICAgICpcbiAgICAgKiBDbGllbnRzIGFyZSBhbGxvd2VkIHRvIHJlbmRlcmVkIGRpYWdub3N0aWNzIHdpdGggdGhpcyB0YWcgc3RyaWtlIHRocm91Z2guXG4gICAgICovXG4gICAgRGlhZ25vc3RpY1RhZy5EZXByZWNhdGVkID0gMjtcbn0pKERpYWdub3N0aWNUYWcgfHwgKERpYWdub3N0aWNUYWcgPSB7fSkpO1xuLyoqXG4gKiBUaGUgRGlhZ25vc3RpY0NvZGUgbmFtZXNwYWNlIHByb3ZpZGVzIGZ1bmN0aW9ucyB0byBkZWFsIHdpdGggY29tcGxleCBkaWFnbm9zdGljIGNvZGVzLlxuICpcbiAqIEBzaW5jZSAzLjE2LjAgLSBQcm9wb3NlZCBzdGF0ZVxuICovXG5leHBvcnQgdmFyIERpYWdub3N0aWNDb2RlO1xuKGZ1bmN0aW9uIChEaWFnbm9zdGljQ29kZSkge1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcm5hbCBjb25mb3JtcyB0byB0aGUgW0RpYWdub3N0aWNDb2RlXSgjRGlhZ25vc3RpY0NvZGUpIGludGVyZmFjZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBjYW5kaWRhdGUgIT09IHVuZGVmaW5lZCAmJiBjYW5kaWRhdGUgIT09IG51bGwgJiYgKElzLm51bWJlcihjYW5kaWRhdGUudmFsdWUpIHx8IElzLnN0cmluZyhjYW5kaWRhdGUudmFsdWUpKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLnRhcmdldCk7XG4gICAgfVxuICAgIERpYWdub3N0aWNDb2RlLmlzID0gaXM7XG59KShEaWFnbm9zdGljQ29kZSB8fCAoRGlhZ25vc3RpY0NvZGUgPSB7fSkpO1xuLyoqXG4gKiBUaGUgRGlhZ25vc3RpYyBuYW1lc3BhY2UgcHJvdmlkZXMgaGVscGVyIGZ1bmN0aW9ucyB0byB3b3JrIHdpdGhcbiAqIFtEaWFnbm9zdGljXSgjRGlhZ25vc3RpYykgbGl0ZXJhbHMuXG4gKi9cbmV4cG9ydCB2YXIgRGlhZ25vc3RpYztcbihmdW5jdGlvbiAoRGlhZ25vc3RpYykge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgRGlhZ25vc3RpYyBsaXRlcmFsLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNyZWF0ZShyYW5nZSwgbWVzc2FnZSwgc2V2ZXJpdHksIGNvZGUsIHNvdXJjZSwgcmVsYXRlZEluZm9ybWF0aW9uKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSB7IHJhbmdlOiByYW5nZSwgbWVzc2FnZTogbWVzc2FnZSB9O1xuICAgICAgICBpZiAoSXMuZGVmaW5lZChzZXZlcml0eSkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5zZXZlcml0eSA9IHNldmVyaXR5O1xuICAgICAgICB9XG4gICAgICAgIGlmIChJcy5kZWZpbmVkKGNvZGUpKSB7XG4gICAgICAgICAgICByZXN1bHQuY29kZSA9IGNvZGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKElzLmRlZmluZWQoc291cmNlKSkge1xuICAgICAgICAgICAgcmVzdWx0LnNvdXJjZSA9IHNvdXJjZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoSXMuZGVmaW5lZChyZWxhdGVkSW5mb3JtYXRpb24pKSB7XG4gICAgICAgICAgICByZXN1bHQucmVsYXRlZEluZm9ybWF0aW9uID0gcmVsYXRlZEluZm9ybWF0aW9uO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIERpYWdub3N0aWMuY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbRGlhZ25vc3RpY10oI0RpYWdub3N0aWMpIGludGVyZmFjZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBJcy5kZWZpbmVkKGNhbmRpZGF0ZSlcbiAgICAgICAgICAgICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5yYW5nZSlcbiAgICAgICAgICAgICYmIElzLnN0cmluZyhjYW5kaWRhdGUubWVzc2FnZSlcbiAgICAgICAgICAgICYmIChJcy5udW1iZXIoY2FuZGlkYXRlLnNldmVyaXR5KSB8fCBJcy51bmRlZmluZWQoY2FuZGlkYXRlLnNldmVyaXR5KSlcbiAgICAgICAgICAgICYmIChJcy5udW1iZXIoY2FuZGlkYXRlLmNvZGUpIHx8IElzLnN0cmluZyhjYW5kaWRhdGUuY29kZSkgfHwgSXMudW5kZWZpbmVkKGNhbmRpZGF0ZS5jb2RlKSlcbiAgICAgICAgICAgICYmIChJcy5zdHJpbmcoY2FuZGlkYXRlLnNvdXJjZSkgfHwgSXMudW5kZWZpbmVkKGNhbmRpZGF0ZS5zb3VyY2UpKVxuICAgICAgICAgICAgJiYgKElzLnVuZGVmaW5lZChjYW5kaWRhdGUucmVsYXRlZEluZm9ybWF0aW9uKSB8fCBJcy50eXBlZEFycmF5KGNhbmRpZGF0ZS5yZWxhdGVkSW5mb3JtYXRpb24sIERpYWdub3N0aWNSZWxhdGVkSW5mb3JtYXRpb24uaXMpKTtcbiAgICB9XG4gICAgRGlhZ25vc3RpYy5pcyA9IGlzO1xufSkoRGlhZ25vc3RpYyB8fCAoRGlhZ25vc3RpYyA9IHt9KSk7XG4vKipcbiAqIFRoZSBDb21tYW5kIG5hbWVzcGFjZSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb25zIHRvIHdvcmsgd2l0aFxuICogW0NvbW1hbmRdKCNDb21tYW5kKSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBDb21tYW5kO1xuKGZ1bmN0aW9uIChDb21tYW5kKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBDb21tYW5kIGxpdGVyYWwuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKHRpdGxlLCBjb21tYW5kKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMjsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pIC0gMl0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIHZhciByZXN1bHQgPSB7IHRpdGxlOiB0aXRsZSwgY29tbWFuZDogY29tbWFuZCB9O1xuICAgICAgICBpZiAoSXMuZGVmaW5lZChhcmdzKSAmJiBhcmdzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHJlc3VsdC5hcmd1bWVudHMgPSBhcmdzO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIENvbW1hbmQuY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbQ29tbWFuZF0oI0NvbW1hbmQpIGludGVyZmFjZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBJcy5kZWZpbmVkKGNhbmRpZGF0ZSkgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS50aXRsZSkgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS5jb21tYW5kKTtcbiAgICB9XG4gICAgQ29tbWFuZC5pcyA9IGlzO1xufSkoQ29tbWFuZCB8fCAoQ29tbWFuZCA9IHt9KSk7XG4vKipcbiAqIFRoZSBUZXh0RWRpdCBuYW1lc3BhY2UgcHJvdmlkZXMgaGVscGVyIGZ1bmN0aW9uIHRvIGNyZWF0ZSByZXBsYWNlLFxuICogaW5zZXJ0IGFuZCBkZWxldGUgZWRpdHMgbW9yZSBlYXNpbHkuXG4gKi9cbmV4cG9ydCB2YXIgVGV4dEVkaXQ7XG4oZnVuY3Rpb24gKFRleHRFZGl0KSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHJlcGxhY2UgdGV4dCBlZGl0LlxuICAgICAqIEBwYXJhbSByYW5nZSBUaGUgcmFuZ2Ugb2YgdGV4dCB0byBiZSByZXBsYWNlZC5cbiAgICAgKiBAcGFyYW0gbmV3VGV4dCBUaGUgbmV3IHRleHQuXG4gICAgICovXG4gICAgZnVuY3Rpb24gcmVwbGFjZShyYW5nZSwgbmV3VGV4dCkge1xuICAgICAgICByZXR1cm4geyByYW5nZTogcmFuZ2UsIG5ld1RleHQ6IG5ld1RleHQgfTtcbiAgICB9XG4gICAgVGV4dEVkaXQucmVwbGFjZSA9IHJlcGxhY2U7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGluc2VydCB0ZXh0IGVkaXQuXG4gICAgICogQHBhcmFtIHBvc2l0aW9uIFRoZSBwb3NpdGlvbiB0byBpbnNlcnQgdGhlIHRleHQgYXQuXG4gICAgICogQHBhcmFtIG5ld1RleHQgVGhlIHRleHQgdG8gYmUgaW5zZXJ0ZWQuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaW5zZXJ0KHBvc2l0aW9uLCBuZXdUZXh0KSB7XG4gICAgICAgIHJldHVybiB7IHJhbmdlOiB7IHN0YXJ0OiBwb3NpdGlvbiwgZW5kOiBwb3NpdGlvbiB9LCBuZXdUZXh0OiBuZXdUZXh0IH07XG4gICAgfVxuICAgIFRleHRFZGl0Lmluc2VydCA9IGluc2VydDtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgZGVsZXRlIHRleHQgZWRpdC5cbiAgICAgKiBAcGFyYW0gcmFuZ2UgVGhlIHJhbmdlIG9mIHRleHQgdG8gYmUgZGVsZXRlZC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBkZWwocmFuZ2UpIHtcbiAgICAgICAgcmV0dXJuIHsgcmFuZ2U6IHJhbmdlLCBuZXdUZXh0OiAnJyB9O1xuICAgIH1cbiAgICBUZXh0RWRpdC5kZWwgPSBkZWw7XG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpXG4gICAgICAgICAgICAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLm5ld1RleHQpXG4gICAgICAgICAgICAmJiBSYW5nZS5pcyhjYW5kaWRhdGUucmFuZ2UpO1xuICAgIH1cbiAgICBUZXh0RWRpdC5pcyA9IGlzO1xufSkoVGV4dEVkaXQgfHwgKFRleHRFZGl0ID0ge30pKTtcbi8qKlxuICogVGhlIFRleHREb2N1bWVudEVkaXQgbmFtZXNwYWNlIHByb3ZpZGVzIGhlbHBlciBmdW5jdGlvbiB0byBjcmVhdGVcbiAqIGFuIGVkaXQgdGhhdCBtYW5pcHVsYXRlcyBhIHRleHQgZG9jdW1lbnQuXG4gKi9cbmV4cG9ydCB2YXIgVGV4dERvY3VtZW50RWRpdDtcbihmdW5jdGlvbiAoVGV4dERvY3VtZW50RWRpdCkge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgYFRleHREb2N1bWVudEVkaXRgXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKHRleHREb2N1bWVudCwgZWRpdHMpIHtcbiAgICAgICAgcmV0dXJuIHsgdGV4dERvY3VtZW50OiB0ZXh0RG9jdW1lbnQsIGVkaXRzOiBlZGl0cyB9O1xuICAgIH1cbiAgICBUZXh0RG9jdW1lbnRFZGl0LmNyZWF0ZSA9IGNyZWF0ZTtcbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBJcy5kZWZpbmVkKGNhbmRpZGF0ZSlcbiAgICAgICAgICAgICYmIFZlcnNpb25lZFRleHREb2N1bWVudElkZW50aWZpZXIuaXMoY2FuZGlkYXRlLnRleHREb2N1bWVudClcbiAgICAgICAgICAgICYmIEFycmF5LmlzQXJyYXkoY2FuZGlkYXRlLmVkaXRzKTtcbiAgICB9XG4gICAgVGV4dERvY3VtZW50RWRpdC5pcyA9IGlzO1xufSkoVGV4dERvY3VtZW50RWRpdCB8fCAoVGV4dERvY3VtZW50RWRpdCA9IHt9KSk7XG5leHBvcnQgdmFyIENyZWF0ZUZpbGU7XG4oZnVuY3Rpb24gKENyZWF0ZUZpbGUpIHtcbiAgICBmdW5jdGlvbiBjcmVhdGUodXJpLCBvcHRpb25zKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSB7XG4gICAgICAgICAgICBraW5kOiAnY3JlYXRlJyxcbiAgICAgICAgICAgIHVyaTogdXJpXG4gICAgICAgIH07XG4gICAgICAgIGlmIChvcHRpb25zICE9PSB2b2lkIDAgJiYgKG9wdGlvbnMub3ZlcndyaXRlICE9PSB2b2lkIDAgfHwgb3B0aW9ucy5pZ25vcmVJZkV4aXN0cyAhPT0gdm9pZCAwKSkge1xuICAgICAgICAgICAgcmVzdWx0Lm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIENyZWF0ZUZpbGUuY3JlYXRlID0gY3JlYXRlO1xuICAgIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XG4gICAgICAgIHZhciBjYW5kaWRhdGUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIGNhbmRpZGF0ZSAmJiBjYW5kaWRhdGUua2luZCA9PT0gJ2NyZWF0ZScgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS51cmkpICYmXG4gICAgICAgICAgICAoY2FuZGlkYXRlLm9wdGlvbnMgPT09IHZvaWQgMCB8fFxuICAgICAgICAgICAgICAgICgoY2FuZGlkYXRlLm9wdGlvbnMub3ZlcndyaXRlID09PSB2b2lkIDAgfHwgSXMuYm9vbGVhbihjYW5kaWRhdGUub3B0aW9ucy5vdmVyd3JpdGUpKSAmJiAoY2FuZGlkYXRlLm9wdGlvbnMuaWdub3JlSWZFeGlzdHMgPT09IHZvaWQgMCB8fCBJcy5ib29sZWFuKGNhbmRpZGF0ZS5vcHRpb25zLmlnbm9yZUlmRXhpc3RzKSkpKTtcbiAgICB9XG4gICAgQ3JlYXRlRmlsZS5pcyA9IGlzO1xufSkoQ3JlYXRlRmlsZSB8fCAoQ3JlYXRlRmlsZSA9IHt9KSk7XG5leHBvcnQgdmFyIFJlbmFtZUZpbGU7XG4oZnVuY3Rpb24gKFJlbmFtZUZpbGUpIHtcbiAgICBmdW5jdGlvbiBjcmVhdGUob2xkVXJpLCBuZXdVcmksIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHtcbiAgICAgICAgICAgIGtpbmQ6ICdyZW5hbWUnLFxuICAgICAgICAgICAgb2xkVXJpOiBvbGRVcmksXG4gICAgICAgICAgICBuZXdVcmk6IG5ld1VyaVxuICAgICAgICB9O1xuICAgICAgICBpZiAob3B0aW9ucyAhPT0gdm9pZCAwICYmIChvcHRpb25zLm92ZXJ3cml0ZSAhPT0gdm9pZCAwIHx8IG9wdGlvbnMuaWdub3JlSWZFeGlzdHMgIT09IHZvaWQgMCkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5vcHRpb25zID0gb3B0aW9ucztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBSZW5hbWVGaWxlLmNyZWF0ZSA9IGNyZWF0ZTtcbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBjYW5kaWRhdGUgJiYgY2FuZGlkYXRlLmtpbmQgPT09ICdyZW5hbWUnICYmIElzLnN0cmluZyhjYW5kaWRhdGUub2xkVXJpKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLm5ld1VyaSkgJiZcbiAgICAgICAgICAgIChjYW5kaWRhdGUub3B0aW9ucyA9PT0gdm9pZCAwIHx8XG4gICAgICAgICAgICAgICAgKChjYW5kaWRhdGUub3B0aW9ucy5vdmVyd3JpdGUgPT09IHZvaWQgMCB8fCBJcy5ib29sZWFuKGNhbmRpZGF0ZS5vcHRpb25zLm92ZXJ3cml0ZSkpICYmIChjYW5kaWRhdGUub3B0aW9ucy5pZ25vcmVJZkV4aXN0cyA9PT0gdm9pZCAwIHx8IElzLmJvb2xlYW4oY2FuZGlkYXRlLm9wdGlvbnMuaWdub3JlSWZFeGlzdHMpKSkpO1xuICAgIH1cbiAgICBSZW5hbWVGaWxlLmlzID0gaXM7XG59KShSZW5hbWVGaWxlIHx8IChSZW5hbWVGaWxlID0ge30pKTtcbmV4cG9ydCB2YXIgRGVsZXRlRmlsZTtcbihmdW5jdGlvbiAoRGVsZXRlRmlsZSkge1xuICAgIGZ1bmN0aW9uIGNyZWF0ZSh1cmksIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHtcbiAgICAgICAgICAgIGtpbmQ6ICdkZWxldGUnLFxuICAgICAgICAgICAgdXJpOiB1cmlcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKG9wdGlvbnMgIT09IHZvaWQgMCAmJiAob3B0aW9ucy5yZWN1cnNpdmUgIT09IHZvaWQgMCB8fCBvcHRpb25zLmlnbm9yZUlmTm90RXhpc3RzICE9PSB2b2lkIDApKSB7XG4gICAgICAgICAgICByZXN1bHQub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgRGVsZXRlRmlsZS5jcmVhdGUgPSBjcmVhdGU7XG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gY2FuZGlkYXRlICYmIGNhbmRpZGF0ZS5raW5kID09PSAnZGVsZXRlJyAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLnVyaSkgJiZcbiAgICAgICAgICAgIChjYW5kaWRhdGUub3B0aW9ucyA9PT0gdm9pZCAwIHx8XG4gICAgICAgICAgICAgICAgKChjYW5kaWRhdGUub3B0aW9ucy5yZWN1cnNpdmUgPT09IHZvaWQgMCB8fCBJcy5ib29sZWFuKGNhbmRpZGF0ZS5vcHRpb25zLnJlY3Vyc2l2ZSkpICYmIChjYW5kaWRhdGUub3B0aW9ucy5pZ25vcmVJZk5vdEV4aXN0cyA9PT0gdm9pZCAwIHx8IElzLmJvb2xlYW4oY2FuZGlkYXRlLm9wdGlvbnMuaWdub3JlSWZOb3RFeGlzdHMpKSkpO1xuICAgIH1cbiAgICBEZWxldGVGaWxlLmlzID0gaXM7XG59KShEZWxldGVGaWxlIHx8IChEZWxldGVGaWxlID0ge30pKTtcbmV4cG9ydCB2YXIgV29ya3NwYWNlRWRpdDtcbihmdW5jdGlvbiAoV29ya3NwYWNlRWRpdCkge1xuICAgIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XG4gICAgICAgIHZhciBjYW5kaWRhdGUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIGNhbmRpZGF0ZSAmJlxuICAgICAgICAgICAgKGNhbmRpZGF0ZS5jaGFuZ2VzICE9PSB2b2lkIDAgfHwgY2FuZGlkYXRlLmRvY3VtZW50Q2hhbmdlcyAhPT0gdm9pZCAwKSAmJlxuICAgICAgICAgICAgKGNhbmRpZGF0ZS5kb2N1bWVudENoYW5nZXMgPT09IHZvaWQgMCB8fCBjYW5kaWRhdGUuZG9jdW1lbnRDaGFuZ2VzLmV2ZXJ5KGZ1bmN0aW9uIChjaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICBpZiAoSXMuc3RyaW5nKGNoYW5nZS5raW5kKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gQ3JlYXRlRmlsZS5pcyhjaGFuZ2UpIHx8IFJlbmFtZUZpbGUuaXMoY2hhbmdlKSB8fCBEZWxldGVGaWxlLmlzKGNoYW5nZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gVGV4dERvY3VtZW50RWRpdC5pcyhjaGFuZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKTtcbiAgICB9XG4gICAgV29ya3NwYWNlRWRpdC5pcyA9IGlzO1xufSkoV29ya3NwYWNlRWRpdCB8fCAoV29ya3NwYWNlRWRpdCA9IHt9KSk7XG52YXIgVGV4dEVkaXRDaGFuZ2VJbXBsID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRleHRFZGl0Q2hhbmdlSW1wbChlZGl0cykge1xuICAgICAgICB0aGlzLmVkaXRzID0gZWRpdHM7XG4gICAgfVxuICAgIFRleHRFZGl0Q2hhbmdlSW1wbC5wcm90b3R5cGUuaW5zZXJ0ID0gZnVuY3Rpb24gKHBvc2l0aW9uLCBuZXdUZXh0KSB7XG4gICAgICAgIHRoaXMuZWRpdHMucHVzaChUZXh0RWRpdC5pbnNlcnQocG9zaXRpb24sIG5ld1RleHQpKTtcbiAgICB9O1xuICAgIFRleHRFZGl0Q2hhbmdlSW1wbC5wcm90b3R5cGUucmVwbGFjZSA9IGZ1bmN0aW9uIChyYW5nZSwgbmV3VGV4dCkge1xuICAgICAgICB0aGlzLmVkaXRzLnB1c2goVGV4dEVkaXQucmVwbGFjZShyYW5nZSwgbmV3VGV4dCkpO1xuICAgIH07XG4gICAgVGV4dEVkaXRDaGFuZ2VJbXBsLnByb3RvdHlwZS5kZWxldGUgPSBmdW5jdGlvbiAocmFuZ2UpIHtcbiAgICAgICAgdGhpcy5lZGl0cy5wdXNoKFRleHRFZGl0LmRlbChyYW5nZSkpO1xuICAgIH07XG4gICAgVGV4dEVkaXRDaGFuZ2VJbXBsLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiAoZWRpdCkge1xuICAgICAgICB0aGlzLmVkaXRzLnB1c2goZWRpdCk7XG4gICAgfTtcbiAgICBUZXh0RWRpdENoYW5nZUltcGwucHJvdG90eXBlLmFsbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWRpdHM7XG4gICAgfTtcbiAgICBUZXh0RWRpdENoYW5nZUltcGwucHJvdG90eXBlLmNsZWFyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLmVkaXRzLnNwbGljZSgwLCB0aGlzLmVkaXRzLmxlbmd0aCk7XG4gICAgfTtcbiAgICByZXR1cm4gVGV4dEVkaXRDaGFuZ2VJbXBsO1xufSgpKTtcbi8qKlxuICogQSB3b3Jrc3BhY2UgY2hhbmdlIGhlbHBzIGNvbnN0cnVjdGluZyBjaGFuZ2VzIHRvIGEgd29ya3NwYWNlLlxuICovXG52YXIgV29ya3NwYWNlQ2hhbmdlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFdvcmtzcGFjZUNoYW5nZSh3b3Jrc3BhY2VFZGl0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuX3RleHRFZGl0Q2hhbmdlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgIGlmICh3b3Jrc3BhY2VFZGl0KSB7XG4gICAgICAgICAgICB0aGlzLl93b3Jrc3BhY2VFZGl0ID0gd29ya3NwYWNlRWRpdDtcbiAgICAgICAgICAgIGlmICh3b3Jrc3BhY2VFZGl0LmRvY3VtZW50Q2hhbmdlcykge1xuICAgICAgICAgICAgICAgIHdvcmtzcGFjZUVkaXQuZG9jdW1lbnRDaGFuZ2VzLmZvckVhY2goZnVuY3Rpb24gKGNoYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoVGV4dERvY3VtZW50RWRpdC5pcyhjaGFuZ2UpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGV4dEVkaXRDaGFuZ2UgPSBuZXcgVGV4dEVkaXRDaGFuZ2VJbXBsKGNoYW5nZS5lZGl0cyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5fdGV4dEVkaXRDaGFuZ2VzW2NoYW5nZS50ZXh0RG9jdW1lbnQudXJpXSA9IHRleHRFZGl0Q2hhbmdlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh3b3Jrc3BhY2VFZGl0LmNoYW5nZXMpIHtcbiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyh3b3Jrc3BhY2VFZGl0LmNoYW5nZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGV4dEVkaXRDaGFuZ2UgPSBuZXcgVGV4dEVkaXRDaGFuZ2VJbXBsKHdvcmtzcGFjZUVkaXQuY2hhbmdlc1trZXldKTtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuX3RleHRFZGl0Q2hhbmdlc1trZXldID0gdGV4dEVkaXRDaGFuZ2U7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFdvcmtzcGFjZUNoYW5nZS5wcm90b3R5cGUsIFwiZWRpdFwiLCB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSZXR1cm5zIHRoZSB1bmRlcmx5aW5nIFtXb3Jrc3BhY2VFZGl0XSgjV29ya3NwYWNlRWRpdCkgbGl0ZXJhbFxuICAgICAgICAgKiB1c2UgdG8gYmUgcmV0dXJuZWQgZnJvbSBhIHdvcmtzcGFjZSBlZGl0IG9wZXJhdGlvbiBsaWtlIHJlbmFtZS5cbiAgICAgICAgICovXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX3dvcmtzcGFjZUVkaXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7IGRvY3VtZW50Q2hhbmdlczogW10gfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLl93b3Jrc3BhY2VFZGl0O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBXb3Jrc3BhY2VDaGFuZ2UucHJvdG90eXBlLmdldFRleHRFZGl0Q2hhbmdlID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBpZiAoVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllci5pcyhrZXkpKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuX3dvcmtzcGFjZUVkaXQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl93b3Jrc3BhY2VFZGl0ID0ge1xuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudENoYW5nZXM6IFtdXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghdGhpcy5fd29ya3NwYWNlRWRpdC5kb2N1bWVudENoYW5nZXMpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1dvcmtzcGFjZSBlZGl0IGlzIG5vdCBjb25maWd1cmVkIGZvciBkb2N1bWVudCBjaGFuZ2VzLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHRleHREb2N1bWVudCA9IGtleTtcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSB0aGlzLl90ZXh0RWRpdENoYW5nZXNbdGV4dERvY3VtZW50LnVyaV07XG4gICAgICAgICAgICBpZiAoIXJlc3VsdCkge1xuICAgICAgICAgICAgICAgIHZhciBlZGl0cyA9IFtdO1xuICAgICAgICAgICAgICAgIHZhciB0ZXh0RG9jdW1lbnRFZGl0ID0ge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0RG9jdW1lbnQ6IHRleHREb2N1bWVudCxcbiAgICAgICAgICAgICAgICAgICAgZWRpdHM6IGVkaXRzXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB0aGlzLl93b3Jrc3BhY2VFZGl0LmRvY3VtZW50Q2hhbmdlcy5wdXNoKHRleHREb2N1bWVudEVkaXQpO1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IG5ldyBUZXh0RWRpdENoYW5nZUltcGwoZWRpdHMpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3RleHRFZGl0Q2hhbmdlc1t0ZXh0RG9jdW1lbnQudXJpXSA9IHJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuX3dvcmtzcGFjZUVkaXQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl93b3Jrc3BhY2VFZGl0ID0ge1xuICAgICAgICAgICAgICAgICAgICBjaGFuZ2VzOiBPYmplY3QuY3JlYXRlKG51bGwpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghdGhpcy5fd29ya3NwYWNlRWRpdC5jaGFuZ2VzKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdXb3Jrc3BhY2UgZWRpdCBpcyBub3QgY29uZmlndXJlZCBmb3Igbm9ybWFsIHRleHQgZWRpdCBjaGFuZ2VzLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuX3RleHRFZGl0Q2hhbmdlc1trZXldO1xuICAgICAgICAgICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZWRpdHMgPSBbXTtcbiAgICAgICAgICAgICAgICB0aGlzLl93b3Jrc3BhY2VFZGl0LmNoYW5nZXNba2V5XSA9IGVkaXRzO1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IG5ldyBUZXh0RWRpdENoYW5nZUltcGwoZWRpdHMpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3RleHRFZGl0Q2hhbmdlc1trZXldID0gcmVzdWx0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgIH07XG4gICAgV29ya3NwYWNlQ2hhbmdlLnByb3RvdHlwZS5jcmVhdGVGaWxlID0gZnVuY3Rpb24gKHVyaSwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLmNoZWNrRG9jdW1lbnRDaGFuZ2VzKCk7XG4gICAgICAgIHRoaXMuX3dvcmtzcGFjZUVkaXQuZG9jdW1lbnRDaGFuZ2VzLnB1c2goQ3JlYXRlRmlsZS5jcmVhdGUodXJpLCBvcHRpb25zKSk7XG4gICAgfTtcbiAgICBXb3Jrc3BhY2VDaGFuZ2UucHJvdG90eXBlLnJlbmFtZUZpbGUgPSBmdW5jdGlvbiAob2xkVXJpLCBuZXdVcmksIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5jaGVja0RvY3VtZW50Q2hhbmdlcygpO1xuICAgICAgICB0aGlzLl93b3Jrc3BhY2VFZGl0LmRvY3VtZW50Q2hhbmdlcy5wdXNoKFJlbmFtZUZpbGUuY3JlYXRlKG9sZFVyaSwgbmV3VXJpLCBvcHRpb25zKSk7XG4gICAgfTtcbiAgICBXb3Jrc3BhY2VDaGFuZ2UucHJvdG90eXBlLmRlbGV0ZUZpbGUgPSBmdW5jdGlvbiAodXJpLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuY2hlY2tEb2N1bWVudENoYW5nZXMoKTtcbiAgICAgICAgdGhpcy5fd29ya3NwYWNlRWRpdC5kb2N1bWVudENoYW5nZXMucHVzaChEZWxldGVGaWxlLmNyZWF0ZSh1cmksIG9wdGlvbnMpKTtcbiAgICB9O1xuICAgIFdvcmtzcGFjZUNoYW5nZS5wcm90b3R5cGUuY2hlY2tEb2N1bWVudENoYW5nZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5fd29ya3NwYWNlRWRpdCB8fCAhdGhpcy5fd29ya3NwYWNlRWRpdC5kb2N1bWVudENoYW5nZXMpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignV29ya3NwYWNlIGVkaXQgaXMgbm90IGNvbmZpZ3VyZWQgZm9yIGRvY3VtZW50IGNoYW5nZXMuJyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBXb3Jrc3BhY2VDaGFuZ2U7XG59KCkpO1xuZXhwb3J0IHsgV29ya3NwYWNlQ2hhbmdlIH07XG4vKipcbiAqIFRoZSBUZXh0RG9jdW1lbnRJZGVudGlmaWVyIG5hbWVzcGFjZSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb25zIHRvIHdvcmsgd2l0aFxuICogW1RleHREb2N1bWVudElkZW50aWZpZXJdKCNUZXh0RG9jdW1lbnRJZGVudGlmaWVyKSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBUZXh0RG9jdW1lbnRJZGVudGlmaWVyO1xuKGZ1bmN0aW9uIChUZXh0RG9jdW1lbnRJZGVudGlmaWVyKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBUZXh0RG9jdW1lbnRJZGVudGlmaWVyIGxpdGVyYWwuXG4gICAgICogQHBhcmFtIHVyaSBUaGUgZG9jdW1lbnQncyB1cmkuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKHVyaSkge1xuICAgICAgICByZXR1cm4geyB1cmk6IHVyaSB9O1xuICAgIH1cbiAgICBUZXh0RG9jdW1lbnRJZGVudGlmaWVyLmNyZWF0ZSA9IGNyZWF0ZTtcbiAgICAvKipcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgZ2l2ZW4gbGl0ZXJhbCBjb25mb3JtcyB0byB0aGUgW1RleHREb2N1bWVudElkZW50aWZpZXJdKCNUZXh0RG9jdW1lbnRJZGVudGlmaWVyKSBpbnRlcmZhY2UuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUudXJpKTtcbiAgICB9XG4gICAgVGV4dERvY3VtZW50SWRlbnRpZmllci5pcyA9IGlzO1xufSkoVGV4dERvY3VtZW50SWRlbnRpZmllciB8fCAoVGV4dERvY3VtZW50SWRlbnRpZmllciA9IHt9KSk7XG4vKipcbiAqIFRoZSBWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyIG5hbWVzcGFjZSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb25zIHRvIHdvcmsgd2l0aFxuICogW1ZlcnNpb25lZFRleHREb2N1bWVudElkZW50aWZpZXJdKCNWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyKSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyO1xuKGZ1bmN0aW9uIChWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyIGxpdGVyYWwuXG4gICAgICogQHBhcmFtIHVyaSBUaGUgZG9jdW1lbnQncyB1cmkuXG4gICAgICogQHBhcmFtIHVyaSBUaGUgZG9jdW1lbnQncyB0ZXh0LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNyZWF0ZSh1cmksIHZlcnNpb24pIHtcbiAgICAgICAgcmV0dXJuIHsgdXJpOiB1cmksIHZlcnNpb246IHZlcnNpb24gfTtcbiAgICB9XG4gICAgVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllci5jcmVhdGUgPSBjcmVhdGU7XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIGxpdGVyYWwgY29uZm9ybXMgdG8gdGhlIFtWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyXSgjVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllcikgaW50ZXJmYWNlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XG4gICAgICAgIHZhciBjYW5kaWRhdGUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIElzLmRlZmluZWQoY2FuZGlkYXRlKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLnVyaSkgJiYgKGNhbmRpZGF0ZS52ZXJzaW9uID09PSBudWxsIHx8IElzLm51bWJlcihjYW5kaWRhdGUudmVyc2lvbikpO1xuICAgIH1cbiAgICBWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyLmlzID0gaXM7XG59KShWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyIHx8IChWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyID0ge30pKTtcbi8qKlxuICogVGhlIFRleHREb2N1bWVudEl0ZW0gbmFtZXNwYWNlIHByb3ZpZGVzIGhlbHBlciBmdW5jdGlvbnMgdG8gd29yayB3aXRoXG4gKiBbVGV4dERvY3VtZW50SXRlbV0oI1RleHREb2N1bWVudEl0ZW0pIGxpdGVyYWxzLlxuICovXG5leHBvcnQgdmFyIFRleHREb2N1bWVudEl0ZW07XG4oZnVuY3Rpb24gKFRleHREb2N1bWVudEl0ZW0pIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IFRleHREb2N1bWVudEl0ZW0gbGl0ZXJhbC5cbiAgICAgKiBAcGFyYW0gdXJpIFRoZSBkb2N1bWVudCdzIHVyaS5cbiAgICAgKiBAcGFyYW0gbGFuZ3VhZ2VJZCBUaGUgZG9jdW1lbnQncyBsYW5ndWFnZSBpZGVudGlmaWVyLlxuICAgICAqIEBwYXJhbSB2ZXJzaW9uIFRoZSBkb2N1bWVudCdzIHZlcnNpb24gbnVtYmVyLlxuICAgICAqIEBwYXJhbSB0ZXh0IFRoZSBkb2N1bWVudCdzIHRleHQuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKHVyaSwgbGFuZ3VhZ2VJZCwgdmVyc2lvbiwgdGV4dCkge1xuICAgICAgICByZXR1cm4geyB1cmk6IHVyaSwgbGFuZ3VhZ2VJZDogbGFuZ3VhZ2VJZCwgdmVyc2lvbjogdmVyc2lvbiwgdGV4dDogdGV4dCB9O1xuICAgIH1cbiAgICBUZXh0RG9jdW1lbnRJdGVtLmNyZWF0ZSA9IGNyZWF0ZTtcbiAgICAvKipcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgZ2l2ZW4gbGl0ZXJhbCBjb25mb3JtcyB0byB0aGUgW1RleHREb2N1bWVudEl0ZW1dKCNUZXh0RG9jdW1lbnRJdGVtKSBpbnRlcmZhY2UuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUudXJpKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLmxhbmd1YWdlSWQpICYmIElzLm51bWJlcihjYW5kaWRhdGUudmVyc2lvbikgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS50ZXh0KTtcbiAgICB9XG4gICAgVGV4dERvY3VtZW50SXRlbS5pcyA9IGlzO1xufSkoVGV4dERvY3VtZW50SXRlbSB8fCAoVGV4dERvY3VtZW50SXRlbSA9IHt9KSk7XG4vKipcbiAqIERlc2NyaWJlcyB0aGUgY29udGVudCB0eXBlIHRoYXQgYSBjbGllbnQgc3VwcG9ydHMgaW4gdmFyaW91c1xuICogcmVzdWx0IGxpdGVyYWxzIGxpa2UgYEhvdmVyYCwgYFBhcmFtZXRlckluZm9gIG9yIGBDb21wbGV0aW9uSXRlbWAuXG4gKlxuICogUGxlYXNlIG5vdGUgdGhhdCBgTWFya3VwS2luZHNgIG11c3Qgbm90IHN0YXJ0IHdpdGggYSBgJGAuIFRoaXMga2luZHNcbiAqIGFyZSByZXNlcnZlZCBmb3IgaW50ZXJuYWwgdXNhZ2UuXG4gKi9cbmV4cG9ydCB2YXIgTWFya3VwS2luZDtcbihmdW5jdGlvbiAoTWFya3VwS2luZCkge1xuICAgIC8qKlxuICAgICAqIFBsYWluIHRleHQgaXMgc3VwcG9ydGVkIGFzIGEgY29udGVudCBmb3JtYXRcbiAgICAgKi9cbiAgICBNYXJrdXBLaW5kLlBsYWluVGV4dCA9ICdwbGFpbnRleHQnO1xuICAgIC8qKlxuICAgICAqIE1hcmtkb3duIGlzIHN1cHBvcnRlZCBhcyBhIGNvbnRlbnQgZm9ybWF0XG4gICAgICovXG4gICAgTWFya3VwS2luZC5NYXJrZG93biA9ICdtYXJrZG93bic7XG59KShNYXJrdXBLaW5kIHx8IChNYXJrdXBLaW5kID0ge30pKTtcbihmdW5jdGlvbiAoTWFya3VwS2luZCkge1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiB2YWx1ZSBpcyBhIHZhbHVlIG9mIHRoZSBbTWFya3VwS2luZF0oI01hcmt1cEtpbmQpIHR5cGUuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gY2FuZGlkYXRlID09PSBNYXJrdXBLaW5kLlBsYWluVGV4dCB8fCBjYW5kaWRhdGUgPT09IE1hcmt1cEtpbmQuTWFya2Rvd247XG4gICAgfVxuICAgIE1hcmt1cEtpbmQuaXMgPSBpcztcbn0pKE1hcmt1cEtpbmQgfHwgKE1hcmt1cEtpbmQgPSB7fSkpO1xuZXhwb3J0IHZhciBNYXJrdXBDb250ZW50O1xuKGZ1bmN0aW9uIChNYXJrdXBDb250ZW50KSB7XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIHZhbHVlIGNvbmZvcm1zIHRvIHRoZSBbTWFya3VwQ29udGVudF0oI01hcmt1cENvbnRlbnQpIGludGVyZmFjZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBJcy5vYmplY3RMaXRlcmFsKHZhbHVlKSAmJiBNYXJrdXBLaW5kLmlzKGNhbmRpZGF0ZS5raW5kKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLnZhbHVlKTtcbiAgICB9XG4gICAgTWFya3VwQ29udGVudC5pcyA9IGlzO1xufSkoTWFya3VwQ29udGVudCB8fCAoTWFya3VwQ29udGVudCA9IHt9KSk7XG4vKipcbiAqIFRoZSBraW5kIG9mIGEgY29tcGxldGlvbiBlbnRyeS5cbiAqL1xuZXhwb3J0IHZhciBDb21wbGV0aW9uSXRlbUtpbmQ7XG4oZnVuY3Rpb24gKENvbXBsZXRpb25JdGVtS2luZCkge1xuICAgIENvbXBsZXRpb25JdGVtS2luZC5UZXh0ID0gMTtcbiAgICBDb21wbGV0aW9uSXRlbUtpbmQuTWV0aG9kID0gMjtcbiAgICBDb21wbGV0aW9uSXRlbUtpbmQuRnVuY3Rpb24gPSAzO1xuICAgIENvbXBsZXRpb25JdGVtS2luZC5Db25zdHJ1Y3RvciA9IDQ7XG4gICAgQ29tcGxldGlvbkl0ZW1LaW5kLkZpZWxkID0gNTtcbiAgICBDb21wbGV0aW9uSXRlbUtpbmQuVmFyaWFibGUgPSA2O1xuICAgIENvbXBsZXRpb25JdGVtS2luZC5DbGFzcyA9IDc7XG4gICAgQ29tcGxldGlvbkl0ZW1LaW5kLkludGVyZmFjZSA9IDg7XG4gICAgQ29tcGxldGlvbkl0ZW1LaW5kLk1vZHVsZSA9IDk7XG4gICAgQ29tcGxldGlvbkl0ZW1LaW5kLlByb3BlcnR5ID0gMTA7XG4gICAgQ29tcGxldGlvbkl0ZW1LaW5kLlVuaXQgPSAxMTtcbiAgICBDb21wbGV0aW9uSXRlbUtpbmQuVmFsdWUgPSAxMjtcbiAgICBDb21wbGV0aW9uSXRlbUtpbmQuRW51bSA9IDEzO1xuICAgIENvbXBsZXRpb25JdGVtS2luZC5LZXl3b3JkID0gMTQ7XG4gICAgQ29tcGxldGlvbkl0ZW1LaW5kLlNuaXBwZXQgPSAxNTtcbiAgICBDb21wbGV0aW9uSXRlbUtpbmQuQ29sb3IgPSAxNjtcbiAgICBDb21wbGV0aW9uSXRlbUtpbmQuRmlsZSA9IDE3O1xuICAgIENvbXBsZXRpb25JdGVtS2luZC5SZWZlcmVuY2UgPSAxODtcbiAgICBDb21wbGV0aW9uSXRlbUtpbmQuRm9sZGVyID0gMTk7XG4gICAgQ29tcGxldGlvbkl0ZW1LaW5kLkVudW1NZW1iZXIgPSAyMDtcbiAgICBDb21wbGV0aW9uSXRlbUtpbmQuQ29uc3RhbnQgPSAyMTtcbiAgICBDb21wbGV0aW9uSXRlbUtpbmQuU3RydWN0ID0gMjI7XG4gICAgQ29tcGxldGlvbkl0ZW1LaW5kLkV2ZW50ID0gMjM7XG4gICAgQ29tcGxldGlvbkl0ZW1LaW5kLk9wZXJhdG9yID0gMjQ7XG4gICAgQ29tcGxldGlvbkl0ZW1LaW5kLlR5cGVQYXJhbWV0ZXIgPSAyNTtcbn0pKENvbXBsZXRpb25JdGVtS2luZCB8fCAoQ29tcGxldGlvbkl0ZW1LaW5kID0ge30pKTtcbi8qKlxuICogRGVmaW5lcyB3aGV0aGVyIHRoZSBpbnNlcnQgdGV4dCBpbiBhIGNvbXBsZXRpb24gaXRlbSBzaG91bGQgYmUgaW50ZXJwcmV0ZWQgYXNcbiAqIHBsYWluIHRleHQgb3IgYSBzbmlwcGV0LlxuICovXG5leHBvcnQgdmFyIEluc2VydFRleHRGb3JtYXQ7XG4oZnVuY3Rpb24gKEluc2VydFRleHRGb3JtYXQpIHtcbiAgICAvKipcbiAgICAgKiBUaGUgcHJpbWFyeSB0ZXh0IHRvIGJlIGluc2VydGVkIGlzIHRyZWF0ZWQgYXMgYSBwbGFpbiBzdHJpbmcuXG4gICAgICovXG4gICAgSW5zZXJ0VGV4dEZvcm1hdC5QbGFpblRleHQgPSAxO1xuICAgIC8qKlxuICAgICAqIFRoZSBwcmltYXJ5IHRleHQgdG8gYmUgaW5zZXJ0ZWQgaXMgdHJlYXRlZCBhcyBhIHNuaXBwZXQuXG4gICAgICpcbiAgICAgKiBBIHNuaXBwZXQgY2FuIGRlZmluZSB0YWIgc3RvcHMgYW5kIHBsYWNlaG9sZGVycyB3aXRoIGAkMWAsIGAkMmBcbiAgICAgKiBhbmQgYCR7Mzpmb299YC4gYCQwYCBkZWZpbmVzIHRoZSBmaW5hbCB0YWIgc3RvcCwgaXQgZGVmYXVsdHMgdG9cbiAgICAgKiB0aGUgZW5kIG9mIHRoZSBzbmlwcGV0LiBQbGFjZWhvbGRlcnMgd2l0aCBlcXVhbCBpZGVudGlmaWVycyBhcmUgbGlua2VkLFxuICAgICAqIHRoYXQgaXMgdHlwaW5nIGluIG9uZSB3aWxsIHVwZGF0ZSBvdGhlcnMgdG9vLlxuICAgICAqXG4gICAgICogU2VlIGFsc286IGh0dHBzOi8vbWljcm9zb2Z0LmdpdGh1Yi5pby9sYW5ndWFnZS1zZXJ2ZXItcHJvdG9jb2wvc3BlY2lmaWNhdGlvbnMvc3BlY2lmaWNhdGlvbi1jdXJyZW50LyNzbmlwcGV0X3N5bnRheFxuICAgICAqL1xuICAgIEluc2VydFRleHRGb3JtYXQuU25pcHBldCA9IDI7XG59KShJbnNlcnRUZXh0Rm9ybWF0IHx8IChJbnNlcnRUZXh0Rm9ybWF0ID0ge30pKTtcbi8qKlxuICogQ29tcGxldGlvbiBpdGVtIHRhZ3MgYXJlIGV4dHJhIGFubm90YXRpb25zIHRoYXQgdHdlYWsgdGhlIHJlbmRlcmluZyBvZiBhIGNvbXBsZXRpb25cbiAqIGl0ZW0uXG4gKlxuICogQHNpbmNlIDMuMTUuMFxuICovXG5leHBvcnQgdmFyIENvbXBsZXRpb25JdGVtVGFnO1xuKGZ1bmN0aW9uIChDb21wbGV0aW9uSXRlbVRhZykge1xuICAgIC8qKlxuICAgICAqIFJlbmRlciBhIGNvbXBsZXRpb24gYXMgb2Jzb2xldGUsIHVzdWFsbHkgdXNpbmcgYSBzdHJpa2Utb3V0LlxuICAgICAqL1xuICAgIENvbXBsZXRpb25JdGVtVGFnLkRlcHJlY2F0ZWQgPSAxO1xufSkoQ29tcGxldGlvbkl0ZW1UYWcgfHwgKENvbXBsZXRpb25JdGVtVGFnID0ge30pKTtcbi8qKlxuICogVGhlIEluc2VydFJlcGxhY2VFZGl0IG5hbWVzcGFjZSBwcm92aWRlcyBmdW5jdGlvbnMgdG8gZGVhbCB3aXRoIGluc2VydCAvIHJlcGxhY2UgZWRpdHMuXG4gKlxuICogQHNpbmNlIDMuMTYuMCAtIFByb3Bvc2VkIHN0YXRlXG4gKi9cbmV4cG9ydCB2YXIgSW5zZXJ0UmVwbGFjZUVkaXQ7XG4oZnVuY3Rpb24gKEluc2VydFJlcGxhY2VFZGl0KSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBpbnNlcnQgLyByZXBsYWNlIGVkaXRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUobmV3VGV4dCwgaW5zZXJ0LCByZXBsYWNlKSB7XG4gICAgICAgIHJldHVybiB7IG5ld1RleHQ6IG5ld1RleHQsIGluc2VydDogaW5zZXJ0LCByZXBsYWNlOiByZXBsYWNlIH07XG4gICAgfVxuICAgIEluc2VydFJlcGxhY2VFZGl0LmNyZWF0ZSA9IGNyZWF0ZTtcbiAgICAvKipcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgZ2l2ZW4gbGl0ZXJuYWwgY29uZm9ybXMgdG8gdGhlIFtJbnNlcnRSZXBsYWNlRWRpdF0oI0luc2VydFJlcGxhY2VFZGl0KSBpbnRlcmZhY2UuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gY2FuZGlkYXRlICYmIElzLnN0cmluZyhjYW5kaWRhdGUubmV3VGV4dCkgJiYgUmFuZ2UuaXMoY2FuZGlkYXRlLmluc2VydCkgJiYgUmFuZ2UuaXMoY2FuZGlkYXRlLnJlcGxhY2UpO1xuICAgIH1cbiAgICBJbnNlcnRSZXBsYWNlRWRpdC5pcyA9IGlzO1xufSkoSW5zZXJ0UmVwbGFjZUVkaXQgfHwgKEluc2VydFJlcGxhY2VFZGl0ID0ge30pKTtcbi8qKlxuICogVGhlIENvbXBsZXRpb25JdGVtIG5hbWVzcGFjZSBwcm92aWRlcyBmdW5jdGlvbnMgdG8gZGVhbCB3aXRoXG4gKiBjb21wbGV0aW9uIGl0ZW1zLlxuICovXG5leHBvcnQgdmFyIENvbXBsZXRpb25JdGVtO1xuKGZ1bmN0aW9uIChDb21wbGV0aW9uSXRlbSkge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIGNvbXBsZXRpb24gaXRlbSBhbmQgc2VlZCBpdCB3aXRoIGEgbGFiZWwuXG4gICAgICogQHBhcmFtIGxhYmVsIFRoZSBjb21wbGV0aW9uIGl0ZW0ncyBsYWJlbFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNyZWF0ZShsYWJlbCkge1xuICAgICAgICByZXR1cm4geyBsYWJlbDogbGFiZWwgfTtcbiAgICB9XG4gICAgQ29tcGxldGlvbkl0ZW0uY3JlYXRlID0gY3JlYXRlO1xufSkoQ29tcGxldGlvbkl0ZW0gfHwgKENvbXBsZXRpb25JdGVtID0ge30pKTtcbi8qKlxuICogVGhlIENvbXBsZXRpb25MaXN0IG5hbWVzcGFjZSBwcm92aWRlcyBmdW5jdGlvbnMgdG8gZGVhbCB3aXRoXG4gKiBjb21wbGV0aW9uIGxpc3RzLlxuICovXG5leHBvcnQgdmFyIENvbXBsZXRpb25MaXN0O1xuKGZ1bmN0aW9uIChDb21wbGV0aW9uTGlzdCkge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgY29tcGxldGlvbiBsaXN0LlxuICAgICAqXG4gICAgICogQHBhcmFtIGl0ZW1zIFRoZSBjb21wbGV0aW9uIGl0ZW1zLlxuICAgICAqIEBwYXJhbSBpc0luY29tcGxldGUgVGhlIGxpc3QgaXMgbm90IGNvbXBsZXRlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNyZWF0ZShpdGVtcywgaXNJbmNvbXBsZXRlKSB7XG4gICAgICAgIHJldHVybiB7IGl0ZW1zOiBpdGVtcyA/IGl0ZW1zIDogW10sIGlzSW5jb21wbGV0ZTogISFpc0luY29tcGxldGUgfTtcbiAgICB9XG4gICAgQ29tcGxldGlvbkxpc3QuY3JlYXRlID0gY3JlYXRlO1xufSkoQ29tcGxldGlvbkxpc3QgfHwgKENvbXBsZXRpb25MaXN0ID0ge30pKTtcbmV4cG9ydCB2YXIgTWFya2VkU3RyaW5nO1xuKGZ1bmN0aW9uIChNYXJrZWRTdHJpbmcpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbWFya2VkIHN0cmluZyBmcm9tIHBsYWluIHRleHQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGxhaW5UZXh0IFRoZSBwbGFpbiB0ZXh0LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGZyb21QbGFpblRleHQocGxhaW5UZXh0KSB7XG4gICAgICAgIHJldHVybiBwbGFpblRleHQucmVwbGFjZSgvW1xcXFxgKl97fVtcXF0oKSMrXFwtLiFdL2csICdcXFxcJCYnKTsgLy8gZXNjYXBlIG1hcmtkb3duIHN5bnRheCB0b2tlbnM6IGh0dHA6Ly9kYXJpbmdmaXJlYmFsbC5uZXQvcHJvamVjdHMvbWFya2Rvd24vc3ludGF4I2JhY2tzbGFzaFxuICAgIH1cbiAgICBNYXJrZWRTdHJpbmcuZnJvbVBsYWluVGV4dCA9IGZyb21QbGFpblRleHQ7XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIHZhbHVlIGNvbmZvcm1zIHRvIHRoZSBbTWFya2VkU3RyaW5nXSgjTWFya2VkU3RyaW5nKSB0eXBlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XG4gICAgICAgIHZhciBjYW5kaWRhdGUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIElzLnN0cmluZyhjYW5kaWRhdGUpIHx8IChJcy5vYmplY3RMaXRlcmFsKGNhbmRpZGF0ZSkgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS5sYW5ndWFnZSkgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS52YWx1ZSkpO1xuICAgIH1cbiAgICBNYXJrZWRTdHJpbmcuaXMgPSBpcztcbn0pKE1hcmtlZFN0cmluZyB8fCAoTWFya2VkU3RyaW5nID0ge30pKTtcbmV4cG9ydCB2YXIgSG92ZXI7XG4oZnVuY3Rpb24gKEhvdmVyKSB7XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIHZhbHVlIGNvbmZvcm1zIHRvIHRoZSBbSG92ZXJdKCNIb3ZlcikgaW50ZXJmYWNlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XG4gICAgICAgIHZhciBjYW5kaWRhdGUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuICEhY2FuZGlkYXRlICYmIElzLm9iamVjdExpdGVyYWwoY2FuZGlkYXRlKSAmJiAoTWFya3VwQ29udGVudC5pcyhjYW5kaWRhdGUuY29udGVudHMpIHx8XG4gICAgICAgICAgICBNYXJrZWRTdHJpbmcuaXMoY2FuZGlkYXRlLmNvbnRlbnRzKSB8fFxuICAgICAgICAgICAgSXMudHlwZWRBcnJheShjYW5kaWRhdGUuY29udGVudHMsIE1hcmtlZFN0cmluZy5pcykpICYmICh2YWx1ZS5yYW5nZSA9PT0gdm9pZCAwIHx8IFJhbmdlLmlzKHZhbHVlLnJhbmdlKSk7XG4gICAgfVxuICAgIEhvdmVyLmlzID0gaXM7XG59KShIb3ZlciB8fCAoSG92ZXIgPSB7fSkpO1xuLyoqXG4gKiBUaGUgUGFyYW1ldGVySW5mb3JtYXRpb24gbmFtZXNwYWNlIHByb3ZpZGVzIGhlbHBlciBmdW5jdGlvbnMgdG8gd29yayB3aXRoXG4gKiBbUGFyYW1ldGVySW5mb3JtYXRpb25dKCNQYXJhbWV0ZXJJbmZvcm1hdGlvbikgbGl0ZXJhbHMuXG4gKi9cbmV4cG9ydCB2YXIgUGFyYW1ldGVySW5mb3JtYXRpb247XG4oZnVuY3Rpb24gKFBhcmFtZXRlckluZm9ybWF0aW9uKSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBwYXJhbWV0ZXIgaW5mb3JtYXRpb24gbGl0ZXJhbC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBsYWJlbCBBIGxhYmVsIHN0cmluZy5cbiAgICAgKiBAcGFyYW0gZG9jdW1lbnRhdGlvbiBBIGRvYyBzdHJpbmcuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKGxhYmVsLCBkb2N1bWVudGF0aW9uKSB7XG4gICAgICAgIHJldHVybiBkb2N1bWVudGF0aW9uID8geyBsYWJlbDogbGFiZWwsIGRvY3VtZW50YXRpb246IGRvY3VtZW50YXRpb24gfSA6IHsgbGFiZWw6IGxhYmVsIH07XG4gICAgfVxuICAgIFBhcmFtZXRlckluZm9ybWF0aW9uLmNyZWF0ZSA9IGNyZWF0ZTtcbn0pKFBhcmFtZXRlckluZm9ybWF0aW9uIHx8IChQYXJhbWV0ZXJJbmZvcm1hdGlvbiA9IHt9KSk7XG4vKipcbiAqIFRoZSBTaWduYXR1cmVJbmZvcm1hdGlvbiBuYW1lc3BhY2UgcHJvdmlkZXMgaGVscGVyIGZ1bmN0aW9ucyB0byB3b3JrIHdpdGhcbiAqIFtTaWduYXR1cmVJbmZvcm1hdGlvbl0oI1NpZ25hdHVyZUluZm9ybWF0aW9uKSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBTaWduYXR1cmVJbmZvcm1hdGlvbjtcbihmdW5jdGlvbiAoU2lnbmF0dXJlSW5mb3JtYXRpb24pIHtcbiAgICBmdW5jdGlvbiBjcmVhdGUobGFiZWwsIGRvY3VtZW50YXRpb24pIHtcbiAgICAgICAgdmFyIHBhcmFtZXRlcnMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAyOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIHBhcmFtZXRlcnNbX2kgLSAyXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlc3VsdCA9IHsgbGFiZWw6IGxhYmVsIH07XG4gICAgICAgIGlmIChJcy5kZWZpbmVkKGRvY3VtZW50YXRpb24pKSB7XG4gICAgICAgICAgICByZXN1bHQuZG9jdW1lbnRhdGlvbiA9IGRvY3VtZW50YXRpb247XG4gICAgICAgIH1cbiAgICAgICAgaWYgKElzLmRlZmluZWQocGFyYW1ldGVycykpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wYXJhbWV0ZXJzID0gcGFyYW1ldGVycztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdC5wYXJhbWV0ZXJzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgU2lnbmF0dXJlSW5mb3JtYXRpb24uY3JlYXRlID0gY3JlYXRlO1xufSkoU2lnbmF0dXJlSW5mb3JtYXRpb24gfHwgKFNpZ25hdHVyZUluZm9ybWF0aW9uID0ge30pKTtcbi8qKlxuICogQSBkb2N1bWVudCBoaWdobGlnaHQga2luZC5cbiAqL1xuZXhwb3J0IHZhciBEb2N1bWVudEhpZ2hsaWdodEtpbmQ7XG4oZnVuY3Rpb24gKERvY3VtZW50SGlnaGxpZ2h0S2luZCkge1xuICAgIC8qKlxuICAgICAqIEEgdGV4dHVhbCBvY2N1cnJlbmNlLlxuICAgICAqL1xuICAgIERvY3VtZW50SGlnaGxpZ2h0S2luZC5UZXh0ID0gMTtcbiAgICAvKipcbiAgICAgKiBSZWFkLWFjY2VzcyBvZiBhIHN5bWJvbCwgbGlrZSByZWFkaW5nIGEgdmFyaWFibGUuXG4gICAgICovXG4gICAgRG9jdW1lbnRIaWdobGlnaHRLaW5kLlJlYWQgPSAyO1xuICAgIC8qKlxuICAgICAqIFdyaXRlLWFjY2VzcyBvZiBhIHN5bWJvbCwgbGlrZSB3cml0aW5nIHRvIGEgdmFyaWFibGUuXG4gICAgICovXG4gICAgRG9jdW1lbnRIaWdobGlnaHRLaW5kLldyaXRlID0gMztcbn0pKERvY3VtZW50SGlnaGxpZ2h0S2luZCB8fCAoRG9jdW1lbnRIaWdobGlnaHRLaW5kID0ge30pKTtcbi8qKlxuICogRG9jdW1lbnRIaWdobGlnaHQgbmFtZXNwYWNlIHRvIHByb3ZpZGUgaGVscGVyIGZ1bmN0aW9ucyB0byB3b3JrIHdpdGhcbiAqIFtEb2N1bWVudEhpZ2hsaWdodF0oI0RvY3VtZW50SGlnaGxpZ2h0KSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBEb2N1bWVudEhpZ2hsaWdodDtcbihmdW5jdGlvbiAoRG9jdW1lbnRIaWdobGlnaHQpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBEb2N1bWVudEhpZ2hsaWdodCBvYmplY3QuXG4gICAgICogQHBhcmFtIHJhbmdlIFRoZSByYW5nZSB0aGUgaGlnaGxpZ2h0IGFwcGxpZXMgdG8uXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKHJhbmdlLCBraW5kKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSB7IHJhbmdlOiByYW5nZSB9O1xuICAgICAgICBpZiAoSXMubnVtYmVyKGtpbmQpKSB7XG4gICAgICAgICAgICByZXN1bHQua2luZCA9IGtpbmQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgRG9jdW1lbnRIaWdobGlnaHQuY3JlYXRlID0gY3JlYXRlO1xufSkoRG9jdW1lbnRIaWdobGlnaHQgfHwgKERvY3VtZW50SGlnaGxpZ2h0ID0ge30pKTtcbi8qKlxuICogQSBzeW1ib2wga2luZC5cbiAqL1xuZXhwb3J0IHZhciBTeW1ib2xLaW5kO1xuKGZ1bmN0aW9uIChTeW1ib2xLaW5kKSB7XG4gICAgU3ltYm9sS2luZC5GaWxlID0gMTtcbiAgICBTeW1ib2xLaW5kLk1vZHVsZSA9IDI7XG4gICAgU3ltYm9sS2luZC5OYW1lc3BhY2UgPSAzO1xuICAgIFN5bWJvbEtpbmQuUGFja2FnZSA9IDQ7XG4gICAgU3ltYm9sS2luZC5DbGFzcyA9IDU7XG4gICAgU3ltYm9sS2luZC5NZXRob2QgPSA2O1xuICAgIFN5bWJvbEtpbmQuUHJvcGVydHkgPSA3O1xuICAgIFN5bWJvbEtpbmQuRmllbGQgPSA4O1xuICAgIFN5bWJvbEtpbmQuQ29uc3RydWN0b3IgPSA5O1xuICAgIFN5bWJvbEtpbmQuRW51bSA9IDEwO1xuICAgIFN5bWJvbEtpbmQuSW50ZXJmYWNlID0gMTE7XG4gICAgU3ltYm9sS2luZC5GdW5jdGlvbiA9IDEyO1xuICAgIFN5bWJvbEtpbmQuVmFyaWFibGUgPSAxMztcbiAgICBTeW1ib2xLaW5kLkNvbnN0YW50ID0gMTQ7XG4gICAgU3ltYm9sS2luZC5TdHJpbmcgPSAxNTtcbiAgICBTeW1ib2xLaW5kLk51bWJlciA9IDE2O1xuICAgIFN5bWJvbEtpbmQuQm9vbGVhbiA9IDE3O1xuICAgIFN5bWJvbEtpbmQuQXJyYXkgPSAxODtcbiAgICBTeW1ib2xLaW5kLk9iamVjdCA9IDE5O1xuICAgIFN5bWJvbEtpbmQuS2V5ID0gMjA7XG4gICAgU3ltYm9sS2luZC5OdWxsID0gMjE7XG4gICAgU3ltYm9sS2luZC5FbnVtTWVtYmVyID0gMjI7XG4gICAgU3ltYm9sS2luZC5TdHJ1Y3QgPSAyMztcbiAgICBTeW1ib2xLaW5kLkV2ZW50ID0gMjQ7XG4gICAgU3ltYm9sS2luZC5PcGVyYXRvciA9IDI1O1xuICAgIFN5bWJvbEtpbmQuVHlwZVBhcmFtZXRlciA9IDI2O1xufSkoU3ltYm9sS2luZCB8fCAoU3ltYm9sS2luZCA9IHt9KSk7XG4vKipcbiAqIFN5bWJvbCB0YWdzIGFyZSBleHRyYSBhbm5vdGF0aW9ucyB0aGF0IHR3ZWFrIHRoZSByZW5kZXJpbmcgb2YgYSBzeW1ib2wuXG4gKiBAc2luY2UgMy4xNVxuICovXG5leHBvcnQgdmFyIFN5bWJvbFRhZztcbihmdW5jdGlvbiAoU3ltYm9sVGFnKSB7XG4gICAgLyoqXG4gICAgICogUmVuZGVyIGEgc3ltYm9sIGFzIG9ic29sZXRlLCB1c3VhbGx5IHVzaW5nIGEgc3RyaWtlLW91dC5cbiAgICAgKi9cbiAgICBTeW1ib2xUYWcuRGVwcmVjYXRlZCA9IDE7XG59KShTeW1ib2xUYWcgfHwgKFN5bWJvbFRhZyA9IHt9KSk7XG5leHBvcnQgdmFyIFN5bWJvbEluZm9ybWF0aW9uO1xuKGZ1bmN0aW9uIChTeW1ib2xJbmZvcm1hdGlvbikge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgc3ltYm9sIGluZm9ybWF0aW9uIGxpdGVyYWwuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmFtZSBUaGUgbmFtZSBvZiB0aGUgc3ltYm9sLlxuICAgICAqIEBwYXJhbSBraW5kIFRoZSBraW5kIG9mIHRoZSBzeW1ib2wuXG4gICAgICogQHBhcmFtIHJhbmdlIFRoZSByYW5nZSBvZiB0aGUgbG9jYXRpb24gb2YgdGhlIHN5bWJvbC5cbiAgICAgKiBAcGFyYW0gdXJpIFRoZSByZXNvdXJjZSBvZiB0aGUgbG9jYXRpb24gb2Ygc3ltYm9sLCBkZWZhdWx0cyB0byB0aGUgY3VycmVudCBkb2N1bWVudC5cbiAgICAgKiBAcGFyYW0gY29udGFpbmVyTmFtZSBUaGUgbmFtZSBvZiB0aGUgc3ltYm9sIGNvbnRhaW5pbmcgdGhlIHN5bWJvbC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUobmFtZSwga2luZCwgcmFuZ2UsIHVyaSwgY29udGFpbmVyTmFtZSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0ge1xuICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgIGtpbmQ6IGtpbmQsXG4gICAgICAgICAgICBsb2NhdGlvbjogeyB1cmk6IHVyaSwgcmFuZ2U6IHJhbmdlIH1cbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGNvbnRhaW5lck5hbWUpIHtcbiAgICAgICAgICAgIHJlc3VsdC5jb250YWluZXJOYW1lID0gY29udGFpbmVyTmFtZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBTeW1ib2xJbmZvcm1hdGlvbi5jcmVhdGUgPSBjcmVhdGU7XG59KShTeW1ib2xJbmZvcm1hdGlvbiB8fCAoU3ltYm9sSW5mb3JtYXRpb24gPSB7fSkpO1xuZXhwb3J0IHZhciBEb2N1bWVudFN5bWJvbDtcbihmdW5jdGlvbiAoRG9jdW1lbnRTeW1ib2wpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHN5bWJvbCBpbmZvcm1hdGlvbiBsaXRlcmFsLlxuICAgICAqXG4gICAgICogQHBhcmFtIG5hbWUgVGhlIG5hbWUgb2YgdGhlIHN5bWJvbC5cbiAgICAgKiBAcGFyYW0gZGV0YWlsIFRoZSBkZXRhaWwgb2YgdGhlIHN5bWJvbC5cbiAgICAgKiBAcGFyYW0ga2luZCBUaGUga2luZCBvZiB0aGUgc3ltYm9sLlxuICAgICAqIEBwYXJhbSByYW5nZSBUaGUgcmFuZ2Ugb2YgdGhlIHN5bWJvbC5cbiAgICAgKiBAcGFyYW0gc2VsZWN0aW9uUmFuZ2UgVGhlIHNlbGVjdGlvblJhbmdlIG9mIHRoZSBzeW1ib2wuXG4gICAgICogQHBhcmFtIGNoaWxkcmVuIENoaWxkcmVuIG9mIHRoZSBzeW1ib2wuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKG5hbWUsIGRldGFpbCwga2luZCwgcmFuZ2UsIHNlbGVjdGlvblJhbmdlLCBjaGlsZHJlbikge1xuICAgICAgICB2YXIgcmVzdWx0ID0ge1xuICAgICAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgICAgIGRldGFpbDogZGV0YWlsLFxuICAgICAgICAgICAga2luZDoga2luZCxcbiAgICAgICAgICAgIHJhbmdlOiByYW5nZSxcbiAgICAgICAgICAgIHNlbGVjdGlvblJhbmdlOiBzZWxlY3Rpb25SYW5nZVxuICAgICAgICB9O1xuICAgICAgICBpZiAoY2hpbGRyZW4gIT09IHZvaWQgMCkge1xuICAgICAgICAgICAgcmVzdWx0LmNoaWxkcmVuID0gY2hpbGRyZW47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgRG9jdW1lbnRTeW1ib2wuY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbRG9jdW1lbnRTeW1ib2xdKCNEb2N1bWVudFN5bWJvbCkgaW50ZXJmYWNlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XG4gICAgICAgIHZhciBjYW5kaWRhdGUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIGNhbmRpZGF0ZSAmJlxuICAgICAgICAgICAgSXMuc3RyaW5nKGNhbmRpZGF0ZS5uYW1lKSAmJiBJcy5udW1iZXIoY2FuZGlkYXRlLmtpbmQpICYmXG4gICAgICAgICAgICBSYW5nZS5pcyhjYW5kaWRhdGUucmFuZ2UpICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5zZWxlY3Rpb25SYW5nZSkgJiZcbiAgICAgICAgICAgIChjYW5kaWRhdGUuZGV0YWlsID09PSB2b2lkIDAgfHwgSXMuc3RyaW5nKGNhbmRpZGF0ZS5kZXRhaWwpKSAmJlxuICAgICAgICAgICAgKGNhbmRpZGF0ZS5kZXByZWNhdGVkID09PSB2b2lkIDAgfHwgSXMuYm9vbGVhbihjYW5kaWRhdGUuZGVwcmVjYXRlZCkpICYmXG4gICAgICAgICAgICAoY2FuZGlkYXRlLmNoaWxkcmVuID09PSB2b2lkIDAgfHwgQXJyYXkuaXNBcnJheShjYW5kaWRhdGUuY2hpbGRyZW4pKSAmJlxuICAgICAgICAgICAgKGNhbmRpZGF0ZS50YWdzID09PSB2b2lkIDAgfHwgQXJyYXkuaXNBcnJheShjYW5kaWRhdGUudGFncykpO1xuICAgIH1cbiAgICBEb2N1bWVudFN5bWJvbC5pcyA9IGlzO1xufSkoRG9jdW1lbnRTeW1ib2wgfHwgKERvY3VtZW50U3ltYm9sID0ge30pKTtcbi8qKlxuICogQSBzZXQgb2YgcHJlZGVmaW5lZCBjb2RlIGFjdGlvbiBraW5kc1xuICovXG5leHBvcnQgdmFyIENvZGVBY3Rpb25LaW5kO1xuKGZ1bmN0aW9uIChDb2RlQWN0aW9uS2luZCkge1xuICAgIC8qKlxuICAgICAqIEVtcHR5IGtpbmQuXG4gICAgICovXG4gICAgQ29kZUFjdGlvbktpbmQuRW1wdHkgPSAnJztcbiAgICAvKipcbiAgICAgKiBCYXNlIGtpbmQgZm9yIHF1aWNrZml4IGFjdGlvbnM6ICdxdWlja2ZpeCdcbiAgICAgKi9cbiAgICBDb2RlQWN0aW9uS2luZC5RdWlja0ZpeCA9ICdxdWlja2ZpeCc7XG4gICAgLyoqXG4gICAgICogQmFzZSBraW5kIGZvciByZWZhY3RvcmluZyBhY3Rpb25zOiAncmVmYWN0b3InXG4gICAgICovXG4gICAgQ29kZUFjdGlvbktpbmQuUmVmYWN0b3IgPSAncmVmYWN0b3InO1xuICAgIC8qKlxuICAgICAqIEJhc2Uga2luZCBmb3IgcmVmYWN0b3JpbmcgZXh0cmFjdGlvbiBhY3Rpb25zOiAncmVmYWN0b3IuZXh0cmFjdCdcbiAgICAgKlxuICAgICAqIEV4YW1wbGUgZXh0cmFjdCBhY3Rpb25zOlxuICAgICAqXG4gICAgICogLSBFeHRyYWN0IG1ldGhvZFxuICAgICAqIC0gRXh0cmFjdCBmdW5jdGlvblxuICAgICAqIC0gRXh0cmFjdCB2YXJpYWJsZVxuICAgICAqIC0gRXh0cmFjdCBpbnRlcmZhY2UgZnJvbSBjbGFzc1xuICAgICAqIC0gLi4uXG4gICAgICovXG4gICAgQ29kZUFjdGlvbktpbmQuUmVmYWN0b3JFeHRyYWN0ID0gJ3JlZmFjdG9yLmV4dHJhY3QnO1xuICAgIC8qKlxuICAgICAqIEJhc2Uga2luZCBmb3IgcmVmYWN0b3JpbmcgaW5saW5lIGFjdGlvbnM6ICdyZWZhY3Rvci5pbmxpbmUnXG4gICAgICpcbiAgICAgKiBFeGFtcGxlIGlubGluZSBhY3Rpb25zOlxuICAgICAqXG4gICAgICogLSBJbmxpbmUgZnVuY3Rpb25cbiAgICAgKiAtIElubGluZSB2YXJpYWJsZVxuICAgICAqIC0gSW5saW5lIGNvbnN0YW50XG4gICAgICogLSAuLi5cbiAgICAgKi9cbiAgICBDb2RlQWN0aW9uS2luZC5SZWZhY3RvcklubGluZSA9ICdyZWZhY3Rvci5pbmxpbmUnO1xuICAgIC8qKlxuICAgICAqIEJhc2Uga2luZCBmb3IgcmVmYWN0b3JpbmcgcmV3cml0ZSBhY3Rpb25zOiAncmVmYWN0b3IucmV3cml0ZSdcbiAgICAgKlxuICAgICAqIEV4YW1wbGUgcmV3cml0ZSBhY3Rpb25zOlxuICAgICAqXG4gICAgICogLSBDb252ZXJ0IEphdmFTY3JpcHQgZnVuY3Rpb24gdG8gY2xhc3NcbiAgICAgKiAtIEFkZCBvciByZW1vdmUgcGFyYW1ldGVyXG4gICAgICogLSBFbmNhcHN1bGF0ZSBmaWVsZFxuICAgICAqIC0gTWFrZSBtZXRob2Qgc3RhdGljXG4gICAgICogLSBNb3ZlIG1ldGhvZCB0byBiYXNlIGNsYXNzXG4gICAgICogLSAuLi5cbiAgICAgKi9cbiAgICBDb2RlQWN0aW9uS2luZC5SZWZhY3RvclJld3JpdGUgPSAncmVmYWN0b3IucmV3cml0ZSc7XG4gICAgLyoqXG4gICAgICogQmFzZSBraW5kIGZvciBzb3VyY2UgYWN0aW9uczogYHNvdXJjZWBcbiAgICAgKlxuICAgICAqIFNvdXJjZSBjb2RlIGFjdGlvbnMgYXBwbHkgdG8gdGhlIGVudGlyZSBmaWxlLlxuICAgICAqL1xuICAgIENvZGVBY3Rpb25LaW5kLlNvdXJjZSA9ICdzb3VyY2UnO1xuICAgIC8qKlxuICAgICAqIEJhc2Uga2luZCBmb3IgYW4gb3JnYW5pemUgaW1wb3J0cyBzb3VyY2UgYWN0aW9uOiBgc291cmNlLm9yZ2FuaXplSW1wb3J0c2BcbiAgICAgKi9cbiAgICBDb2RlQWN0aW9uS2luZC5Tb3VyY2VPcmdhbml6ZUltcG9ydHMgPSAnc291cmNlLm9yZ2FuaXplSW1wb3J0cyc7XG4gICAgLyoqXG4gICAgICogQmFzZSBraW5kIGZvciBhdXRvLWZpeCBzb3VyY2UgYWN0aW9uczogYHNvdXJjZS5maXhBbGxgLlxuICAgICAqXG4gICAgICogRml4IGFsbCBhY3Rpb25zIGF1dG9tYXRpY2FsbHkgZml4IGVycm9ycyB0aGF0IGhhdmUgYSBjbGVhciBmaXggdGhhdCBkbyBub3QgcmVxdWlyZSB1c2VyIGlucHV0LlxuICAgICAqIFRoZXkgc2hvdWxkIG5vdCBzdXBwcmVzcyBlcnJvcnMgb3IgcGVyZm9ybSB1bnNhZmUgZml4ZXMgc3VjaCBhcyBnZW5lcmF0aW5nIG5ldyB0eXBlcyBvciBjbGFzc2VzLlxuICAgICAqXG4gICAgICogQHNpbmNlIDMuMTUuMFxuICAgICAqL1xuICAgIENvZGVBY3Rpb25LaW5kLlNvdXJjZUZpeEFsbCA9ICdzb3VyY2UuZml4QWxsJztcbn0pKENvZGVBY3Rpb25LaW5kIHx8IChDb2RlQWN0aW9uS2luZCA9IHt9KSk7XG4vKipcbiAqIFRoZSBDb2RlQWN0aW9uQ29udGV4dCBuYW1lc3BhY2UgcHJvdmlkZXMgaGVscGVyIGZ1bmN0aW9ucyB0byB3b3JrIHdpdGhcbiAqIFtDb2RlQWN0aW9uQ29udGV4dF0oI0NvZGVBY3Rpb25Db250ZXh0KSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBDb2RlQWN0aW9uQ29udGV4dDtcbihmdW5jdGlvbiAoQ29kZUFjdGlvbkNvbnRleHQpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IENvZGVBY3Rpb25Db250ZXh0IGxpdGVyYWwuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKGRpYWdub3N0aWNzLCBvbmx5KSB7XG4gICAgICAgIHZhciByZXN1bHQgPSB7IGRpYWdub3N0aWNzOiBkaWFnbm9zdGljcyB9O1xuICAgICAgICBpZiAob25seSAhPT0gdm9pZCAwICYmIG9ubHkgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHJlc3VsdC5vbmx5ID0gb25seTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBDb2RlQWN0aW9uQ29udGV4dC5jcmVhdGUgPSBjcmVhdGU7XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIGxpdGVyYWwgY29uZm9ybXMgdG8gdGhlIFtDb2RlQWN0aW9uQ29udGV4dF0oI0NvZGVBY3Rpb25Db250ZXh0KSBpbnRlcmZhY2UuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIElzLnR5cGVkQXJyYXkoY2FuZGlkYXRlLmRpYWdub3N0aWNzLCBEaWFnbm9zdGljLmlzKSAmJiAoY2FuZGlkYXRlLm9ubHkgPT09IHZvaWQgMCB8fCBJcy50eXBlZEFycmF5KGNhbmRpZGF0ZS5vbmx5LCBJcy5zdHJpbmcpKTtcbiAgICB9XG4gICAgQ29kZUFjdGlvbkNvbnRleHQuaXMgPSBpcztcbn0pKENvZGVBY3Rpb25Db250ZXh0IHx8IChDb2RlQWN0aW9uQ29udGV4dCA9IHt9KSk7XG5leHBvcnQgdmFyIENvZGVBY3Rpb247XG4oZnVuY3Rpb24gKENvZGVBY3Rpb24pIHtcbiAgICBmdW5jdGlvbiBjcmVhdGUodGl0bGUsIGNvbW1hbmRPckVkaXQsIGtpbmQpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHsgdGl0bGU6IHRpdGxlIH07XG4gICAgICAgIGlmIChDb21tYW5kLmlzKGNvbW1hbmRPckVkaXQpKSB7XG4gICAgICAgICAgICByZXN1bHQuY29tbWFuZCA9IGNvbW1hbmRPckVkaXQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQuZWRpdCA9IGNvbW1hbmRPckVkaXQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGtpbmQgIT09IHZvaWQgMCkge1xuICAgICAgICAgICAgcmVzdWx0LmtpbmQgPSBraW5kO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIENvZGVBY3Rpb24uY3JlYXRlID0gY3JlYXRlO1xuICAgIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XG4gICAgICAgIHZhciBjYW5kaWRhdGUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIGNhbmRpZGF0ZSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLnRpdGxlKSAmJlxuICAgICAgICAgICAgKGNhbmRpZGF0ZS5kaWFnbm9zdGljcyA9PT0gdm9pZCAwIHx8IElzLnR5cGVkQXJyYXkoY2FuZGlkYXRlLmRpYWdub3N0aWNzLCBEaWFnbm9zdGljLmlzKSkgJiZcbiAgICAgICAgICAgIChjYW5kaWRhdGUua2luZCA9PT0gdm9pZCAwIHx8IElzLnN0cmluZyhjYW5kaWRhdGUua2luZCkpICYmXG4gICAgICAgICAgICAoY2FuZGlkYXRlLmVkaXQgIT09IHZvaWQgMCB8fCBjYW5kaWRhdGUuY29tbWFuZCAhPT0gdm9pZCAwKSAmJlxuICAgICAgICAgICAgKGNhbmRpZGF0ZS5jb21tYW5kID09PSB2b2lkIDAgfHwgQ29tbWFuZC5pcyhjYW5kaWRhdGUuY29tbWFuZCkpICYmXG4gICAgICAgICAgICAoY2FuZGlkYXRlLmlzUHJlZmVycmVkID09PSB2b2lkIDAgfHwgSXMuYm9vbGVhbihjYW5kaWRhdGUuaXNQcmVmZXJyZWQpKSAmJlxuICAgICAgICAgICAgKGNhbmRpZGF0ZS5lZGl0ID09PSB2b2lkIDAgfHwgV29ya3NwYWNlRWRpdC5pcyhjYW5kaWRhdGUuZWRpdCkpO1xuICAgIH1cbiAgICBDb2RlQWN0aW9uLmlzID0gaXM7XG59KShDb2RlQWN0aW9uIHx8IChDb2RlQWN0aW9uID0ge30pKTtcbi8qKlxuICogVGhlIENvZGVMZW5zIG5hbWVzcGFjZSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb25zIHRvIHdvcmsgd2l0aFxuICogW0NvZGVMZW5zXSgjQ29kZUxlbnMpIGxpdGVyYWxzLlxuICovXG5leHBvcnQgdmFyIENvZGVMZW5zO1xuKGZ1bmN0aW9uIChDb2RlTGVucykge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgQ29kZUxlbnMgbGl0ZXJhbC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUocmFuZ2UsIGRhdGEpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHsgcmFuZ2U6IHJhbmdlIH07XG4gICAgICAgIGlmIChJcy5kZWZpbmVkKGRhdGEpKSB7XG4gICAgICAgICAgICByZXN1bHQuZGF0YSA9IGRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgQ29kZUxlbnMuY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbQ29kZUxlbnNdKCNDb2RlTGVucykgaW50ZXJmYWNlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XG4gICAgICAgIHZhciBjYW5kaWRhdGUgPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIElzLmRlZmluZWQoY2FuZGlkYXRlKSAmJiBSYW5nZS5pcyhjYW5kaWRhdGUucmFuZ2UpICYmIChJcy51bmRlZmluZWQoY2FuZGlkYXRlLmNvbW1hbmQpIHx8IENvbW1hbmQuaXMoY2FuZGlkYXRlLmNvbW1hbmQpKTtcbiAgICB9XG4gICAgQ29kZUxlbnMuaXMgPSBpcztcbn0pKENvZGVMZW5zIHx8IChDb2RlTGVucyA9IHt9KSk7XG4vKipcbiAqIFRoZSBGb3JtYXR0aW5nT3B0aW9ucyBuYW1lc3BhY2UgcHJvdmlkZXMgaGVscGVyIGZ1bmN0aW9ucyB0byB3b3JrIHdpdGhcbiAqIFtGb3JtYXR0aW5nT3B0aW9uc10oI0Zvcm1hdHRpbmdPcHRpb25zKSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBGb3JtYXR0aW5nT3B0aW9ucztcbihmdW5jdGlvbiAoRm9ybWF0dGluZ09wdGlvbnMpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IEZvcm1hdHRpbmdPcHRpb25zIGxpdGVyYWwuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKHRhYlNpemUsIGluc2VydFNwYWNlcykge1xuICAgICAgICByZXR1cm4geyB0YWJTaXplOiB0YWJTaXplLCBpbnNlcnRTcGFjZXM6IGluc2VydFNwYWNlcyB9O1xuICAgIH1cbiAgICBGb3JtYXR0aW5nT3B0aW9ucy5jcmVhdGUgPSBjcmVhdGU7XG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgdGhlIGdpdmVuIGxpdGVyYWwgY29uZm9ybXMgdG8gdGhlIFtGb3JtYXR0aW5nT3B0aW9uc10oI0Zvcm1hdHRpbmdPcHRpb25zKSBpbnRlcmZhY2UuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIElzLm51bWJlcihjYW5kaWRhdGUudGFiU2l6ZSkgJiYgSXMuYm9vbGVhbihjYW5kaWRhdGUuaW5zZXJ0U3BhY2VzKTtcbiAgICB9XG4gICAgRm9ybWF0dGluZ09wdGlvbnMuaXMgPSBpcztcbn0pKEZvcm1hdHRpbmdPcHRpb25zIHx8IChGb3JtYXR0aW5nT3B0aW9ucyA9IHt9KSk7XG4vKipcbiAqIFRoZSBEb2N1bWVudExpbmsgbmFtZXNwYWNlIHByb3ZpZGVzIGhlbHBlciBmdW5jdGlvbnMgdG8gd29yayB3aXRoXG4gKiBbRG9jdW1lbnRMaW5rXSgjRG9jdW1lbnRMaW5rKSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBEb2N1bWVudExpbms7XG4oZnVuY3Rpb24gKERvY3VtZW50TGluaykge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgRG9jdW1lbnRMaW5rIGxpdGVyYWwuXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlKHJhbmdlLCB0YXJnZXQsIGRhdGEpIHtcbiAgICAgICAgcmV0dXJuIHsgcmFuZ2U6IHJhbmdlLCB0YXJnZXQ6IHRhcmdldCwgZGF0YTogZGF0YSB9O1xuICAgIH1cbiAgICBEb2N1bWVudExpbmsuY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbRG9jdW1lbnRMaW5rXSgjRG9jdW1lbnRMaW5rKSBpbnRlcmZhY2UuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXModmFsdWUpIHtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5yYW5nZSkgJiYgKElzLnVuZGVmaW5lZChjYW5kaWRhdGUudGFyZ2V0KSB8fCBJcy5zdHJpbmcoY2FuZGlkYXRlLnRhcmdldCkpO1xuICAgIH1cbiAgICBEb2N1bWVudExpbmsuaXMgPSBpcztcbn0pKERvY3VtZW50TGluayB8fCAoRG9jdW1lbnRMaW5rID0ge30pKTtcbi8qKlxuICogVGhlIFNlbGVjdGlvblJhbmdlIG5hbWVzcGFjZSBwcm92aWRlcyBoZWxwZXIgZnVuY3Rpb24gdG8gd29yayB3aXRoXG4gKiBTZWxlY3Rpb25SYW5nZSBsaXRlcmFscy5cbiAqL1xuZXhwb3J0IHZhciBTZWxlY3Rpb25SYW5nZTtcbihmdW5jdGlvbiAoU2VsZWN0aW9uUmFuZ2UpIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IFNlbGVjdGlvblJhbmdlXG4gICAgICogQHBhcmFtIHJhbmdlIHRoZSByYW5nZS5cbiAgICAgKiBAcGFyYW0gcGFyZW50IGFuIG9wdGlvbmFsIHBhcmVudC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUocmFuZ2UsIHBhcmVudCkge1xuICAgICAgICByZXR1cm4geyByYW5nZTogcmFuZ2UsIHBhcmVudDogcGFyZW50IH07XG4gICAgfVxuICAgIFNlbGVjdGlvblJhbmdlLmNyZWF0ZSA9IGNyZWF0ZTtcbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBjYW5kaWRhdGUgIT09IHVuZGVmaW5lZCAmJiBSYW5nZS5pcyhjYW5kaWRhdGUucmFuZ2UpICYmIChjYW5kaWRhdGUucGFyZW50ID09PSB1bmRlZmluZWQgfHwgU2VsZWN0aW9uUmFuZ2UuaXMoY2FuZGlkYXRlLnBhcmVudCkpO1xuICAgIH1cbiAgICBTZWxlY3Rpb25SYW5nZS5pcyA9IGlzO1xufSkoU2VsZWN0aW9uUmFuZ2UgfHwgKFNlbGVjdGlvblJhbmdlID0ge30pKTtcbmV4cG9ydCB2YXIgRU9MID0gWydcXG4nLCAnXFxyXFxuJywgJ1xcciddO1xuLyoqXG4gKiBAZGVwcmVjYXRlZCBVc2UgdGhlIHRleHQgZG9jdW1lbnQgZnJvbSB0aGUgbmV3IHZzY29kZS1sYW5ndWFnZXNlcnZlci10ZXh0ZG9jdW1lbnQgcGFja2FnZS5cbiAqL1xuZXhwb3J0IHZhciBUZXh0RG9jdW1lbnQ7XG4oZnVuY3Rpb24gKFRleHREb2N1bWVudCkge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgSVRleHREb2N1bWVudCBsaXRlcmFsIGZyb20gdGhlIGdpdmVuIHVyaSBhbmQgY29udGVudC5cbiAgICAgKiBAcGFyYW0gdXJpIFRoZSBkb2N1bWVudCdzIHVyaS5cbiAgICAgKiBAcGFyYW0gbGFuZ3VhZ2VJZCAgVGhlIGRvY3VtZW50J3MgbGFuZ3VhZ2UgSWQuXG4gICAgICogQHBhcmFtIGNvbnRlbnQgVGhlIGRvY3VtZW50J3MgY29udGVudC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUodXJpLCBsYW5ndWFnZUlkLCB2ZXJzaW9uLCBjb250ZW50KSB7XG4gICAgICAgIHJldHVybiBuZXcgRnVsbFRleHREb2N1bWVudCh1cmksIGxhbmd1YWdlSWQsIHZlcnNpb24sIGNvbnRlbnQpO1xuICAgIH1cbiAgICBUZXh0RG9jdW1lbnQuY3JlYXRlID0gY3JlYXRlO1xuICAgIC8qKlxuICAgICAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBsaXRlcmFsIGNvbmZvcm1zIHRvIHRoZSBbSVRleHREb2N1bWVudF0oI0lUZXh0RG9jdW1lbnQpIGludGVyZmFjZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gdmFsdWU7XG4gICAgICAgIHJldHVybiBJcy5kZWZpbmVkKGNhbmRpZGF0ZSkgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS51cmkpICYmIChJcy51bmRlZmluZWQoY2FuZGlkYXRlLmxhbmd1YWdlSWQpIHx8IElzLnN0cmluZyhjYW5kaWRhdGUubGFuZ3VhZ2VJZCkpICYmIElzLm51bWJlcihjYW5kaWRhdGUubGluZUNvdW50KVxuICAgICAgICAgICAgJiYgSXMuZnVuYyhjYW5kaWRhdGUuZ2V0VGV4dCkgJiYgSXMuZnVuYyhjYW5kaWRhdGUucG9zaXRpb25BdCkgJiYgSXMuZnVuYyhjYW5kaWRhdGUub2Zmc2V0QXQpID8gdHJ1ZSA6IGZhbHNlO1xuICAgIH1cbiAgICBUZXh0RG9jdW1lbnQuaXMgPSBpcztcbiAgICBmdW5jdGlvbiBhcHBseUVkaXRzKGRvY3VtZW50LCBlZGl0cykge1xuICAgICAgICB2YXIgdGV4dCA9IGRvY3VtZW50LmdldFRleHQoKTtcbiAgICAgICAgdmFyIHNvcnRlZEVkaXRzID0gbWVyZ2VTb3J0KGVkaXRzLCBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgdmFyIGRpZmYgPSBhLnJhbmdlLnN0YXJ0LmxpbmUgLSBiLnJhbmdlLnN0YXJ0LmxpbmU7XG4gICAgICAgICAgICBpZiAoZGlmZiA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhLnJhbmdlLnN0YXJ0LmNoYXJhY3RlciAtIGIucmFuZ2Uuc3RhcnQuY2hhcmFjdGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGRpZmY7XG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgbGFzdE1vZGlmaWVkT2Zmc2V0ID0gdGV4dC5sZW5ndGg7XG4gICAgICAgIGZvciAodmFyIGkgPSBzb3J0ZWRFZGl0cy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgdmFyIGUgPSBzb3J0ZWRFZGl0c1tpXTtcbiAgICAgICAgICAgIHZhciBzdGFydE9mZnNldCA9IGRvY3VtZW50Lm9mZnNldEF0KGUucmFuZ2Uuc3RhcnQpO1xuICAgICAgICAgICAgdmFyIGVuZE9mZnNldCA9IGRvY3VtZW50Lm9mZnNldEF0KGUucmFuZ2UuZW5kKTtcbiAgICAgICAgICAgIGlmIChlbmRPZmZzZXQgPD0gbGFzdE1vZGlmaWVkT2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgdGV4dCA9IHRleHQuc3Vic3RyaW5nKDAsIHN0YXJ0T2Zmc2V0KSArIGUubmV3VGV4dCArIHRleHQuc3Vic3RyaW5nKGVuZE9mZnNldCwgdGV4dC5sZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdPdmVybGFwcGluZyBlZGl0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsYXN0TW9kaWZpZWRPZmZzZXQgPSBzdGFydE9mZnNldDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGV4dDtcbiAgICB9XG4gICAgVGV4dERvY3VtZW50LmFwcGx5RWRpdHMgPSBhcHBseUVkaXRzO1xuICAgIGZ1bmN0aW9uIG1lcmdlU29ydChkYXRhLCBjb21wYXJlKSB7XG4gICAgICAgIGlmIChkYXRhLmxlbmd0aCA8PSAxKSB7XG4gICAgICAgICAgICAvLyBzb3J0ZWRcbiAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICB9XG4gICAgICAgIHZhciBwID0gKGRhdGEubGVuZ3RoIC8gMikgfCAwO1xuICAgICAgICB2YXIgbGVmdCA9IGRhdGEuc2xpY2UoMCwgcCk7XG4gICAgICAgIHZhciByaWdodCA9IGRhdGEuc2xpY2UocCk7XG4gICAgICAgIG1lcmdlU29ydChsZWZ0LCBjb21wYXJlKTtcbiAgICAgICAgbWVyZ2VTb3J0KHJpZ2h0LCBjb21wYXJlKTtcbiAgICAgICAgdmFyIGxlZnRJZHggPSAwO1xuICAgICAgICB2YXIgcmlnaHRJZHggPSAwO1xuICAgICAgICB2YXIgaSA9IDA7XG4gICAgICAgIHdoaWxlIChsZWZ0SWR4IDwgbGVmdC5sZW5ndGggJiYgcmlnaHRJZHggPCByaWdodC5sZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciByZXQgPSBjb21wYXJlKGxlZnRbbGVmdElkeF0sIHJpZ2h0W3JpZ2h0SWR4XSk7XG4gICAgICAgICAgICBpZiAocmV0IDw9IDApIHtcbiAgICAgICAgICAgICAgICAvLyBzbWFsbGVyX2VxdWFsIC0+IHRha2UgbGVmdCB0byBwcmVzZXJ2ZSBvcmRlclxuICAgICAgICAgICAgICAgIGRhdGFbaSsrXSA9IGxlZnRbbGVmdElkeCsrXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIGdyZWF0ZXIgLT4gdGFrZSByaWdodFxuICAgICAgICAgICAgICAgIGRhdGFbaSsrXSA9IHJpZ2h0W3JpZ2h0SWR4KytdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHdoaWxlIChsZWZ0SWR4IDwgbGVmdC5sZW5ndGgpIHtcbiAgICAgICAgICAgIGRhdGFbaSsrXSA9IGxlZnRbbGVmdElkeCsrXTtcbiAgICAgICAgfVxuICAgICAgICB3aGlsZSAocmlnaHRJZHggPCByaWdodC5sZW5ndGgpIHtcbiAgICAgICAgICAgIGRhdGFbaSsrXSA9IHJpZ2h0W3JpZ2h0SWR4KytdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbn0pKFRleHREb2N1bWVudCB8fCAoVGV4dERvY3VtZW50ID0ge30pKTtcbnZhciBGdWxsVGV4dERvY3VtZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEZ1bGxUZXh0RG9jdW1lbnQodXJpLCBsYW5ndWFnZUlkLCB2ZXJzaW9uLCBjb250ZW50KSB7XG4gICAgICAgIHRoaXMuX3VyaSA9IHVyaTtcbiAgICAgICAgdGhpcy5fbGFuZ3VhZ2VJZCA9IGxhbmd1YWdlSWQ7XG4gICAgICAgIHRoaXMuX3ZlcnNpb24gPSB2ZXJzaW9uO1xuICAgICAgICB0aGlzLl9jb250ZW50ID0gY29udGVudDtcbiAgICAgICAgdGhpcy5fbGluZU9mZnNldHMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGdWxsVGV4dERvY3VtZW50LnByb3RvdHlwZSwgXCJ1cmlcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl91cmk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGdWxsVGV4dERvY3VtZW50LnByb3RvdHlwZSwgXCJsYW5ndWFnZUlkXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbGFuZ3VhZ2VJZDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZ1bGxUZXh0RG9jdW1lbnQucHJvdG90eXBlLCBcInZlcnNpb25cIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl92ZXJzaW9uO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBGdWxsVGV4dERvY3VtZW50LnByb3RvdHlwZS5nZXRUZXh0ID0gZnVuY3Rpb24gKHJhbmdlKSB7XG4gICAgICAgIGlmIChyYW5nZSkge1xuICAgICAgICAgICAgdmFyIHN0YXJ0ID0gdGhpcy5vZmZzZXRBdChyYW5nZS5zdGFydCk7XG4gICAgICAgICAgICB2YXIgZW5kID0gdGhpcy5vZmZzZXRBdChyYW5nZS5lbmQpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NvbnRlbnQuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jb250ZW50O1xuICAgIH07XG4gICAgRnVsbFRleHREb2N1bWVudC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKGV2ZW50LCB2ZXJzaW9uKSB7XG4gICAgICAgIHRoaXMuX2NvbnRlbnQgPSBldmVudC50ZXh0O1xuICAgICAgICB0aGlzLl92ZXJzaW9uID0gdmVyc2lvbjtcbiAgICAgICAgdGhpcy5fbGluZU9mZnNldHMgPSB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICBGdWxsVGV4dERvY3VtZW50LnByb3RvdHlwZS5nZXRMaW5lT2Zmc2V0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2xpbmVPZmZzZXRzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHZhciBsaW5lT2Zmc2V0cyA9IFtdO1xuICAgICAgICAgICAgdmFyIHRleHQgPSB0aGlzLl9jb250ZW50O1xuICAgICAgICAgICAgdmFyIGlzTGluZVN0YXJ0ID0gdHJ1ZTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGV4dC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChpc0xpbmVTdGFydCkge1xuICAgICAgICAgICAgICAgICAgICBsaW5lT2Zmc2V0cy5wdXNoKGkpO1xuICAgICAgICAgICAgICAgICAgICBpc0xpbmVTdGFydCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2YXIgY2ggPSB0ZXh0LmNoYXJBdChpKTtcbiAgICAgICAgICAgICAgICBpc0xpbmVTdGFydCA9IChjaCA9PT0gJ1xccicgfHwgY2ggPT09ICdcXG4nKTtcbiAgICAgICAgICAgICAgICBpZiAoY2ggPT09ICdcXHInICYmIGkgKyAxIDwgdGV4dC5sZW5ndGggJiYgdGV4dC5jaGFyQXQoaSArIDEpID09PSAnXFxuJykge1xuICAgICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGlzTGluZVN0YXJ0ICYmIHRleHQubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIGxpbmVPZmZzZXRzLnB1c2godGV4dC5sZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fbGluZU9mZnNldHMgPSBsaW5lT2Zmc2V0cztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fbGluZU9mZnNldHM7XG4gICAgfTtcbiAgICBGdWxsVGV4dERvY3VtZW50LnByb3RvdHlwZS5wb3NpdGlvbkF0ID0gZnVuY3Rpb24gKG9mZnNldCkge1xuICAgICAgICBvZmZzZXQgPSBNYXRoLm1heChNYXRoLm1pbihvZmZzZXQsIHRoaXMuX2NvbnRlbnQubGVuZ3RoKSwgMCk7XG4gICAgICAgIHZhciBsaW5lT2Zmc2V0cyA9IHRoaXMuZ2V0TGluZU9mZnNldHMoKTtcbiAgICAgICAgdmFyIGxvdyA9IDAsIGhpZ2ggPSBsaW5lT2Zmc2V0cy5sZW5ndGg7XG4gICAgICAgIGlmIChoaWdoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gUG9zaXRpb24uY3JlYXRlKDAsIG9mZnNldCk7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKGxvdyA8IGhpZ2gpIHtcbiAgICAgICAgICAgIHZhciBtaWQgPSBNYXRoLmZsb29yKChsb3cgKyBoaWdoKSAvIDIpO1xuICAgICAgICAgICAgaWYgKGxpbmVPZmZzZXRzW21pZF0gPiBvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICBoaWdoID0gbWlkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbG93ID0gbWlkICsgMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBsb3cgaXMgdGhlIGxlYXN0IHggZm9yIHdoaWNoIHRoZSBsaW5lIG9mZnNldCBpcyBsYXJnZXIgdGhhbiB0aGUgY3VycmVudCBvZmZzZXRcbiAgICAgICAgLy8gb3IgYXJyYXkubGVuZ3RoIGlmIG5vIGxpbmUgb2Zmc2V0IGlzIGxhcmdlciB0aGFuIHRoZSBjdXJyZW50IG9mZnNldFxuICAgICAgICB2YXIgbGluZSA9IGxvdyAtIDE7XG4gICAgICAgIHJldHVybiBQb3NpdGlvbi5jcmVhdGUobGluZSwgb2Zmc2V0IC0gbGluZU9mZnNldHNbbGluZV0pO1xuICAgIH07XG4gICAgRnVsbFRleHREb2N1bWVudC5wcm90b3R5cGUub2Zmc2V0QXQgPSBmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICAgICAgdmFyIGxpbmVPZmZzZXRzID0gdGhpcy5nZXRMaW5lT2Zmc2V0cygpO1xuICAgICAgICBpZiAocG9zaXRpb24ubGluZSA+PSBsaW5lT2Zmc2V0cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jb250ZW50Lmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwb3NpdGlvbi5saW5lIDwgMCkge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGxpbmVPZmZzZXQgPSBsaW5lT2Zmc2V0c1twb3NpdGlvbi5saW5lXTtcbiAgICAgICAgdmFyIG5leHRMaW5lT2Zmc2V0ID0gKHBvc2l0aW9uLmxpbmUgKyAxIDwgbGluZU9mZnNldHMubGVuZ3RoKSA/IGxpbmVPZmZzZXRzW3Bvc2l0aW9uLmxpbmUgKyAxXSA6IHRoaXMuX2NvbnRlbnQubGVuZ3RoO1xuICAgICAgICByZXR1cm4gTWF0aC5tYXgoTWF0aC5taW4obGluZU9mZnNldCArIHBvc2l0aW9uLmNoYXJhY3RlciwgbmV4dExpbmVPZmZzZXQpLCBsaW5lT2Zmc2V0KTtcbiAgICB9O1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGdWxsVGV4dERvY3VtZW50LnByb3RvdHlwZSwgXCJsaW5lQ291bnRcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmdldExpbmVPZmZzZXRzKCkubGVuZ3RoO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gRnVsbFRleHREb2N1bWVudDtcbn0oKSk7XG52YXIgSXM7XG4oZnVuY3Rpb24gKElzKSB7XG4gICAgdmFyIHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcbiAgICBmdW5jdGlvbiBkZWZpbmVkKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgIT09ICd1bmRlZmluZWQnO1xuICAgIH1cbiAgICBJcy5kZWZpbmVkID0gZGVmaW5lZDtcbiAgICBmdW5jdGlvbiB1bmRlZmluZWQodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCc7XG4gICAgfVxuICAgIElzLnVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgICBmdW5jdGlvbiBib29sZWFuKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZSA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gZmFsc2U7XG4gICAgfVxuICAgIElzLmJvb2xlYW4gPSBib29sZWFuO1xuICAgIGZ1bmN0aW9uIHN0cmluZyh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IFN0cmluZ10nO1xuICAgIH1cbiAgICBJcy5zdHJpbmcgPSBzdHJpbmc7XG4gICAgZnVuY3Rpb24gbnVtYmVyKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgTnVtYmVyXSc7XG4gICAgfVxuICAgIElzLm51bWJlciA9IG51bWJlcjtcbiAgICBmdW5jdGlvbiBmdW5jKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbiAgICB9XG4gICAgSXMuZnVuYyA9IGZ1bmM7XG4gICAgZnVuY3Rpb24gb2JqZWN0TGl0ZXJhbCh2YWx1ZSkge1xuICAgICAgICAvLyBTdHJpY3RseSBzcGVha2luZyBjbGFzcyBpbnN0YW5jZXMgcGFzcyB0aGlzIGNoZWNrIGFzIHdlbGwuIFNpbmNlIHRoZSBMU1BcbiAgICAgICAgLy8gZG9lc24ndCB1c2UgY2xhc3NlcyB3ZSBpZ25vcmUgdGhpcyBmb3Igbm93LiBJZiB3ZSBkbyB3ZSBuZWVkIHRvIGFkZCBzb21ldGhpbmdcbiAgICAgICAgLy8gbGlrZSB0aGlzOiBgT2JqZWN0LmdldFByb3RvdHlwZU9mKE9iamVjdC5nZXRQcm90b3R5cGVPZih4KSkgPT09IG51bGxgXG4gICAgICAgIHJldHVybiB2YWx1ZSAhPT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnO1xuICAgIH1cbiAgICBJcy5vYmplY3RMaXRlcmFsID0gb2JqZWN0TGl0ZXJhbDtcbiAgICBmdW5jdGlvbiB0eXBlZEFycmF5KHZhbHVlLCBjaGVjaykge1xuICAgICAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdmFsdWUuZXZlcnkoY2hlY2spO1xuICAgIH1cbiAgICBJcy50eXBlZEFycmF5ID0gdHlwZWRBcnJheTtcbn0pKElzIHx8IChJcyA9IHt9KSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/_deps/vscode-languageserver-types/main.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getDefaultCSSDataProvider\", function() { return getDefaultCSSDataProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"newCSSDataProvider\", function() { return newCSSDataProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCSSLanguageService\", function() { return getCSSLanguageService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSCSSLanguageService\", function() { return getSCSSLanguageService; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLESSLanguageService\", function() { return getLESSLanguageService; });\n/* harmony import */ var _parser_cssParser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\");\n/* harmony import */ var _services_cssCompletion_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\");\n/* harmony import */ var _services_cssHover_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js\");\n/* harmony import */ var _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js\");\n/* harmony import */ var _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js\");\n/* harmony import */ var _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js\");\n/* harmony import */ var _parser_scssParser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js\");\n/* harmony import */ var _services_scssCompletion_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js\");\n/* harmony import */ var _parser_lessParser_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js\");\n/* harmony import */ var _services_lessCompletion_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js\");\n/* harmony import */ var _services_cssFolding_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssFolding.js\");\n/* harmony import */ var _languageFacts_dataManager_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataManager.js\");\n/* harmony import */ var _languageFacts_dataProvider_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataProvider.js\");\n/* harmony import */ var _services_cssSelectionRange_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssSelectionRange.js\");\n/* harmony import */ var _services_scssNavigation_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssNavigation.js\");\n/* harmony import */ var _data_webCustomData_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/webCustomData.js\");\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocument\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"TextDocument\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"Position\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"Range\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Location\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"Location\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LocationLink\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"LocationLink\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"Color\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColorInformation\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"ColorInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColorPresentation\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"ColorPresentation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FoldingRangeKind\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"FoldingRangeKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FoldingRange\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"FoldingRange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticRelatedInformation\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"DiagnosticRelatedInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticSeverity\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"DiagnosticSeverity\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticTag\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"DiagnosticTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticCode\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"DiagnosticCode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Diagnostic\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"Diagnostic\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Command\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"Command\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"TextEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentEdit\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"TextDocumentEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CreateFile\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"CreateFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RenameFile\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"RenameFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DeleteFile\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"DeleteFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceEdit\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"WorkspaceEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceChange\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"WorkspaceChange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentIdentifier\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"TextDocumentIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"VersionedTextDocumentIdentifier\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"VersionedTextDocumentIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentItem\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"TextDocumentItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkupKind\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"MarkupKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkupContent\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"MarkupContent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemKind\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"CompletionItemKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"InsertTextFormat\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"InsertTextFormat\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemTag\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"CompletionItemTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"InsertReplaceEdit\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"InsertReplaceEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionItem\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"CompletionItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionList\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"CompletionList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkedString\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"MarkedString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Hover\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"Hover\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ParameterInformation\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"ParameterInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SignatureInformation\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"SignatureInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlightKind\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"DocumentHighlightKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlight\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"DocumentHighlight\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SymbolKind\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"SymbolKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SymbolTag\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"SymbolTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SymbolInformation\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"SymbolInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentSymbol\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"DocumentSymbol\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeActionKind\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"CodeActionKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeActionContext\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"CodeActionContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeAction\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"CodeAction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeLens\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"CodeLens\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FormattingOptions\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"FormattingOptions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentLink\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"DocumentLink\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SelectionRange\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"SelectionRange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EOL\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"EOL\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ClientCapabilities\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"ClientCapabilities\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FileType\", function() { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_16__[\"FileType\"]; });\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction getDefaultCSSDataProvider() {\n    return newCSSDataProvider(_data_webCustomData_js__WEBPACK_IMPORTED_MODULE_15__[\"cssData\"]);\n}\nfunction newCSSDataProvider(data) {\n    return new _languageFacts_dataProvider_js__WEBPACK_IMPORTED_MODULE_12__[\"CSSDataProvider\"](data);\n}\nfunction createFacade(parser, completion, hover, navigation, codeActions, validation, cssDataManager) {\n    return {\n        configure: function (settings) {\n            validation.configure(settings);\n            completion.configure(settings);\n        },\n        setDataProviders: cssDataManager.setDataProviders.bind(cssDataManager),\n        doValidation: validation.doValidation.bind(validation),\n        parseStylesheet: parser.parseStylesheet.bind(parser),\n        doComplete: completion.doComplete.bind(completion),\n        doComplete2: completion.doComplete2.bind(completion),\n        setCompletionParticipants: completion.setCompletionParticipants.bind(completion),\n        doHover: hover.doHover.bind(hover),\n        findDefinition: navigation.findDefinition.bind(navigation),\n        findReferences: navigation.findReferences.bind(navigation),\n        findDocumentHighlights: navigation.findDocumentHighlights.bind(navigation),\n        findDocumentLinks: navigation.findDocumentLinks.bind(navigation),\n        findDocumentLinks2: navigation.findDocumentLinks2.bind(navigation),\n        findDocumentSymbols: navigation.findDocumentSymbols.bind(navigation),\n        doCodeActions: codeActions.doCodeActions.bind(codeActions),\n        doCodeActions2: codeActions.doCodeActions2.bind(codeActions),\n        findColorSymbols: function (d, s) { return navigation.findDocumentColors(d, s).map(function (s) { return s.range; }); },\n        findDocumentColors: navigation.findDocumentColors.bind(navigation),\n        getColorPresentations: navigation.getColorPresentations.bind(navigation),\n        doRename: navigation.doRename.bind(navigation),\n        getFoldingRanges: _services_cssFolding_js__WEBPACK_IMPORTED_MODULE_10__[\"getFoldingRanges\"],\n        getSelectionRanges: _services_cssSelectionRange_js__WEBPACK_IMPORTED_MODULE_13__[\"getSelectionRanges\"]\n    };\n}\nvar defaultLanguageServiceOptions = {};\nfunction getCSSLanguageService(options) {\n    if (options === void 0) { options = defaultLanguageServiceOptions; }\n    var cssDataManager = new _languageFacts_dataManager_js__WEBPACK_IMPORTED_MODULE_11__[\"CSSDataManager\"](options);\n    return createFacade(new _parser_cssParser_js__WEBPACK_IMPORTED_MODULE_0__[\"Parser\"](), new _services_cssCompletion_js__WEBPACK_IMPORTED_MODULE_1__[\"CSSCompletion\"](null, options, cssDataManager), new _services_cssHover_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSHover\"](options && options.clientCapabilities, cssDataManager), new _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_3__[\"CSSNavigation\"](options && options.fileSystemProvider), new _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSCodeActions\"](cssDataManager), new _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_5__[\"CSSValidation\"](cssDataManager), cssDataManager);\n}\nfunction getSCSSLanguageService(options) {\n    if (options === void 0) { options = defaultLanguageServiceOptions; }\n    var cssDataManager = new _languageFacts_dataManager_js__WEBPACK_IMPORTED_MODULE_11__[\"CSSDataManager\"](options);\n    return createFacade(new _parser_scssParser_js__WEBPACK_IMPORTED_MODULE_6__[\"SCSSParser\"](), new _services_scssCompletion_js__WEBPACK_IMPORTED_MODULE_7__[\"SCSSCompletion\"](options, cssDataManager), new _services_cssHover_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSHover\"](options && options.clientCapabilities, cssDataManager), new _services_scssNavigation_js__WEBPACK_IMPORTED_MODULE_14__[\"SCSSNavigation\"](options && options.fileSystemProvider), new _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSCodeActions\"](cssDataManager), new _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_5__[\"CSSValidation\"](cssDataManager), cssDataManager);\n}\nfunction getLESSLanguageService(options) {\n    if (options === void 0) { options = defaultLanguageServiceOptions; }\n    var cssDataManager = new _languageFacts_dataManager_js__WEBPACK_IMPORTED_MODULE_11__[\"CSSDataManager\"](options);\n    return createFacade(new _parser_lessParser_js__WEBPACK_IMPORTED_MODULE_8__[\"LESSParser\"](), new _services_lessCompletion_js__WEBPACK_IMPORTED_MODULE_9__[\"LESSCompletion\"](options, cssDataManager), new _services_cssHover_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSHover\"](options && options.clientCapabilities, cssDataManager), new _services_cssNavigation_js__WEBPACK_IMPORTED_MODULE_3__[\"CSSNavigation\"](options && options.fileSystemProvider), new _services_cssCodeActions_js__WEBPACK_IMPORTED_MODULE_4__[\"CSSCodeActions\"](cssDataManager), new _services_cssValidation_js__WEBPACK_IMPORTED_MODULE_5__[\"CSSValidation\"](cssDataManager), cssDataManager);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ClientCapabilities\", function() { return ClientCapabilities; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FileType\", function() { return FileType; });\n/* harmony import */ var _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/_deps/vscode-languageserver-types/main.js\");\n/* harmony import */ var _vscode_languageserver_textdocument_lib_esm_main_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-textdocument/lib/esm/main.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocument\", function() { return _vscode_languageserver_textdocument_lib_esm_main_js__WEBPACK_IMPORTED_MODULE_1__[\"TextDocument\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Location\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Location\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LocationLink\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"LocationLink\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Color\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColorInformation\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"ColorInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColorPresentation\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"ColorPresentation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FoldingRangeKind\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"FoldingRangeKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FoldingRange\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"FoldingRange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticRelatedInformation\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DiagnosticRelatedInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticSeverity\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DiagnosticSeverity\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticTag\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DiagnosticTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticCode\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DiagnosticCode\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Diagnostic\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Diagnostic\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Command\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Command\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentEdit\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextDocumentEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CreateFile\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CreateFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RenameFile\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"RenameFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DeleteFile\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DeleteFile\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceEdit\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"WorkspaceEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceChange\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"WorkspaceChange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentIdentifier\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextDocumentIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"VersionedTextDocumentIdentifier\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"VersionedTextDocumentIdentifier\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentItem\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"TextDocumentItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkupKind\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"MarkupKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkupContent\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"MarkupContent\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemKind\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"InsertTextFormat\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertTextFormat\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemTag\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"InsertReplaceEdit\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertReplaceEdit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionItem\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItem\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CompletionList\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionList\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MarkedString\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"MarkedString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Hover\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"Hover\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ParameterInformation\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"ParameterInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SignatureInformation\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SignatureInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlightKind\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlight\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlight\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SymbolKind\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SymbolTag\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolTag\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SymbolInformation\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolInformation\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentSymbol\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentSymbol\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeActionKind\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CodeActionKind\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeActionContext\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CodeActionContext\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeAction\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CodeAction\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CodeLens\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"CodeLens\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"FormattingOptions\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"FormattingOptions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DocumentLink\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentLink\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SelectionRange\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"SelectionRange\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EOL\", function() { return _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"EOL\"]; });\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nvar ClientCapabilities;\n(function (ClientCapabilities) {\n    ClientCapabilities.LATEST = {\n        textDocument: {\n            completion: {\n                completionItem: {\n                    documentationFormat: [_deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"MarkupKind\"].Markdown, _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"MarkupKind\"].PlainText]\n                }\n            },\n            hover: {\n                contentFormat: [_deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"MarkupKind\"].Markdown, _deps_vscode_languageserver_types_main_js__WEBPACK_IMPORTED_MODULE_0__[\"MarkupKind\"].PlainText]\n            }\n        }\n    };\n})(ClientCapabilities || (ClientCapabilities = {}));\nvar FileType;\n(function (FileType) {\n    /**\n     * The file type is unknown.\n     */\n    FileType[FileType[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * A regular file.\n     */\n    FileType[FileType[\"File\"] = 1] = \"File\";\n    /**\n     * A directory.\n     */\n    FileType[FileType[\"Directory\"] = 2] = \"Directory\";\n    /**\n     * A symbolic link to a file.\n     */\n    FileType[FileType[\"SymbolicLink\"] = 64] = \"SymbolicLink\";\n})(FileType || (FileType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2Nzc0xhbmd1YWdlVHlwZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2Nzc0xhbmd1YWdlVHlwZXMuanM/Y2M1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IE1hcmt1cEtpbmQgfSBmcm9tICcuL19kZXBzL3ZzY29kZS1sYW5ndWFnZXNlcnZlci10eXBlcy9tYWluLmpzJztcbmV4cG9ydCB7IFRleHREb2N1bWVudCB9IGZyb20gJy4uL3ZzY29kZS1sYW5ndWFnZXNlcnZlci10ZXh0ZG9jdW1lbnQvbGliL2VzbS9tYWluLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vX2RlcHMvdnNjb2RlLWxhbmd1YWdlc2VydmVyLXR5cGVzL21haW4uanMnO1xuZXhwb3J0IHZhciBDbGllbnRDYXBhYmlsaXRpZXM7XG4oZnVuY3Rpb24gKENsaWVudENhcGFiaWxpdGllcykge1xuICAgIENsaWVudENhcGFiaWxpdGllcy5MQVRFU1QgPSB7XG4gICAgICAgIHRleHREb2N1bWVudDoge1xuICAgICAgICAgICAgY29tcGxldGlvbjoge1xuICAgICAgICAgICAgICAgIGNvbXBsZXRpb25JdGVtOiB7XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50YXRpb25Gb3JtYXQ6IFtNYXJrdXBLaW5kLk1hcmtkb3duLCBNYXJrdXBLaW5kLlBsYWluVGV4dF1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaG92ZXI6IHtcbiAgICAgICAgICAgICAgICBjb250ZW50Rm9ybWF0OiBbTWFya3VwS2luZC5NYXJrZG93biwgTWFya3VwS2luZC5QbGFpblRleHRdXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xufSkoQ2xpZW50Q2FwYWJpbGl0aWVzIHx8IChDbGllbnRDYXBhYmlsaXRpZXMgPSB7fSkpO1xuZXhwb3J0IHZhciBGaWxlVHlwZTtcbihmdW5jdGlvbiAoRmlsZVR5cGUpIHtcbiAgICAvKipcbiAgICAgKiBUaGUgZmlsZSB0eXBlIGlzIHVua25vd24uXG4gICAgICovXG4gICAgRmlsZVR5cGVbRmlsZVR5cGVbXCJVbmtub3duXCJdID0gMF0gPSBcIlVua25vd25cIjtcbiAgICAvKipcbiAgICAgKiBBIHJlZ3VsYXIgZmlsZS5cbiAgICAgKi9cbiAgICBGaWxlVHlwZVtGaWxlVHlwZVtcIkZpbGVcIl0gPSAxXSA9IFwiRmlsZVwiO1xuICAgIC8qKlxuICAgICAqIEEgZGlyZWN0b3J5LlxuICAgICAqL1xuICAgIEZpbGVUeXBlW0ZpbGVUeXBlW1wiRGlyZWN0b3J5XCJdID0gMl0gPSBcIkRpcmVjdG9yeVwiO1xuICAgIC8qKlxuICAgICAqIEEgc3ltYm9saWMgbGluayB0byBhIGZpbGUuXG4gICAgICovXG4gICAgRmlsZVR5cGVbRmlsZVR5cGVbXCJTeW1ib2xpY0xpbmtcIl0gPSA2NF0gPSBcIlN5bWJvbGljTGlua1wiO1xufSkoRmlsZVR5cGUgfHwgKEZpbGVUeXBlID0ge30pKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/webCustomData.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssData\", function() { return cssData; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// file generated from vscode-web-custom-data NPM package\nvar cssData = {\n    \"version\": 1.1,\n    \"properties\": [\n        {\n            \"name\": \"additive-symbols\",\n            \"browsers\": [\n                \"FF33\"\n            ],\n            \"syntax\": \"[ <integer> && <symbol> ]#\",\n            \"relevance\": 50,\n            \"description\": \"@counter-style descriptor. Specifies the symbols used by the marker-construction algorithm specified by the system descriptor. Needs to be specified if the counter system is 'additive'.\",\n            \"restrictions\": [\n                \"integer\",\n                \"string\",\n                \"image\",\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"align-content\",\n            \"values\": [\n                {\n                    \"name\": \"center\",\n                    \"description\": \"Lines are packed toward the center of the flex container.\"\n                },\n                {\n                    \"name\": \"flex-end\",\n                    \"description\": \"Lines are packed toward the end of the flex container.\"\n                },\n                {\n                    \"name\": \"flex-start\",\n                    \"description\": \"Lines are packed toward the start of the flex container.\"\n                },\n                {\n                    \"name\": \"space-around\",\n                    \"description\": \"Lines are evenly distributed in the flex container, with half-size spaces on either end.\"\n                },\n                {\n                    \"name\": \"space-between\",\n                    \"description\": \"Lines are evenly distributed in the flex container.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"Lines stretch to take up the remaining space.\"\n                }\n            ],\n            \"syntax\": \"normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>\",\n            \"relevance\": 59,\n            \"description\": \"Aligns a flex container’s lines within the flex container when there is extra space in the cross-axis, similar to how 'justify-content' aligns individual items within the main-axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"align-items\",\n            \"values\": [\n                {\n                    \"name\": \"baseline\",\n                    \"description\": \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The flex item’s margin box is centered in the cross axis within the line.\"\n                },\n                {\n                    \"name\": \"flex-end\",\n                    \"description\": \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                },\n                {\n                    \"name\": \"flex-start\",\n                    \"description\": \"The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                }\n            ],\n            \"syntax\": \"normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]\",\n            \"relevance\": 81,\n            \"description\": \"Aligns flex items along the cross axis of the current line of the flex container.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"justify-items\",\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"normal\"\n                },\n                {\n                    \"name\": \"end\"\n                },\n                {\n                    \"name\": \"start\"\n                },\n                {\n                    \"name\": \"flex-end\",\n                    \"description\": \"\\\"Flex items are packed toward the end of the line.\\\"\"\n                },\n                {\n                    \"name\": \"flex-start\",\n                    \"description\": \"\\\"Flex items are packed toward the start of the line.\\\"\"\n                },\n                {\n                    \"name\": \"self-end\",\n                    \"description\": \"The item is packed flush to the edge of the alignment container of the end side of the item, in the appropriate axis.\"\n                },\n                {\n                    \"name\": \"self-start\",\n                    \"description\": \"The item is packed flush to the edge of the alignment container of the start side of the item, in the appropriate axis..\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The items are packed flush to each other toward the center of the of the alignment container.\"\n                },\n                {\n                    \"name\": \"left\"\n                },\n                {\n                    \"name\": \"right\"\n                },\n                {\n                    \"name\": \"baseline\"\n                },\n                {\n                    \"name\": \"first baseline\"\n                },\n                {\n                    \"name\": \"last baseline\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                },\n                {\n                    \"name\": \"save\"\n                },\n                {\n                    \"name\": \"unsave\"\n                },\n                {\n                    \"name\": \"legacy\"\n                }\n            ],\n            \"syntax\": \"normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]\",\n            \"relevance\": 50,\n            \"description\": \"Defines the default justify-self for all items of the box, giving them the default way of justifying each box along the appropriate axis\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"justify-self\",\n            \"browsers\": [\n                \"E16\",\n                \"FF45\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"normal\"\n                },\n                {\n                    \"name\": \"end\"\n                },\n                {\n                    \"name\": \"start\"\n                },\n                {\n                    \"name\": \"flex-end\",\n                    \"description\": \"\\\"Flex items are packed toward the end of the line.\\\"\"\n                },\n                {\n                    \"name\": \"flex-start\",\n                    \"description\": \"\\\"Flex items are packed toward the start of the line.\\\"\"\n                },\n                {\n                    \"name\": \"self-end\",\n                    \"description\": \"The item is packed flush to the edge of the alignment container of the end side of the item, in the appropriate axis.\"\n                },\n                {\n                    \"name\": \"self-start\",\n                    \"description\": \"The item is packed flush to the edge of the alignment container of the start side of the item, in the appropriate axis..\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The items are packed flush to each other toward the center of the of the alignment container.\"\n                },\n                {\n                    \"name\": \"left\"\n                },\n                {\n                    \"name\": \"right\"\n                },\n                {\n                    \"name\": \"baseline\"\n                },\n                {\n                    \"name\": \"first baseline\"\n                },\n                {\n                    \"name\": \"last baseline\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                },\n                {\n                    \"name\": \"save\"\n                },\n                {\n                    \"name\": \"unsave\"\n                }\n            ],\n            \"syntax\": \"auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]\",\n            \"relevance\": 52,\n            \"description\": \"Defines the way of justifying a box inside its container along the appropriate axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"align-self\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Computes to the value of 'align-items' on the element’s parent, or 'stretch' if the element has no parent. On absolutely positioned elements, it computes to itself.\"\n                },\n                {\n                    \"name\": \"baseline\",\n                    \"description\": \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The flex item’s margin box is centered in the cross axis within the line.\"\n                },\n                {\n                    \"name\": \"flex-end\",\n                    \"description\": \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                },\n                {\n                    \"name\": \"flex-start\",\n                    \"description\": \"The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                }\n            ],\n            \"syntax\": \"auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>\",\n            \"relevance\": 69,\n            \"description\": \"Allows the default alignment along the cross axis to be overridden for individual flex items.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"all\",\n            \"browsers\": [\n                \"E79\",\n                \"FF27\",\n                \"S9.1\",\n                \"C37\",\n                \"O24\"\n            ],\n            \"values\": [],\n            \"syntax\": \"initial | inherit | unset | revert\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/all\"\n                }\n            ],\n            \"description\": \"Shorthand that resets all properties except 'direction' and 'unicode-bidi'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"alt\",\n            \"browsers\": [\n                \"S9\"\n            ],\n            \"values\": [],\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/alt\"\n                }\n            ],\n            \"description\": \"Provides alternative text for assistive technology to replace the generated content of a ::before or ::after element.\",\n            \"restrictions\": [\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"animation\",\n            \"values\": [\n                {\n                    \"name\": \"alternate\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\"\n                },\n                {\n                    \"name\": \"alternate-reverse\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\"\n                },\n                {\n                    \"name\": \"backwards\",\n                    \"description\": \"The beginning property value (as defined in the first @keyframes at-rule) is applied before the animation is displayed, during the period defined by 'animation-delay'.\"\n                },\n                {\n                    \"name\": \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    \"name\": \"forwards\",\n                    \"description\": \"The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes.\"\n                },\n                {\n                    \"name\": \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No animation is performed\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"syntax\": \"<single-animation>#\",\n            \"relevance\": 79,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/animation\"\n                }\n            ],\n            \"description\": \"Shorthand property combines six of the animation properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"timing-function\",\n                \"enum\",\n                \"identifier\",\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"animation-delay\",\n            \"syntax\": \"<time>#\",\n            \"relevance\": 62,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/animation-delay\"\n                }\n            ],\n            \"description\": \"Defines when the animation will start.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"animation-direction\",\n            \"values\": [\n                {\n                    \"name\": \"alternate\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\"\n                },\n                {\n                    \"name\": \"alternate-reverse\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"syntax\": \"<single-animation-direction>#\",\n            \"relevance\": 55,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/animation-direction\"\n                }\n            ],\n            \"description\": \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"animation-duration\",\n            \"syntax\": \"<time>#\",\n            \"relevance\": 64,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/animation-duration\"\n                }\n            ],\n            \"description\": \"Defines the length of time that an animation takes to complete one cycle.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"animation-fill-mode\",\n            \"values\": [\n                {\n                    \"name\": \"backwards\",\n                    \"description\": \"The beginning property value (as defined in the first @keyframes at-rule) is applied before the animation is displayed, during the period defined by 'animation-delay'.\"\n                },\n                {\n                    \"name\": \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    \"name\": \"forwards\",\n                    \"description\": \"The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes.\"\n                }\n            ],\n            \"syntax\": \"<single-animation-fill-mode>#\",\n            \"relevance\": 61,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode\"\n                }\n            ],\n            \"description\": \"Defines what values are applied by the animation outside the time it is executing.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"animation-iteration-count\",\n            \"values\": [\n                {\n                    \"name\": \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                }\n            ],\n            \"syntax\": \"<single-animation-iteration-count>#\",\n            \"relevance\": 59,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count\"\n                }\n            ],\n            \"description\": \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n            \"restrictions\": [\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"animation-name\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No animation is performed\"\n                }\n            ],\n            \"syntax\": \"[ none | <keyframes-name> ]#\",\n            \"relevance\": 64,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/animation-name\"\n                }\n            ],\n            \"description\": \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"animation-play-state\",\n            \"values\": [\n                {\n                    \"name\": \"paused\",\n                    \"description\": \"A running animation will be paused.\"\n                },\n                {\n                    \"name\": \"running\",\n                    \"description\": \"Resume playback of a paused animation.\"\n                }\n            ],\n            \"syntax\": \"<single-animation-play-state>#\",\n            \"relevance\": 53,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/animation-play-state\"\n                }\n            ],\n            \"description\": \"Defines whether the animation is running or paused.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"animation-timing-function\",\n            \"syntax\": \"<timing-function>#\",\n            \"relevance\": 68,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/animation-timing-function\"\n                }\n            ],\n            \"description\": \"Describes how the animation will progress over one cycle of its duration.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            \"name\": \"backface-visibility\",\n            \"values\": [\n                {\n                    \"name\": \"hidden\",\n                    \"description\": \"Back side is hidden.\"\n                },\n                {\n                    \"name\": \"visible\",\n                    \"description\": \"Back side is visible.\"\n                }\n            ],\n            \"syntax\": \"visible | hidden\",\n            \"relevance\": 59,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/backface-visibility\"\n                }\n            ],\n            \"description\": \"Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"background\",\n            \"values\": [\n                {\n                    \"name\": \"fixed\",\n                    \"description\": \"The background is fixed with regard to the viewport. In paged media where there is no viewport, a 'fixed' background is fixed with respect to the page box and therefore replicated on every page.\"\n                },\n                {\n                    \"name\": \"local\",\n                    \"description\": \"The background is fixed with regard to the element's contents: if the element has a scrolling mechanism, the background scrolls with the element's contents.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"A value of 'none' counts as an image layer but draws nothing.\"\n                },\n                {\n                    \"name\": \"scroll\",\n                    \"description\": \"The background is fixed with regard to the element itself and does not scroll with its contents. (It is effectively attached to the element's border.)\"\n                }\n            ],\n            \"syntax\": \"[ <bg-layer> , ]* <final-bg-layer>\",\n            \"relevance\": 93,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting most background properties at the same place in the style sheet.\",\n            \"restrictions\": [\n                \"enum\",\n                \"image\",\n                \"color\",\n                \"position\",\n                \"length\",\n                \"repeat\",\n                \"percentage\",\n                \"box\"\n            ]\n        },\n        {\n            \"name\": \"background-attachment\",\n            \"values\": [\n                {\n                    \"name\": \"fixed\",\n                    \"description\": \"The background is fixed with regard to the viewport. In paged media where there is no viewport, a 'fixed' background is fixed with respect to the page box and therefore replicated on every page.\"\n                },\n                {\n                    \"name\": \"local\",\n                    \"description\": \"The background is fixed with regard to the element’s contents: if the element has a scrolling mechanism, the background scrolls with the element’s contents.\"\n                },\n                {\n                    \"name\": \"scroll\",\n                    \"description\": \"The background is fixed with regard to the element itself and does not scroll with its contents. (It is effectively attached to the element’s border.)\"\n                }\n            ],\n            \"syntax\": \"<attachment>#\",\n            \"relevance\": 53,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-attachment\"\n                }\n            ],\n            \"description\": \"Specifies whether the background images are fixed with regard to the viewport ('fixed') or scroll along with the element ('scroll') or its contents ('local').\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"background-blend-mode\",\n            \"browsers\": [\n                \"E79\",\n                \"FF30\",\n                \"S8\",\n                \"C35\",\n                \"O22\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Default attribute which specifies no blending\"\n                },\n                {\n                    \"name\": \"multiply\",\n                    \"description\": \"The source color is multiplied by the destination color and replaces the destination.\"\n                },\n                {\n                    \"name\": \"screen\",\n                    \"description\": \"Multiplies the complements of the backdrop and source color values, then complements the result.\"\n                },\n                {\n                    \"name\": \"overlay\",\n                    \"description\": \"Multiplies or screens the colors, depending on the backdrop color value.\"\n                },\n                {\n                    \"name\": \"darken\",\n                    \"description\": \"Selects the darker of the backdrop and source colors.\"\n                },\n                {\n                    \"name\": \"lighten\",\n                    \"description\": \"Selects the lighter of the backdrop and source colors.\"\n                },\n                {\n                    \"name\": \"color-dodge\",\n                    \"description\": \"Brightens the backdrop color to reflect the source color.\"\n                },\n                {\n                    \"name\": \"color-burn\",\n                    \"description\": \"Darkens the backdrop color to reflect the source color.\"\n                },\n                {\n                    \"name\": \"hard-light\",\n                    \"description\": \"Multiplies or screens the colors, depending on the source color value.\"\n                },\n                {\n                    \"name\": \"soft-light\",\n                    \"description\": \"Darkens or lightens the colors, depending on the source color value.\"\n                },\n                {\n                    \"name\": \"difference\",\n                    \"description\": \"Subtracts the darker of the two constituent colors from the lighter color..\"\n                },\n                {\n                    \"name\": \"exclusion\",\n                    \"description\": \"Produces an effect similar to that of the Difference mode but lower in contrast.\"\n                },\n                {\n                    \"name\": \"hue\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF30\",\n                        \"S8\",\n                        \"C35\",\n                        \"O22\"\n                    ],\n                    \"description\": \"Creates a color with the hue of the source color and the saturation and luminosity of the backdrop color.\"\n                },\n                {\n                    \"name\": \"saturation\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF30\",\n                        \"S8\",\n                        \"C35\",\n                        \"O22\"\n                    ],\n                    \"description\": \"Creates a color with the saturation of the source color and the hue and luminosity of the backdrop color.\"\n                },\n                {\n                    \"name\": \"color\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF30\",\n                        \"S8\",\n                        \"C35\",\n                        \"O22\"\n                    ],\n                    \"description\": \"Creates a color with the hue and saturation of the source color and the luminosity of the backdrop color.\"\n                },\n                {\n                    \"name\": \"luminosity\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF30\",\n                        \"S8\",\n                        \"C35\",\n                        \"O22\"\n                    ],\n                    \"description\": \"Creates a color with the luminosity of the source color and the hue and saturation of the backdrop color.\"\n                }\n            ],\n            \"syntax\": \"<blend-mode>#\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-blend-mode\"\n                }\n            ],\n            \"description\": \"Defines the blending mode of each background layer.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"background-clip\",\n            \"syntax\": \"<box>#\",\n            \"relevance\": 67,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-clip\"\n                }\n            ],\n            \"description\": \"Determines the background painting area.\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            \"name\": \"background-color\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 94,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-color\"\n                }\n            ],\n            \"description\": \"Sets the background color of an element.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"background-image\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Counts as an image layer but draws nothing.\"\n                }\n            ],\n            \"syntax\": \"<bg-image>#\",\n            \"relevance\": 88,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-image\"\n                }\n            ],\n            \"description\": \"Sets the background image(s) of an element.\",\n            \"restrictions\": [\n                \"image\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"background-origin\",\n            \"syntax\": \"<box>#\",\n            \"relevance\": 53,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-origin\"\n                }\n            ],\n            \"description\": \"For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            \"name\": \"background-position\",\n            \"syntax\": \"<bg-position>#\",\n            \"relevance\": 87,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-position\"\n                }\n            ],\n            \"description\": \"Specifies the initial position of the background image(s) (after any resizing) within their corresponding background positioning area.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"background-position-x\",\n            \"values\": [\n                {\n                    \"name\": \"center\",\n                    \"description\": \"Equivalent to '50%' ('left 50%') for the horizontal position if the horizontal position is not otherwise specified, or '50%' ('top 50%') for the vertical position if it is.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"Equivalent to '0%' for the horizontal position if one or two values are given, otherwise specifies the left edge as the origin for the next offset.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"Equivalent to '100%' for the horizontal position if one or two values are given, otherwise specifies the right edge as the origin for the next offset.\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#\",\n            \"relevance\": 54,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-position-x\"\n                }\n            ],\n            \"description\": \"If background images have been specified, this property specifies their initial position (after any resizing) within their corresponding background positioning area.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"background-position-y\",\n            \"values\": [\n                {\n                    \"name\": \"bottom\",\n                    \"description\": \"Equivalent to '100%' for the vertical position if one or two values are given, otherwise specifies the bottom edge as the origin for the next offset.\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"Equivalent to '50%' ('left 50%') for the horizontal position if the horizontal position is not otherwise specified, or '50%' ('top 50%') for the vertical position if it is.\"\n                },\n                {\n                    \"name\": \"top\",\n                    \"description\": \"Equivalent to '0%' for the vertical position if one or two values are given, otherwise specifies the top edge as the origin for the next offset.\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#\",\n            \"relevance\": 53,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-position-y\"\n                }\n            ],\n            \"description\": \"If background images have been specified, this property specifies their initial position (after any resizing) within their corresponding background positioning area.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"background-repeat\",\n            \"values\": [],\n            \"syntax\": \"<repeat-style>#\",\n            \"relevance\": 85,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-repeat\"\n                }\n            ],\n            \"description\": \"Specifies how background images are tiled after they have been sized and positioned.\",\n            \"restrictions\": [\n                \"repeat\"\n            ]\n        },\n        {\n            \"name\": \"background-size\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%.\"\n                },\n                {\n                    \"name\": \"contain\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area.\"\n                },\n                {\n                    \"name\": \"cover\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area.\"\n                }\n            ],\n            \"syntax\": \"<bg-size>#\",\n            \"relevance\": 85,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/background-size\"\n                }\n            ],\n            \"description\": \"Specifies the size of the background images.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"behavior\",\n            \"browsers\": [\n                \"IE6\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"IE only. Used to extend behaviors of the browser.\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"block-size\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Depends on the values of other properties.\"\n                }\n            ],\n            \"syntax\": \"<'width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/block-size\"\n                }\n            ],\n            \"description\": \"Logical 'width'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"border\",\n            \"syntax\": \"<line-width> || <line-style> || <color>\",\n            \"relevance\": 95,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting border width, style, and color.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-block-end\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-width'> || <'border-top-style'> || <'color'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-end\"\n                }\n            ],\n            \"description\": \"Logical 'border-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-block-start\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-width'> || <'border-top-style'> || <'color'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-start\"\n                }\n            ],\n            \"description\": \"Logical 'border-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-block-end-color\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-color'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-end-color\"\n                }\n            ],\n            \"description\": \"Logical 'border-bottom-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-block-start-color\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-color'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-start-color\"\n                }\n            ],\n            \"description\": \"Logical 'border-top-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-block-end-style\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-style'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-end-style\"\n                }\n            ],\n            \"description\": \"Logical 'border-bottom-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"border-block-start-style\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-style'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-start-style\"\n                }\n            ],\n            \"description\": \"Logical 'border-top-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"border-block-end-width\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-end-width\"\n                }\n            ],\n            \"description\": \"Logical 'border-bottom-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"border-block-start-width\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-start-width\"\n                }\n            ],\n            \"description\": \"Logical 'border-top-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"border-bottom\",\n            \"syntax\": \"<line-width> || <line-style> || <color>\",\n            \"relevance\": 88,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-bottom\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting border width, style and color.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-bottom-color\",\n            \"syntax\": \"<'border-top-color'>\",\n            \"relevance\": 71,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-bottom-color\"\n                }\n            ],\n            \"description\": \"Sets the color of the bottom border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-bottom-left-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"relevance\": 74,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius\"\n                }\n            ],\n            \"description\": \"Defines the radii of the bottom left outer border edge.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"border-bottom-right-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"relevance\": 73,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius\"\n                }\n            ],\n            \"description\": \"Defines the radii of the bottom right outer border edge.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"border-bottom-style\",\n            \"syntax\": \"<line-style>\",\n            \"relevance\": 57,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-bottom-style\"\n                }\n            ],\n            \"description\": \"Sets the style of the bottom border.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"border-bottom-width\",\n            \"syntax\": \"<line-width>\",\n            \"relevance\": 62,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-bottom-width\"\n                }\n            ],\n            \"description\": \"Sets the thickness of the bottom border.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"border-collapse\",\n            \"values\": [\n                {\n                    \"name\": \"collapse\",\n                    \"description\": \"Selects the collapsing borders model.\"\n                },\n                {\n                    \"name\": \"separate\",\n                    \"description\": \"Selects the separated borders border model.\"\n                }\n            ],\n            \"syntax\": \"collapse | separate\",\n            \"relevance\": 75,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-collapse\"\n                }\n            ],\n            \"description\": \"Selects a table's border model.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"border-color\",\n            \"values\": [],\n            \"syntax\": \"<color>{1,4}\",\n            \"relevance\": 86,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-color\"\n                }\n            ],\n            \"description\": \"The color of the border around all four edges of an element.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-image\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                },\n                {\n                    \"name\": \"fill\",\n                    \"description\": \"Causes the middle part of the border-image to be preserved.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Use the border styles.\"\n                },\n                {\n                    \"name\": \"repeat\",\n                    \"description\": \"The image is tiled (repeated) to fill the area.\"\n                },\n                {\n                    \"name\": \"round\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                },\n                {\n                    \"name\": \"space\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"The image is stretched to fill the area.\"\n                },\n                {\n                    \"name\": \"url()\"\n                }\n            ],\n            \"syntax\": \"<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-image\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\",\n                \"url\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"border-image-outset\",\n            \"syntax\": \"[ <length> | <number> ]{1,4}\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-image-outset\"\n                }\n            ],\n            \"description\": \"The values specify the amount by which the border image area extends beyond the border box on the top, right, bottom, and left sides respectively. If the fourth value is absent, it is the same as the second. If the third one is also absent, it is the same as the first. If the second one is also absent, it is the same as the first. Numbers represent multiples of the corresponding border-width.\",\n            \"restrictions\": [\n                \"length\",\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"border-image-repeat\",\n            \"values\": [\n                {\n                    \"name\": \"repeat\",\n                    \"description\": \"The image is tiled (repeated) to fill the area.\"\n                },\n                {\n                    \"name\": \"round\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                },\n                {\n                    \"name\": \"space\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"The image is stretched to fill the area.\"\n                }\n            ],\n            \"syntax\": \"[ stretch | repeat | round | space ]{1,2}\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-image-repeat\"\n                }\n            ],\n            \"description\": \"Specifies how the images for the sides and the middle part of the border image are scaled and tiled. If the second keyword is absent, it is assumed to be the same as the first.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"border-image-slice\",\n            \"values\": [\n                {\n                    \"name\": \"fill\",\n                    \"description\": \"Causes the middle part of the border-image to be preserved.\"\n                }\n            ],\n            \"syntax\": \"<number-percentage>{1,4} && fill?\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-image-slice\"\n                }\n            ],\n            \"description\": \"Specifies inward offsets from the top, right, bottom, and left edges of the image, dividing it into nine regions: four corners, four edges and a middle.\",\n            \"restrictions\": [\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"border-image-source\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Use the border styles.\"\n                }\n            ],\n            \"syntax\": \"none | <image>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-image-source\"\n                }\n            ],\n            \"description\": \"Specifies an image to use instead of the border styles given by the 'border-style' properties and as an additional background layer for the element. If the value is 'none' or if the image cannot be displayed, the border styles will be used.\",\n            \"restrictions\": [\n                \"image\"\n            ]\n        },\n        {\n            \"name\": \"border-image-width\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                }\n            ],\n            \"syntax\": \"[ <length-percentage> | <number> | auto ]{1,4}\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-image-width\"\n                }\n            ],\n            \"description\": \"The four values of 'border-image-width' specify offsets that are used to divide the border image area into nine parts. They represent inward distances from the top, right, bottom, and left sides of the area, respectively.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"border-inline-end\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-width'> || <'border-top-style'> || <'color'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-end\"\n                }\n            ],\n            \"description\": \"Logical 'border-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-inline-start\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-width'> || <'border-top-style'> || <'color'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-start\"\n                }\n            ],\n            \"description\": \"Logical 'border-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-inline-end-color\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-color'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-end-color\"\n                }\n            ],\n            \"description\": \"Logical 'border-right-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-inline-start-color\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-color'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-start-color\"\n                }\n            ],\n            \"description\": \"Logical 'border-left-color'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-inline-end-style\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-style'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-end-style\"\n                }\n            ],\n            \"description\": \"Logical 'border-right-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"border-inline-start-style\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-style'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-start-style\"\n                }\n            ],\n            \"description\": \"Logical 'border-left-style'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"border-inline-end-width\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-end-width\"\n                }\n            ],\n            \"description\": \"Logical 'border-right-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"border-inline-start-width\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'border-top-width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-start-width\"\n                }\n            ],\n            \"description\": \"Logical 'border-left-width'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"border-left\",\n            \"syntax\": \"<line-width> || <line-style> || <color>\",\n            \"relevance\": 82,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-left\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting border width, style and color\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-left-color\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 65,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-left-color\"\n                }\n            ],\n            \"description\": \"Sets the color of the left border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-left-style\",\n            \"syntax\": \"<line-style>\",\n            \"relevance\": 54,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-left-style\"\n                }\n            ],\n            \"description\": \"Sets the style of the left border.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"border-left-width\",\n            \"syntax\": \"<line-width>\",\n            \"relevance\": 58,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-left-width\"\n                }\n            ],\n            \"description\": \"Sets the thickness of the left border.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"border-radius\",\n            \"syntax\": \"<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?\",\n            \"relevance\": 91,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-radius\"\n                }\n            ],\n            \"description\": \"Defines the radii of the outer border edge.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"border-right\",\n            \"syntax\": \"<line-width> || <line-style> || <color>\",\n            \"relevance\": 81,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-right\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting border width, style and color\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-right-color\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 64,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-right-color\"\n                }\n            ],\n            \"description\": \"Sets the color of the right border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-right-style\",\n            \"syntax\": \"<line-style>\",\n            \"relevance\": 54,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-right-style\"\n                }\n            ],\n            \"description\": \"Sets the style of the right border.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"border-right-width\",\n            \"syntax\": \"<line-width>\",\n            \"relevance\": 60,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-right-width\"\n                }\n            ],\n            \"description\": \"Sets the thickness of the right border.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"border-spacing\",\n            \"syntax\": \"<length> <length>?\",\n            \"relevance\": 68,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-spacing\"\n                }\n            ],\n            \"description\": \"The lengths specify the distance that separates adjoining cell borders. If one length is specified, it gives both the horizontal and vertical spacing. If two are specified, the first gives the horizontal spacing and the second the vertical spacing. Lengths may not be negative.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"border-style\",\n            \"values\": [],\n            \"syntax\": \"<line-style>{1,4}\",\n            \"relevance\": 79,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-style\"\n                }\n            ],\n            \"description\": \"The style of the border around edges of an element.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"border-top\",\n            \"syntax\": \"<line-width> || <line-style> || <color>\",\n            \"relevance\": 87,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-top\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting border width, style and color\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-top-color\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 71,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-top-color\"\n                }\n            ],\n            \"description\": \"Sets the color of the top border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"border-top-left-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"relevance\": 74,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius\"\n                }\n            ],\n            \"description\": \"Defines the radii of the top left outer border edge.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"border-top-right-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"relevance\": 72,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius\"\n                }\n            ],\n            \"description\": \"Defines the radii of the top right outer border edge.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"border-top-style\",\n            \"syntax\": \"<line-style>\",\n            \"relevance\": 57,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-top-style\"\n                }\n            ],\n            \"description\": \"Sets the style of the top border.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"border-top-width\",\n            \"syntax\": \"<line-width>\",\n            \"relevance\": 61,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-top-width\"\n                }\n            ],\n            \"description\": \"Sets the thickness of the top border.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"border-width\",\n            \"values\": [],\n            \"syntax\": \"<line-width>{1,4}\",\n            \"relevance\": 81,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-width\"\n                }\n            ],\n            \"description\": \"Shorthand that sets the four 'border-*-width' properties. If it has four values, they set top, right, bottom and left in that order. If left is missing, it is the same as right; if bottom is missing, it is the same as top; if right is missing, it is the same as top.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"bottom\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"relevance\": 89,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/bottom\"\n                }\n            ],\n            \"description\": \"Specifies how far an absolutely positioned box's bottom margin edge is offset above the bottom edge of the box's 'containing block'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"box-decoration-break\",\n            \"browsers\": [\n                \"E79\",\n                \"FF32\",\n                \"S6.1\",\n                \"C22\",\n                \"O15\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"clone\",\n                    \"description\": \"Each box is independently wrapped with the border and padding.\"\n                },\n                {\n                    \"name\": \"slice\",\n                    \"description\": \"The effect is as though the element were rendered with no breaks present, and then sliced by the breaks afterward.\"\n                }\n            ],\n            \"syntax\": \"slice | clone\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-decoration-break\"\n                }\n            ],\n            \"description\": \"Specifies whether individual boxes are treated as broken pieces of one continuous box, or whether each box is individually wrapped with the border and padding.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"box-shadow\",\n            \"values\": [\n                {\n                    \"name\": \"inset\",\n                    \"description\": \"Changes the drop shadow from an outer shadow (one that shadows the box onto the canvas, as if it were lifted above the canvas) to an inner shadow (one that shadows the canvas onto the box, as if the box were cut out of the canvas and shifted behind it).\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No shadow.\"\n                }\n            ],\n            \"syntax\": \"none | <shadow>#\",\n            \"relevance\": 89,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-shadow\"\n                }\n            ],\n            \"description\": \"Attaches one or more drop-shadows to the box. The property is a comma-separated list of shadows, each specified by 2-4 length values, an optional color, and an optional 'inset' keyword. Omitted lengths are 0; omitted colors are a user agent chosen color.\",\n            \"restrictions\": [\n                \"length\",\n                \"color\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"box-sizing\",\n            \"values\": [\n                {\n                    \"name\": \"border-box\",\n                    \"description\": \"The specified width and height (and respective min/max properties) on this element determine the border box of the element.\"\n                },\n                {\n                    \"name\": \"content-box\",\n                    \"description\": \"Behavior of width and height as specified by CSS2.1. The specified width and height (and respective min/max properties) apply to the width and height respectively of the content box of the element.\"\n                }\n            ],\n            \"syntax\": \"content-box | border-box\",\n            \"relevance\": 92,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-sizing\"\n                }\n            ],\n            \"description\": \"Specifies the behavior of the 'width' and 'height' properties.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"break-after\",\n            \"values\": [\n                {\n                    \"name\": \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"column\",\n                    \"description\": \"Always force a column break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    \"name\": \"page\",\n                    \"description\": \"Always force a page break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"syntax\": \"auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region\",\n            \"relevance\": 50,\n            \"description\": \"Describes the page/column/region break behavior after the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"break-before\",\n            \"values\": [\n                {\n                    \"name\": \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"column\",\n                    \"description\": \"Always force a column break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    \"name\": \"page\",\n                    \"description\": \"Always force a page break before/after the principal box.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"syntax\": \"auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region\",\n            \"relevance\": 50,\n            \"description\": \"Describes the page/column/region break behavior before the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"break-inside\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Impose no additional breaking constraints within the box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid breaks within the box.\"\n                },\n                {\n                    \"name\": \"avoid-column\",\n                    \"description\": \"Avoid a column break within the box.\"\n                },\n                {\n                    \"name\": \"avoid-page\",\n                    \"description\": \"Avoid a page break within the box.\"\n                }\n            ],\n            \"syntax\": \"auto | avoid | avoid-page | avoid-column | avoid-region\",\n            \"relevance\": 50,\n            \"description\": \"Describes the page/column/region break behavior inside the principal box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"caption-side\",\n            \"values\": [\n                {\n                    \"name\": \"bottom\",\n                    \"description\": \"Positions the caption box below the table box.\"\n                },\n                {\n                    \"name\": \"top\",\n                    \"description\": \"Positions the caption box above the table box.\"\n                }\n            ],\n            \"syntax\": \"top | bottom | block-start | block-end | inline-start | inline-end\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/caption-side\"\n                }\n            ],\n            \"description\": \"Specifies the position of the caption box with respect to the table box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"caret-color\",\n            \"browsers\": [\n                \"E79\",\n                \"FF53\",\n                \"S11.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The user agent selects an appropriate color for the caret. This is generally currentcolor, but the user agent may choose a different color to ensure good visibility and contrast with the surrounding content, taking into account the value of currentcolor, the background, shadows, and other factors.\"\n                }\n            ],\n            \"syntax\": \"auto | <color>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/caret-color\"\n                }\n            ],\n            \"description\": \"Controls the color of the text insertion indicator.\",\n            \"restrictions\": [\n                \"color\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"clear\",\n            \"values\": [\n                {\n                    \"name\": \"both\",\n                    \"description\": \"The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any right-floating and left-floating boxes that resulted from elements earlier in the source document.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any left-floating boxes that resulted from elements earlier in the source document.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No constraint on the box's position with respect to floats.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"The clearance of the generated box is set to the amount necessary to place the top border edge below the bottom outer edge of any right-floating boxes that resulted from elements earlier in the source document.\"\n                }\n            ],\n            \"syntax\": \"none | left | right | both | inline-start | inline-end\",\n            \"relevance\": 84,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/clear\"\n                }\n            ],\n            \"description\": \"Indicates which sides of an element's box(es) may not be adjacent to an earlier floating box. The 'clear' property does not consider floats inside the element itself or in other block formatting contexts.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"clip\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The element does not clip.\"\n                },\n                {\n                    \"name\": \"rect()\",\n                    \"description\": \"Specifies offsets from the edges of the border box.\"\n                }\n            ],\n            \"syntax\": \"<shape> | auto\",\n            \"relevance\": 73,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/clip\"\n                }\n            ],\n            \"description\": \"Deprecated. Use the 'clip-path' property when support allows. Defines the visible portion of an element’s box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"clip-path\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No clipping path gets created.\"\n                },\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"References a <clipPath> element to create a clipping path.\"\n                }\n            ],\n            \"syntax\": \"<clip-source> | [ <basic-shape> || <geometry-box> ] | none\",\n            \"relevance\": 55,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/clip-path\"\n                }\n            ],\n            \"description\": \"Specifies a clipping path where everything inside the path is visible and everything outside is clipped out.\",\n            \"restrictions\": [\n                \"url\",\n                \"shape\",\n                \"geometry-box\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"clip-rule\",\n            \"browsers\": [\n                \"E\",\n                \"C5\",\n                \"FF3\",\n                \"IE10\",\n                \"O9\",\n                \"S6\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"evenodd\",\n                    \"description\": \"Determines the ‘insideness’ of a point on the canvas by drawing a ray from that point to infinity in any direction and counting the number of path segments from the given shape that the ray crosses.\"\n                },\n                {\n                    \"name\": \"nonzero\",\n                    \"description\": \"Determines the ‘insideness’ of a point on the canvas by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Indicates the algorithm which is to be used to determine what parts of the canvas are included inside the shape.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"color\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 94,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/color\"\n                }\n            ],\n            \"description\": \"Sets the color of an element's text\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"color-interpolation-filters\",\n            \"browsers\": [\n                \"E\",\n                \"C5\",\n                \"FF3\",\n                \"IE10\",\n                \"O9\",\n                \"S6\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Color operations are not required to occur in a particular color space.\"\n                },\n                {\n                    \"name\": \"linearRGB\",\n                    \"description\": \"Color operations should occur in the linearized RGB color space.\"\n                },\n                {\n                    \"name\": \"sRGB\",\n                    \"description\": \"Color operations should occur in the sRGB color space.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the color space for imaging operations performed via filter effects.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"column-count\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Determines the number of columns by the 'column-width' property and the element width.\"\n                }\n            ],\n            \"syntax\": \"<integer> | auto\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/column-count\"\n                }\n            ],\n            \"description\": \"Describes the optimal number of columns into which the content of the element will be flowed.\",\n            \"restrictions\": [\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"column-fill\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Fills columns sequentially.\"\n                },\n                {\n                    \"name\": \"balance\",\n                    \"description\": \"Balance content equally between columns, if possible.\"\n                }\n            ],\n            \"syntax\": \"auto | balance | balance-all\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/column-fill\"\n                }\n            ],\n            \"description\": \"In continuous media, this property will only be consulted if the length of columns has been constrained. Otherwise, columns will automatically be balanced.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"column-gap\",\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"User agent specific and typically equivalent to 1em.\"\n                }\n            ],\n            \"syntax\": \"normal | <length-percentage>\",\n            \"relevance\": 52,\n            \"description\": \"Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.\",\n            \"restrictions\": [\n                \"length\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"column-rule\",\n            \"syntax\": \"<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/column-rule\"\n                }\n            ],\n            \"description\": \"Shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"column-rule-color\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/column-rule-color\"\n                }\n            ],\n            \"description\": \"Sets the color of the column rule\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"column-rule-style\",\n            \"syntax\": \"<'border-style'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/column-rule-style\"\n                }\n            ],\n            \"description\": \"Sets the style of the rule between columns of an element.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"column-rule-width\",\n            \"syntax\": \"<'border-width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/column-rule-width\"\n                }\n            ],\n            \"description\": \"Sets the width of the rule between columns. Negative values are not allowed.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"columns\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"syntax\": \"<'column-width'> || <'column-count'>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/columns\"\n                }\n            ],\n            \"description\": \"A shorthand property which sets both 'column-width' and 'column-count'.\",\n            \"restrictions\": [\n                \"length\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"column-span\",\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"The element spans across all columns. Content in the normal flow that appears before the element is automatically balanced across all columns before the element appear.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The element does not span multiple columns.\"\n                }\n            ],\n            \"syntax\": \"none | all\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/column-span\"\n                }\n            ],\n            \"description\": \"Describes the page/column break behavior after the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"column-width\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"syntax\": \"<length> | auto\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/column-width\"\n                }\n            ],\n            \"description\": \"Describes the width of columns in multicol elements.\",\n            \"restrictions\": [\n                \"length\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"contain\",\n            \"browsers\": [\n                \"E79\",\n                \"FF69\",\n                \"C52\",\n                \"O40\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Indicates that the property has no effect.\"\n                },\n                {\n                    \"name\": \"strict\",\n                    \"description\": \"Turns on all forms of containment for the element.\"\n                },\n                {\n                    \"name\": \"content\",\n                    \"description\": \"All containment rules except size are applied to the element.\"\n                },\n                {\n                    \"name\": \"size\",\n                    \"description\": \"For properties that can have effects on more than just an element and its descendants, those effects don't escape the containing element.\"\n                },\n                {\n                    \"name\": \"layout\",\n                    \"description\": \"Turns on layout containment for the element.\"\n                },\n                {\n                    \"name\": \"style\",\n                    \"description\": \"Turns on style containment for the element.\"\n                },\n                {\n                    \"name\": \"paint\",\n                    \"description\": \"Turns on paint containment for the element.\"\n                }\n            ],\n            \"syntax\": \"none | strict | content | [ size || layout || style || paint ]\",\n            \"relevance\": 55,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/contain\"\n                }\n            ],\n            \"description\": \"Indicates that an element and its contents are, as much as possible, independent of the rest of the document tree.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"content\",\n            \"values\": [\n                {\n                    \"name\": \"attr()\",\n                    \"description\": \"The attr(n) function returns as a string the value of attribute n for the subject of the selector.\"\n                },\n                {\n                    \"name\": \"counter(name)\",\n                    \"description\": \"Counters are denoted by identifiers (see the 'counter-increment' and 'counter-reset' properties).\"\n                },\n                {\n                    \"name\": \"icon\",\n                    \"description\": \"The (pseudo-)element is replaced in its entirety by the resource referenced by its 'icon' property, and treated as a replaced element.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"On elements, this inhibits the children of the element from being rendered as children of this element, as if the element was empty. On pseudo-elements it causes the pseudo-element to have no content.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"See http://www.w3.org/TR/css3-content/#content for computation rules.\"\n                },\n                {\n                    \"name\": \"url()\"\n                }\n            ],\n            \"syntax\": \"normal | none | [ <content-replacement> | <content-list> ] [/ <string> ]?\",\n            \"relevance\": 89,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/content\"\n                }\n            ],\n            \"description\": \"Determines which page-based occurrence of a given element is applied to a counter or string value.\",\n            \"restrictions\": [\n                \"string\",\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"counter-increment\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"This element does not alter the value of any counters.\"\n                }\n            ],\n            \"syntax\": \"[ <custom-ident> <integer>? ]+ | none\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/counter-increment\"\n                }\n            ],\n            \"description\": \"Manipulate the value of existing counters.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"counter-reset\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The counter is not modified.\"\n                }\n            ],\n            \"syntax\": \"[ <custom-ident> <integer>? ]+ | none\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/counter-reset\"\n                }\n            ],\n            \"description\": \"Property accepts one or more names of counters (identifiers), each one optionally followed by an integer. The integer gives the value that the counter is set to on each occurrence of the element.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"cursor\",\n            \"values\": [\n                {\n                    \"name\": \"alias\",\n                    \"description\": \"Indicates an alias of/shortcut to something is to be created. Often rendered as an arrow with a small curved arrow next to it.\"\n                },\n                {\n                    \"name\": \"all-scroll\",\n                    \"description\": \"Indicates that the something can be scrolled in any direction. Often rendered as arrows pointing up, down, left, and right with a dot in the middle.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The UA determines the cursor to display based on the current context.\"\n                },\n                {\n                    \"name\": \"cell\",\n                    \"description\": \"Indicates that a cell or set of cells may be selected. Often rendered as a thick plus-sign with a dot in the middle.\"\n                },\n                {\n                    \"name\": \"col-resize\",\n                    \"description\": \"Indicates that the item/column can be resized horizontally. Often rendered as arrows pointing left and right with a vertical bar separating them.\"\n                },\n                {\n                    \"name\": \"context-menu\",\n                    \"description\": \"A context menu is available for the object under the cursor. Often rendered as an arrow with a small menu-like graphic next to it.\"\n                },\n                {\n                    \"name\": \"copy\",\n                    \"description\": \"Indicates something is to be copied. Often rendered as an arrow with a small plus sign next to it.\"\n                },\n                {\n                    \"name\": \"crosshair\",\n                    \"description\": \"A simple crosshair (e.g., short line segments resembling a '+' sign). Often used to indicate a two dimensional bitmap selection mode.\"\n                },\n                {\n                    \"name\": \"default\",\n                    \"description\": \"The platform-dependent default cursor. Often rendered as an arrow.\"\n                },\n                {\n                    \"name\": \"e-resize\",\n                    \"description\": \"Indicates that east edge is to be moved.\"\n                },\n                {\n                    \"name\": \"ew-resize\",\n                    \"description\": \"Indicates a bidirectional east-west resize cursor.\"\n                },\n                {\n                    \"name\": \"grab\",\n                    \"description\": \"Indicates that something can be grabbed.\"\n                },\n                {\n                    \"name\": \"grabbing\",\n                    \"description\": \"Indicates that something is being grabbed.\"\n                },\n                {\n                    \"name\": \"help\",\n                    \"description\": \"Help is available for the object under the cursor. Often rendered as a question mark or a balloon.\"\n                },\n                {\n                    \"name\": \"move\",\n                    \"description\": \"Indicates something is to be moved.\"\n                },\n                {\n                    \"name\": \"-moz-grab\",\n                    \"description\": \"Indicates that something can be grabbed.\"\n                },\n                {\n                    \"name\": \"-moz-grabbing\",\n                    \"description\": \"Indicates that something is being grabbed.\"\n                },\n                {\n                    \"name\": \"-moz-zoom-in\",\n                    \"description\": \"Indicates that something can be zoomed (magnified) in.\"\n                },\n                {\n                    \"name\": \"-moz-zoom-out\",\n                    \"description\": \"Indicates that something can be zoomed (magnified) out.\"\n                },\n                {\n                    \"name\": \"ne-resize\",\n                    \"description\": \"Indicates that movement starts from north-east corner.\"\n                },\n                {\n                    \"name\": \"nesw-resize\",\n                    \"description\": \"Indicates a bidirectional north-east/south-west cursor.\"\n                },\n                {\n                    \"name\": \"no-drop\",\n                    \"description\": \"Indicates that the dragged item cannot be dropped at the current cursor location. Often rendered as a hand or pointer with a small circle with a line through it.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No cursor is rendered for the element.\"\n                },\n                {\n                    \"name\": \"not-allowed\",\n                    \"description\": \"Indicates that the requested action will not be carried out. Often rendered as a circle with a line through it.\"\n                },\n                {\n                    \"name\": \"n-resize\",\n                    \"description\": \"Indicates that north edge is to be moved.\"\n                },\n                {\n                    \"name\": \"ns-resize\",\n                    \"description\": \"Indicates a bidirectional north-south cursor.\"\n                },\n                {\n                    \"name\": \"nw-resize\",\n                    \"description\": \"Indicates that movement starts from north-west corner.\"\n                },\n                {\n                    \"name\": \"nwse-resize\",\n                    \"description\": \"Indicates a bidirectional north-west/south-east cursor.\"\n                },\n                {\n                    \"name\": \"pointer\",\n                    \"description\": \"The cursor is a pointer that indicates a link.\"\n                },\n                {\n                    \"name\": \"progress\",\n                    \"description\": \"A progress indicator. The program is performing some processing, but is different from 'wait' in that the user may still interact with the program. Often rendered as a spinning beach ball, or an arrow with a watch or hourglass.\"\n                },\n                {\n                    \"name\": \"row-resize\",\n                    \"description\": \"Indicates that the item/row can be resized vertically. Often rendered as arrows pointing up and down with a horizontal bar separating them.\"\n                },\n                {\n                    \"name\": \"se-resize\",\n                    \"description\": \"Indicates that movement starts from south-east corner.\"\n                },\n                {\n                    \"name\": \"s-resize\",\n                    \"description\": \"Indicates that south edge is to be moved.\"\n                },\n                {\n                    \"name\": \"sw-resize\",\n                    \"description\": \"Indicates that movement starts from south-west corner.\"\n                },\n                {\n                    \"name\": \"text\",\n                    \"description\": \"Indicates text that may be selected. Often rendered as a vertical I-beam.\"\n                },\n                {\n                    \"name\": \"vertical-text\",\n                    \"description\": \"Indicates vertical-text that may be selected. Often rendered as a horizontal I-beam.\"\n                },\n                {\n                    \"name\": \"wait\",\n                    \"description\": \"Indicates that the program is busy and the user should wait. Often rendered as a watch or hourglass.\"\n                },\n                {\n                    \"name\": \"-webkit-grab\",\n                    \"description\": \"Indicates that something can be grabbed.\"\n                },\n                {\n                    \"name\": \"-webkit-grabbing\",\n                    \"description\": \"Indicates that something is being grabbed.\"\n                },\n                {\n                    \"name\": \"-webkit-zoom-in\",\n                    \"description\": \"Indicates that something can be zoomed (magnified) in.\"\n                },\n                {\n                    \"name\": \"-webkit-zoom-out\",\n                    \"description\": \"Indicates that something can be zoomed (magnified) out.\"\n                },\n                {\n                    \"name\": \"w-resize\",\n                    \"description\": \"Indicates that west edge is to be moved.\"\n                },\n                {\n                    \"name\": \"zoom-in\",\n                    \"description\": \"Indicates that something can be zoomed (magnified) in.\"\n                },\n                {\n                    \"name\": \"zoom-out\",\n                    \"description\": \"Indicates that something can be zoomed (magnified) out.\"\n                }\n            ],\n            \"syntax\": \"[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]\",\n            \"relevance\": 91,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/cursor\"\n                }\n            ],\n            \"description\": \"Allows control over cursor appearance in an element\",\n            \"restrictions\": [\n                \"url\",\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"direction\",\n            \"values\": [\n                {\n                    \"name\": \"ltr\",\n                    \"description\": \"Left-to-right direction.\"\n                },\n                {\n                    \"name\": \"rtl\",\n                    \"description\": \"Right-to-left direction.\"\n                }\n            ],\n            \"syntax\": \"ltr | rtl\",\n            \"relevance\": 68,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/direction\"\n                }\n            ],\n            \"description\": \"Specifies the inline base direction or directionality of any bidi paragraph, embedding, isolate, or override established by the box. Note: for HTML content use the 'dir' attribute and 'bdo' element rather than this property.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"display\",\n            \"values\": [\n                {\n                    \"name\": \"block\",\n                    \"description\": \"The element generates a block-level box\"\n                },\n                {\n                    \"name\": \"contents\",\n                    \"description\": \"The element itself does not generate any boxes, but its children and pseudo-elements still generate boxes as normal.\"\n                },\n                {\n                    \"name\": \"flex\",\n                    \"description\": \"The element generates a principal flex container box and establishes a flex formatting context.\"\n                },\n                {\n                    \"name\": \"flexbox\",\n                    \"description\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\"\n                },\n                {\n                    \"name\": \"flow-root\",\n                    \"description\": \"The element generates a block container box, and lays out its contents using flow layout.\"\n                },\n                {\n                    \"name\": \"grid\",\n                    \"description\": \"The element generates a principal grid container box, and establishes a grid formatting context.\"\n                },\n                {\n                    \"name\": \"inline\",\n                    \"description\": \"The element generates an inline-level box.\"\n                },\n                {\n                    \"name\": \"inline-block\",\n                    \"description\": \"A block box, which itself is flowed as a single inline box, similar to a replaced element. The inside of an inline-block is formatted as a block box, and the box itself is formatted as an inline box.\"\n                },\n                {\n                    \"name\": \"inline-flex\",\n                    \"description\": \"Inline-level flex container.\"\n                },\n                {\n                    \"name\": \"inline-flexbox\",\n                    \"description\": \"Inline-level flex container. Standardized as 'inline-flex'\"\n                },\n                {\n                    \"name\": \"inline-table\",\n                    \"description\": \"Inline-level table wrapper box containing table box.\"\n                },\n                {\n                    \"name\": \"list-item\",\n                    \"description\": \"One or more block boxes and one marker box.\"\n                },\n                {\n                    \"name\": \"-moz-box\",\n                    \"description\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\"\n                },\n                {\n                    \"name\": \"-moz-deck\"\n                },\n                {\n                    \"name\": \"-moz-grid\"\n                },\n                {\n                    \"name\": \"-moz-grid-group\"\n                },\n                {\n                    \"name\": \"-moz-grid-line\"\n                },\n                {\n                    \"name\": \"-moz-groupbox\"\n                },\n                {\n                    \"name\": \"-moz-inline-box\",\n                    \"description\": \"Inline-level flex container. Standardized as 'inline-flex'\"\n                },\n                {\n                    \"name\": \"-moz-inline-grid\"\n                },\n                {\n                    \"name\": \"-moz-inline-stack\"\n                },\n                {\n                    \"name\": \"-moz-marker\"\n                },\n                {\n                    \"name\": \"-moz-popup\"\n                },\n                {\n                    \"name\": \"-moz-stack\"\n                },\n                {\n                    \"name\": \"-ms-flexbox\",\n                    \"description\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\"\n                },\n                {\n                    \"name\": \"-ms-grid\",\n                    \"description\": \"The element generates a principal grid container box, and establishes a grid formatting context.\"\n                },\n                {\n                    \"name\": \"-ms-inline-flexbox\",\n                    \"description\": \"Inline-level flex container. Standardized as 'inline-flex'\"\n                },\n                {\n                    \"name\": \"-ms-inline-grid\",\n                    \"description\": \"Inline-level grid container.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The element and its descendants generates no boxes.\"\n                },\n                {\n                    \"name\": \"ruby\",\n                    \"description\": \"The element generates a principal ruby container box, and establishes a ruby formatting context.\"\n                },\n                {\n                    \"name\": \"ruby-base\"\n                },\n                {\n                    \"name\": \"ruby-base-container\"\n                },\n                {\n                    \"name\": \"ruby-text\"\n                },\n                {\n                    \"name\": \"ruby-text-container\"\n                },\n                {\n                    \"name\": \"run-in\",\n                    \"description\": \"The element generates a run-in box. Run-in elements act like inlines or blocks, depending on the surrounding elements.\"\n                },\n                {\n                    \"name\": \"table\",\n                    \"description\": \"The element generates a principal table wrapper box containing an additionally-generated table box, and establishes a table formatting context.\"\n                },\n                {\n                    \"name\": \"table-caption\"\n                },\n                {\n                    \"name\": \"table-cell\"\n                },\n                {\n                    \"name\": \"table-column\"\n                },\n                {\n                    \"name\": \"table-column-group\"\n                },\n                {\n                    \"name\": \"table-footer-group\"\n                },\n                {\n                    \"name\": \"table-header-group\"\n                },\n                {\n                    \"name\": \"table-row\"\n                },\n                {\n                    \"name\": \"table-row-group\"\n                },\n                {\n                    \"name\": \"-webkit-box\",\n                    \"description\": \"The element lays out its contents using flow layout (block-and-inline layout). Standardized as 'flex'.\"\n                },\n                {\n                    \"name\": \"-webkit-flex\",\n                    \"description\": \"The element lays out its contents using flow layout (block-and-inline layout).\"\n                },\n                {\n                    \"name\": \"-webkit-inline-box\",\n                    \"description\": \"Inline-level flex container. Standardized as 'inline-flex'\"\n                },\n                {\n                    \"name\": \"-webkit-inline-flex\",\n                    \"description\": \"Inline-level flex container.\"\n                }\n            ],\n            \"syntax\": \"[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>\",\n            \"relevance\": 96,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/display\"\n                }\n            ],\n            \"description\": \"In combination with 'float' and 'position', determines the type of box or boxes that are generated for an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"empty-cells\",\n            \"values\": [\n                {\n                    \"name\": \"hide\",\n                    \"description\": \"No borders or backgrounds are drawn around/behind empty cells.\"\n                },\n                {\n                    \"name\": \"-moz-show-background\"\n                },\n                {\n                    \"name\": \"show\",\n                    \"description\": \"Borders and backgrounds are drawn around/behind empty cells (like normal cells).\"\n                }\n            ],\n            \"syntax\": \"show | hide\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/empty-cells\"\n                }\n            ],\n            \"description\": \"In the separated borders model, this property controls the rendering of borders and backgrounds around cells that have no visible content.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"enable-background\",\n            \"values\": [\n                {\n                    \"name\": \"accumulate\",\n                    \"description\": \"If the ancestor container element has a property of new, then all graphics elements within the current container are rendered both on the parent's background image and onto the target.\"\n                },\n                {\n                    \"name\": \"new\",\n                    \"description\": \"Create a new background image canvas. All children of the current container element can access the background, and they will be rendered onto both the parent's background image canvas in addition to the target device.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Deprecated. Use 'isolation' property instead when support allows. Specifies how the accumulation of the background image is managed.\",\n            \"restrictions\": [\n                \"integer\",\n                \"length\",\n                \"percentage\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"fallback\",\n            \"browsers\": [\n                \"FF33\"\n            ],\n            \"syntax\": \"<counter-style-name>\",\n            \"relevance\": 50,\n            \"description\": \"@counter-style descriptor. Specifies a fallback counter style to be used when the current counter style can’t create a representation for a given counter value.\",\n            \"restrictions\": [\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"fill\",\n            \"values\": [\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"A URL reference to a paint server element, which is an element that defines a paint server: ‘hatch’, ‘linearGradient’, ‘mesh’, ‘pattern’, ‘radialGradient’ and ‘solidcolor’.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No paint is applied in this layer.\"\n                }\n            ],\n            \"relevance\": 74,\n            \"description\": \"Paints the interior of the given graphical element.\",\n            \"restrictions\": [\n                \"color\",\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"fill-opacity\",\n            \"relevance\": 52,\n            \"description\": \"Specifies the opacity of the painting operation used to paint the interior the current object.\",\n            \"restrictions\": [\n                \"number(0-1)\"\n            ]\n        },\n        {\n            \"name\": \"fill-rule\",\n            \"values\": [\n                {\n                    \"name\": \"evenodd\",\n                    \"description\": \"Determines the ‘insideness’ of a point on the canvas by drawing a ray from that point to infinity in any direction and counting the number of path segments from the given shape that the ray crosses.\"\n                },\n                {\n                    \"name\": \"nonzero\",\n                    \"description\": \"Determines the ‘insideness’ of a point on the canvas by drawing a ray from that point to infinity in any direction and then examining the places where a segment of the shape crosses the ray.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Indicates the algorithm (or winding rule) which is to be used to determine what parts of the canvas are included inside the shape.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"filter\",\n            \"browsers\": [\n                \"E12\",\n                \"FF35\",\n                \"S9.1\",\n                \"C53\",\n                \"O40\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No filter effects are applied.\"\n                },\n                {\n                    \"name\": \"blur()\",\n                    \"description\": \"Applies a Gaussian blur to the input image.\"\n                },\n                {\n                    \"name\": \"brightness()\",\n                    \"description\": \"Applies a linear multiplier to input image, making it appear more or less bright.\"\n                },\n                {\n                    \"name\": \"contrast()\",\n                    \"description\": \"Adjusts the contrast of the input.\"\n                },\n                {\n                    \"name\": \"drop-shadow()\",\n                    \"description\": \"Applies a drop shadow effect to the input image.\"\n                },\n                {\n                    \"name\": \"grayscale()\",\n                    \"description\": \"Converts the input image to grayscale.\"\n                },\n                {\n                    \"name\": \"hue-rotate()\",\n                    \"description\": \"Applies a hue rotation on the input image. \"\n                },\n                {\n                    \"name\": \"invert()\",\n                    \"description\": \"Inverts the samples in the input image.\"\n                },\n                {\n                    \"name\": \"opacity()\",\n                    \"description\": \"Applies transparency to the samples in the input image.\"\n                },\n                {\n                    \"name\": \"saturate()\",\n                    \"description\": \"Saturates the input image.\"\n                },\n                {\n                    \"name\": \"sepia()\",\n                    \"description\": \"Converts the input image to sepia.\"\n                },\n                {\n                    \"name\": \"url()\",\n                    \"browsers\": [\n                        \"E12\",\n                        \"FF35\",\n                        \"S9.1\",\n                        \"C53\",\n                        \"O40\"\n                    ],\n                    \"description\": \"A filter reference to a <filter> element.\"\n                }\n            ],\n            \"syntax\": \"none | <filter-function-list>\",\n            \"relevance\": 64,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/filter\"\n                }\n            ],\n            \"description\": \"Processes an element’s rendering before it is displayed in the document, by applying one or more filter effects.\",\n            \"restrictions\": [\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"flex\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Retrieves the value of the main size property as the used 'flex-basis'.\"\n                },\n                {\n                    \"name\": \"content\",\n                    \"description\": \"Indicates automatic sizing, based on the flex item’s content.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Expands to '0 0 auto'.\"\n                }\n            ],\n            \"syntax\": \"none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]\",\n            \"relevance\": 77,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/flex\"\n                }\n            ],\n            \"description\": \"Specifies the components of a flexible length: the flex grow factor and flex shrink factor, and the flex basis.\",\n            \"restrictions\": [\n                \"length\",\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"flex-basis\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Retrieves the value of the main size property as the used 'flex-basis'.\"\n                },\n                {\n                    \"name\": \"content\",\n                    \"description\": \"Indicates automatic sizing, based on the flex item’s content.\"\n                }\n            ],\n            \"syntax\": \"content | <'width'>\",\n            \"relevance\": 62,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/flex-basis\"\n                }\n            ],\n            \"description\": \"Sets the flex basis.\",\n            \"restrictions\": [\n                \"length\",\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"flex-direction\",\n            \"values\": [\n                {\n                    \"name\": \"column\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                },\n                {\n                    \"name\": \"column-reverse\",\n                    \"description\": \"Same as 'column', except the main-start and main-end directions are swapped.\"\n                },\n                {\n                    \"name\": \"row\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                },\n                {\n                    \"name\": \"row-reverse\",\n                    \"description\": \"Same as 'row', except the main-start and main-end directions are swapped.\"\n                }\n            ],\n            \"syntax\": \"row | row-reverse | column | column-reverse\",\n            \"relevance\": 78,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/flex-direction\"\n                }\n            ],\n            \"description\": \"Specifies how flex items are placed in the flex container, by setting the direction of the flex container’s main axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"flex-flow\",\n            \"values\": [\n                {\n                    \"name\": \"column\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                },\n                {\n                    \"name\": \"column-reverse\",\n                    \"description\": \"Same as 'column', except the main-start and main-end directions are swapped.\"\n                },\n                {\n                    \"name\": \"nowrap\",\n                    \"description\": \"The flex container is single-line.\"\n                },\n                {\n                    \"name\": \"row\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                },\n                {\n                    \"name\": \"row-reverse\",\n                    \"description\": \"Same as 'row', except the main-start and main-end directions are swapped.\"\n                },\n                {\n                    \"name\": \"wrap\",\n                    \"description\": \"The flexbox is multi-line.\"\n                },\n                {\n                    \"name\": \"wrap-reverse\",\n                    \"description\": \"Same as 'wrap', except the cross-start and cross-end directions are swapped.\"\n                }\n            ],\n            \"syntax\": \"<'flex-direction'> || <'flex-wrap'>\",\n            \"relevance\": 58,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/flex-flow\"\n                }\n            ],\n            \"description\": \"Specifies how flexbox items are placed in the flexbox.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"flex-grow\",\n            \"syntax\": \"<number>\",\n            \"relevance\": 71,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/flex-grow\"\n                }\n            ],\n            \"description\": \"Sets the flex grow factor. Negative numbers are invalid.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"flex-shrink\",\n            \"syntax\": \"<number>\",\n            \"relevance\": 69,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/flex-shrink\"\n                }\n            ],\n            \"description\": \"Sets the flex shrink factor. Negative numbers are invalid.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"flex-wrap\",\n            \"values\": [\n                {\n                    \"name\": \"nowrap\",\n                    \"description\": \"The flex container is single-line.\"\n                },\n                {\n                    \"name\": \"wrap\",\n                    \"description\": \"The flexbox is multi-line.\"\n                },\n                {\n                    \"name\": \"wrap-reverse\",\n                    \"description\": \"Same as 'wrap', except the cross-start and cross-end directions are swapped.\"\n                }\n            ],\n            \"syntax\": \"nowrap | wrap | wrap-reverse\",\n            \"relevance\": 74,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/flex-wrap\"\n                }\n            ],\n            \"description\": \"Controls whether the flex container is single-line or multi-line, and the direction of the cross-axis, which determines the direction new lines are stacked in.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"float\",\n            \"values\": [\n                {\n                    \"name\": \"inline-end\",\n                    \"description\": \"A keyword indicating that the element must float on the end side of its containing block. That is the right side with ltr scripts, and the left side with rtl scripts.\"\n                },\n                {\n                    \"name\": \"inline-start\",\n                    \"description\": \"A keyword indicating that the element must float on the start side of its containing block. That is the left side with ltr scripts, and the right side with rtl scripts.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"The element generates a block box that is floated to the left. Content flows on the right side of the box, starting at the top (subject to the 'clear' property).\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The box is not floated.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"Similar to 'left', except the box is floated to the right, and content flows on the left side of the box, starting at the top.\"\n                }\n            ],\n            \"syntax\": \"left | right | none | inline-start | inline-end\",\n            \"relevance\": 92,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/float\"\n                }\n            ],\n            \"description\": \"Specifies how a box should be floated. It may be set for any element, but only applies to elements that generate boxes that are not absolutely positioned.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"flood-color\",\n            \"browsers\": [\n                \"E\",\n                \"C5\",\n                \"FF3\",\n                \"IE10\",\n                \"O9\",\n                \"S6\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Indicates what color to use to flood the current filter primitive subregion.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"flood-opacity\",\n            \"browsers\": [\n                \"E\",\n                \"C5\",\n                \"FF3\",\n                \"IE10\",\n                \"O9\",\n                \"S6\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Indicates what opacity to use to flood the current filter primitive subregion.\",\n            \"restrictions\": [\n                \"number(0-1)\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"font\",\n            \"values\": [\n                {\n                    \"name\": \"100\",\n                    \"description\": \"Thin\"\n                },\n                {\n                    \"name\": \"200\",\n                    \"description\": \"Extra Light (Ultra Light)\"\n                },\n                {\n                    \"name\": \"300\",\n                    \"description\": \"Light\"\n                },\n                {\n                    \"name\": \"400\",\n                    \"description\": \"Normal\"\n                },\n                {\n                    \"name\": \"500\",\n                    \"description\": \"Medium\"\n                },\n                {\n                    \"name\": \"600\",\n                    \"description\": \"Semi Bold (Demi Bold)\"\n                },\n                {\n                    \"name\": \"700\",\n                    \"description\": \"Bold\"\n                },\n                {\n                    \"name\": \"800\",\n                    \"description\": \"Extra Bold (Ultra Bold)\"\n                },\n                {\n                    \"name\": \"900\",\n                    \"description\": \"Black (Heavy)\"\n                },\n                {\n                    \"name\": \"bold\",\n                    \"description\": \"Same as 700\"\n                },\n                {\n                    \"name\": \"bolder\",\n                    \"description\": \"Specifies the weight of the face bolder than the inherited value.\"\n                },\n                {\n                    \"name\": \"caption\",\n                    \"description\": \"The font used for captioned controls (e.g., buttons, drop-downs, etc.).\"\n                },\n                {\n                    \"name\": \"icon\",\n                    \"description\": \"The font used to label icons.\"\n                },\n                {\n                    \"name\": \"italic\",\n                    \"description\": \"Selects a font that is labeled 'italic', or, if that is not available, one labeled 'oblique'.\"\n                },\n                {\n                    \"name\": \"large\"\n                },\n                {\n                    \"name\": \"larger\"\n                },\n                {\n                    \"name\": \"lighter\",\n                    \"description\": \"Specifies the weight of the face lighter than the inherited value.\"\n                },\n                {\n                    \"name\": \"medium\"\n                },\n                {\n                    \"name\": \"menu\",\n                    \"description\": \"The font used in menus (e.g., dropdown menus and menu lists).\"\n                },\n                {\n                    \"name\": \"message-box\",\n                    \"description\": \"The font used in dialog boxes.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Specifies a face that is not labeled as a small-caps font.\"\n                },\n                {\n                    \"name\": \"oblique\",\n                    \"description\": \"Selects a font that is labeled 'oblique'.\"\n                },\n                {\n                    \"name\": \"small\"\n                },\n                {\n                    \"name\": \"small-caps\",\n                    \"description\": \"Specifies a font that is labeled as a small-caps font. If a genuine small-caps font is not available, user agents should simulate a small-caps font.\"\n                },\n                {\n                    \"name\": \"small-caption\",\n                    \"description\": \"The font used for labeling small controls.\"\n                },\n                {\n                    \"name\": \"smaller\"\n                },\n                {\n                    \"name\": \"status-bar\",\n                    \"description\": \"The font used in window status bars.\"\n                },\n                {\n                    \"name\": \"x-large\"\n                },\n                {\n                    \"name\": \"x-small\"\n                },\n                {\n                    \"name\": \"xx-large\"\n                },\n                {\n                    \"name\": \"xx-small\"\n                }\n            ],\n            \"syntax\": \"[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar\",\n            \"relevance\": 82,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font\"\n                }\n            ],\n            \"description\": \"Shorthand property for setting 'font-style', 'font-variant', 'font-weight', 'font-size', 'line-height', and 'font-family', at the same place in the style sheet. The syntax of this property is based on a traditional typographical shorthand notation to set multiple properties related to fonts.\",\n            \"restrictions\": [\n                \"font\"\n            ]\n        },\n        {\n            \"name\": \"font-family\",\n            \"values\": [\n                {\n                    \"name\": \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\"\n                },\n                {\n                    \"name\": \"Arial, Helvetica, sans-serif\"\n                },\n                {\n                    \"name\": \"Cambria, Cochin, Georgia, Times, 'Times New Roman', serif\"\n                },\n                {\n                    \"name\": \"'Courier New', Courier, monospace\"\n                },\n                {\n                    \"name\": \"cursive\"\n                },\n                {\n                    \"name\": \"fantasy\"\n                },\n                {\n                    \"name\": \"'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif\"\n                },\n                {\n                    \"name\": \"Georgia, 'Times New Roman', Times, serif\"\n                },\n                {\n                    \"name\": \"'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\"\n                },\n                {\n                    \"name\": \"Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif\"\n                },\n                {\n                    \"name\": \"'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif\"\n                },\n                {\n                    \"name\": \"monospace\"\n                },\n                {\n                    \"name\": \"sans-serif\"\n                },\n                {\n                    \"name\": \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\n                },\n                {\n                    \"name\": \"serif\"\n                },\n                {\n                    \"name\": \"'Times New Roman', Times, serif\"\n                },\n                {\n                    \"name\": \"'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif\"\n                },\n                {\n                    \"name\": \"Verdana, Geneva, Tahoma, sans-serif\"\n                }\n            ],\n            \"syntax\": \"<family-name>\",\n            \"relevance\": 92,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-family\"\n                }\n            ],\n            \"description\": \"Specifies a prioritized list of font family names or generic family names. A user agent iterates through the list of family names until it matches an available font that contains a glyph for the character to be rendered.\",\n            \"restrictions\": [\n                \"font\"\n            ]\n        },\n        {\n            \"name\": \"font-feature-settings\",\n            \"values\": [\n                {\n                    \"name\": \"\\\"aalt\\\"\",\n                    \"description\": \"Access All Alternates.\"\n                },\n                {\n                    \"name\": \"\\\"abvf\\\"\",\n                    \"description\": \"Above-base Forms. Required in Khmer script.\"\n                },\n                {\n                    \"name\": \"\\\"abvm\\\"\",\n                    \"description\": \"Above-base Mark Positioning. Required in Indic scripts.\"\n                },\n                {\n                    \"name\": \"\\\"abvs\\\"\",\n                    \"description\": \"Above-base Substitutions. Required in Indic scripts.\"\n                },\n                {\n                    \"name\": \"\\\"afrc\\\"\",\n                    \"description\": \"Alternative Fractions.\"\n                },\n                {\n                    \"name\": \"\\\"akhn\\\"\",\n                    \"description\": \"Akhand. Required in most Indic scripts.\"\n                },\n                {\n                    \"name\": \"\\\"blwf\\\"\",\n                    \"description\": \"Below-base Form. Required in a number of Indic scripts.\"\n                },\n                {\n                    \"name\": \"\\\"blwm\\\"\",\n                    \"description\": \"Below-base Mark Positioning. Required in Indic scripts.\"\n                },\n                {\n                    \"name\": \"\\\"blws\\\"\",\n                    \"description\": \"Below-base Substitutions. Required in Indic scripts.\"\n                },\n                {\n                    \"name\": \"\\\"calt\\\"\",\n                    \"description\": \"Contextual Alternates.\"\n                },\n                {\n                    \"name\": \"\\\"case\\\"\",\n                    \"description\": \"Case-Sensitive Forms. Applies only to European scripts; particularly prominent in Spanish-language setting.\"\n                },\n                {\n                    \"name\": \"\\\"ccmp\\\"\",\n                    \"description\": \"Glyph Composition/Decomposition.\"\n                },\n                {\n                    \"name\": \"\\\"cfar\\\"\",\n                    \"description\": \"Conjunct Form After Ro. Required in Khmer scripts.\"\n                },\n                {\n                    \"name\": \"\\\"cjct\\\"\",\n                    \"description\": \"Conjunct Forms. Required in Indic scripts that show similarity to Devanagari.\"\n                },\n                {\n                    \"name\": \"\\\"clig\\\"\",\n                    \"description\": \"Contextual Ligatures.\"\n                },\n                {\n                    \"name\": \"\\\"cpct\\\"\",\n                    \"description\": \"Centered CJK Punctuation. Used primarily in Chinese fonts.\"\n                },\n                {\n                    \"name\": \"\\\"cpsp\\\"\",\n                    \"description\": \"Capital Spacing. Should not be used in connecting scripts (e.g. most Arabic).\"\n                },\n                {\n                    \"name\": \"\\\"cswh\\\"\",\n                    \"description\": \"Contextual Swash.\"\n                },\n                {\n                    \"name\": \"\\\"curs\\\"\",\n                    \"description\": \"Cursive Positioning. Can be used in any cursive script.\"\n                },\n                {\n                    \"name\": \"\\\"c2pc\\\"\",\n                    \"description\": \"Petite Capitals From Capitals. Applies only to bicameral scripts.\"\n                },\n                {\n                    \"name\": \"\\\"c2sc\\\"\",\n                    \"description\": \"Small Capitals From Capitals. Applies only to bicameral scripts.\"\n                },\n                {\n                    \"name\": \"\\\"dist\\\"\",\n                    \"description\": \"Distances. Required in Indic scripts.\"\n                },\n                {\n                    \"name\": \"\\\"dlig\\\"\",\n                    \"description\": \"Discretionary ligatures.\"\n                },\n                {\n                    \"name\": \"\\\"dnom\\\"\",\n                    \"description\": \"Denominators.\"\n                },\n                {\n                    \"name\": \"\\\"dtls\\\"\",\n                    \"description\": \"Dotless Forms. Applied to math formula layout.\"\n                },\n                {\n                    \"name\": \"\\\"expt\\\"\",\n                    \"description\": \"Expert Forms. Applies only to Japanese.\"\n                },\n                {\n                    \"name\": \"\\\"falt\\\"\",\n                    \"description\": \"Final Glyph on Line Alternates. Can be used in any cursive script.\"\n                },\n                {\n                    \"name\": \"\\\"fin2\\\"\",\n                    \"description\": \"Terminal Form #2. Used only with the Syriac script.\"\n                },\n                {\n                    \"name\": \"\\\"fin3\\\"\",\n                    \"description\": \"Terminal Form #3. Used only with the Syriac script.\"\n                },\n                {\n                    \"name\": \"\\\"fina\\\"\",\n                    \"description\": \"Terminal Forms. Can be used in any alphabetic script.\"\n                },\n                {\n                    \"name\": \"\\\"flac\\\"\",\n                    \"description\": \"Flattened ascent forms. Applied to math formula layout.\"\n                },\n                {\n                    \"name\": \"\\\"frac\\\"\",\n                    \"description\": \"Fractions.\"\n                },\n                {\n                    \"name\": \"\\\"fwid\\\"\",\n                    \"description\": \"Full Widths. Applies to any script which can use monospaced forms.\"\n                },\n                {\n                    \"name\": \"\\\"half\\\"\",\n                    \"description\": \"Half Forms. Required in Indic scripts that show similarity to Devanagari.\"\n                },\n                {\n                    \"name\": \"\\\"haln\\\"\",\n                    \"description\": \"Halant Forms. Required in Indic scripts.\"\n                },\n                {\n                    \"name\": \"\\\"halt\\\"\",\n                    \"description\": \"Alternate Half Widths. Used only in CJKV fonts.\"\n                },\n                {\n                    \"name\": \"\\\"hist\\\"\",\n                    \"description\": \"Historical Forms.\"\n                },\n                {\n                    \"name\": \"\\\"hkna\\\"\",\n                    \"description\": \"Horizontal Kana Alternates. Applies only to fonts that support kana (hiragana and katakana).\"\n                },\n                {\n                    \"name\": \"\\\"hlig\\\"\",\n                    \"description\": \"Historical Ligatures.\"\n                },\n                {\n                    \"name\": \"\\\"hngl\\\"\",\n                    \"description\": \"Hangul. Korean only.\"\n                },\n                {\n                    \"name\": \"\\\"hojo\\\"\",\n                    \"description\": \"Hojo Kanji Forms (JIS X 0212-1990 Kanji Forms). Used only with Kanji script.\"\n                },\n                {\n                    \"name\": \"\\\"hwid\\\"\",\n                    \"description\": \"Half Widths. Generally used only in CJKV fonts.\"\n                },\n                {\n                    \"name\": \"\\\"init\\\"\",\n                    \"description\": \"Initial Forms. Can be used in any alphabetic script.\"\n                },\n                {\n                    \"name\": \"\\\"isol\\\"\",\n                    \"description\": \"Isolated Forms. Can be used in any cursive script.\"\n                },\n                {\n                    \"name\": \"\\\"ital\\\"\",\n                    \"description\": \"Italics. Applies mostly to Latin; note that many non-Latin fonts contain Latin as well.\"\n                },\n                {\n                    \"name\": \"\\\"jalt\\\"\",\n                    \"description\": \"Justification Alternates. Can be used in any cursive script.\"\n                },\n                {\n                    \"name\": \"\\\"jp78\\\"\",\n                    \"description\": \"JIS78 Forms. Applies only to Japanese.\"\n                },\n                {\n                    \"name\": \"\\\"jp83\\\"\",\n                    \"description\": \"JIS83 Forms. Applies only to Japanese.\"\n                },\n                {\n                    \"name\": \"\\\"jp90\\\"\",\n                    \"description\": \"JIS90 Forms. Applies only to Japanese.\"\n                },\n                {\n                    \"name\": \"\\\"jp04\\\"\",\n                    \"description\": \"JIS2004 Forms. Applies only to Japanese.\"\n                },\n                {\n                    \"name\": \"\\\"kern\\\"\",\n                    \"description\": \"Kerning.\"\n                },\n                {\n                    \"name\": \"\\\"lfbd\\\"\",\n                    \"description\": \"Left Bounds.\"\n                },\n                {\n                    \"name\": \"\\\"liga\\\"\",\n                    \"description\": \"Standard Ligatures.\"\n                },\n                {\n                    \"name\": \"\\\"ljmo\\\"\",\n                    \"description\": \"Leading Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.\"\n                },\n                {\n                    \"name\": \"\\\"lnum\\\"\",\n                    \"description\": \"Lining Figures.\"\n                },\n                {\n                    \"name\": \"\\\"locl\\\"\",\n                    \"description\": \"Localized Forms.\"\n                },\n                {\n                    \"name\": \"\\\"ltra\\\"\",\n                    \"description\": \"Left-to-right glyph alternates.\"\n                },\n                {\n                    \"name\": \"\\\"ltrm\\\"\",\n                    \"description\": \"Left-to-right mirrored forms.\"\n                },\n                {\n                    \"name\": \"\\\"mark\\\"\",\n                    \"description\": \"Mark Positioning.\"\n                },\n                {\n                    \"name\": \"\\\"med2\\\"\",\n                    \"description\": \"Medial Form #2. Used only with the Syriac script.\"\n                },\n                {\n                    \"name\": \"\\\"medi\\\"\",\n                    \"description\": \"Medial Forms.\"\n                },\n                {\n                    \"name\": \"\\\"mgrk\\\"\",\n                    \"description\": \"Mathematical Greek.\"\n                },\n                {\n                    \"name\": \"\\\"mkmk\\\"\",\n                    \"description\": \"Mark to Mark Positioning.\"\n                },\n                {\n                    \"name\": \"\\\"nalt\\\"\",\n                    \"description\": \"Alternate Annotation Forms.\"\n                },\n                {\n                    \"name\": \"\\\"nlck\\\"\",\n                    \"description\": \"NLC Kanji Forms. Used only with Kanji script.\"\n                },\n                {\n                    \"name\": \"\\\"nukt\\\"\",\n                    \"description\": \"Nukta Forms. Required in Indic scripts..\"\n                },\n                {\n                    \"name\": \"\\\"numr\\\"\",\n                    \"description\": \"Numerators.\"\n                },\n                {\n                    \"name\": \"\\\"onum\\\"\",\n                    \"description\": \"Oldstyle Figures.\"\n                },\n                {\n                    \"name\": \"\\\"opbd\\\"\",\n                    \"description\": \"Optical Bounds.\"\n                },\n                {\n                    \"name\": \"\\\"ordn\\\"\",\n                    \"description\": \"Ordinals. Applies mostly to Latin script.\"\n                },\n                {\n                    \"name\": \"\\\"ornm\\\"\",\n                    \"description\": \"Ornaments.\"\n                },\n                {\n                    \"name\": \"\\\"palt\\\"\",\n                    \"description\": \"Proportional Alternate Widths. Used mostly in CJKV fonts.\"\n                },\n                {\n                    \"name\": \"\\\"pcap\\\"\",\n                    \"description\": \"Petite Capitals.\"\n                },\n                {\n                    \"name\": \"\\\"pkna\\\"\",\n                    \"description\": \"Proportional Kana. Generally used only in Japanese fonts.\"\n                },\n                {\n                    \"name\": \"\\\"pnum\\\"\",\n                    \"description\": \"Proportional Figures.\"\n                },\n                {\n                    \"name\": \"\\\"pref\\\"\",\n                    \"description\": \"Pre-base Forms. Required in Khmer and Myanmar (Burmese) scripts and southern Indic scripts that may display a pre-base form of Ra.\"\n                },\n                {\n                    \"name\": \"\\\"pres\\\"\",\n                    \"description\": \"Pre-base Substitutions. Required in Indic scripts.\"\n                },\n                {\n                    \"name\": \"\\\"pstf\\\"\",\n                    \"description\": \"Post-base Forms. Required in scripts of south and southeast Asia that have post-base forms for consonants eg: Gurmukhi, Malayalam, Khmer.\"\n                },\n                {\n                    \"name\": \"\\\"psts\\\"\",\n                    \"description\": \"Post-base Substitutions.\"\n                },\n                {\n                    \"name\": \"\\\"pwid\\\"\",\n                    \"description\": \"Proportional Widths.\"\n                },\n                {\n                    \"name\": \"\\\"qwid\\\"\",\n                    \"description\": \"Quarter Widths. Generally used only in CJKV fonts.\"\n                },\n                {\n                    \"name\": \"\\\"rand\\\"\",\n                    \"description\": \"Randomize.\"\n                },\n                {\n                    \"name\": \"\\\"rclt\\\"\",\n                    \"description\": \"Required Contextual Alternates. May apply to any script, but is especially important for many styles of Arabic.\"\n                },\n                {\n                    \"name\": \"\\\"rlig\\\"\",\n                    \"description\": \"Required Ligatures. Applies to Arabic and Syriac. May apply to some other scripts.\"\n                },\n                {\n                    \"name\": \"\\\"rkrf\\\"\",\n                    \"description\": \"Rakar Forms. Required in Devanagari and Gujarati scripts.\"\n                },\n                {\n                    \"name\": \"\\\"rphf\\\"\",\n                    \"description\": \"Reph Form. Required in Indic scripts. E.g. Devanagari, Kannada.\"\n                },\n                {\n                    \"name\": \"\\\"rtbd\\\"\",\n                    \"description\": \"Right Bounds.\"\n                },\n                {\n                    \"name\": \"\\\"rtla\\\"\",\n                    \"description\": \"Right-to-left alternates.\"\n                },\n                {\n                    \"name\": \"\\\"rtlm\\\"\",\n                    \"description\": \"Right-to-left mirrored forms.\"\n                },\n                {\n                    \"name\": \"\\\"ruby\\\"\",\n                    \"description\": \"Ruby Notation Forms. Applies only to Japanese.\"\n                },\n                {\n                    \"name\": \"\\\"salt\\\"\",\n                    \"description\": \"Stylistic Alternates.\"\n                },\n                {\n                    \"name\": \"\\\"sinf\\\"\",\n                    \"description\": \"Scientific Inferiors.\"\n                },\n                {\n                    \"name\": \"\\\"size\\\"\",\n                    \"description\": \"Optical size.\"\n                },\n                {\n                    \"name\": \"\\\"smcp\\\"\",\n                    \"description\": \"Small Capitals. Applies only to bicameral scripts.\"\n                },\n                {\n                    \"name\": \"\\\"smpl\\\"\",\n                    \"description\": \"Simplified Forms. Applies only to Chinese and Japanese.\"\n                },\n                {\n                    \"name\": \"\\\"ssty\\\"\",\n                    \"description\": \"Math script style alternates.\"\n                },\n                {\n                    \"name\": \"\\\"stch\\\"\",\n                    \"description\": \"Stretching Glyph Decomposition.\"\n                },\n                {\n                    \"name\": \"\\\"subs\\\"\",\n                    \"description\": \"Subscript.\"\n                },\n                {\n                    \"name\": \"\\\"sups\\\"\",\n                    \"description\": \"Superscript.\"\n                },\n                {\n                    \"name\": \"\\\"swsh\\\"\",\n                    \"description\": \"Swash. Does not apply to ideographic scripts.\"\n                },\n                {\n                    \"name\": \"\\\"titl\\\"\",\n                    \"description\": \"Titling.\"\n                },\n                {\n                    \"name\": \"\\\"tjmo\\\"\",\n                    \"description\": \"Trailing Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.\"\n                },\n                {\n                    \"name\": \"\\\"tnam\\\"\",\n                    \"description\": \"Traditional Name Forms. Applies only to Japanese.\"\n                },\n                {\n                    \"name\": \"\\\"tnum\\\"\",\n                    \"description\": \"Tabular Figures.\"\n                },\n                {\n                    \"name\": \"\\\"trad\\\"\",\n                    \"description\": \"Traditional Forms. Applies only to Chinese and Japanese.\"\n                },\n                {\n                    \"name\": \"\\\"twid\\\"\",\n                    \"description\": \"Third Widths. Generally used only in CJKV fonts.\"\n                },\n                {\n                    \"name\": \"\\\"unic\\\"\",\n                    \"description\": \"Unicase.\"\n                },\n                {\n                    \"name\": \"\\\"valt\\\"\",\n                    \"description\": \"Alternate Vertical Metrics. Applies only to scripts with vertical writing modes.\"\n                },\n                {\n                    \"name\": \"\\\"vatu\\\"\",\n                    \"description\": \"Vattu Variants. Used for Indic scripts. E.g. Devanagari.\"\n                },\n                {\n                    \"name\": \"\\\"vert\\\"\",\n                    \"description\": \"Vertical Alternates. Applies only to scripts with vertical writing modes.\"\n                },\n                {\n                    \"name\": \"\\\"vhal\\\"\",\n                    \"description\": \"Alternate Vertical Half Metrics. Used only in CJKV fonts.\"\n                },\n                {\n                    \"name\": \"\\\"vjmo\\\"\",\n                    \"description\": \"Vowel Jamo Forms. Required for Hangul script when Ancient Hangul writing system is supported.\"\n                },\n                {\n                    \"name\": \"\\\"vkna\\\"\",\n                    \"description\": \"Vertical Kana Alternates. Applies only to fonts that support kana (hiragana and katakana).\"\n                },\n                {\n                    \"name\": \"\\\"vkrn\\\"\",\n                    \"description\": \"Vertical Kerning.\"\n                },\n                {\n                    \"name\": \"\\\"vpal\\\"\",\n                    \"description\": \"Proportional Alternate Vertical Metrics. Used mostly in CJKV fonts.\"\n                },\n                {\n                    \"name\": \"\\\"vrt2\\\"\",\n                    \"description\": \"Vertical Alternates and Rotation. Applies only to scripts with vertical writing modes.\"\n                },\n                {\n                    \"name\": \"\\\"zero\\\"\",\n                    \"description\": \"Slashed Zero.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"No change in glyph substitution or positioning occurs.\"\n                },\n                {\n                    \"name\": \"off\",\n                    \"description\": \"Disable feature.\"\n                },\n                {\n                    \"name\": \"on\",\n                    \"description\": \"Enable feature.\"\n                }\n            ],\n            \"syntax\": \"normal | <feature-tag-value>#\",\n            \"relevance\": 55,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-feature-settings\"\n                }\n            ],\n            \"description\": \"Provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.\",\n            \"restrictions\": [\n                \"string\",\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"font-kerning\",\n            \"browsers\": [\n                \"E79\",\n                \"FF32\",\n                \"S9\",\n                \"C33\",\n                \"O20\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Specifies that kerning is applied at the discretion of the user agent.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Specifies that kerning is not applied.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Specifies that kerning is applied.\"\n                }\n            ],\n            \"syntax\": \"auto | normal | none\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-kerning\"\n                }\n            ],\n            \"description\": \"Kerning is the contextual adjustment of inter-glyph spacing. This property controls metric kerning, kerning that utilizes adjustment data contained in the font.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-language-override\",\n            \"browsers\": [\n                \"FF34\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Implies that when rendering with OpenType fonts the language of the document is used to infer the OpenType language system, used to select language specific features when rendering.\"\n                }\n            ],\n            \"syntax\": \"normal | <string>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-language-override\"\n                }\n            ],\n            \"description\": \"The value of 'normal' implies that when rendering with OpenType fonts the language of the document is used to infer the OpenType language system, used to select language specific features when rendering.\",\n            \"restrictions\": [\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"font-size\",\n            \"values\": [\n                {\n                    \"name\": \"large\"\n                },\n                {\n                    \"name\": \"larger\"\n                },\n                {\n                    \"name\": \"medium\"\n                },\n                {\n                    \"name\": \"small\"\n                },\n                {\n                    \"name\": \"smaller\"\n                },\n                {\n                    \"name\": \"x-large\"\n                },\n                {\n                    \"name\": \"x-small\"\n                },\n                {\n                    \"name\": \"xx-large\"\n                },\n                {\n                    \"name\": \"xx-small\"\n                }\n            ],\n            \"syntax\": \"<absolute-size> | <relative-size> | <length-percentage>\",\n            \"relevance\": 94,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-size\"\n                }\n            ],\n            \"description\": \"Indicates the desired height of glyphs from the font. For scalable fonts, the font-size is a scale factor applied to the EM unit of the font. (Note that certain glyphs may bleed outside their EM box.) For non-scalable fonts, the font-size is converted into absolute units and matched against the declared font-size of the font, using the same absolute coordinate space for both of the matched values.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"font-size-adjust\",\n            \"browsers\": [\n                \"E79\",\n                \"FF40\",\n                \"C43\",\n                \"O30\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Do not preserve the font’s x-height.\"\n                }\n            ],\n            \"syntax\": \"none | <number>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-size-adjust\"\n                }\n            ],\n            \"description\": \"Preserves the readability of text when font fallback occurs by adjusting the font-size so that the x-height is the same regardless of the font used.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"font-stretch\",\n            \"values\": [\n                {\n                    \"name\": \"condensed\"\n                },\n                {\n                    \"name\": \"expanded\"\n                },\n                {\n                    \"name\": \"extra-condensed\"\n                },\n                {\n                    \"name\": \"extra-expanded\"\n                },\n                {\n                    \"name\": \"narrower\",\n                    \"description\": \"Indicates a narrower value relative to the width of the parent element.\"\n                },\n                {\n                    \"name\": \"normal\"\n                },\n                {\n                    \"name\": \"semi-condensed\"\n                },\n                {\n                    \"name\": \"semi-expanded\"\n                },\n                {\n                    \"name\": \"ultra-condensed\"\n                },\n                {\n                    \"name\": \"ultra-expanded\"\n                },\n                {\n                    \"name\": \"wider\",\n                    \"description\": \"Indicates a wider value relative to the width of the parent element.\"\n                }\n            ],\n            \"syntax\": \"<font-stretch-absolute>{1,2}\",\n            \"relevance\": 53,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-stretch\"\n                }\n            ],\n            \"description\": \"Selects a normal, condensed, or expanded face from a font family.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-style\",\n            \"values\": [\n                {\n                    \"name\": \"italic\",\n                    \"description\": \"Selects a font that is labeled as an 'italic' face, or an 'oblique' face if one is not\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Selects a face that is classified as 'normal'.\"\n                },\n                {\n                    \"name\": \"oblique\",\n                    \"description\": \"Selects a font that is labeled as an 'oblique' face, or an 'italic' face if one is not.\"\n                }\n            ],\n            \"syntax\": \"normal | italic | oblique <angle>{0,2}\",\n            \"relevance\": 83,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-style\"\n                }\n            ],\n            \"description\": \"Allows italic or oblique faces to be selected. Italic forms are generally cursive in nature while oblique faces are typically sloped versions of the regular face.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-synthesis\",\n            \"browsers\": [\n                \"FF34\",\n                \"S9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Disallow all synthetic faces.\"\n                },\n                {\n                    \"name\": \"style\",\n                    \"description\": \"Allow synthetic italic faces.\"\n                },\n                {\n                    \"name\": \"weight\",\n                    \"description\": \"Allow synthetic bold faces.\"\n                }\n            ],\n            \"syntax\": \"none | [ weight || style ]\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-synthesis\"\n                }\n            ],\n            \"description\": \"Controls whether user agents are allowed to synthesize bold or oblique font faces when a font family lacks bold or italic faces.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-variant\",\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Specifies a face that is not labeled as a small-caps font.\"\n                },\n                {\n                    \"name\": \"small-caps\",\n                    \"description\": \"Specifies a font that is labeled as a small-caps font. If a genuine small-caps font is not available, user agents should simulate a small-caps font.\"\n                }\n            ],\n            \"syntax\": \"normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]\",\n            \"relevance\": 63,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-variant\"\n                }\n            ],\n            \"description\": \"Specifies variant representations of the font\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-variant-alternates\",\n            \"browsers\": [\n                \"FF34\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"annotation()\",\n                    \"description\": \"Enables display of alternate annotation forms.\"\n                },\n                {\n                    \"name\": \"character-variant()\",\n                    \"description\": \"Enables display of specific character variants.\"\n                },\n                {\n                    \"name\": \"historical-forms\",\n                    \"description\": \"Enables display of historical forms.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"None of the features are enabled.\"\n                },\n                {\n                    \"name\": \"ornaments()\",\n                    \"description\": \"Enables replacement of default glyphs with ornaments, if provided in the font.\"\n                },\n                {\n                    \"name\": \"styleset()\",\n                    \"description\": \"Enables display with stylistic sets.\"\n                },\n                {\n                    \"name\": \"stylistic()\",\n                    \"description\": \"Enables display of stylistic alternates.\"\n                },\n                {\n                    \"name\": \"swash()\",\n                    \"description\": \"Enables display of swash glyphs.\"\n                }\n            ],\n            \"syntax\": \"normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-variant-alternates\"\n                }\n            ],\n            \"description\": \"For any given character, fonts can provide a variety of alternate glyphs in addition to the default glyph for that character. This property provides control over the selection of these alternate glyphs.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-variant-caps\",\n            \"browsers\": [\n                \"E79\",\n                \"FF34\",\n                \"C52\",\n                \"O39\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"all-petite-caps\",\n                    \"description\": \"Enables display of petite capitals for both upper and lowercase letters.\"\n                },\n                {\n                    \"name\": \"all-small-caps\",\n                    \"description\": \"Enables display of small capitals for both upper and lowercase letters.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"None of the features are enabled.\"\n                },\n                {\n                    \"name\": \"petite-caps\",\n                    \"description\": \"Enables display of petite capitals.\"\n                },\n                {\n                    \"name\": \"small-caps\",\n                    \"description\": \"Enables display of small capitals. Small-caps glyphs typically use the form of uppercase letters but are reduced to the size of lowercase letters.\"\n                },\n                {\n                    \"name\": \"titling-caps\",\n                    \"description\": \"Enables display of titling capitals.\"\n                },\n                {\n                    \"name\": \"unicase\",\n                    \"description\": \"Enables display of mixture of small capitals for uppercase letters with normal lowercase letters.\"\n                }\n            ],\n            \"syntax\": \"normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-variant-caps\"\n                }\n            ],\n            \"description\": \"Specifies control over capitalized forms.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-variant-east-asian\",\n            \"browsers\": [\n                \"E79\",\n                \"FF34\",\n                \"C63\",\n                \"O50\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"full-width\",\n                    \"description\": \"Enables rendering of full-width variants.\"\n                },\n                {\n                    \"name\": \"jis04\",\n                    \"description\": \"Enables rendering of JIS04 forms.\"\n                },\n                {\n                    \"name\": \"jis78\",\n                    \"description\": \"Enables rendering of JIS78 forms.\"\n                },\n                {\n                    \"name\": \"jis83\",\n                    \"description\": \"Enables rendering of JIS83 forms.\"\n                },\n                {\n                    \"name\": \"jis90\",\n                    \"description\": \"Enables rendering of JIS90 forms.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"None of the features are enabled.\"\n                },\n                {\n                    \"name\": \"proportional-width\",\n                    \"description\": \"Enables rendering of proportionally-spaced variants.\"\n                },\n                {\n                    \"name\": \"ruby\",\n                    \"description\": \"Enables display of ruby variant glyphs.\"\n                },\n                {\n                    \"name\": \"simplified\",\n                    \"description\": \"Enables rendering of simplified forms.\"\n                },\n                {\n                    \"name\": \"traditional\",\n                    \"description\": \"Enables rendering of traditional forms.\"\n                }\n            ],\n            \"syntax\": \"normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-variant-east-asian\"\n                }\n            ],\n            \"description\": \"Allows control of glyph substitute and positioning in East Asian text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-variant-ligatures\",\n            \"browsers\": [\n                \"E79\",\n                \"FF34\",\n                \"S9.1\",\n                \"C34\",\n                \"O21\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"additional-ligatures\",\n                    \"description\": \"Enables display of additional ligatures.\"\n                },\n                {\n                    \"name\": \"common-ligatures\",\n                    \"description\": \"Enables display of common ligatures.\"\n                },\n                {\n                    \"name\": \"contextual\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF34\",\n                        \"S9.1\",\n                        \"C34\",\n                        \"O21\"\n                    ],\n                    \"description\": \"Enables display of contextual alternates.\"\n                },\n                {\n                    \"name\": \"discretionary-ligatures\",\n                    \"description\": \"Enables display of discretionary ligatures.\"\n                },\n                {\n                    \"name\": \"historical-ligatures\",\n                    \"description\": \"Enables display of historical ligatures.\"\n                },\n                {\n                    \"name\": \"no-additional-ligatures\",\n                    \"description\": \"Disables display of additional ligatures.\"\n                },\n                {\n                    \"name\": \"no-common-ligatures\",\n                    \"description\": \"Disables display of common ligatures.\"\n                },\n                {\n                    \"name\": \"no-contextual\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF34\",\n                        \"S9.1\",\n                        \"C34\",\n                        \"O21\"\n                    ],\n                    \"description\": \"Disables display of contextual alternates.\"\n                },\n                {\n                    \"name\": \"no-discretionary-ligatures\",\n                    \"description\": \"Disables display of discretionary ligatures.\"\n                },\n                {\n                    \"name\": \"no-historical-ligatures\",\n                    \"description\": \"Disables display of historical ligatures.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF34\",\n                        \"S9.1\",\n                        \"C34\",\n                        \"O21\"\n                    ],\n                    \"description\": \"Disables all ligatures.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Implies that the defaults set by the font are used.\"\n                }\n            ],\n            \"syntax\": \"normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-variant-ligatures\"\n                }\n            ],\n            \"description\": \"Specifies control over which ligatures are enabled or disabled. A value of ‘normal’ implies that the defaults set by the font are used.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-variant-numeric\",\n            \"browsers\": [\n                \"E79\",\n                \"FF34\",\n                \"S9.1\",\n                \"C52\",\n                \"O39\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"diagonal-fractions\",\n                    \"description\": \"Enables display of lining diagonal fractions.\"\n                },\n                {\n                    \"name\": \"lining-nums\",\n                    \"description\": \"Enables display of lining numerals.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"None of the features are enabled.\"\n                },\n                {\n                    \"name\": \"oldstyle-nums\",\n                    \"description\": \"Enables display of old-style numerals.\"\n                },\n                {\n                    \"name\": \"ordinal\",\n                    \"description\": \"Enables display of letter forms used with ordinal numbers.\"\n                },\n                {\n                    \"name\": \"proportional-nums\",\n                    \"description\": \"Enables display of proportional numerals.\"\n                },\n                {\n                    \"name\": \"slashed-zero\",\n                    \"description\": \"Enables display of slashed zeros.\"\n                },\n                {\n                    \"name\": \"stacked-fractions\",\n                    \"description\": \"Enables display of lining stacked fractions.\"\n                },\n                {\n                    \"name\": \"tabular-nums\",\n                    \"description\": \"Enables display of tabular numerals.\"\n                }\n            ],\n            \"syntax\": \"normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-variant-numeric\"\n                }\n            ],\n            \"description\": \"Specifies control over numerical forms.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-variant-position\",\n            \"browsers\": [\n                \"FF34\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"None of the features are enabled.\"\n                },\n                {\n                    \"name\": \"sub\",\n                    \"description\": \"Enables display of subscript variants (OpenType feature: subs).\"\n                },\n                {\n                    \"name\": \"super\",\n                    \"description\": \"Enables display of superscript variants (OpenType feature: sups).\"\n                }\n            ],\n            \"syntax\": \"normal | sub | super\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-variant-position\"\n                }\n            ],\n            \"description\": \"Specifies the vertical position\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"font-weight\",\n            \"values\": [\n                {\n                    \"name\": \"100\",\n                    \"description\": \"Thin\"\n                },\n                {\n                    \"name\": \"200\",\n                    \"description\": \"Extra Light (Ultra Light)\"\n                },\n                {\n                    \"name\": \"300\",\n                    \"description\": \"Light\"\n                },\n                {\n                    \"name\": \"400\",\n                    \"description\": \"Normal\"\n                },\n                {\n                    \"name\": \"500\",\n                    \"description\": \"Medium\"\n                },\n                {\n                    \"name\": \"600\",\n                    \"description\": \"Semi Bold (Demi Bold)\"\n                },\n                {\n                    \"name\": \"700\",\n                    \"description\": \"Bold\"\n                },\n                {\n                    \"name\": \"800\",\n                    \"description\": \"Extra Bold (Ultra Bold)\"\n                },\n                {\n                    \"name\": \"900\",\n                    \"description\": \"Black (Heavy)\"\n                },\n                {\n                    \"name\": \"bold\",\n                    \"description\": \"Same as 700\"\n                },\n                {\n                    \"name\": \"bolder\",\n                    \"description\": \"Specifies the weight of the face bolder than the inherited value.\"\n                },\n                {\n                    \"name\": \"lighter\",\n                    \"description\": \"Specifies the weight of the face lighter than the inherited value.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Same as 400\"\n                }\n            ],\n            \"syntax\": \"<font-weight-absolute>{1,2}\",\n            \"relevance\": 93,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-weight\"\n                }\n            ],\n            \"description\": \"Specifies weight of glyphs in the font, their degree of blackness or stroke thickness.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"glyph-orientation-horizontal\",\n            \"relevance\": 50,\n            \"description\": \"Controls glyph orientation when the inline-progression-direction is horizontal.\",\n            \"restrictions\": [\n                \"angle\",\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"glyph-orientation-vertical\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Sets the orientation based on the fullwidth or non-fullwidth characters and the most common orientation.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Controls glyph orientation when the inline-progression-direction is vertical.\",\n            \"restrictions\": [\n                \"angle\",\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-area\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    \"name\": \"span\",\n                    \"description\": \"Contributes a grid span to the grid item’s placement such that the corresponding edge of the grid item’s grid area is N lines from its opposite edge.\"\n                }\n            ],\n            \"syntax\": \"<grid-line> [ / <grid-line> ]{0,3}\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-area\"\n                }\n            ],\n            \"description\": \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement. Shorthand for 'grid-row-start', 'grid-column-start', 'grid-row-end', and 'grid-column-end'.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"grid\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"syntax\": \"<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid\"\n                }\n            ],\n            \"description\": \"The grid CSS property is a shorthand property that sets all of the explicit grid properties ('grid-template-rows', 'grid-template-columns', and 'grid-template-areas'), and all the implicit grid properties ('grid-auto-rows', 'grid-auto-columns', and 'grid-auto-flow'), in a single declaration.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"length\",\n                \"percentage\",\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-auto-columns\",\n            \"values\": [\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"minmax()\",\n                    \"description\": \"Defines a size range greater than or equal to min and less than or equal to max.\"\n                }\n            ],\n            \"syntax\": \"<track-size>+\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-auto-columns\"\n                }\n            ],\n            \"description\": \"Specifies the size of implicitly created columns.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"grid-auto-flow\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"row\",\n                    \"description\": \"The auto-placement algorithm places items by filling each row in turn, adding new rows as necessary.\"\n                },\n                {\n                    \"name\": \"column\",\n                    \"description\": \"The auto-placement algorithm places items by filling each column in turn, adding new columns as necessary.\"\n                },\n                {\n                    \"name\": \"dense\",\n                    \"description\": \"If specified, the auto-placement algorithm uses a “dense” packing algorithm, which attempts to fill in holes earlier in the grid if smaller items come up later.\"\n                }\n            ],\n            \"syntax\": \"[ row | column ] || dense\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-auto-flow\"\n                }\n            ],\n            \"description\": \"Controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-auto-rows\",\n            \"values\": [\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"minmax()\",\n                    \"description\": \"Defines a size range greater than or equal to min and less than or equal to max.\"\n                }\n            ],\n            \"syntax\": \"<track-size>+\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-auto-rows\"\n                }\n            ],\n            \"description\": \"Specifies the size of implicitly created rows.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"grid-column\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    \"name\": \"span\",\n                    \"description\": \"Contributes a grid span to the grid item’s placement such that the corresponding edge of the grid item’s grid area is N lines from its opposite edge.\"\n                }\n            ],\n            \"syntax\": \"<grid-line> [ / <grid-line> ]?\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-column\"\n                }\n            ],\n            \"description\": \"Shorthand for 'grid-column-start' and 'grid-column-end'.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-column-end\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    \"name\": \"span\",\n                    \"description\": \"Contributes a grid span to the grid item’s placement such that the corresponding edge of the grid item’s grid area is N lines from its opposite edge.\"\n                }\n            ],\n            \"syntax\": \"<grid-line>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-column-end\"\n                }\n            ],\n            \"description\": \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-column-gap\",\n            \"browsers\": [\n                \"FF52\",\n                \"C57\",\n                \"S10.1\",\n                \"O44\"\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"<length-percentage>\",\n            \"relevance\": 1,\n            \"description\": \"Specifies the gutters between grid columns. Replaced by 'column-gap' property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"grid-column-start\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    \"name\": \"span\",\n                    \"description\": \"Contributes a grid span to the grid item’s placement such that the corresponding edge of the grid item’s grid area is N lines from its opposite edge.\"\n                }\n            ],\n            \"syntax\": \"<grid-line>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-column-start\"\n                }\n            ],\n            \"description\": \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-gap\",\n            \"browsers\": [\n                \"FF52\",\n                \"C57\",\n                \"S10.1\",\n                \"O44\"\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"<'grid-row-gap'> <'grid-column-gap'>?\",\n            \"relevance\": 1,\n            \"description\": \"Shorthand that specifies the gutters between grid columns and grid rows in one declaration. Replaced by 'gap' property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"grid-row\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    \"name\": \"span\",\n                    \"description\": \"Contributes a grid span to the grid item’s placement such that the corresponding edge of the grid item’s grid area is N lines from its opposite edge.\"\n                }\n            ],\n            \"syntax\": \"<grid-line> [ / <grid-line> ]?\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-row\"\n                }\n            ],\n            \"description\": \"Shorthand for 'grid-row-start' and 'grid-row-end'.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-row-end\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    \"name\": \"span\",\n                    \"description\": \"Contributes a grid span to the grid item’s placement such that the corresponding edge of the grid item’s grid area is N lines from its opposite edge.\"\n                }\n            ],\n            \"syntax\": \"<grid-line>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-row-end\"\n                }\n            ],\n            \"description\": \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-row-gap\",\n            \"browsers\": [\n                \"FF52\",\n                \"C57\",\n                \"S10.1\",\n                \"O44\"\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"<length-percentage>\",\n            \"relevance\": 1,\n            \"description\": \"Specifies the gutters between grid rows. Replaced by 'row-gap' property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"grid-row-start\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The property contributes nothing to the grid item’s placement, indicating auto-placement, an automatic span, or a default span of one.\"\n                },\n                {\n                    \"name\": \"span\",\n                    \"description\": \"Contributes a grid span to the grid item’s placement such that the corresponding edge of the grid item’s grid area is N lines from its opposite edge.\"\n                }\n            ],\n            \"syntax\": \"<grid-line>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-row-start\"\n                }\n            ],\n            \"description\": \"Determine a grid item’s size and location within the grid by contributing a line, a span, or nothing (automatic) to its grid placement.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-template\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Sets all three properties to their initial values.\"\n                },\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"subgrid\",\n                    \"description\": \"Sets 'grid-template-rows' and 'grid-template-columns' to 'subgrid', and 'grid-template-areas' to its initial value.\"\n                },\n                {\n                    \"name\": \"minmax()\",\n                    \"description\": \"Defines a size range greater than or equal to min and less than or equal to max.\"\n                },\n                {\n                    \"name\": \"repeat()\",\n                    \"description\": \"Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.\"\n                }\n            ],\n            \"syntax\": \"none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-template\"\n                }\n            ],\n            \"description\": \"Shorthand for setting grid-template-columns, grid-template-rows, and grid-template-areas in a single declaration.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"length\",\n                \"percentage\",\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-template-areas\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The grid container doesn’t define any named grid areas.\"\n                }\n            ],\n            \"syntax\": \"none | <string>+\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-template-areas\"\n                }\n            ],\n            \"description\": \"Specifies named grid areas, which are not associated with any particular grid item, but can be referenced from the grid-placement properties.\",\n            \"restrictions\": [\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"grid-template-columns\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"There is no explicit grid; any rows/columns will be implicitly generated.\"\n                },\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"subgrid\",\n                    \"description\": \"Indicates that the grid will align to its parent grid in that axis.\"\n                },\n                {\n                    \"name\": \"minmax()\",\n                    \"description\": \"Defines a size range greater than or equal to min and less than or equal to max.\"\n                },\n                {\n                    \"name\": \"repeat()\",\n                    \"description\": \"Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.\"\n                }\n            ],\n            \"syntax\": \"none | <track-list> | <auto-track-list> | subgrid <line-name-list>?\",\n            \"relevance\": 55,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-template-columns\"\n                }\n            ],\n            \"description\": \"specifies, as a space-separated track list, the line names and track sizing functions of the grid.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"length\",\n                \"percentage\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"grid-template-rows\",\n            \"browsers\": [\n                \"E16\",\n                \"FF52\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"There is no explicit grid; any rows/columns will be implicitly generated.\"\n                },\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Represents the largest min-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Represents the largest max-content contribution of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"As a maximum, identical to 'max-content'. As a minimum, represents the largest minimum size (as specified by min-width/min-height) of the grid items occupying the grid track.\"\n                },\n                {\n                    \"name\": \"subgrid\",\n                    \"description\": \"Indicates that the grid will align to its parent grid in that axis.\"\n                },\n                {\n                    \"name\": \"minmax()\",\n                    \"description\": \"Defines a size range greater than or equal to min and less than or equal to max.\"\n                },\n                {\n                    \"name\": \"repeat()\",\n                    \"description\": \"Represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form.\"\n                }\n            ],\n            \"syntax\": \"none | <track-list> | <auto-track-list> | subgrid <line-name-list>?\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/grid-template-rows\"\n                }\n            ],\n            \"description\": \"specifies, as a space-separated track list, the line names and track sizing functions of the grid.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"length\",\n                \"percentage\",\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"height\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The height depends on the values of other properties.\"\n                },\n                {\n                    \"name\": \"fit-content\",\n                    \"description\": \"Use the fit-content inline size or fit-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>{1,2}\",\n            \"relevance\": 96,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/height\"\n                }\n            ],\n            \"description\": \"Specifies the height of the content area, padding area or border area (depending on 'box-sizing') of certain boxes.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"hyphens\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                },\n                {\n                    \"name\": \"manual\",\n                    \"description\": \"Words are only broken at line breaks where there are characters inside the word that suggest line break opportunities\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                }\n            ],\n            \"syntax\": \"none | manual | auto\",\n            \"relevance\": 53,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/hyphens\"\n                }\n            ],\n            \"description\": \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"image-orientation\",\n            \"browsers\": [\n                \"E81\",\n                \"FF26\",\n                \"S13.1\",\n                \"C81\",\n                \"O67\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"flip\",\n                    \"description\": \"After rotating by the precededing angle, the image is flipped horizontally. Defaults to 0deg if the angle is ommitted.\"\n                },\n                {\n                    \"name\": \"from-image\",\n                    \"description\": \"If the image has an orientation specified in its metadata, such as EXIF, this value computes to the angle that the metadata specifies is necessary to correctly orient the image.\"\n                }\n            ],\n            \"syntax\": \"from-image | <angle> | [ <angle>? flip ]\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/image-orientation\"\n                }\n            ],\n            \"description\": \"Specifies an orthogonal rotation to be applied to an image before it is laid out.\",\n            \"restrictions\": [\n                \"angle\"\n            ]\n        },\n        {\n            \"name\": \"image-rendering\",\n            \"browsers\": [\n                \"E79\",\n                \"FF3.6\",\n                \"S6\",\n                \"C13\",\n                \"O15\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The image should be scaled with an algorithm that maximizes the appearance of the image.\"\n                },\n                {\n                    \"name\": \"crisp-edges\",\n                    \"description\": \"The image must be scaled with an algorithm that preserves contrast and edges in the image, and which does not smooth colors or introduce blur to the image in the process.\"\n                },\n                {\n                    \"name\": \"-moz-crisp-edges\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF3.6\",\n                        \"S6\",\n                        \"C13\",\n                        \"O15\"\n                    ]\n                },\n                {\n                    \"name\": \"optimizeQuality\",\n                    \"description\": \"Deprecated.\"\n                },\n                {\n                    \"name\": \"optimizeSpeed\",\n                    \"description\": \"Deprecated.\"\n                },\n                {\n                    \"name\": \"pixelated\",\n                    \"description\": \"When scaling the image up, the 'nearest neighbor' or similar algorithm must be used, so that the image appears to be simply composed of very large pixels.\"\n                }\n            ],\n            \"syntax\": \"auto | crisp-edges | pixelated\",\n            \"relevance\": 55,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/image-rendering\"\n                }\n            ],\n            \"description\": \"Provides a hint to the user-agent about what aspects of an image are most important to preserve when the image is scaled, to aid the user-agent in the choice of an appropriate scaling algorithm.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"ime-mode\",\n            \"browsers\": [\n                \"E12\",\n                \"FF3\",\n                \"IE5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"active\",\n                    \"description\": \"The input method editor is initially active; text entry is performed using it unless the user specifically dismisses it.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"No change is made to the current input method editor state. This is the default.\"\n                },\n                {\n                    \"name\": \"disabled\",\n                    \"description\": \"The input method editor is disabled and may not be activated by the user.\"\n                },\n                {\n                    \"name\": \"inactive\",\n                    \"description\": \"The input method editor is initially inactive, but the user may activate it if they wish.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"The IME state should be normal; this value can be used in a user style sheet to override the page setting.\"\n                }\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"auto | normal | active | inactive | disabled\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/ime-mode\"\n                }\n            ],\n            \"description\": \"Controls the state of the input method editor for text fields.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"inline-size\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Depends on the values of other properties.\"\n                }\n            ],\n            \"syntax\": \"<'width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/inline-size\"\n                }\n            ],\n            \"description\": \"Logical 'height'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"isolation\",\n            \"browsers\": [\n                \"E79\",\n                \"FF36\",\n                \"S8\",\n                \"C41\",\n                \"O30\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Elements are not isolated unless an operation is applied that causes the creation of a stacking context.\"\n                },\n                {\n                    \"name\": \"isolate\",\n                    \"description\": \"In CSS will turn the element into a stacking context.\"\n                }\n            ],\n            \"syntax\": \"auto | isolate\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/isolation\"\n                }\n            ],\n            \"description\": \"In CSS setting to 'isolate' will turn the element into a stacking context. In SVG, it defines whether an element is isolated or not.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"justify-content\",\n            \"values\": [\n                {\n                    \"name\": \"center\",\n                    \"description\": \"Flex items are packed toward the center of the line.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"The items are packed flush to each other toward the start edge of the alignment container in the main axis.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"The items are packed flush to each other toward the end edge of the alignment container in the main axis.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"The items are packed flush to each other toward the left edge of the alignment container in the main axis.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"The items are packed flush to each other toward the right edge of the alignment container in the main axis.\"\n                },\n                {\n                    \"name\": \"safe\",\n                    \"description\": \"If the size of the item overflows the alignment container, the item is instead aligned as if the alignment mode were start.\"\n                },\n                {\n                    \"name\": \"unsafe\",\n                    \"description\": \"Regardless of the relative sizes of the item and alignment container, the given alignment value is honored.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"If the combined size of the alignment subjects is less than the size of the alignment container, any auto-sized alignment subjects have their size increased equally (not proportionally), while still respecting the constraints imposed by max-height/max-width (or equivalent functionality), so that the combined size exactly fills the alignment container.\"\n                },\n                {\n                    \"name\": \"space-evenly\",\n                    \"description\": \"The items are evenly distributed within the alignment container along the main axis.\"\n                },\n                {\n                    \"name\": \"flex-end\",\n                    \"description\": \"Flex items are packed toward the end of the line.\"\n                },\n                {\n                    \"name\": \"flex-start\",\n                    \"description\": \"Flex items are packed toward the start of the line.\"\n                },\n                {\n                    \"name\": \"space-around\",\n                    \"description\": \"Flex items are evenly distributed in the line, with half-size spaces on either end.\"\n                },\n                {\n                    \"name\": \"space-between\",\n                    \"description\": \"Flex items are evenly distributed in the line.\"\n                },\n                {\n                    \"name\": \"baseline\",\n                    \"description\": \"Specifies participation in first-baseline alignment.\"\n                },\n                {\n                    \"name\": \"first baseline\",\n                    \"description\": \"Specifies participation in first-baseline alignment.\"\n                },\n                {\n                    \"name\": \"last baseline\",\n                    \"description\": \"Specifies participation in last-baseline alignment.\"\n                }\n            ],\n            \"syntax\": \"normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]\",\n            \"relevance\": 82,\n            \"description\": \"Aligns flex items along the main axis of the current line of the flex container.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"kerning\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Indicates that the user agent should adjust inter-glyph spacing based on kerning tables that are included in the font that will be used.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Indicates whether the user agent should adjust inter-glyph spacing based on kerning tables that are included in the relevant font or instead disable auto-kerning and set inter-character spacing to a specific length.\",\n            \"restrictions\": [\n                \"length\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"left\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"relevance\": 95,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/left\"\n                }\n            ],\n            \"description\": \"Specifies how far an absolutely positioned box's left margin edge is offset to the right of the left edge of the box's 'containing block'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"letter-spacing\",\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"The spacing is the normal spacing for the current font. It is typically zero-length.\"\n                }\n            ],\n            \"syntax\": \"normal | <length>\",\n            \"relevance\": 79,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/letter-spacing\"\n                }\n            ],\n            \"description\": \"Specifies the minimum, maximum, and optimal spacing between grapheme clusters.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"lighting-color\",\n            \"browsers\": [\n                \"E\",\n                \"C5\",\n                \"FF3\",\n                \"IE10\",\n                \"O9\",\n                \"S6\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines the color of the light source for filter primitives 'feDiffuseLighting' and 'feSpecularLighting'.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"line-break\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The UA determines the set of line-breaking restrictions to use for CJK scripts, and it may vary the restrictions based on the length of the line; e.g., use a less restrictive set of line-break rules for short lines.\"\n                },\n                {\n                    \"name\": \"loose\",\n                    \"description\": \"Breaks text using the least restrictive set of line-breaking rules. Typically used for short lines, such as in newspapers.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Breaks text using the most common set of line-breaking rules.\"\n                },\n                {\n                    \"name\": \"strict\",\n                    \"description\": \"Breaks CJK scripts using a more restrictive set of line-breaking rules than 'normal'.\"\n                }\n            ],\n            \"syntax\": \"auto | loose | normal | strict | anywhere\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/line-break\"\n                }\n            ],\n            \"description\": \"Specifies what set of line breaking restrictions are in effect within the element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"line-height\",\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Tells user agents to set the computed value to a 'reasonable' value based on the font size of the element.\"\n                }\n            ],\n            \"syntax\": \"normal | <number> | <length> | <percentage>\",\n            \"relevance\": 92,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/line-height\"\n                }\n            ],\n            \"description\": \"Determines the block-progression dimension of the text content area of an inline box.\",\n            \"restrictions\": [\n                \"number\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"list-style\",\n            \"values\": [\n                {\n                    \"name\": \"armenian\"\n                },\n                {\n                    \"name\": \"circle\",\n                    \"description\": \"A hollow circle.\"\n                },\n                {\n                    \"name\": \"decimal\"\n                },\n                {\n                    \"name\": \"decimal-leading-zero\"\n                },\n                {\n                    \"name\": \"disc\",\n                    \"description\": \"A filled circle.\"\n                },\n                {\n                    \"name\": \"georgian\"\n                },\n                {\n                    \"name\": \"inside\",\n                    \"description\": \"The marker box is outside the principal block box, as described in the section on the ::marker pseudo-element below.\"\n                },\n                {\n                    \"name\": \"lower-alpha\"\n                },\n                {\n                    \"name\": \"lower-greek\"\n                },\n                {\n                    \"name\": \"lower-latin\"\n                },\n                {\n                    \"name\": \"lower-roman\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"outside\",\n                    \"description\": \"The ::marker pseudo-element is an inline element placed immediately before all ::before pseudo-elements in the principal block box, after which the element's content flows.\"\n                },\n                {\n                    \"name\": \"square\",\n                    \"description\": \"A filled square.\"\n                },\n                {\n                    \"name\": \"symbols()\",\n                    \"description\": \"Allows a counter style to be defined inline.\"\n                },\n                {\n                    \"name\": \"upper-alpha\"\n                },\n                {\n                    \"name\": \"upper-latin\"\n                },\n                {\n                    \"name\": \"upper-roman\"\n                },\n                {\n                    \"name\": \"url()\"\n                }\n            ],\n            \"syntax\": \"<'list-style-type'> || <'list-style-position'> || <'list-style-image'>\",\n            \"relevance\": 84,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/list-style\"\n                }\n            ],\n            \"description\": \"Shorthand for setting 'list-style-type', 'list-style-position' and 'list-style-image'\",\n            \"restrictions\": [\n                \"image\",\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"list-style-image\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The default contents of the of the list item’s marker are given by 'list-style-type' instead.\"\n                }\n            ],\n            \"syntax\": \"<url> | none\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/list-style-image\"\n                }\n            ],\n            \"description\": \"Sets the image that will be used as the list item marker. When the image is available, it will replace the marker set with the 'list-style-type' marker.\",\n            \"restrictions\": [\n                \"image\"\n            ]\n        },\n        {\n            \"name\": \"list-style-position\",\n            \"values\": [\n                {\n                    \"name\": \"inside\",\n                    \"description\": \"The marker box is outside the principal block box, as described in the section on the ::marker pseudo-element below.\"\n                },\n                {\n                    \"name\": \"outside\",\n                    \"description\": \"The ::marker pseudo-element is an inline element placed immediately before all ::before pseudo-elements in the principal block box, after which the element's content flows.\"\n                }\n            ],\n            \"syntax\": \"inside | outside\",\n            \"relevance\": 55,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/list-style-position\"\n                }\n            ],\n            \"description\": \"Specifies the position of the '::marker' pseudo-element's box in the list item.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"list-style-type\",\n            \"values\": [\n                {\n                    \"name\": \"armenian\",\n                    \"description\": \"Traditional uppercase Armenian numbering.\"\n                },\n                {\n                    \"name\": \"circle\",\n                    \"description\": \"A hollow circle.\"\n                },\n                {\n                    \"name\": \"decimal\",\n                    \"description\": \"Western decimal numbers.\"\n                },\n                {\n                    \"name\": \"decimal-leading-zero\",\n                    \"description\": \"Decimal numbers padded by initial zeros.\"\n                },\n                {\n                    \"name\": \"disc\",\n                    \"description\": \"A filled circle.\"\n                },\n                {\n                    \"name\": \"georgian\",\n                    \"description\": \"Traditional Georgian numbering.\"\n                },\n                {\n                    \"name\": \"lower-alpha\",\n                    \"description\": \"Lowercase ASCII letters.\"\n                },\n                {\n                    \"name\": \"lower-greek\",\n                    \"description\": \"Lowercase classical Greek.\"\n                },\n                {\n                    \"name\": \"lower-latin\",\n                    \"description\": \"Lowercase ASCII letters.\"\n                },\n                {\n                    \"name\": \"lower-roman\",\n                    \"description\": \"Lowercase ASCII Roman numerals.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No marker\"\n                },\n                {\n                    \"name\": \"square\",\n                    \"description\": \"A filled square.\"\n                },\n                {\n                    \"name\": \"symbols()\",\n                    \"description\": \"Allows a counter style to be defined inline.\"\n                },\n                {\n                    \"name\": \"upper-alpha\",\n                    \"description\": \"Uppercase ASCII letters.\"\n                },\n                {\n                    \"name\": \"upper-latin\",\n                    \"description\": \"Uppercase ASCII letters.\"\n                },\n                {\n                    \"name\": \"upper-roman\",\n                    \"description\": \"Uppercase ASCII Roman numerals.\"\n                }\n            ],\n            \"syntax\": \"<counter-style> | <string> | none\",\n            \"relevance\": 74,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/list-style-type\"\n                }\n            ],\n            \"description\": \"Used to construct the default contents of a list item’s marker\",\n            \"restrictions\": [\n                \"enum\",\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"margin\",\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"syntax\": \"[ <length> | <percentage> | auto ]{1,4}\",\n            \"relevance\": 95,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin\"\n                }\n            ],\n            \"description\": \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"margin-block-end\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"syntax\": \"<'margin-left'>\",\n            \"relevance\": 53,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-block-end\"\n                }\n            ],\n            \"description\": \"Logical 'margin-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"margin-block-start\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"syntax\": \"<'margin-left'>\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-block-start\"\n                }\n            ],\n            \"description\": \"Logical 'margin-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"margin-bottom\",\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"relevance\": 91,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-bottom\"\n                }\n            ],\n            \"description\": \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"margin-inline-end\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"syntax\": \"<'margin-left'>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-inline-end\"\n                }\n            ],\n            \"description\": \"Logical 'margin-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"margin-inline-start\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"syntax\": \"<'margin-left'>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-inline-start\"\n                }\n            ],\n            \"description\": \"Logical 'margin-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"margin-left\",\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"relevance\": 91,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-left\"\n                }\n            ],\n            \"description\": \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"margin-right\",\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"relevance\": 90,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-right\"\n                }\n            ],\n            \"description\": \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"margin-top\",\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"relevance\": 95,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-top\"\n                }\n            ],\n            \"description\": \"Shorthand property to set values the thickness of the margin area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. Negative values for margin properties are allowed, but there may be implementation-specific limits..\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"marker\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                },\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"Indicates that the <marker> element referenced will be used.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the marker symbol that shall be used for all points on the sets the value for all vertices on the given ‘path’ element or basic shape.\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"marker-end\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                },\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"Indicates that the <marker> element referenced will be used.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the marker that will be drawn at the last vertices of the given markable element.\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"marker-mid\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                },\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"Indicates that the <marker> element referenced will be used.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the marker that will be drawn at all vertices except the first and last.\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"marker-start\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Indicates that no marker symbol will be drawn at the given vertex or vertices.\"\n                },\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"Indicates that the <marker> element referenced will be used.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the marker that will be drawn at the first vertices of the given markable element.\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"mask-image\",\n            \"browsers\": [\n                \"E16\",\n                \"FF53\",\n                \"S4\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Counts as a transparent black image layer.\"\n                },\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"Reference to a <mask element or to a CSS image.\"\n                }\n            ],\n            \"syntax\": \"<mask-reference>#\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mask-image\"\n                }\n            ],\n            \"description\": \"Sets the mask layer image of an element.\",\n            \"restrictions\": [\n                \"url\",\n                \"image\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"mask-mode\",\n            \"browsers\": [\n                \"FF53\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"alpha\",\n                    \"description\": \"Alpha values of the mask layer image should be used as the mask values.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Use alpha values if 'mask-image' is an image, luminance if a <mask> element or a CSS image.\"\n                },\n                {\n                    \"name\": \"luminance\",\n                    \"description\": \"Luminance values of the mask layer image should be used as the mask values.\"\n                }\n            ],\n            \"syntax\": \"<masking-mode>#\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mask-mode\"\n                }\n            ],\n            \"description\": \"Indicates whether the mask layer image is treated as luminance mask or alpha mask.\",\n            \"restrictions\": [\n                \"url\",\n                \"image\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"mask-origin\",\n            \"browsers\": [\n                \"E79\",\n                \"FF53\",\n                \"S4\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"syntax\": \"<geometry-box>#\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mask-origin\"\n                }\n            ],\n            \"description\": \"Specifies the mask positioning area.\",\n            \"restrictions\": [\n                \"geometry-box\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"mask-position\",\n            \"browsers\": [\n                \"E18\",\n                \"FF53\",\n                \"S3.2\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"syntax\": \"<position>#\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mask-position\"\n                }\n            ],\n            \"description\": \"Specifies how mask layer images are positioned.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"mask-repeat\",\n            \"browsers\": [\n                \"E18\",\n                \"FF53\",\n                \"S3.2\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"syntax\": \"<repeat-style>#\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mask-repeat\"\n                }\n            ],\n            \"description\": \"Specifies how mask layer images are tiled after they have been sized and positioned.\",\n            \"restrictions\": [\n                \"repeat\"\n            ]\n        },\n        {\n            \"name\": \"mask-size\",\n            \"browsers\": [\n                \"E18\",\n                \"FF53\",\n                \"S4\",\n                \"C4\",\n                \"O15\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%.\"\n                },\n                {\n                    \"name\": \"contain\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area.\"\n                },\n                {\n                    \"name\": \"cover\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area.\"\n                }\n            ],\n            \"syntax\": \"<bg-size>#\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mask-size\"\n                }\n            ],\n            \"description\": \"Specifies the size of the mask layer images.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"mask-type\",\n            \"browsers\": [\n                \"E79\",\n                \"FF35\",\n                \"S6.1\",\n                \"C24\",\n                \"O15\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"alpha\",\n                    \"description\": \"Indicates that the alpha values of the mask should be used.\"\n                },\n                {\n                    \"name\": \"luminance\",\n                    \"description\": \"Indicates that the luminance values of the mask should be used.\"\n                }\n            ],\n            \"syntax\": \"luminance | alpha\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mask-type\"\n                }\n            ],\n            \"description\": \"Defines whether the content of the <mask> element is treated as as luminance mask or alpha mask.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"max-block-size\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No limit on the width of the box.\"\n                }\n            ],\n            \"syntax\": \"<'max-width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/max-block-size\"\n                }\n            ],\n            \"description\": \"Logical 'max-width'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"max-height\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No limit on the height of the box.\"\n                },\n                {\n                    \"name\": \"fit-content\",\n                    \"description\": \"Use the fit-content inline size or fit-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>\",\n            \"relevance\": 84,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/max-height\"\n                }\n            ],\n            \"description\": \"Allows authors to constrain content height to a certain range.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"max-inline-size\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No limit on the height of the box.\"\n                }\n            ],\n            \"syntax\": \"<'max-width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/max-inline-size\"\n                }\n            ],\n            \"description\": \"Logical 'max-height'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"max-width\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No limit on the width of the box.\"\n                },\n                {\n                    \"name\": \"fit-content\",\n                    \"description\": \"Use the fit-content inline size or fit-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>\",\n            \"relevance\": 89,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/max-width\"\n                }\n            ],\n            \"description\": \"Allows authors to constrain content width to a certain range.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"min-block-size\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"syntax\": \"<'min-width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/min-block-size\"\n                }\n            ],\n            \"description\": \"Logical 'min-width'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"min-height\",\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"fit-content\",\n                    \"description\": \"Use the fit-content inline size or fit-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>\",\n            \"relevance\": 88,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/min-height\"\n                }\n            ],\n            \"description\": \"Allows authors to constrain content height to a certain range.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"min-inline-size\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"syntax\": \"<'min-width'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/min-inline-size\"\n                }\n            ],\n            \"description\": \"Logical 'min-height'. Mapping depends on the element’s 'writing-mode'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"min-width\",\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"fit-content\",\n                    \"description\": \"Use the fit-content inline size or fit-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>\",\n            \"relevance\": 87,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/min-width\"\n                }\n            ],\n            \"description\": \"Allows authors to constrain content width to a certain range.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"mix-blend-mode\",\n            \"browsers\": [\n                \"E79\",\n                \"FF32\",\n                \"S8\",\n                \"C41\",\n                \"O28\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Default attribute which specifies no blending\"\n                },\n                {\n                    \"name\": \"multiply\",\n                    \"description\": \"The source color is multiplied by the destination color and replaces the destination.\"\n                },\n                {\n                    \"name\": \"screen\",\n                    \"description\": \"Multiplies the complements of the backdrop and source color values, then complements the result.\"\n                },\n                {\n                    \"name\": \"overlay\",\n                    \"description\": \"Multiplies or screens the colors, depending on the backdrop color value.\"\n                },\n                {\n                    \"name\": \"darken\",\n                    \"description\": \"Selects the darker of the backdrop and source colors.\"\n                },\n                {\n                    \"name\": \"lighten\",\n                    \"description\": \"Selects the lighter of the backdrop and source colors.\"\n                },\n                {\n                    \"name\": \"color-dodge\",\n                    \"description\": \"Brightens the backdrop color to reflect the source color.\"\n                },\n                {\n                    \"name\": \"color-burn\",\n                    \"description\": \"Darkens the backdrop color to reflect the source color.\"\n                },\n                {\n                    \"name\": \"hard-light\",\n                    \"description\": \"Multiplies or screens the colors, depending on the source color value.\"\n                },\n                {\n                    \"name\": \"soft-light\",\n                    \"description\": \"Darkens or lightens the colors, depending on the source color value.\"\n                },\n                {\n                    \"name\": \"difference\",\n                    \"description\": \"Subtracts the darker of the two constituent colors from the lighter color..\"\n                },\n                {\n                    \"name\": \"exclusion\",\n                    \"description\": \"Produces an effect similar to that of the Difference mode but lower in contrast.\"\n                },\n                {\n                    \"name\": \"hue\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF32\",\n                        \"S8\",\n                        \"C41\",\n                        \"O28\"\n                    ],\n                    \"description\": \"Creates a color with the hue of the source color and the saturation and luminosity of the backdrop color.\"\n                },\n                {\n                    \"name\": \"saturation\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF32\",\n                        \"S8\",\n                        \"C41\",\n                        \"O28\"\n                    ],\n                    \"description\": \"Creates a color with the saturation of the source color and the hue and luminosity of the backdrop color.\"\n                },\n                {\n                    \"name\": \"color\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF32\",\n                        \"S8\",\n                        \"C41\",\n                        \"O28\"\n                    ],\n                    \"description\": \"Creates a color with the hue and saturation of the source color and the luminosity of the backdrop color.\"\n                },\n                {\n                    \"name\": \"luminosity\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF32\",\n                        \"S8\",\n                        \"C41\",\n                        \"O28\"\n                    ],\n                    \"description\": \"Creates a color with the luminosity of the source color and the hue and saturation of the backdrop color.\"\n                }\n            ],\n            \"syntax\": \"<blend-mode>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mix-blend-mode\"\n                }\n            ],\n            \"description\": \"Defines the formula that must be used to mix the colors with the backdrop.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"motion\",\n            \"browsers\": [\n                \"C46\",\n                \"O33\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No motion path gets created.\"\n                },\n                {\n                    \"name\": \"path()\",\n                    \"description\": \"Defines an SVG path as a string, with optional 'fill-rule' as the first argument.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Indicates that the object is rotated by the angle of the direction of the motion path.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"Indicates that the object is rotated by the angle of the direction of the motion path plus 180 degrees.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property for setting 'motion-path', 'motion-offset' and 'motion-rotation'.\",\n            \"restrictions\": [\n                \"url\",\n                \"length\",\n                \"percentage\",\n                \"angle\",\n                \"shape\",\n                \"geometry-box\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"motion-offset\",\n            \"browsers\": [\n                \"C46\",\n                \"O33\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"A distance that describes the position along the specified motion path.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"motion-path\",\n            \"browsers\": [\n                \"C46\",\n                \"O33\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No motion path gets created.\"\n                },\n                {\n                    \"name\": \"path()\",\n                    \"description\": \"Defines an SVG path as a string, with optional 'fill-rule' as the first argument.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the motion path the element gets positioned at.\",\n            \"restrictions\": [\n                \"url\",\n                \"shape\",\n                \"geometry-box\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"motion-rotation\",\n            \"browsers\": [\n                \"C46\",\n                \"O33\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Indicates that the object is rotated by the angle of the direction of the motion path.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"Indicates that the object is rotated by the angle of the direction of the motion path plus 180 degrees.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines the direction of the element while positioning along the motion path.\",\n            \"restrictions\": [\n                \"angle\"\n            ]\n        },\n        {\n            \"name\": \"-moz-animation\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"alternate\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\"\n                },\n                {\n                    \"name\": \"alternate-reverse\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\"\n                },\n                {\n                    \"name\": \"backwards\",\n                    \"description\": \"The beginning property value (as defined in the first @keyframes at-rule) is applied before the animation is displayed, during the period defined by 'animation-delay'.\"\n                },\n                {\n                    \"name\": \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    \"name\": \"forwards\",\n                    \"description\": \"The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes.\"\n                },\n                {\n                    \"name\": \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No animation is performed\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property combines six of the animation properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"enum\",\n                \"timing-function\",\n                \"identifier\",\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"-moz-animation-delay\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines when the animation will start.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-moz-animation-direction\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"alternate\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\"\n                },\n                {\n                    \"name\": \"alternate-reverse\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-animation-duration\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines the length of time that an animation takes to complete one cycle.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-moz-animation-iteration-count\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n            \"restrictions\": [\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-animation-name\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No animation is performed\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-animation-play-state\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"paused\",\n                    \"description\": \"A running animation will be paused.\"\n                },\n                {\n                    \"name\": \"running\",\n                    \"description\": \"Resume playback of a paused animation.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines whether the animation is running or paused.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-animation-timing-function\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            \"name\": \"-moz-appearance\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"button\"\n                },\n                {\n                    \"name\": \"button-arrow-down\"\n                },\n                {\n                    \"name\": \"button-arrow-next\"\n                },\n                {\n                    \"name\": \"button-arrow-previous\"\n                },\n                {\n                    \"name\": \"button-arrow-up\"\n                },\n                {\n                    \"name\": \"button-bevel\"\n                },\n                {\n                    \"name\": \"checkbox\"\n                },\n                {\n                    \"name\": \"checkbox-container\"\n                },\n                {\n                    \"name\": \"checkbox-label\"\n                },\n                {\n                    \"name\": \"dialog\"\n                },\n                {\n                    \"name\": \"groupbox\"\n                },\n                {\n                    \"name\": \"listbox\"\n                },\n                {\n                    \"name\": \"menuarrow\"\n                },\n                {\n                    \"name\": \"menuimage\"\n                },\n                {\n                    \"name\": \"menuitem\"\n                },\n                {\n                    \"name\": \"menuitemtext\"\n                },\n                {\n                    \"name\": \"menulist\"\n                },\n                {\n                    \"name\": \"menulist-button\"\n                },\n                {\n                    \"name\": \"menulist-text\"\n                },\n                {\n                    \"name\": \"menulist-textfield\"\n                },\n                {\n                    \"name\": \"menupopup\"\n                },\n                {\n                    \"name\": \"menuradio\"\n                },\n                {\n                    \"name\": \"menuseparator\"\n                },\n                {\n                    \"name\": \"-moz-mac-unified-toolbar\"\n                },\n                {\n                    \"name\": \"-moz-win-borderless-glass\"\n                },\n                {\n                    \"name\": \"-moz-win-browsertabbar-toolbox\"\n                },\n                {\n                    \"name\": \"-moz-win-communications-toolbox\"\n                },\n                {\n                    \"name\": \"-moz-win-glass\"\n                },\n                {\n                    \"name\": \"-moz-win-media-toolbox\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"progressbar\"\n                },\n                {\n                    \"name\": \"progresschunk\"\n                },\n                {\n                    \"name\": \"radio\"\n                },\n                {\n                    \"name\": \"radio-container\"\n                },\n                {\n                    \"name\": \"radio-label\"\n                },\n                {\n                    \"name\": \"radiomenuitem\"\n                },\n                {\n                    \"name\": \"resizer\"\n                },\n                {\n                    \"name\": \"resizerpanel\"\n                },\n                {\n                    \"name\": \"scrollbarbutton-down\"\n                },\n                {\n                    \"name\": \"scrollbarbutton-left\"\n                },\n                {\n                    \"name\": \"scrollbarbutton-right\"\n                },\n                {\n                    \"name\": \"scrollbarbutton-up\"\n                },\n                {\n                    \"name\": \"scrollbar-small\"\n                },\n                {\n                    \"name\": \"scrollbartrack-horizontal\"\n                },\n                {\n                    \"name\": \"scrollbartrack-vertical\"\n                },\n                {\n                    \"name\": \"separator\"\n                },\n                {\n                    \"name\": \"spinner\"\n                },\n                {\n                    \"name\": \"spinner-downbutton\"\n                },\n                {\n                    \"name\": \"spinner-textfield\"\n                },\n                {\n                    \"name\": \"spinner-upbutton\"\n                },\n                {\n                    \"name\": \"statusbar\"\n                },\n                {\n                    \"name\": \"statusbarpanel\"\n                },\n                {\n                    \"name\": \"tab\"\n                },\n                {\n                    \"name\": \"tabpanels\"\n                },\n                {\n                    \"name\": \"tab-scroll-arrow-back\"\n                },\n                {\n                    \"name\": \"tab-scroll-arrow-forward\"\n                },\n                {\n                    \"name\": \"textfield\"\n                },\n                {\n                    \"name\": \"textfield-multiline\"\n                },\n                {\n                    \"name\": \"toolbar\"\n                },\n                {\n                    \"name\": \"toolbox\"\n                },\n                {\n                    \"name\": \"tooltip\"\n                },\n                {\n                    \"name\": \"treeheadercell\"\n                },\n                {\n                    \"name\": \"treeheadersortarrow\"\n                },\n                {\n                    \"name\": \"treeitem\"\n                },\n                {\n                    \"name\": \"treetwistyopen\"\n                },\n                {\n                    \"name\": \"treeview\"\n                },\n                {\n                    \"name\": \"treewisty\"\n                },\n                {\n                    \"name\": \"window\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized\",\n            \"relevance\": 0,\n            \"description\": \"Used in Gecko (Firefox) to display an element using a platform-native styling based on the operating system's theme.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-backface-visibility\",\n            \"browsers\": [\n                \"FF10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"hidden\"\n                },\n                {\n                    \"name\": \"visible\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-background-clip\",\n            \"browsers\": [\n                \"FF1-3.6\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"padding\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Determines the background painting area.\",\n            \"restrictions\": [\n                \"box\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-background-inline-policy\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"bounding-box\"\n                },\n                {\n                    \"name\": \"continuous\"\n                },\n                {\n                    \"name\": \"each-box\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"In Gecko-based applications like Firefox, the -moz-background-inline-policy CSS property specifies how the background image of an inline element is determined when the content of the inline element wraps onto multiple lines. The choice of position has significant effects on repetition.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-background-origin\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            \"name\": \"-moz-border-bottom-colors\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>+ | none\",\n            \"relevance\": 0,\n            \"description\": \"Sets a list of colors for the bottom border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-moz-border-image\",\n            \"browsers\": [\n                \"FF3.6\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                },\n                {\n                    \"name\": \"fill\",\n                    \"description\": \"Causes the middle part of the border-image to be preserved.\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"repeat\",\n                    \"description\": \"The image is tiled (repeated) to fill the area.\"\n                },\n                {\n                    \"name\": \"round\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                },\n                {\n                    \"name\": \"space\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"The image is stretched to fill the area.\"\n                },\n                {\n                    \"name\": \"url()\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\",\n                \"url\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-border-left-colors\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>+ | none\",\n            \"relevance\": 0,\n            \"description\": \"Sets a list of colors for the bottom border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-moz-border-right-colors\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>+ | none\",\n            \"relevance\": 0,\n            \"description\": \"Sets a list of colors for the bottom border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-moz-border-top-colors\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>+ | none\",\n            \"relevance\": 0,\n            \"description\": \"Ske Firefox, -moz-border-bottom-colors sets a list of colors for the bottom border.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-moz-box-align\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"baseline\",\n                    \"description\": \"If this box orientation is inline-axis or horizontal, all children are placed with their baselines aligned, and extra space placed before or after as necessary. For block flows, the baseline of the first non-empty line box located within the element is used. For tables, the baseline of the first cell is used.\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"Any extra space is divided evenly, with half placed above the child and the other half placed after the child.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"For normal direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element. For reverse direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"For normal direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element. For reverse direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"The height of each child is adjusted to that of the containing block.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies how a XUL box aligns its contents across (perpendicular to) the direction of its layout. The effect of this is only visible if there is extra space in the box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-box-direction\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"A box with a computed value of horizontal for box-orient displays its children from left to right. A box with a computed value of vertical displays its children from top to bottom.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"A box with a computed value of horizontal for box-orient displays its children from right to left. A box with a computed value of vertical displays its children from bottom to top.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-box-flex\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies how a box grows to fill the box that contains it, in the direction of the containing box's layout.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"-moz-box-flexgroup\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Flexible elements can be assigned to flex groups using the 'box-flex-group' property.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-moz-box-ordinal-group\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Indicates the ordinal group the element belongs to. Elements with a lower ordinal group are displayed before those with a higher ordinal group.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-moz-box-orient\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"block-axis\",\n                    \"description\": \"Elements are oriented along the box's axis.\"\n                },\n                {\n                    \"name\": \"horizontal\",\n                    \"description\": \"The box displays its children from left to right in a horizontal line.\"\n                },\n                {\n                    \"name\": \"inline-axis\",\n                    \"description\": \"Elements are oriented vertically.\"\n                },\n                {\n                    \"name\": \"vertical\",\n                    \"description\": \"The box displays its children from stacked from top to bottom vertically.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"In Mozilla applications, -moz-box-orient specifies whether a box lays out its contents horizontally or vertically.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-box-pack\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The extra space is divided evenly, with half placed before the first child and the other half placed after the last child.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"For normal direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child. For reverse direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child.\"\n                },\n                {\n                    \"name\": \"justify\",\n                    \"description\": \"The space is divided evenly in-between each child, with none of the extra space placed before the first child or after the last child. If there is only one child, treat the pack value as if it were start.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"For normal direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child. For reverse direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies how a box packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-box-sizing\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"border-box\",\n                    \"description\": \"The specified width and height (and respective min/max properties) on this element determine the border box of the element.\"\n                },\n                {\n                    \"name\": \"content-box\",\n                    \"description\": \"Behavior of width and height as specified by CSS2.1. The specified width and height (and respective min/max properties) apply to the width and height respectively of the content box of the element.\"\n                },\n                {\n                    \"name\": \"padding-box\",\n                    \"description\": \"The specified width and height (and respective min/max properties) on this element determine the padding box of the element.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Box Model addition in CSS3.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-column-count\",\n            \"browsers\": [\n                \"FF3.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Determines the number of columns by the 'column-width' property and the element width.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes the optimal number of columns into which the content of the element will be flowed.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-moz-column-gap\",\n            \"browsers\": [\n                \"FF3.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"User agent specific and typically equivalent to 1em.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-moz-column-rule\",\n            \"browsers\": [\n                \"FF3.5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-moz-column-rule-color\",\n            \"browsers\": [\n                \"FF3.5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets the color of the column rule\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-moz-column-rule-style\",\n            \"browsers\": [\n                \"FF3.5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets the style of the rule between columns of an element.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"-moz-column-rule-width\",\n            \"browsers\": [\n                \"FF3.5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets the width of the rule between columns. Negative values are not allowed.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"-moz-columns\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"A shorthand property which sets both 'column-width' and 'column-count'.\",\n            \"restrictions\": [\n                \"length\",\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-moz-column-width\",\n            \"browsers\": [\n                \"FF3.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"This property describes the width of columns in multicol elements.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-moz-font-feature-settings\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"\\\"c2cs\\\"\"\n                },\n                {\n                    \"name\": \"\\\"dlig\\\"\"\n                },\n                {\n                    \"name\": \"\\\"kern\\\"\"\n                },\n                {\n                    \"name\": \"\\\"liga\\\"\"\n                },\n                {\n                    \"name\": \"\\\"lnum\\\"\"\n                },\n                {\n                    \"name\": \"\\\"onum\\\"\"\n                },\n                {\n                    \"name\": \"\\\"smcp\\\"\"\n                },\n                {\n                    \"name\": \"\\\"swsh\\\"\"\n                },\n                {\n                    \"name\": \"\\\"tnum\\\"\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"No change in glyph substitution or positioning occurs.\"\n                },\n                {\n                    \"name\": \"off\",\n                    \"browsers\": [\n                        \"FF4\"\n                    ]\n                },\n                {\n                    \"name\": \"on\",\n                    \"browsers\": [\n                        \"FF4\"\n                    ]\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.\",\n            \"restrictions\": [\n                \"string\",\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-moz-hyphens\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                },\n                {\n                    \"name\": \"manual\",\n                    \"description\": \"Words are only broken at line breaks where there are characters inside the word that suggest line break opportunities\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-perspective\",\n            \"browsers\": [\n                \"FF10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No perspective transform is applied.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-moz-perspective-origin\",\n            \"browsers\": [\n                \"FF10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-moz-text-align-last\",\n            \"browsers\": [\n                \"FF12\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The inline contents are centered within the line box.\"\n                },\n                {\n                    \"name\": \"justify\",\n                    \"description\": \"The text is justified according to the method specified by the 'text-justify' property.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-text-decoration-color\",\n            \"browsers\": [\n                \"FF6\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the color of text decoration (underlines overlines, and line-throughs) set on the element with text-decoration-line.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-moz-text-decoration-line\",\n            \"browsers\": [\n                \"FF6\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"line-through\",\n                    \"description\": \"Each line of text has a line through the middle.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Neither produces nor inhibits text decoration.\"\n                },\n                {\n                    \"name\": \"overline\",\n                    \"description\": \"Each line of text has a line above it.\"\n                },\n                {\n                    \"name\": \"underline\",\n                    \"description\": \"Each line of text is underlined.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies what line decorations, if any, are added to the element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-text-decoration-style\",\n            \"browsers\": [\n                \"FF6\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"dashed\",\n                    \"description\": \"Produces a dashed line style.\"\n                },\n                {\n                    \"name\": \"dotted\",\n                    \"description\": \"Produces a dotted line.\"\n                },\n                {\n                    \"name\": \"double\",\n                    \"description\": \"Produces a double line.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Produces no line.\"\n                },\n                {\n                    \"name\": \"solid\",\n                    \"description\": \"Produces a solid line.\"\n                },\n                {\n                    \"name\": \"wavy\",\n                    \"description\": \"Produces a wavy line.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the line style for underline, line-through and overline text decoration.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-text-size-adjust\",\n            \"browsers\": [\n                \"FF\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Renderers must use the default size adjustment when displaying on a small device.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Renderers must not do size adjustment when displaying on a small device.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies a size adjustment for displaying text content in mobile browsers.\",\n            \"restrictions\": [\n                \"enum\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-moz-transform\",\n            \"browsers\": [\n                \"FF3.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"matrix()\",\n                    \"description\": \"Specifies a 2D transformation in the form of a transformation matrix of six values. matrix(a,b,c,d,e,f) is equivalent to applying the transformation matrix [a b c d e f]\"\n                },\n                {\n                    \"name\": \"matrix3d()\",\n                    \"description\": \"Specifies a 3D transformation as a 4x4 homogeneous matrix of 16 values in column-major order.\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"perspective\",\n                    \"description\": \"Specifies a perspective projection matrix.\"\n                },\n                {\n                    \"name\": \"rotate()\",\n                    \"description\": \"Specifies a 2D rotation by the angle specified in the parameter about the origin of the element, as defined by the transform-origin property.\"\n                },\n                {\n                    \"name\": \"rotate3d()\",\n                    \"description\": \"Specifies a clockwise 3D rotation by the angle specified in last parameter about the [x,y,z] direction vector described by the first 3 parameters.\"\n                },\n                {\n                    \"name\": \"rotateX('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the X axis.\"\n                },\n                {\n                    \"name\": \"rotateY('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the Y axis.\"\n                },\n                {\n                    \"name\": \"rotateZ('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the Z axis.\"\n                },\n                {\n                    \"name\": \"scale()\",\n                    \"description\": \"Specifies a 2D scale operation by the [sx,sy] scaling vector described by the 2 parameters. If the second parameter is not provided, it is takes a value equal to the first.\"\n                },\n                {\n                    \"name\": \"scale3d()\",\n                    \"description\": \"Specifies a 3D scale operation by the [sx,sy,sz] scaling vector described by the 3 parameters.\"\n                },\n                {\n                    \"name\": \"scaleX()\",\n                    \"description\": \"Specifies a scale operation using the [sx,1] scaling vector, where sx is given as the parameter.\"\n                },\n                {\n                    \"name\": \"scaleY()\",\n                    \"description\": \"Specifies a scale operation using the [sy,1] scaling vector, where sy is given as the parameter.\"\n                },\n                {\n                    \"name\": \"scaleZ()\",\n                    \"description\": \"Specifies a scale operation using the [1,1,sz] scaling vector, where sz is given as the parameter.\"\n                },\n                {\n                    \"name\": \"skew()\",\n                    \"description\": \"Specifies a skew transformation along the X and Y axes. The first angle parameter specifies the skew on the X axis. The second angle parameter specifies the skew on the Y axis. If the second parameter is not given then a value of 0 is used for the Y angle (ie: no skew on the Y axis).\"\n                },\n                {\n                    \"name\": \"skewX()\",\n                    \"description\": \"Specifies a skew transformation along the X axis by the given angle.\"\n                },\n                {\n                    \"name\": \"skewY()\",\n                    \"description\": \"Specifies a skew transformation along the Y axis by the given angle.\"\n                },\n                {\n                    \"name\": \"translate()\",\n                    \"description\": \"Specifies a 2D translation by the vector [tx, ty], where tx is the first translation-value parameter and ty is the optional second translation-value parameter.\"\n                },\n                {\n                    \"name\": \"translate3d()\",\n                    \"description\": \"Specifies a 3D translation by the vector [tx,ty,tz], with tx, ty and tz being the first, second and third translation-value parameters respectively.\"\n                },\n                {\n                    \"name\": \"translateX()\",\n                    \"description\": \"Specifies a translation by the given amount in the X direction.\"\n                },\n                {\n                    \"name\": \"translateY()\",\n                    \"description\": \"Specifies a translation by the given amount in the Y direction.\"\n                },\n                {\n                    \"name\": \"translateZ()\",\n                    \"description\": \"Specifies a translation by the given amount in the Z direction. Note that percentage values are not allowed in the translateZ translation-value, and if present are evaluated as 0.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-transform-origin\",\n            \"browsers\": [\n                \"FF3.5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Establishes the origin of transformation for an element.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-moz-transition\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property combines four of the transition properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"property\",\n                \"timing-function\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-moz-transition-delay\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-moz-transition-duration\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies how long the transition from the old value to the new value should take.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-moz-transition-property\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the name of the CSS property to which the transition is applied.\",\n            \"restrictions\": [\n                \"property\"\n            ]\n        },\n        {\n            \"name\": \"-moz-transition-timing-function\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes how the intermediate values used during a transition will be calculated.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            \"name\": \"-moz-user-focus\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"ignore\"\n                },\n                {\n                    \"name\": \"normal\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"ignore | normal | select-after | select-before | select-menu | select-same | select-all | none\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-user-focus\"\n                }\n            ],\n            \"description\": \"Used to indicate whether the element can have focus.\"\n        },\n        {\n            \"name\": \"-moz-user-select\",\n            \"browsers\": [\n                \"FF1.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"all\"\n                },\n                {\n                    \"name\": \"element\"\n                },\n                {\n                    \"name\": \"elements\"\n                },\n                {\n                    \"name\": \"-moz-all\"\n                },\n                {\n                    \"name\": \"-moz-none\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"text\"\n                },\n                {\n                    \"name\": \"toggle\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Controls the appearance of selection.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-accelerator\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"false\",\n                    \"description\": \"The element does not contain an accelerator key sequence.\"\n                },\n                {\n                    \"name\": \"true\",\n                    \"description\": \"The element contains an accelerator key sequence.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"false | true\",\n            \"relevance\": 0,\n            \"description\": \"IE only. Has the ability to turn off its system underlines for accelerator keys until the ALT key is pressed\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-behavior\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"IE only. Used to extend behaviors of the browser\",\n            \"restrictions\": [\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"-ms-block-progression\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"bt\",\n                    \"description\": \"Bottom-to-top block flow. Layout is horizontal.\"\n                },\n                {\n                    \"name\": \"lr\",\n                    \"description\": \"Left-to-right direction. The flow orientation is vertical.\"\n                },\n                {\n                    \"name\": \"rl\",\n                    \"description\": \"Right-to-left direction. The flow orientation is vertical.\"\n                },\n                {\n                    \"name\": \"tb\",\n                    \"description\": \"Top-to-bottom direction. The flow orientation is horizontal.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"tb | rl | bt | lr\",\n            \"relevance\": 0,\n            \"description\": \"Sets the block-progression value and the flow orientation\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-content-zoom-chaining\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"chained\",\n                    \"description\": \"The nearest zoomable parent element begins zooming when the user hits a zoom limit during a manipulation. No bounce effect is shown.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"A bounce effect is shown when the user hits a zoom limit during a manipulation.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | chained\",\n            \"relevance\": 0,\n            \"description\": \"Specifies the zoom behavior that occurs when a user hits the zoom limit during a manipulation.\"\n        },\n        {\n            \"name\": \"-ms-content-zooming\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The element is not zoomable.\"\n                },\n                {\n                    \"name\": \"zoom\",\n                    \"description\": \"The element is zoomable.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | zoom\",\n            \"relevance\": 0,\n            \"description\": \"Specifies whether zooming is enabled.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-content-zoom-limit\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\",\n            \"relevance\": 0,\n            \"description\": \"Shorthand property for the -ms-content-zoom-limit-min and -ms-content-zoom-limit-max properties.\",\n            \"restrictions\": [\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-content-zoom-limit-max\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<percentage>\",\n            \"relevance\": 0,\n            \"description\": \"Specifies the maximum zoom factor.\",\n            \"restrictions\": [\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-content-zoom-limit-min\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<percentage>\",\n            \"relevance\": 0,\n            \"description\": \"Specifies the minimum zoom factor.\",\n            \"restrictions\": [\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-content-zoom-snap\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"mandatory\",\n                    \"description\": \"Indicates that the motion of the content after the contact is picked up is always adjusted so that it lands on a snap-point.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Indicates that zooming is unaffected by any defined snap-points.\"\n                },\n                {\n                    \"name\": \"proximity\",\n                    \"description\": \"Indicates that the motion of the content after the contact is picked up may be adjusted if the content would normally stop \\\"close enough\\\" to a snap-point.\"\n                },\n                {\n                    \"name\": \"snapInterval(100%, 100%)\",\n                    \"description\": \"Specifies where the snap-points will be placed.\"\n                },\n                {\n                    \"name\": \"snapList()\",\n                    \"description\": \"Specifies the position of individual snap-points as a comma-separated list of zoom factors.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'-ms-content-zoom-snap-type'> || <'-ms-content-zoom-snap-points'>\",\n            \"relevance\": 0,\n            \"description\": \"Shorthand property for the -ms-content-zoom-snap-type and -ms-content-zoom-snap-points properties.\"\n        },\n        {\n            \"name\": \"-ms-content-zoom-snap-points\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"snapInterval(100%, 100%)\",\n                    \"description\": \"Specifies where the snap-points will be placed.\"\n                },\n                {\n                    \"name\": \"snapList()\",\n                    \"description\": \"Specifies the position of individual snap-points as a comma-separated list of zoom factors.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )\",\n            \"relevance\": 0,\n            \"description\": \"Defines where zoom snap-points are located.\"\n        },\n        {\n            \"name\": \"-ms-content-zoom-snap-type\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"mandatory\",\n                    \"description\": \"Indicates that the motion of the content after the contact is picked up is always adjusted so that it lands on a snap-point.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Indicates that zooming is unaffected by any defined snap-points.\"\n                },\n                {\n                    \"name\": \"proximity\",\n                    \"description\": \"Indicates that the motion of the content after the contact is picked up may be adjusted if the content would normally stop \\\"close enough\\\" to a snap-point.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | proximity | mandatory\",\n            \"relevance\": 0,\n            \"description\": \"Specifies how zooming is affected by defined snap-points.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-filter\",\n            \"browsers\": [\n                \"IE8-9\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<string>\",\n            \"relevance\": 0,\n            \"description\": \"IE only. Used to produce visual effects.\",\n            \"restrictions\": [\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flex\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Retrieves the value of the main size property as the used 'flex-basis'.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Expands to '0 0 auto'.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"specifies the parameters of a flexible length: the positive and negative flexibility, and the preferred size.\",\n            \"restrictions\": [\n                \"length\",\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flex-align\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"baseline\",\n                    \"description\": \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The flex item’s margin box is centered in the cross axis within the line.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"The cross-start margin edge of the flexbox item is placed flush with the cross-start edge of the line.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"If the cross size property of the flexbox item is anything other than 'auto', this value is identical to 'start'.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Aligns flex items along the cross axis of the current line of the flex container.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flex-direction\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"column\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                },\n                {\n                    \"name\": \"column-reverse\",\n                    \"description\": \"Same as 'column', except the main-start and main-end directions are swapped.\"\n                },\n                {\n                    \"name\": \"row\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                },\n                {\n                    \"name\": \"row-reverse\",\n                    \"description\": \"Same as 'row', except the main-start and main-end directions are swapped.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies how flex items are placed in the flex container, by setting the direction of the flex container’s main axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flex-flow\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"column\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the block axis of the current writing mode.\"\n                },\n                {\n                    \"name\": \"column-reverse\",\n                    \"description\": \"Same as 'column', except the main-start and main-end directions are swapped.\"\n                },\n                {\n                    \"name\": \"nowrap\",\n                    \"description\": \"The flex container is single-line.\"\n                },\n                {\n                    \"name\": \"row\",\n                    \"description\": \"The flex container’s main axis has the same orientation as the inline axis of the current writing mode.\"\n                },\n                {\n                    \"name\": \"wrap\",\n                    \"description\": \"The flexbox is multi-line.\"\n                },\n                {\n                    \"name\": \"wrap-reverse\",\n                    \"description\": \"Same as 'wrap', except the cross-start and cross-end directions are swapped.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies how flexbox items are placed in the flexbox.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flex-item-align\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Computes to the value of 'align-items' on the element’s parent, or 'stretch' if the element has no parent. On absolutely positioned elements, it computes to itself.\"\n                },\n                {\n                    \"name\": \"baseline\",\n                    \"description\": \"If the flex item’s inline axis is the same as the cross axis, this value is identical to 'flex-start'. Otherwise, it participates in baseline alignment.\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The flex item’s margin box is centered in the cross axis within the line.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"The cross-end margin edge of the flex item is placed flush with the cross-end edge of the line.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"The cross-start margin edge of the flex item is placed flush with the cross-start edge of the line.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"If the cross size property of the flex item computes to auto, and neither of the cross-axis margins are auto, the flex item is stretched.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Allows the default alignment along the cross axis to be overridden for individual flex items.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flex-line-pack\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"center\",\n                    \"description\": \"Lines are packed toward the center of the flex container.\"\n                },\n                {\n                    \"name\": \"distribute\",\n                    \"description\": \"Lines are evenly distributed in the flex container, with half-size spaces on either end.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"Lines are packed toward the end of the flex container.\"\n                },\n                {\n                    \"name\": \"justify\",\n                    \"description\": \"Lines are evenly distributed in the flex container.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"Lines are packed toward the start of the flex container.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"Lines stretch to take up the remaining space.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Aligns a flex container’s lines within the flex container when there is extra space in the cross-axis, similar to how 'justify-content' aligns individual items within the main-axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flex-order\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Controls the order in which children of a flex container appear within the flex container, by assigning them to ordinal groups.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flex-pack\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"center\",\n                    \"description\": \"Flex items are packed toward the center of the line.\"\n                },\n                {\n                    \"name\": \"distribute\",\n                    \"description\": \"Flex items are evenly distributed in the line, with half-size spaces on either end.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"Flex items are packed toward the end of the line.\"\n                },\n                {\n                    \"name\": \"justify\",\n                    \"description\": \"Flex items are evenly distributed in the line.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"Flex items are packed toward the start of the line.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Aligns flex items along the main axis of the current line of the flex container.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flex-wrap\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"nowrap\",\n                    \"description\": \"The flex container is single-line.\"\n                },\n                {\n                    \"name\": \"wrap\",\n                    \"description\": \"The flexbox is multi-line.\"\n                },\n                {\n                    \"name\": \"wrap-reverse\",\n                    \"description\": \"Same as 'wrap', except the cross-start and cross-end directions are swapped.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Controls whether the flex container is single-line or multi-line, and the direction of the cross-axis, which determines the direction new lines are stacked in.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flow-from\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The block container is not a CSS Region.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ none | <custom-ident> ]#\",\n            \"relevance\": 0,\n            \"description\": \"Makes a block container a region and associates it with a named flow.\",\n            \"restrictions\": [\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"-ms-flow-into\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The element is not moved to a named flow and normal CSS processing takes place.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ none | <custom-ident> ]#\",\n            \"relevance\": 0,\n            \"description\": \"Places an element or its contents into a named flow.\",\n            \"restrictions\": [\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"-ms-grid-column\",\n            \"browsers\": [\n                \"E12\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"end\"\n                },\n                {\n                    \"name\": \"start\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Used to place grid items and explicitly defined grid cells in the Grid.\",\n            \"restrictions\": [\n                \"integer\",\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-grid-column-align\",\n            \"browsers\": [\n                \"E12\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"center\",\n                    \"description\": \"Places the center of the Grid Item's margin box at the center of the Grid Item's column.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"Aligns the end edge of the Grid Item's margin box to the end edge of the Grid Item's column.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"Aligns the starting edge of the Grid Item's margin box to the starting edge of the Grid Item's column.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"Ensures that the Grid Item's margin box is equal to the size of the Grid Item's column.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Aligns the columns in a grid.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-grid-columns\",\n            \"browsers\": [\n                \"E12\",\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Lays out the columns of the grid.\"\n        },\n        {\n            \"name\": \"-ms-grid-column-span\",\n            \"browsers\": [\n                \"E12\",\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the number of columns to span.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-ms-grid-layer\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Grid-layer is similar in concept to z-index, but avoids overloading the meaning of the z-index property, which is applicable only to positioned elements.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-ms-grid-row\",\n            \"browsers\": [\n                \"E12\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"end\"\n                },\n                {\n                    \"name\": \"start\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"grid-row is used to place grid items and explicitly defined grid cells in the Grid.\",\n            \"restrictions\": [\n                \"integer\",\n                \"string\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-grid-row-align\",\n            \"browsers\": [\n                \"E12\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"center\",\n                    \"description\": \"Places the center of the Grid Item's margin box at the center of the Grid Item's row.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"Aligns the end edge of the Grid Item's margin box to the end edge of the Grid Item's row.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"Aligns the starting edge of the Grid Item's margin box to the starting edge of the Grid Item's row.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"Ensures that the Grid Item's margin box is equal to the size of the Grid Item's row.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Aligns the rows in a grid.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-grid-rows\",\n            \"browsers\": [\n                \"E12\",\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Lays out the columns of the grid.\"\n        },\n        {\n            \"name\": \"-ms-grid-row-span\",\n            \"browsers\": [\n                \"E12\",\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the number of rows to span.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-ms-high-contrast-adjust\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Properties will be adjusted as applicable.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No adjustments will be applied.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | none\",\n            \"relevance\": 0,\n            \"description\": \"Specifies if properties should be adjusted in high contrast mode.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-hyphenate-limit-chars\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The user agent chooses a value that adapts to the current layout.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | <integer>{1,3}\",\n            \"relevance\": 0,\n            \"description\": \"Specifies the minimum number of characters in a hyphenated word.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-ms-hyphenate-limit-lines\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"no-limit\",\n                    \"description\": \"There is no limit.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"no-limit | <integer>\",\n            \"relevance\": 0,\n            \"description\": \"Indicates the maximum number of successive hyphenated lines in an element.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-ms-hyphenate-limit-zone\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<percentage> | <length>\",\n            \"relevance\": 0,\n            \"description\": \"Specifies the maximum amount of unfilled space (before justification) that may be left in the line box before hyphenation is triggered to pull part of a word from the next line back up into the current line.\",\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-hyphens\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                },\n                {\n                    \"name\": \"manual\",\n                    \"description\": \"Words are only broken at line breaks where there are characters inside the word that suggest line break opportunities\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-ime-mode\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"active\",\n                    \"description\": \"The input method editor is initially active; text entry is performed using it unless the user specifically dismisses it.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"No change is made to the current input method editor state. This is the default.\"\n                },\n                {\n                    \"name\": \"disabled\",\n                    \"description\": \"The input method editor is disabled and may not be activated by the user.\"\n                },\n                {\n                    \"name\": \"inactive\",\n                    \"description\": \"The input method editor is initially inactive, but the user may activate it if they wish.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"The IME state should be normal; this value can be used in a user style sheet to override the page setting.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Controls the state of the input method editor for text fields.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-interpolation-mode\",\n            \"browsers\": [\n                \"IE7\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"bicubic\"\n                },\n                {\n                    \"name\": \"nearest-neighbor\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Gets or sets the interpolation (resampling) method used to stretch images.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-layout-grid\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"char\",\n                    \"description\": \"Any of the range of character values available to the -ms-layout-grid-char property.\"\n                },\n                {\n                    \"name\": \"line\",\n                    \"description\": \"Any of the range of line values available to the -ms-layout-grid-line property.\"\n                },\n                {\n                    \"name\": \"mode\",\n                    \"description\": \"Any of the range of mode values available to the -ms-layout-grid-mode property.\"\n                },\n                {\n                    \"name\": \"type\",\n                    \"description\": \"Any of the range of type values available to the -ms-layout-grid-type property.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets or retrieves the composite document grid properties that specify the layout of text characters.\"\n        },\n        {\n            \"name\": \"-ms-layout-grid-char\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Largest character in the font of the element is used to set the character grid.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Default. No character grid is set.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets or retrieves the size of the character grid used for rendering the text content of an element.\",\n            \"restrictions\": [\n                \"enum\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-layout-grid-line\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Largest character in the font of the element is used to set the character grid.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Default. No grid line is set.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets or retrieves the gridline value used for rendering the text content of an element.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-layout-grid-mode\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"both\",\n                    \"description\": \"Default. Both the char and line grid modes are enabled. This setting is necessary to fully enable the layout grid on an element.\"\n                },\n                {\n                    \"name\": \"char\",\n                    \"description\": \"Only a character grid is used. This is recommended for use with block-level elements, such as a blockquote, where the line grid is intended to be disabled.\"\n                },\n                {\n                    \"name\": \"line\",\n                    \"description\": \"Only a line grid is used. This is recommended for use with inline elements, such as a span, to disable the horizontal grid on runs of text that act as a single entity in the grid layout.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No grid is used.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Gets or sets whether the text layout grid uses two dimensions.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-layout-grid-type\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"fixed\",\n                    \"description\": \"Grid used for monospaced layout. All noncursive characters are treated as equal; every character is centered within a single grid space by default.\"\n                },\n                {\n                    \"name\": \"loose\",\n                    \"description\": \"Default. Grid used for Japanese and Korean characters.\"\n                },\n                {\n                    \"name\": \"strict\",\n                    \"description\": \"Grid used for Chinese, as well as Japanese (Genko) and Korean characters. Only the ideographs, kanas, and wide characters are snapped to the grid.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets or retrieves the type of grid used for rendering the text content of an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-line-break\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The UA determines the set of line-breaking restrictions to use for CJK scripts, and it may vary the restrictions based on the length of the line; e.g., use a less restrictive set of line-break rules for short lines.\"\n                },\n                {\n                    \"name\": \"keep-all\",\n                    \"description\": \"Sequences of CJK characters can no longer break on implied break points. This option should only be used where the presence of word separator characters still creates line-breaking opportunities, as in Korean.\"\n                },\n                {\n                    \"name\": \"newspaper\",\n                    \"description\": \"Breaks CJK scripts using the least restrictive set of line-breaking rules. Typically used for short lines, such as in newspapers.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Breaks CJK scripts using a normal set of line-breaking rules.\"\n                },\n                {\n                    \"name\": \"strict\",\n                    \"description\": \"Breaks CJK scripts using a more restrictive set of line-breaking rules than 'normal'.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies what set of line breaking restrictions are in effect within the element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-overflow-style\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"No preference, UA should use the first scrolling method in the list that it supports.\"\n                },\n                {\n                    \"name\": \"-ms-autohiding-scrollbar\",\n                    \"description\": \"Indicates the element displays auto-hiding scrollbars during mouse interactions and panning indicators during touch and keyboard interactions.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Indicates the element does not display scrollbars or panning indicators, even when its content overflows.\"\n                },\n                {\n                    \"name\": \"scrollbar\",\n                    \"description\": \"Scrollbars are typically narrow strips inserted on one or two edges of an element and which often have arrows to click on and a \\\"thumb\\\" to drag up and down (or left and right) to move the contents of the element.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | none | scrollbar | -ms-autohiding-scrollbar\",\n            \"relevance\": 0,\n            \"description\": \"Specify whether content is clipped when it overflows the element's content area.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-perspective\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No perspective transform is applied.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-perspective-origin\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-perspective-origin-x\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the X  position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-perspective-origin-y\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the Y position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-progress-appearance\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"bar\"\n                },\n                {\n                    \"name\": \"ring\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Gets or sets a value that specifies whether a progress control displays as a bar or a ring.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scrollbar-3dlight-color\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"description\": \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scrollbar-arrow-color\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"description\": \"Determines the color of the arrow elements of a scroll arrow.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scrollbar-base-color\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"description\": \"Determines the color of the main elements of a scroll bar, which include the scroll box, track, and scroll arrows.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scrollbar-darkshadow-color\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"description\": \"Determines the color of the gutter of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scrollbar-face-color\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"description\": \"Determines the color of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scrollbar-highlight-color\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"description\": \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scrollbar-shadow-color\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"description\": \"Determines the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scrollbar-track-color\",\n            \"browsers\": [\n                \"IE5\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-track-color\"\n                }\n            ],\n            \"description\": \"Determines the color of the track element of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-chaining\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"chained\"\n                },\n                {\n                    \"name\": \"none\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"chained | none\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that indicates the scrolling behavior that occurs when a user hits the content boundary during a manipulation.\",\n            \"restrictions\": [\n                \"enum\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-limit\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a shorthand value that sets values for the -ms-scroll-limit-x-min, -ms-scroll-limit-y-min, -ms-scroll-limit-x-max, and -ms-scroll-limit-y-max properties.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-limit-x-max\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | <length>\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that specifies the maximum value for the scrollLeft property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-limit-x-min\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that specifies the minimum value for the scrollLeft property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-limit-y-max\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | <length>\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that specifies the maximum value for the scrollTop property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-limit-y-min\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that specifies the minimum value for the scrollTop property.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-rails\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"railed\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | railed\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that indicates whether or not small motions perpendicular to the primary axis of motion will result in either changes to both the scrollTop and scrollLeft properties or a change to the primary axis (for instance, either the scrollTop or scrollLeft properties will change, but not both).\",\n            \"restrictions\": [\n                \"enum\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-snap-points-x\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"snapInterval(100%, 100%)\"\n                },\n                {\n                    \"name\": \"snapList()\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that defines where snap-points will be located along the x-axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-snap-points-y\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"snapInterval(100%, 100%)\"\n                },\n                {\n                    \"name\": \"snapList()\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that defines where snap-points will be located along the y-axis.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-snap-type\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The visual viewport of this scroll container must ignore snap points, if any, when scrolled.\"\n                },\n                {\n                    \"name\": \"mandatory\",\n                    \"description\": \"The visual viewport of this scroll container is guaranteed to rest on a snap point when there are no active scrolling operations.\"\n                },\n                {\n                    \"name\": \"proximity\",\n                    \"description\": \"The visual viewport of this scroll container may come to rest on a snap point at the termination of a scroll at the discretion of the UA given the parameters of the scroll.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | proximity | mandatory\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that defines what type of snap-point should be used for the current element. There are two type of snap-points, with the primary difference being whether or not the user is guaranteed to always stop on a snap-point.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-snap-x\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"mandatory\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"proximity\"\n                },\n                {\n                    \"name\": \"snapInterval(100%, 100%)\"\n                },\n                {\n                    \"name\": \"snapList()\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a shorthand value that sets values for the -ms-scroll-snap-type and -ms-scroll-snap-points-x properties.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-snap-y\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"mandatory\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"proximity\"\n                },\n                {\n                    \"name\": \"snapInterval(100%, 100%)\"\n                },\n                {\n                    \"name\": \"snapList()\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a shorthand value that sets values for the -ms-scroll-snap-type and -ms-scroll-snap-points-y properties.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-scroll-translation\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"vertical-to-horizontal\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | vertical-to-horizontal\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that specifies whether vertical-to-horizontal scroll wheel translation occurs on the specified element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-text-align-last\",\n            \"browsers\": [\n                \"E\",\n                \"IE8\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The inline contents are centered within the line box.\"\n                },\n                {\n                    \"name\": \"justify\",\n                    \"description\": \"The text is justified according to the method specified by the 'text-justify' property.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-text-autospace\",\n            \"browsers\": [\n                \"E\",\n                \"IE8\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"ideograph-alpha\",\n                    \"description\": \"Creates 1/4em extra spacing between runs of ideographic letters and non-ideographic letters, such as Latin-based, Cyrillic, Greek, Arabic or Hebrew.\"\n                },\n                {\n                    \"name\": \"ideograph-numeric\",\n                    \"description\": \"Creates 1/4em extra spacing between runs of ideographic letters and numeric glyphs.\"\n                },\n                {\n                    \"name\": \"ideograph-parenthesis\",\n                    \"description\": \"Creates extra spacing between normal (non wide) parenthesis and ideographs.\"\n                },\n                {\n                    \"name\": \"ideograph-space\",\n                    \"description\": \"Extends the width of the space character while surrounded by ideographs.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No extra space is created.\"\n                },\n                {\n                    \"name\": \"punctuation\",\n                    \"description\": \"Creates extra non-breaking spacing around punctuation as required by language-specific typographic conventions.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space\",\n            \"relevance\": 0,\n            \"description\": \"Determines whether or not a full-width punctuation mark character should be trimmed if it appears at the beginning of a line, so that its 'ink' lines up with the first glyph in the line above and below.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-text-combine-horizontal\",\n            \"browsers\": [\n                \"E\",\n                \"IE11\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"Attempt to typeset horizontally all consecutive characters within the box such that they take up the space of a single character within the vertical line box.\"\n                },\n                {\n                    \"name\": \"digits\",\n                    \"description\": \"Attempt to typeset horizontally each maximal sequence of consecutive ASCII digits (U+0030–U+0039) that has as many or fewer characters than the specified integer such that it takes up the space of a single character within the vertical line box.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No special processing.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"This property specifies the combination of multiple characters into the space of a single character.\",\n            \"restrictions\": [\n                \"enum\",\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-ms-text-justify\",\n            \"browsers\": [\n                \"E\",\n                \"IE8\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The UA determines the justification algorithm to follow, based on a balance between performance and adequate presentation quality.\"\n                },\n                {\n                    \"name\": \"distribute\",\n                    \"description\": \"Justification primarily changes spacing both at word separators and at grapheme cluster boundaries in all scripts except those in the connected and cursive groups. This value is sometimes used in e.g. Japanese, often with the 'text-align-last' property.\"\n                },\n                {\n                    \"name\": \"inter-cluster\",\n                    \"description\": \"Justification primarily changes spacing at word separators and at grapheme cluster boundaries in clustered scripts. This value is typically used for Southeast Asian scripts such as Thai.\"\n                },\n                {\n                    \"name\": \"inter-ideograph\",\n                    \"description\": \"Justification primarily changes spacing at word separators and at inter-graphemic boundaries in scripts that use no word spaces. This value is typically used for CJK languages.\"\n                },\n                {\n                    \"name\": \"inter-word\",\n                    \"description\": \"Justification primarily changes spacing at word separators. This value is typically used for languages that separate words using spaces, like English or (sometimes) Korean.\"\n                },\n                {\n                    \"name\": \"kashida\",\n                    \"description\": \"Justification primarily stretches Arabic and related scripts through the use of kashida or other calligraphic elongation.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Selects the justification algorithm used when 'text-align' is set to 'justify'. The property applies to block containers, but the UA may (but is not required to) also support it on inline elements.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-text-kashida-space\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets or retrieves the ratio of kashida expansion to white space expansion when justifying lines of text in the object.\",\n            \"restrictions\": [\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-text-overflow\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"clip\",\n                    \"description\": \"Clip inline content that overflows. Characters may be only partially rendered.\"\n                },\n                {\n                    \"name\": \"ellipsis\",\n                    \"description\": \"Render an ellipsis character (U+2026) to represent clipped inline content.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Text can overflow for example when it is prevented from wrapping\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-text-size-adjust\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Renderers must use the default size adjustment when displaying on a small device.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Renderers must not do size adjustment when displaying on a small device.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies a size adjustment for displaying text content in mobile browsers.\",\n            \"restrictions\": [\n                \"enum\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-text-underline-position\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"alphabetic\",\n                    \"description\": \"The underline is aligned with the alphabetic baseline. In this case the underline is likely to cross some descenders.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The user agent may use any algorithm to determine the underline's position. In horizontal line layout, the underline should be aligned as for alphabetic. In vertical line layout, if the language is set to Japanese or Korean, the underline should be aligned as for over.\"\n                },\n                {\n                    \"name\": \"over\",\n                    \"description\": \"The underline is aligned with the 'top' (right in vertical writing) edge of the element's em-box. In this mode, an overline also switches sides.\"\n                },\n                {\n                    \"name\": \"under\",\n                    \"description\": \"The underline is aligned with the 'bottom' (left in vertical writing) edge of the element's em-box. In this case the underline usually does not cross the descenders. This is sometimes called 'accounting' underline.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets the position of an underline specified on the same element: it does not affect underlines specified by ancestor elements.This property is typically used in vertical writing contexts such as in Japanese documents where it often desired to have the underline appear 'over' (to the right of) the affected run of text\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-touch-action\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The element is a passive element, with several exceptions.\"\n                },\n                {\n                    \"name\": \"double-tap-zoom\",\n                    \"description\": \"The element will zoom on double-tap.\"\n                },\n                {\n                    \"name\": \"manipulation\",\n                    \"description\": \"The element is a manipulation-causing element.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The element is a manipulation-blocking element.\"\n                },\n                {\n                    \"name\": \"pan-x\",\n                    \"description\": \"The element permits touch-driven panning on the horizontal axis. The touch pan is performed on the nearest ancestor with horizontally scrollable content.\"\n                },\n                {\n                    \"name\": \"pan-y\",\n                    \"description\": \"The element permits touch-driven panning on the vertical axis. The touch pan is performed on the nearest ancestor with vertically scrollable content.\"\n                },\n                {\n                    \"name\": \"pinch-zoom\",\n                    \"description\": \"The element permits pinch-zooming. The pinch-zoom is performed on the nearest ancestor with zoomable content.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Gets or sets a value that indicates whether and how a given region can be manipulated by the user.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-touch-select\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"grippers\",\n                    \"description\": \"Grippers are always on.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Grippers are always off.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"grippers | none\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that toggles the 'gripper' visual elements that enable touch text selection.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-transform\",\n            \"browsers\": [\n                \"IE9-9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"matrix()\",\n                    \"description\": \"Specifies a 2D transformation in the form of a transformation matrix of six values. matrix(a,b,c,d,e,f) is equivalent to applying the transformation matrix [a b c d e f]\"\n                },\n                {\n                    \"name\": \"matrix3d()\",\n                    \"description\": \"Specifies a 3D transformation as a 4x4 homogeneous matrix of 16 values in column-major order.\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"rotate()\",\n                    \"description\": \"Specifies a 2D rotation by the angle specified in the parameter about the origin of the element, as defined by the transform-origin property.\"\n                },\n                {\n                    \"name\": \"rotate3d()\",\n                    \"description\": \"Specifies a clockwise 3D rotation by the angle specified in last parameter about the [x,y,z] direction vector described by the first 3 parameters.\"\n                },\n                {\n                    \"name\": \"rotateX('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the X axis.\"\n                },\n                {\n                    \"name\": \"rotateY('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the Y axis.\"\n                },\n                {\n                    \"name\": \"rotateZ('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the Z axis.\"\n                },\n                {\n                    \"name\": \"scale()\",\n                    \"description\": \"Specifies a 2D scale operation by the [sx,sy] scaling vector described by the 2 parameters. If the second parameter is not provided, it is takes a value equal to the first.\"\n                },\n                {\n                    \"name\": \"scale3d()\",\n                    \"description\": \"Specifies a 3D scale operation by the [sx,sy,sz] scaling vector described by the 3 parameters.\"\n                },\n                {\n                    \"name\": \"scaleX()\",\n                    \"description\": \"Specifies a scale operation using the [sx,1] scaling vector, where sx is given as the parameter.\"\n                },\n                {\n                    \"name\": \"scaleY()\",\n                    \"description\": \"Specifies a scale operation using the [sy,1] scaling vector, where sy is given as the parameter.\"\n                },\n                {\n                    \"name\": \"scaleZ()\",\n                    \"description\": \"Specifies a scale operation using the [1,1,sz] scaling vector, where sz is given as the parameter.\"\n                },\n                {\n                    \"name\": \"skew()\",\n                    \"description\": \"Specifies a skew transformation along the X and Y axes. The first angle parameter specifies the skew on the X axis. The second angle parameter specifies the skew on the Y axis. If the second parameter is not given then a value of 0 is used for the Y angle (ie: no skew on the Y axis).\"\n                },\n                {\n                    \"name\": \"skewX()\",\n                    \"description\": \"Specifies a skew transformation along the X axis by the given angle.\"\n                },\n                {\n                    \"name\": \"skewY()\",\n                    \"description\": \"Specifies a skew transformation along the Y axis by the given angle.\"\n                },\n                {\n                    \"name\": \"translate()\",\n                    \"description\": \"Specifies a 2D translation by the vector [tx, ty], where tx is the first translation-value parameter and ty is the optional second translation-value parameter.\"\n                },\n                {\n                    \"name\": \"translate3d()\",\n                    \"description\": \"Specifies a 3D translation by the vector [tx,ty,tz], with tx, ty and tz being the first, second and third translation-value parameters respectively.\"\n                },\n                {\n                    \"name\": \"translateX()\",\n                    \"description\": \"Specifies a translation by the given amount in the X direction.\"\n                },\n                {\n                    \"name\": \"translateY()\",\n                    \"description\": \"Specifies a translation by the given amount in the Y direction.\"\n                },\n                {\n                    \"name\": \"translateZ()\",\n                    \"description\": \"Specifies a translation by the given amount in the Z direction. Note that percentage values are not allowed in the translateZ translation-value, and if present are evaluated as 0.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-transform-origin\",\n            \"browsers\": [\n                \"IE9-9\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Establishes the origin of transformation for an element.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-transform-origin-x\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"The x coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-transform-origin-y\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"The y coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-transform-origin-z\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"The z coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-user-select\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"element\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"text\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | element | text\",\n            \"relevance\": 0,\n            \"description\": \"Controls the appearance of selection.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-word-break\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"break-all\",\n                    \"description\": \"Lines may break between any two grapheme clusters for non-CJK scripts.\"\n                },\n                {\n                    \"name\": \"keep-all\",\n                    \"description\": \"Block characters can no longer create implied break points.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Breaks non-CJK scripts according to their own rules.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies line break opportunities for non-CJK scripts.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-word-wrap\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"break-word\",\n                    \"description\": \"An unbreakable 'word' may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Lines may break only at allowed break points.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-wrap-flow\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"For floats an exclusion is created, for all other elements an exclusion is not created.\"\n                },\n                {\n                    \"name\": \"both\",\n                    \"description\": \"Inline flow content can flow on all sides of the exclusion.\"\n                },\n                {\n                    \"name\": \"clear\",\n                    \"description\": \"Inline flow content can only wrap on top and bottom of the exclusion and must leave the areas to the start and end edges of the exclusion box empty.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"Inline flow content can wrap on the end side of the exclusion area but must leave the area to the start edge of the exclusion area empty.\"\n                },\n                {\n                    \"name\": \"maximum\",\n                    \"description\": \"Inline flow content can wrap on the side of the exclusion with the largest available space for the given line, and must leave the other side of the exclusion empty.\"\n                },\n                {\n                    \"name\": \"minimum\",\n                    \"description\": \"Inline flow content can flow around the edge of the exclusion with the smallest available space within the flow content’s containing block, and must leave the other edge of the exclusion empty.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"Inline flow content can wrap on the start edge of the exclusion area but must leave the area to end edge of the exclusion area empty.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | both | start | end | maximum | clear\",\n            \"relevance\": 0,\n            \"description\": \"An element becomes an exclusion when its 'wrap-flow' property has a computed value other than 'auto'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-wrap-margin\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 0,\n            \"description\": \"Gets or sets a value that is used to offset the inner wrap shape from other shapes.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-wrap-through\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The exclusion element does not inherit its parent node's wrapping context. Its descendants are only subject to exclusion shapes defined inside the element.\"\n                },\n                {\n                    \"name\": \"wrap\",\n                    \"description\": \"The exclusion element inherits its parent node's wrapping context. Its descendant inline content wraps around exclusions defined outside the element.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"wrap | none\",\n            \"relevance\": 0,\n            \"description\": \"Specifies if an element inherits its parent wrapping context. In other words if it is subject to the exclusions defined outside the element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-writing-mode\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"bt-lr\"\n                },\n                {\n                    \"name\": \"bt-rl\"\n                },\n                {\n                    \"name\": \"lr-bt\"\n                },\n                {\n                    \"name\": \"lr-tb\"\n                },\n                {\n                    \"name\": \"rl-bt\"\n                },\n                {\n                    \"name\": \"rl-tb\"\n                },\n                {\n                    \"name\": \"tb-lr\"\n                },\n                {\n                    \"name\": \"tb-rl\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property for both 'direction' and 'block-progression'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-ms-zoom\",\n            \"browsers\": [\n                \"IE8\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets or retrieves the magnification scale of the object.\",\n            \"restrictions\": [\n                \"enum\",\n                \"integer\",\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-zoom-animation\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"default\"\n                },\n                {\n                    \"name\": \"none\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Gets or sets a value that indicates whether an animation is used when zooming.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"nav-down\",\n            \"browsers\": [\n                \"O9.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                },\n                {\n                    \"name\": \"current\",\n                    \"description\": \"Indicates that the user agent should target the frame that the element is in.\"\n                },\n                {\n                    \"name\": \"root\",\n                    \"description\": \"Indicates that the user agent should target the full window.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Provides an way to control directional focus navigation.\",\n            \"restrictions\": [\n                \"enum\",\n                \"identifier\",\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"nav-index\",\n            \"browsers\": [\n                \"O9.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The element's sequential navigation order is assigned automatically by the user agent.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Provides an input-method-neutral way of specifying the sequential navigation order (also known as 'tabbing order').\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"nav-left\",\n            \"browsers\": [\n                \"O9.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                },\n                {\n                    \"name\": \"current\",\n                    \"description\": \"Indicates that the user agent should target the frame that the element is in.\"\n                },\n                {\n                    \"name\": \"root\",\n                    \"description\": \"Indicates that the user agent should target the full window.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Provides an way to control directional focus navigation.\",\n            \"restrictions\": [\n                \"enum\",\n                \"identifier\",\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"nav-right\",\n            \"browsers\": [\n                \"O9.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                },\n                {\n                    \"name\": \"current\",\n                    \"description\": \"Indicates that the user agent should target the frame that the element is in.\"\n                },\n                {\n                    \"name\": \"root\",\n                    \"description\": \"Indicates that the user agent should target the full window.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Provides an way to control directional focus navigation.\",\n            \"restrictions\": [\n                \"enum\",\n                \"identifier\",\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"nav-up\",\n            \"browsers\": [\n                \"O9.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The user agent automatically determines which element to navigate the focus to in response to directional navigational input.\"\n                },\n                {\n                    \"name\": \"current\",\n                    \"description\": \"Indicates that the user agent should target the frame that the element is in.\"\n                },\n                {\n                    \"name\": \"root\",\n                    \"description\": \"Indicates that the user agent should target the full window.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Provides an way to control directional focus navigation.\",\n            \"restrictions\": [\n                \"enum\",\n                \"identifier\",\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"negative\",\n            \"browsers\": [\n                \"FF33\"\n            ],\n            \"syntax\": \"<symbol> <symbol>?\",\n            \"relevance\": 50,\n            \"description\": \"@counter-style descriptor. Defines how to alter the representation when the counter value is negative.\",\n            \"restrictions\": [\n                \"image\",\n                \"identifier\",\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"-o-animation\",\n            \"browsers\": [\n                \"O12\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"alternate\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\"\n                },\n                {\n                    \"name\": \"alternate-reverse\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\"\n                },\n                {\n                    \"name\": \"backwards\",\n                    \"description\": \"The beginning property value (as defined in the first @keyframes at-rule) is applied before the animation is displayed, during the period defined by 'animation-delay'.\"\n                },\n                {\n                    \"name\": \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    \"name\": \"forwards\",\n                    \"description\": \"The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes.\"\n                },\n                {\n                    \"name\": \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No animation is performed\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property combines six of the animation properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"enum\",\n                \"timing-function\",\n                \"identifier\",\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"-o-animation-delay\",\n            \"browsers\": [\n                \"O12\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines when the animation will start.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-o-animation-direction\",\n            \"browsers\": [\n                \"O12\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"alternate\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\"\n                },\n                {\n                    \"name\": \"alternate-reverse\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-o-animation-duration\",\n            \"browsers\": [\n                \"O12\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines the length of time that an animation takes to complete one cycle.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-o-animation-fill-mode\",\n            \"browsers\": [\n                \"O12\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"backwards\",\n                    \"description\": \"The beginning property value (as defined in the first @keyframes at-rule) is applied before the animation is displayed, during the period defined by 'animation-delay'.\"\n                },\n                {\n                    \"name\": \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    \"name\": \"forwards\",\n                    \"description\": \"The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines what values are applied by the animation outside the time it is executing.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-o-animation-iteration-count\",\n            \"browsers\": [\n                \"O12\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n            \"restrictions\": [\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-o-animation-name\",\n            \"browsers\": [\n                \"O12\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No animation is performed\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-o-animation-play-state\",\n            \"browsers\": [\n                \"O12\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"paused\",\n                    \"description\": \"A running animation will be paused.\"\n                },\n                {\n                    \"name\": \"running\",\n                    \"description\": \"Resume playback of a paused animation.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines whether the animation is running or paused.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-o-animation-timing-function\",\n            \"browsers\": [\n                \"O12\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            \"name\": \"object-fit\",\n            \"browsers\": [\n                \"E16\",\n                \"FF36\",\n                \"S10\",\n                \"C31\",\n                \"O19\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"contain\",\n                    \"description\": \"The replaced content is sized to maintain its aspect ratio while fitting within the element’s content box: its concrete object size is resolved as a contain constraint against the element's used width and height.\"\n                },\n                {\n                    \"name\": \"cover\",\n                    \"description\": \"The replaced content is sized to maintain its aspect ratio while filling the element's entire content box: its concrete object size is resolved as a cover constraint against the element’s used width and height.\"\n                },\n                {\n                    \"name\": \"fill\",\n                    \"description\": \"The replaced content is sized to fill the element’s content box: the object's concrete object size is the element's used width and height.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The replaced content is not resized to fit inside the element's content box\"\n                },\n                {\n                    \"name\": \"scale-down\",\n                    \"description\": \"Size the content as if ‘none’ or ‘contain’ were specified, whichever would result in a smaller concrete object size.\"\n                }\n            ],\n            \"syntax\": \"fill | contain | cover | none | scale-down\",\n            \"relevance\": 61,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/object-fit\"\n                }\n            ],\n            \"description\": \"Specifies how the contents of a replaced element should be scaled relative to the box established by its used height and width.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"object-position\",\n            \"browsers\": [\n                \"E16\",\n                \"FF36\",\n                \"S10\",\n                \"C31\",\n                \"O19\"\n            ],\n            \"syntax\": \"<position>\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/object-position\"\n                }\n            ],\n            \"description\": \"Determines the alignment of the replaced element inside its box.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-o-border-image\",\n            \"browsers\": [\n                \"O11.6\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                },\n                {\n                    \"name\": \"fill\",\n                    \"description\": \"Causes the middle part of the border-image to be preserved.\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"repeat\",\n                    \"description\": \"The image is tiled (repeated) to fill the area.\"\n                },\n                {\n                    \"name\": \"round\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                },\n                {\n                    \"name\": \"space\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"The image is stretched to fill the area.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\",\n                \"image\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-o-object-fit\",\n            \"browsers\": [\n                \"O10.6\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"contain\",\n                    \"description\": \"The replaced content is sized to maintain its aspect ratio while fitting within the element’s content box: its concrete object size is resolved as a contain constraint against the element's used width and height.\"\n                },\n                {\n                    \"name\": \"cover\",\n                    \"description\": \"The replaced content is sized to maintain its aspect ratio while filling the element's entire content box: its concrete object size is resolved as a cover constraint against the element’s used width and height.\"\n                },\n                {\n                    \"name\": \"fill\",\n                    \"description\": \"The replaced content is sized to fill the element’s content box: the object's concrete object size is the element's used width and height.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The replaced content is not resized to fit inside the element's content box\"\n                },\n                {\n                    \"name\": \"scale-down\",\n                    \"description\": \"Size the content as if ‘none’ or ‘contain’ were specified, whichever would result in a smaller concrete object size.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies how the contents of a replaced element should be scaled relative to the box established by its used height and width.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-o-object-position\",\n            \"browsers\": [\n                \"O10.6\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Determines the alignment of the replaced element inside its box.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"opacity\",\n            \"syntax\": \"<alpha-value>\",\n            \"relevance\": 93,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/opacity\"\n                }\n            ],\n            \"description\": \"Opacity of an element's text, where 1 is opaque and 0 is entirely transparent.\",\n            \"restrictions\": [\n                \"number(0-1)\"\n            ]\n        },\n        {\n            \"name\": \"order\",\n            \"syntax\": \"<integer>\",\n            \"relevance\": 61,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/order\"\n                }\n            ],\n            \"description\": \"Controls the order in which children of a flex container appear within the flex container, by assigning them to ordinal groups.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"orphans\",\n            \"browsers\": [\n                \"E12\",\n                \"S1.3\",\n                \"C25\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            \"syntax\": \"<integer>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/orphans\"\n                }\n            ],\n            \"description\": \"Specifies the minimum number of line boxes in a block container that must be left in a fragment before a fragmentation break.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-o-table-baseline\",\n            \"browsers\": [\n                \"O9.6\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Determines which row of a inline-table should be used as baseline of inline-table.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-o-tab-size\",\n            \"browsers\": [\n                \"O10.6\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"This property determines the width of the tab character (U+0009), in space characters (U+0020), when rendered.\",\n            \"restrictions\": [\n                \"integer\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-o-text-overflow\",\n            \"browsers\": [\n                \"O10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"clip\",\n                    \"description\": \"Clip inline content that overflows. Characters may be only partially rendered.\"\n                },\n                {\n                    \"name\": \"ellipsis\",\n                    \"description\": \"Render an ellipsis character (U+2026) to represent clipped inline content.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Text can overflow for example when it is prevented from wrapping\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-o-transform\",\n            \"browsers\": [\n                \"O10.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"matrix()\",\n                    \"description\": \"Specifies a 2D transformation in the form of a transformation matrix of six values. matrix(a,b,c,d,e,f) is equivalent to applying the transformation matrix [a b c d e f]\"\n                },\n                {\n                    \"name\": \"matrix3d()\",\n                    \"description\": \"Specifies a 3D transformation as a 4x4 homogeneous matrix of 16 values in column-major order.\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"rotate()\",\n                    \"description\": \"Specifies a 2D rotation by the angle specified in the parameter about the origin of the element, as defined by the transform-origin property.\"\n                },\n                {\n                    \"name\": \"rotate3d()\",\n                    \"description\": \"Specifies a clockwise 3D rotation by the angle specified in last parameter about the [x,y,z] direction vector described by the first 3 parameters.\"\n                },\n                {\n                    \"name\": \"rotateX('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the X axis.\"\n                },\n                {\n                    \"name\": \"rotateY('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the Y axis.\"\n                },\n                {\n                    \"name\": \"rotateZ('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the Z axis.\"\n                },\n                {\n                    \"name\": \"scale()\",\n                    \"description\": \"Specifies a 2D scale operation by the [sx,sy] scaling vector described by the 2 parameters. If the second parameter is not provided, it is takes a value equal to the first.\"\n                },\n                {\n                    \"name\": \"scale3d()\",\n                    \"description\": \"Specifies a 3D scale operation by the [sx,sy,sz] scaling vector described by the 3 parameters.\"\n                },\n                {\n                    \"name\": \"scaleX()\",\n                    \"description\": \"Specifies a scale operation using the [sx,1] scaling vector, where sx is given as the parameter.\"\n                },\n                {\n                    \"name\": \"scaleY()\",\n                    \"description\": \"Specifies a scale operation using the [sy,1] scaling vector, where sy is given as the parameter.\"\n                },\n                {\n                    \"name\": \"scaleZ()\",\n                    \"description\": \"Specifies a scale operation using the [1,1,sz] scaling vector, where sz is given as the parameter.\"\n                },\n                {\n                    \"name\": \"skew()\",\n                    \"description\": \"Specifies a skew transformation along the X and Y axes. The first angle parameter specifies the skew on the X axis. The second angle parameter specifies the skew on the Y axis. If the second parameter is not given then a value of 0 is used for the Y angle (ie: no skew on the Y axis).\"\n                },\n                {\n                    \"name\": \"skewX()\",\n                    \"description\": \"Specifies a skew transformation along the X axis by the given angle.\"\n                },\n                {\n                    \"name\": \"skewY()\",\n                    \"description\": \"Specifies a skew transformation along the Y axis by the given angle.\"\n                },\n                {\n                    \"name\": \"translate()\",\n                    \"description\": \"Specifies a 2D translation by the vector [tx, ty], where tx is the first translation-value parameter and ty is the optional second translation-value parameter.\"\n                },\n                {\n                    \"name\": \"translate3d()\",\n                    \"description\": \"Specifies a 3D translation by the vector [tx,ty,tz], with tx, ty and tz being the first, second and third translation-value parameters respectively.\"\n                },\n                {\n                    \"name\": \"translateX()\",\n                    \"description\": \"Specifies a translation by the given amount in the X direction.\"\n                },\n                {\n                    \"name\": \"translateY()\",\n                    \"description\": \"Specifies a translation by the given amount in the Y direction.\"\n                },\n                {\n                    \"name\": \"translateZ()\",\n                    \"description\": \"Specifies a translation by the given amount in the Z direction. Note that percentage values are not allowed in the translateZ translation-value, and if present are evaluated as 0.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-o-transform-origin\",\n            \"browsers\": [\n                \"O10.5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Establishes the origin of transformation for an element.\",\n            \"restrictions\": [\n                \"positon\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-o-transition\",\n            \"browsers\": [\n                \"O11.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property combines four of the transition properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"property\",\n                \"timing-function\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-o-transition-delay\",\n            \"browsers\": [\n                \"O11.5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-o-transition-duration\",\n            \"browsers\": [\n                \"O11.5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies how long the transition from the old value to the new value should take.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-o-transition-property\",\n            \"browsers\": [\n                \"O11.5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the name of the CSS property to which the transition is applied.\",\n            \"restrictions\": [\n                \"property\"\n            ]\n        },\n        {\n            \"name\": \"-o-transition-timing-function\",\n            \"browsers\": [\n                \"O11.5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes how the intermediate values used during a transition will be calculated.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            \"name\": \"offset-block-end\",\n            \"browsers\": [\n                \"FF41\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Logical 'bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"offset-block-start\",\n            \"browsers\": [\n                \"FF41\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Logical 'top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"offset-inline-end\",\n            \"browsers\": [\n                \"FF41\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Logical 'right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"offset-inline-start\",\n            \"browsers\": [\n                \"FF41\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Logical 'left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"outline\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Permits the user agent to render a custom outline style, typically the default platform style.\"\n                },\n                {\n                    \"name\": \"invert\",\n                    \"description\": \"Performs a color inversion on the pixels on the screen.\"\n                }\n            ],\n            \"syntax\": \"[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]\",\n            \"relevance\": 87,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/outline\"\n                }\n            ],\n            \"description\": \"Shorthand property for 'outline-style', 'outline-width', and 'outline-color'.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"outline-color\",\n            \"values\": [\n                {\n                    \"name\": \"invert\",\n                    \"description\": \"Performs a color inversion on the pixels on the screen.\"\n                }\n            ],\n            \"syntax\": \"<color> | invert\",\n            \"relevance\": 53,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/outline-color\"\n                }\n            ],\n            \"description\": \"The color of the outline.\",\n            \"restrictions\": [\n                \"enum\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"outline-offset\",\n            \"browsers\": [\n                \"E15\",\n                \"FF1.5\",\n                \"S1.2\",\n                \"C1\",\n                \"O9.5\"\n            ],\n            \"syntax\": \"<length>\",\n            \"relevance\": 59,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/outline-offset\"\n                }\n            ],\n            \"description\": \"Offset the outline and draw it beyond the border edge.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"outline-style\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Permits the user agent to render a custom outline style, typically the default platform style.\"\n                }\n            ],\n            \"syntax\": \"auto | <'border-style'>\",\n            \"relevance\": 60,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/outline-style\"\n                }\n            ],\n            \"description\": \"Style of the outline.\",\n            \"restrictions\": [\n                \"line-style\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"outline-width\",\n            \"syntax\": \"<line-width>\",\n            \"relevance\": 60,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/outline-width\"\n                }\n            ],\n            \"description\": \"Width of the outline.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"overflow\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes.\"\n                },\n                {\n                    \"name\": \"hidden\",\n                    \"description\": \"Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region.\"\n                },\n                {\n                    \"name\": \"-moz-hidden-unscrollable\",\n                    \"description\": \"Same as the standardized 'clip', except doesn’t establish a block formatting context.\"\n                },\n                {\n                    \"name\": \"scroll\",\n                    \"description\": \"Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped.\"\n                },\n                {\n                    \"name\": \"visible\",\n                    \"description\": \"Content is not clipped, i.e., it may be rendered outside the content box.\"\n                }\n            ],\n            \"syntax\": \"[ visible | hidden | clip | scroll | auto ]{1,2}\",\n            \"relevance\": 92,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overflow\"\n                }\n            ],\n            \"description\": \"Shorthand for setting 'overflow-x' and 'overflow-y'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"overflow-wrap\",\n            \"values\": [\n                {\n                    \"name\": \"break-word\",\n                    \"description\": \"An otherwise unbreakable sequence of characters may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Lines may break only at allowed break points.\"\n                }\n            ],\n            \"syntax\": \"normal | break-word | anywhere\",\n            \"relevance\": 63,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overflow-wrap\"\n                }\n            ],\n            \"description\": \"Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit within the line box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"overflow-x\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes.\"\n                },\n                {\n                    \"name\": \"hidden\",\n                    \"description\": \"Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region.\"\n                },\n                {\n                    \"name\": \"scroll\",\n                    \"description\": \"Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped.\"\n                },\n                {\n                    \"name\": \"visible\",\n                    \"description\": \"Content is not clipped, i.e., it may be rendered outside the content box.\"\n                }\n            ],\n            \"syntax\": \"visible | hidden | clip | scroll | auto\",\n            \"relevance\": 79,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overflow-x\"\n                }\n            ],\n            \"description\": \"Specifies the handling of overflow in the horizontal direction.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"overflow-y\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The behavior of the 'auto' value is UA-dependent, but should cause a scrolling mechanism to be provided for overflowing boxes.\"\n                },\n                {\n                    \"name\": \"hidden\",\n                    \"description\": \"Content is clipped and no scrolling mechanism should be provided to view the content outside the clipping region.\"\n                },\n                {\n                    \"name\": \"scroll\",\n                    \"description\": \"Content is clipped and if the user agent uses a scrolling mechanism that is visible on the screen (such as a scroll bar or a panner), that mechanism should be displayed for a box whether or not any of its content is clipped.\"\n                },\n                {\n                    \"name\": \"visible\",\n                    \"description\": \"Content is not clipped, i.e., it may be rendered outside the content box.\"\n                }\n            ],\n            \"syntax\": \"visible | hidden | clip | scroll | auto\",\n            \"relevance\": 81,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overflow-y\"\n                }\n            ],\n            \"description\": \"Specifies the handling of overflow in the vertical direction.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"pad\",\n            \"browsers\": [\n                \"FF33\"\n            ],\n            \"syntax\": \"<integer> && <symbol>\",\n            \"relevance\": 50,\n            \"description\": \"@counter-style descriptor. Specifies a “fixed-width” counter style, where representations shorter than the pad value are padded with a particular <symbol>\",\n            \"restrictions\": [\n                \"integer\",\n                \"image\",\n                \"string\",\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"padding\",\n            \"values\": [],\n            \"syntax\": \"[ <length> | <percentage> ]{1,4}\",\n            \"relevance\": 96,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding\"\n                }\n            ],\n            \"description\": \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"padding-bottom\",\n            \"syntax\": \"<length> | <percentage>\",\n            \"relevance\": 88,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding-bottom\"\n                }\n            ],\n            \"description\": \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"padding-block-end\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'padding-left'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding-block-end\"\n                }\n            ],\n            \"description\": \"Logical 'padding-bottom'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"padding-block-start\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'padding-left'>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding-block-start\"\n                }\n            ],\n            \"description\": \"Logical 'padding-top'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"padding-inline-end\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'padding-left'>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding-inline-end\"\n                }\n            ],\n            \"description\": \"Logical 'padding-right'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"padding-inline-start\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S12.1\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"syntax\": \"<'padding-left'>\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding-inline-start\"\n                }\n            ],\n            \"description\": \"Logical 'padding-left'. Mapping depends on the parent element’s 'writing-mode', 'direction', and 'text-orientation'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"padding-left\",\n            \"syntax\": \"<length> | <percentage>\",\n            \"relevance\": 90,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding-left\"\n                }\n            ],\n            \"description\": \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"padding-right\",\n            \"syntax\": \"<length> | <percentage>\",\n            \"relevance\": 88,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding-right\"\n                }\n            ],\n            \"description\": \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"padding-top\",\n            \"syntax\": \"<length> | <percentage>\",\n            \"relevance\": 90,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding-top\"\n                }\n            ],\n            \"description\": \"Shorthand property to set values the thickness of the padding area. If left is omitted, it is the same as right. If bottom is omitted it is the same as top, if right is omitted it is the same as top. The value may not be negative.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"page-break-after\",\n            \"values\": [\n                {\n                    \"name\": \"always\",\n                    \"description\": \"Always force a page break after the generated box.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page break after generated box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a page break after the generated box.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"Force one or two page breaks after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"Force one or two page breaks after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"syntax\": \"auto | always | avoid | left | right | recto | verso\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/page-break-after\"\n                }\n            ],\n            \"description\": \"Defines rules for page breaks after an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"page-break-before\",\n            \"values\": [\n                {\n                    \"name\": \"always\",\n                    \"description\": \"Always force a page break before the generated box.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page break before the generated box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a page break before the generated box.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"Force one or two page breaks before the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"Force one or two page breaks before the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"syntax\": \"auto | always | avoid | left | right | recto | verso\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/page-break-before\"\n                }\n            ],\n            \"description\": \"Defines rules for page breaks before an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"page-break-inside\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page break inside the generated box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a page break inside the generated box.\"\n                }\n            ],\n            \"syntax\": \"auto | avoid\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/page-break-inside\"\n                }\n            ],\n            \"description\": \"Defines rules for page breaks inside an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"paint-order\",\n            \"browsers\": [\n                \"E17\",\n                \"FF60\",\n                \"S8\",\n                \"C35\",\n                \"O22\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"fill\"\n                },\n                {\n                    \"name\": \"markers\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"The element is painted with the standard order of painting operations: the 'fill' is painted first, then its 'stroke' and finally its markers.\"\n                },\n                {\n                    \"name\": \"stroke\"\n                }\n            ],\n            \"syntax\": \"normal | [ fill || stroke || markers ]\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/paint-order\"\n                }\n            ],\n            \"description\": \"Controls the order that the three paint operations that shapes and text are rendered with: their fill, their stroke and any markers they might have.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"perspective\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No perspective transform is applied.\"\n                }\n            ],\n            \"syntax\": \"none | <length>\",\n            \"relevance\": 55,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/perspective\"\n                }\n            ],\n            \"description\": \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n            \"restrictions\": [\n                \"length\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"perspective-origin\",\n            \"syntax\": \"<position>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/perspective-origin\"\n                }\n            ],\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"pointer-events\",\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"The given element can be the target element for pointer events whenever the pointer is over either the interior or the perimeter of the element.\"\n                },\n                {\n                    \"name\": \"fill\",\n                    \"description\": \"The given element can be the target element for pointer events whenever the pointer is over the interior of the element.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The given element does not receive pointer events.\"\n                },\n                {\n                    \"name\": \"painted\",\n                    \"description\": \"The given element can be the target element for pointer events when the pointer is over a \\\"painted\\\" area. \"\n                },\n                {\n                    \"name\": \"stroke\",\n                    \"description\": \"The given element can be the target element for pointer events whenever the pointer is over the perimeter of the element.\"\n                },\n                {\n                    \"name\": \"visible\",\n                    \"description\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and the pointer is over either the interior or the perimete of the element.\"\n                },\n                {\n                    \"name\": \"visibleFill\",\n                    \"description\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over the interior of the element.\"\n                },\n                {\n                    \"name\": \"visiblePainted\",\n                    \"description\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over a ‘painted’ area.\"\n                },\n                {\n                    \"name\": \"visibleStroke\",\n                    \"description\": \"The given element can be the target element for pointer events when the ‘visibility’ property is set to visible and when the pointer is over the perimeter of the element.\"\n                }\n            ],\n            \"syntax\": \"auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit\",\n            \"relevance\": 80,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/pointer-events\"\n                }\n            ],\n            \"description\": \"Specifies under what circumstances a given element can be the target element for a pointer event.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"position\",\n            \"values\": [\n                {\n                    \"name\": \"absolute\",\n                    \"description\": \"The box's position (and possibly size) is specified with the 'top', 'right', 'bottom', and 'left' properties. These properties specify offsets with respect to the box's 'containing block'.\"\n                },\n                {\n                    \"name\": \"fixed\",\n                    \"description\": \"The box's position is calculated according to the 'absolute' model, but in addition, the box is fixed with respect to some reference. As with the 'absolute' model, the box's margins do not collapse with any other margins.\"\n                },\n                {\n                    \"name\": \"-ms-page\",\n                    \"description\": \"The box's position is calculated according to the 'absolute' model.\"\n                },\n                {\n                    \"name\": \"relative\",\n                    \"description\": \"The box's position is calculated according to the normal flow (this is called the position in normal flow). Then the box is offset relative to its normal position.\"\n                },\n                {\n                    \"name\": \"static\",\n                    \"description\": \"The box is a normal box, laid out according to the normal flow. The 'top', 'right', 'bottom', and 'left' properties do not apply.\"\n                },\n                {\n                    \"name\": \"sticky\",\n                    \"description\": \"The box's position is calculated according to the normal flow. Then the box is offset relative to its flow root and containing block and in all cases, including table elements, does not affect the position of any following boxes.\"\n                },\n                {\n                    \"name\": \"-webkit-sticky\",\n                    \"description\": \"The box's position is calculated according to the normal flow. Then the box is offset relative to its flow root and containing block and in all cases, including table elements, does not affect the position of any following boxes.\"\n                }\n            ],\n            \"syntax\": \"static | relative | absolute | sticky | fixed\",\n            \"relevance\": 96,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/position\"\n                }\n            ],\n            \"description\": \"The position CSS property sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"prefix\",\n            \"browsers\": [\n                \"FF33\"\n            ],\n            \"syntax\": \"<symbol>\",\n            \"relevance\": 50,\n            \"description\": \"@counter-style descriptor. Specifies a <symbol> that is prepended to the marker representation.\",\n            \"restrictions\": [\n                \"image\",\n                \"string\",\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"quotes\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The 'open-quote' and 'close-quote' values of the 'content' property produce no quotations marks, as if they were 'no-open-quote' and 'no-close-quote' respectively.\"\n                }\n            ],\n            \"syntax\": \"none | auto | [ <string> <string> ]+\",\n            \"relevance\": 53,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/quotes\"\n                }\n            ],\n            \"description\": \"Specifies quotation marks for any number of embedded quotations.\",\n            \"restrictions\": [\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"range\",\n            \"browsers\": [\n                \"FF33\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The range depends on the counter system.\"\n                },\n                {\n                    \"name\": \"infinite\",\n                    \"description\": \"If used as the first value in a range, it represents negative infinity; if used as the second value, it represents positive infinity.\"\n                }\n            ],\n            \"syntax\": \"[ [ <integer> | infinite ]{2} ]# | auto\",\n            \"relevance\": 50,\n            \"description\": \"@counter-style descriptor. Defines the ranges over which the counter style is defined.\",\n            \"restrictions\": [\n                \"integer\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"resize\",\n            \"browsers\": [\n                \"E79\",\n                \"FF4\",\n                \"S3\",\n                \"C1\",\n                \"O12.1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"both\",\n                    \"description\": \"The UA presents a bidirectional resizing mechanism to allow the user to adjust both the height and the width of the element.\"\n                },\n                {\n                    \"name\": \"horizontal\",\n                    \"description\": \"The UA presents a unidirectional horizontal resizing mechanism to allow the user to adjust only the width of the element.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The UA does not present a resizing mechanism on the element, and the user is given no direct manipulation mechanism to resize the element.\"\n                },\n                {\n                    \"name\": \"vertical\",\n                    \"description\": \"The UA presents a unidirectional vertical resizing mechanism to allow the user to adjust only the height of the element.\"\n                }\n            ],\n            \"syntax\": \"none | both | horizontal | vertical | block | inline\",\n            \"relevance\": 60,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/resize\"\n                }\n            ],\n            \"description\": \"Specifies whether or not an element is resizable by the user, and if so, along which axis/axes.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"right\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"relevance\": 90,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/right\"\n                }\n            ],\n            \"description\": \"Specifies how far an absolutely positioned box's right margin edge is offset to the left of the right edge of the box's 'containing block'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"ruby-align\",\n            \"browsers\": [\n                \"FF38\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"browsers\": [\n                        \"FF38\"\n                    ],\n                    \"description\": \"The user agent determines how the ruby contents are aligned. This is the initial value.\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The ruby content is centered within its box.\"\n                },\n                {\n                    \"name\": \"distribute-letter\",\n                    \"browsers\": [\n                        \"FF38\"\n                    ],\n                    \"description\": \"If the width of the ruby text is smaller than that of the base, then the ruby text contents are evenly distributed across the width of the base, with the first and last ruby text glyphs lining up with the corresponding first and last base glyphs. If the width of the ruby text is at least the width of the base, then the letters of the base are evenly distributed across the width of the ruby text.\"\n                },\n                {\n                    \"name\": \"distribute-space\",\n                    \"browsers\": [\n                        \"FF38\"\n                    ],\n                    \"description\": \"If the width of the ruby text is smaller than that of the base, then the ruby text contents are evenly distributed across the width of the base, with a certain amount of white space preceding the first and following the last character in the ruby text. That amount of white space is normally equal to half the amount of inter-character space of the ruby text.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"The ruby text content is aligned with the start edge of the base.\"\n                },\n                {\n                    \"name\": \"line-edge\",\n                    \"browsers\": [\n                        \"FF38\"\n                    ],\n                    \"description\": \"If the ruby text is not adjacent to a line edge, it is aligned as in 'auto'. If it is adjacent to a line edge, then it is still aligned as in auto, but the side of the ruby text that touches the end of the line is lined up with the corresponding edge of the base.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"browsers\": [\n                        \"FF38\"\n                    ],\n                    \"description\": \"The ruby text content is aligned with the end edge of the base.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"browsers\": [\n                        \"FF38\"\n                    ],\n                    \"description\": \"The ruby text content is aligned with the start edge of the base.\"\n                },\n                {\n                    \"name\": \"space-between\",\n                    \"browsers\": [\n                        \"FF38\"\n                    ],\n                    \"description\": \"The ruby content expands as defined for normal text justification (as defined by 'text-justify'),\"\n                },\n                {\n                    \"name\": \"space-around\",\n                    \"browsers\": [\n                        \"FF38\"\n                    ],\n                    \"description\": \"As for 'space-between' except that there exists an extra justification opportunities whose space is distributed half before and half after the ruby content.\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"start | center | space-between | space-around\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/ruby-align\"\n                }\n            ],\n            \"description\": \"Specifies how text is distributed within the various ruby boxes when their contents do not exactly fill their respective boxes.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"ruby-overhang\",\n            \"browsers\": [\n                \"FF10\",\n                \"IE5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The ruby text can overhang text adjacent to the base on either side. This is the initial value.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"The ruby text can overhang the text that follows it.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The ruby text cannot overhang any text adjacent to its base, only its own base.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"The ruby text can overhang the text that precedes it.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Determines whether, and on which side, ruby text is allowed to partially overhang any adjacent text in addition to its own base, when the ruby text is wider than the ruby base.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"ruby-position\",\n            \"browsers\": [\n                \"E12\",\n                \"FF38\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"after\",\n                    \"description\": \"The ruby text appears after the base. This is a relatively rare setting used in ideographic East Asian writing systems, most easily found in educational text.\"\n                },\n                {\n                    \"name\": \"before\",\n                    \"description\": \"The ruby text appears before the base. This is the most common setting used in ideographic East Asian writing systems.\"\n                },\n                {\n                    \"name\": \"inline\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"The ruby text appears on the right of the base. Unlike 'before' and 'after', this value is not relative to the text flow direction.\"\n                }\n            ],\n            \"status\": \"experimental\",\n            \"syntax\": \"over | under | inter-character\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/ruby-position\"\n                }\n            ],\n            \"description\": \"Used by the parent of elements with display: ruby-text to control the position of the ruby text with respect to its base.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"ruby-span\",\n            \"browsers\": [\n                \"FF10\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"attr(x)\",\n                    \"description\": \"The value of attribute 'x' is a string value. The string value is evaluated as a <number> to determine the number of ruby base elements to be spanned by the annotation element.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No spanning. The computed value is '1'.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Determines whether, and on which side, ruby text is allowed to partially overhang any adjacent text in addition to its own base, when the ruby text is wider than the ruby base.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"scrollbar-3dlight-color\",\n            \"browsers\": [\n                \"IE5\"\n            ],\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scrollbar-3dlight-color\"\n                }\n            ],\n            \"description\": \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"scrollbar-arrow-color\",\n            \"browsers\": [\n                \"IE5\"\n            ],\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scrollbar-arrow-color\"\n                }\n            ],\n            \"description\": \"Determines the color of the arrow elements of a scroll arrow.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"scrollbar-base-color\",\n            \"browsers\": [\n                \"IE5\"\n            ],\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scrollbar-base-color\"\n                }\n            ],\n            \"description\": \"Determines the color of the main elements of a scroll bar, which include the scroll box, track, and scroll arrows.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"scrollbar-darkshadow-color\",\n            \"browsers\": [\n                \"IE5\"\n            ],\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scrollbar-darkshadow-color\"\n                }\n            ],\n            \"description\": \"Determines the color of the gutter of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"scrollbar-face-color\",\n            \"browsers\": [\n                \"IE5\"\n            ],\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scrollbar-face-color\"\n                }\n            ],\n            \"description\": \"Determines the color of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"scrollbar-highlight-color\",\n            \"browsers\": [\n                \"IE5\"\n            ],\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scrollbar-highlight-color\"\n                }\n            ],\n            \"description\": \"Determines the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"scrollbar-shadow-color\",\n            \"browsers\": [\n                \"IE5\"\n            ],\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scrollbar-shadow-color\"\n                }\n            ],\n            \"description\": \"Determines the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"scrollbar-track-color\",\n            \"browsers\": [\n                \"IE6\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Determines the color of the track element of a scroll bar.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"scroll-behavior\",\n            \"browsers\": [\n                \"E79\",\n                \"FF36\",\n                \"C61\",\n                \"O48\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Scrolls in an instant fashion.\"\n                },\n                {\n                    \"name\": \"smooth\",\n                    \"description\": \"Scrolls in a smooth fashion using a user-agent-defined timing function and time period.\"\n                }\n            ],\n            \"syntax\": \"auto | smooth\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-behavior\"\n                }\n            ],\n            \"description\": \"Specifies the scrolling behavior for a scrolling box, when scrolling happens due to navigation or CSSOM scrolling APIs.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"scroll-snap-coordinate\",\n            \"browsers\": [\n                \"FF39\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Specifies that this element does not contribute a snap point.\"\n                }\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"none | <position>#\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-snap-coordinate\"\n                }\n            ],\n            \"description\": \"Defines the x and y coordinate within the element which will align with the nearest ancestor scroll container’s snap-destination for the respective axis.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"scroll-snap-destination\",\n            \"browsers\": [\n                \"FF39\"\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"<position>\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-snap-destination\"\n                }\n            ],\n            \"description\": \"Define the x and y coordinate within the scroll container’s visual viewport which element snap points will align with.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"scroll-snap-points-x\",\n            \"browsers\": [\n                \"FF39\",\n                \"S9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No snap points are defined by this scroll container.\"\n                },\n                {\n                    \"name\": \"repeat()\",\n                    \"description\": \"Defines an interval at which snap points are defined, starting from the container’s relevant start edge.\"\n                }\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"none | repeat( <length-percentage> )\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-snap-points-x\"\n                }\n            ],\n            \"description\": \"Defines the positioning of snap points along the x axis of the scroll container it is applied to.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"scroll-snap-points-y\",\n            \"browsers\": [\n                \"FF39\",\n                \"S9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No snap points are defined by this scroll container.\"\n                },\n                {\n                    \"name\": \"repeat()\",\n                    \"description\": \"Defines an interval at which snap points are defined, starting from the container’s relevant start edge.\"\n                }\n            ],\n            \"status\": \"obsolete\",\n            \"syntax\": \"none | repeat( <length-percentage> )\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-snap-points-y\"\n                }\n            ],\n            \"description\": \"Defines the positioning of snap points along the y axis of the scroll container it is applied to.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"scroll-snap-type\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The visual viewport of this scroll container must ignore snap points, if any, when scrolled.\"\n                },\n                {\n                    \"name\": \"mandatory\",\n                    \"description\": \"The visual viewport of this scroll container is guaranteed to rest on a snap point when there are no active scrolling operations.\"\n                },\n                {\n                    \"name\": \"proximity\",\n                    \"description\": \"The visual viewport of this scroll container may come to rest on a snap point at the termination of a scroll at the discretion of the UA given the parameters of the scroll.\"\n                }\n            ],\n            \"syntax\": \"none | [ x | y | block | inline | both ] [ mandatory | proximity ]?\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type\"\n                }\n            ],\n            \"description\": \"Defines how strictly snap points are enforced on the scroll container.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"shape-image-threshold\",\n            \"browsers\": [\n                \"E79\",\n                \"FF62\",\n                \"S10.1\",\n                \"C37\",\n                \"O24\"\n            ],\n            \"syntax\": \"<alpha-value>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/shape-image-threshold\"\n                }\n            ],\n            \"description\": \"Defines the alpha channel threshold used to extract the shape using an image. A value of 0.5 means that the shape will enclose all the pixels that are more than 50% opaque.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"shape-margin\",\n            \"browsers\": [\n                \"E79\",\n                \"FF62\",\n                \"S10.1\",\n                \"C37\",\n                \"O24\"\n            ],\n            \"syntax\": \"<length-percentage>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/shape-margin\"\n                }\n            ],\n            \"description\": \"Adds a margin to a 'shape-outside'. This defines a new shape that is the smallest contour that includes all the points that are the 'shape-margin' distance outward in the perpendicular direction from a point on the underlying shape.\",\n            \"restrictions\": [\n                \"url\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"shape-outside\",\n            \"browsers\": [\n                \"E79\",\n                \"FF62\",\n                \"S10.1\",\n                \"C37\",\n                \"O24\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"margin-box\",\n                    \"description\": \"The background is painted within (clipped to) the margin box.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The float area is unaffected.\"\n                }\n            ],\n            \"syntax\": \"none | <shape-box> || <basic-shape> | <image>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/shape-outside\"\n                }\n            ],\n            \"description\": \"Specifies an orthogonal rotation to be applied to an image before it is laid out.\",\n            \"restrictions\": [\n                \"image\",\n                \"box\",\n                \"shape\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"shape-rendering\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Suppresses aural rendering.\"\n                },\n                {\n                    \"name\": \"crispEdges\",\n                    \"description\": \"Emphasize the contrast between clean edges of artwork over rendering speed and geometric precision.\"\n                },\n                {\n                    \"name\": \"geometricPrecision\",\n                    \"description\": \"Emphasize geometric precision over speed and crisp edges.\"\n                },\n                {\n                    \"name\": \"optimizeSpeed\",\n                    \"description\": \"Emphasize rendering speed over geometric precision and crisp edges.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Provides hints about what tradeoffs to make as it renders vector graphics elements such as <path> elements and basic shapes such as circles and rectangles.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"size\",\n            \"browsers\": [\n                \"C\",\n                \"O8\"\n            ],\n            \"syntax\": \"<length>{1,2} | auto | [ <page-size> || [ portrait | landscape ] ]\",\n            \"relevance\": 52,\n            \"description\": \"The size CSS at-rule descriptor, used with the @page at-rule, defines the size and orientation of the box which is used to represent a page. Most of the time, this size corresponds to the target size of the printed page if applicable.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"src\",\n            \"values\": [\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"Reference font by URL\"\n                },\n                {\n                    \"name\": \"format()\",\n                    \"description\": \"Optional hint describing the format of the font resource.\"\n                },\n                {\n                    \"name\": \"local()\",\n                    \"description\": \"Format-specific string that identifies a locally available copy of a given font.\"\n                }\n            ],\n            \"syntax\": \"[ <url> [ format( <string># ) ]? | local( <family-name> ) ]#\",\n            \"relevance\": 67,\n            \"description\": \"@font-face descriptor. Specifies the resource containing font data. It is required, whether the font is downloadable or locally installed.\",\n            \"restrictions\": [\n                \"enum\",\n                \"url\",\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"stop-color\",\n            \"relevance\": 51,\n            \"description\": \"Indicates what color to use at that gradient stop.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"stop-opacity\",\n            \"relevance\": 50,\n            \"description\": \"Defines the opacity of a given gradient stop.\",\n            \"restrictions\": [\n                \"number(0-1)\"\n            ]\n        },\n        {\n            \"name\": \"stroke\",\n            \"values\": [\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"A URL reference to a paint server element, which is an element that defines a paint server: ‘hatch’, ‘linearGradient’, ‘mesh’, ‘pattern’, ‘radialGradient’ and ‘solidcolor’.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No paint is applied in this layer.\"\n                }\n            ],\n            \"relevance\": 63,\n            \"description\": \"Paints along the outline of the given graphical element.\",\n            \"restrictions\": [\n                \"color\",\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"stroke-dasharray\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Indicates that no dashing is used.\"\n                }\n            ],\n            \"relevance\": 58,\n            \"description\": \"Controls the pattern of dashes and gaps used to stroke paths.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"stroke-dashoffset\",\n            \"relevance\": 58,\n            \"description\": \"Specifies the distance into the dash pattern to start the dash.\",\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"stroke-linecap\",\n            \"values\": [\n                {\n                    \"name\": \"butt\",\n                    \"description\": \"Indicates that the stroke for each subpath does not extend beyond its two endpoints.\"\n                },\n                {\n                    \"name\": \"round\",\n                    \"description\": \"Indicates that at each end of each subpath, the shape representing the stroke will be extended by a half circle with a radius equal to the stroke width.\"\n                },\n                {\n                    \"name\": \"square\",\n                    \"description\": \"Indicates that at the end of each subpath, the shape representing the stroke will be extended by a rectangle with the same width as the stroke width and whose length is half of the stroke width.\"\n                }\n            ],\n            \"relevance\": 53,\n            \"description\": \"Specifies the shape to be used at the end of open subpaths when they are stroked.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"stroke-linejoin\",\n            \"values\": [\n                {\n                    \"name\": \"bevel\",\n                    \"description\": \"Indicates that a bevelled corner is to be used to join path segments.\"\n                },\n                {\n                    \"name\": \"miter\",\n                    \"description\": \"Indicates that a sharp corner is to be used to join path segments.\"\n                },\n                {\n                    \"name\": \"round\",\n                    \"description\": \"Indicates that a round corner is to be used to join path segments.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the shape to be used at the corners of paths or basic shapes when they are stroked.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"stroke-miterlimit\",\n            \"relevance\": 50,\n            \"description\": \"When two line segments meet at a sharp angle and miter joins have been specified for 'stroke-linejoin', it is possible for the miter to extend far beyond the thickness of the line stroking the path.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"stroke-opacity\",\n            \"relevance\": 51,\n            \"description\": \"Specifies the opacity of the painting operation used to stroke the current object.\",\n            \"restrictions\": [\n                \"number(0-1)\"\n            ]\n        },\n        {\n            \"name\": \"stroke-width\",\n            \"relevance\": 60,\n            \"description\": \"Specifies the width of the stroke on the current object.\",\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"suffix\",\n            \"browsers\": [\n                \"FF33\"\n            ],\n            \"syntax\": \"<symbol>\",\n            \"relevance\": 50,\n            \"description\": \"@counter-style descriptor. Specifies a <symbol> that is appended to the marker representation.\",\n            \"restrictions\": [\n                \"image\",\n                \"string\",\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"system\",\n            \"browsers\": [\n                \"FF33\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"additive\",\n                    \"description\": \"Represents “sign-value” numbering systems, which, rather than using reusing digits in different positions to change their value, define additional digits with much larger values, so that the value of the number can be obtained by adding all the digits together.\"\n                },\n                {\n                    \"name\": \"alphabetic\",\n                    \"description\": \"Interprets the list of counter symbols as digits to an alphabetic numbering system, similar to the default lower-alpha counter style, which wraps from \\\"a\\\", \\\"b\\\", \\\"c\\\", to \\\"aa\\\", \\\"ab\\\", \\\"ac\\\".\"\n                },\n                {\n                    \"name\": \"cyclic\",\n                    \"description\": \"Cycles repeatedly through its provided symbols, looping back to the beginning when it reaches the end of the list.\"\n                },\n                {\n                    \"name\": \"extends\",\n                    \"description\": \"Use the algorithm of another counter style, but alter other aspects.\"\n                },\n                {\n                    \"name\": \"fixed\",\n                    \"description\": \"Runs through its list of counter symbols once, then falls back.\"\n                },\n                {\n                    \"name\": \"numeric\",\n                    \"description\": \"interprets the list of counter symbols as digits to a \\\"place-value\\\" numbering system, similar to the default 'decimal' counter style.\"\n                },\n                {\n                    \"name\": \"symbolic\",\n                    \"description\": \"Cycles repeatedly through its provided symbols, doubling, tripling, etc. the symbols on each successive pass through the list.\"\n                }\n            ],\n            \"syntax\": \"cyclic | numeric | alphabetic | symbolic | additive | [ fixed <integer>? ] | [ extends <counter-style-name> ]\",\n            \"relevance\": 50,\n            \"description\": \"@counter-style descriptor. Specifies which algorithm will be used to construct the counter’s representation based on the counter value.\",\n            \"restrictions\": [\n                \"enum\",\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"symbols\",\n            \"browsers\": [\n                \"FF33\"\n            ],\n            \"syntax\": \"<symbol>+\",\n            \"relevance\": 50,\n            \"description\": \"@counter-style descriptor. Specifies the symbols used by the marker-construction algorithm specified by the system descriptor.\",\n            \"restrictions\": [\n                \"image\",\n                \"string\",\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"table-layout\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Use any automatic table layout algorithm.\"\n                },\n                {\n                    \"name\": \"fixed\",\n                    \"description\": \"Use the fixed table layout algorithm.\"\n                }\n            ],\n            \"syntax\": \"auto | fixed\",\n            \"relevance\": 61,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/table-layout\"\n                }\n            ],\n            \"description\": \"Controls the algorithm used to lay out the table cells, rows, and columns.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"tab-size\",\n            \"browsers\": [\n                \"E79\",\n                \"FF4\",\n                \"S6.1\",\n                \"C21\",\n                \"O15\"\n            ],\n            \"syntax\": \"<integer> | <length>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/tab-size\"\n                }\n            ],\n            \"description\": \"Determines the width of the tab character (U+0009), in space characters (U+0020), when rendered.\",\n            \"restrictions\": [\n                \"integer\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"text-align\",\n            \"values\": [\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The inline contents are centered within the line box.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"The inline contents are aligned to the end edge of the line box.\"\n                },\n                {\n                    \"name\": \"justify\",\n                    \"description\": \"The text is justified according to the method specified by the 'text-justify' property.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"The inline contents are aligned to the start edge of the line box.\"\n                }\n            ],\n            \"syntax\": \"start | end | left | right | center | justify | match-parent\",\n            \"relevance\": 93,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-align\"\n                }\n            ],\n            \"description\": \"Describes how inline contents of a block are horizontally aligned if the contents do not completely fill the line box.\",\n            \"restrictions\": [\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"text-align-last\",\n            \"browsers\": [\n                \"E12\",\n                \"FF49\",\n                \"C47\",\n                \"IE5.5\",\n                \"O34\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Content on the affected line is aligned per 'text-align' unless 'text-align' is set to 'justify', in which case it is 'start-aligned'.\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The inline contents are centered within the line box.\"\n                },\n                {\n                    \"name\": \"justify\",\n                    \"description\": \"The text is justified according to the method specified by the 'text-justify' property.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"The inline contents are aligned to the left edge of the line box. In vertical text, 'left' aligns to the edge of the line box that would be the start edge for left-to-right text.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"The inline contents are aligned to the right edge of the line box. In vertical text, 'right' aligns to the edge of the line box that would be the end edge for left-to-right text.\"\n                }\n            ],\n            \"syntax\": \"auto | start | end | left | right | center | justify\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-align-last\"\n                }\n            ],\n            \"description\": \"Describes how the last line of a block or a line right before a forced line break is aligned when 'text-align' is set to 'justify'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"text-anchor\",\n            \"values\": [\n                {\n                    \"name\": \"end\",\n                    \"description\": \"The rendered characters are aligned such that the end of the resulting rendered text is at the initial current text position.\"\n                },\n                {\n                    \"name\": \"middle\",\n                    \"description\": \"The rendered characters are aligned such that the geometric middle of the resulting rendered text is at the initial current text position.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"The rendered characters are aligned such that the start of the resulting rendered text is at the initial current text position.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Used to align (start-, middle- or end-alignment) a string of text relative to a given point.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"text-decoration\",\n            \"values\": [\n                {\n                    \"name\": \"dashed\",\n                    \"description\": \"Produces a dashed line style.\"\n                },\n                {\n                    \"name\": \"dotted\",\n                    \"description\": \"Produces a dotted line.\"\n                },\n                {\n                    \"name\": \"double\",\n                    \"description\": \"Produces a double line.\"\n                },\n                {\n                    \"name\": \"line-through\",\n                    \"description\": \"Each line of text has a line through the middle.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Produces no line.\"\n                },\n                {\n                    \"name\": \"overline\",\n                    \"description\": \"Each line of text has a line above it.\"\n                },\n                {\n                    \"name\": \"solid\",\n                    \"description\": \"Produces a solid line.\"\n                },\n                {\n                    \"name\": \"underline\",\n                    \"description\": \"Each line of text is underlined.\"\n                },\n                {\n                    \"name\": \"wavy\",\n                    \"description\": \"Produces a wavy line.\"\n                }\n            ],\n            \"syntax\": \"<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'> || <'text-decoration-thickness'>\",\n            \"relevance\": 91,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-decoration\"\n                }\n            ],\n            \"description\": \"Decorations applied to font used for an element's text.\",\n            \"restrictions\": [\n                \"enum\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"text-decoration-color\",\n            \"browsers\": [\n                \"E79\",\n                \"FF36\",\n                \"S12.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"syntax\": \"<color>\",\n            \"relevance\": 52,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-decoration-color\"\n                }\n            ],\n            \"description\": \"Specifies the color of text decoration (underlines overlines, and line-throughs) set on the element with text-decoration-line.\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"text-decoration-line\",\n            \"browsers\": [\n                \"E79\",\n                \"FF36\",\n                \"S12.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"line-through\",\n                    \"description\": \"Each line of text has a line through the middle.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Neither produces nor inhibits text decoration.\"\n                },\n                {\n                    \"name\": \"overline\",\n                    \"description\": \"Each line of text has a line above it.\"\n                },\n                {\n                    \"name\": \"underline\",\n                    \"description\": \"Each line of text is underlined.\"\n                }\n            ],\n            \"syntax\": \"none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-decoration-line\"\n                }\n            ],\n            \"description\": \"Specifies what line decorations, if any, are added to the element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"text-decoration-style\",\n            \"browsers\": [\n                \"E79\",\n                \"FF36\",\n                \"S12.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"dashed\",\n                    \"description\": \"Produces a dashed line style.\"\n                },\n                {\n                    \"name\": \"dotted\",\n                    \"description\": \"Produces a dotted line.\"\n                },\n                {\n                    \"name\": \"double\",\n                    \"description\": \"Produces a double line.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Produces no line.\"\n                },\n                {\n                    \"name\": \"solid\",\n                    \"description\": \"Produces a solid line.\"\n                },\n                {\n                    \"name\": \"wavy\",\n                    \"description\": \"Produces a wavy line.\"\n                }\n            ],\n            \"syntax\": \"solid | double | dotted | dashed | wavy\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-decoration-style\"\n                }\n            ],\n            \"description\": \"Specifies the line style for underline, line-through and overline text decoration.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"text-indent\",\n            \"values\": [],\n            \"syntax\": \"<length-percentage> && hanging? && each-line?\",\n            \"relevance\": 68,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-indent\"\n                }\n            ],\n            \"description\": \"Specifies the indentation applied to lines of inline content in a block. The indentation only affects the first line of inline content in the block unless the 'hanging' keyword is specified, in which case it affects all lines except the first.\",\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"text-justify\",\n            \"browsers\": [\n                \"E12\",\n                \"FF55\",\n                \"C32\",\n                \"IE11\",\n                \"O19\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The UA determines the justification algorithm to follow, based on a balance between performance and adequate presentation quality.\"\n                },\n                {\n                    \"name\": \"distribute\",\n                    \"description\": \"Justification primarily changes spacing both at word separators and at grapheme cluster boundaries in all scripts except those in the connected and cursive groups. This value is sometimes used in e.g. Japanese, often with the 'text-align-last' property.\"\n                },\n                {\n                    \"name\": \"distribute-all-lines\"\n                },\n                {\n                    \"name\": \"inter-cluster\",\n                    \"description\": \"Justification primarily changes spacing at word separators and at grapheme cluster boundaries in clustered scripts. This value is typically used for Southeast Asian scripts such as Thai.\"\n                },\n                {\n                    \"name\": \"inter-ideograph\",\n                    \"description\": \"Justification primarily changes spacing at word separators and at inter-graphemic boundaries in scripts that use no word spaces. This value is typically used for CJK languages.\"\n                },\n                {\n                    \"name\": \"inter-word\",\n                    \"description\": \"Justification primarily changes spacing at word separators. This value is typically used for languages that separate words using spaces, like English or (sometimes) Korean.\"\n                },\n                {\n                    \"name\": \"kashida\",\n                    \"description\": \"Justification primarily stretches Arabic and related scripts through the use of kashida or other calligraphic elongation.\"\n                },\n                {\n                    \"name\": \"newspaper\"\n                }\n            ],\n            \"syntax\": \"auto | inter-character | inter-word | none\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-justify\"\n                }\n            ],\n            \"description\": \"Selects the justification algorithm used when 'text-align' is set to 'justify'. The property applies to block containers, but the UA may (but is not required to) also support it on inline elements.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"text-orientation\",\n            \"browsers\": [\n                \"E79\",\n                \"FF41\",\n                \"S5.1\",\n                \"C48\",\n                \"O15\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"sideways\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF41\",\n                        \"S5.1\",\n                        \"C48\",\n                        \"O15\"\n                    ],\n                    \"description\": \"This value is equivalent to 'sideways-right' in 'vertical-rl' writing mode and equivalent to 'sideways-left' in 'vertical-lr' writing mode.\"\n                },\n                {\n                    \"name\": \"sideways-right\",\n                    \"browsers\": [\n                        \"E79\",\n                        \"FF41\",\n                        \"S5.1\",\n                        \"C48\",\n                        \"O15\"\n                    ],\n                    \"description\": \"In vertical writing modes, this causes text to be set as if in a horizontal layout, but rotated 90° clockwise.\"\n                },\n                {\n                    \"name\": \"upright\",\n                    \"description\": \"In vertical writing modes, characters from horizontal-only scripts are rendered upright, i.e. in their standard horizontal orientation.\"\n                }\n            ],\n            \"syntax\": \"mixed | upright | sideways\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-orientation\"\n                }\n            ],\n            \"description\": \"Specifies the orientation of text within a line.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"text-overflow\",\n            \"values\": [\n                {\n                    \"name\": \"clip\",\n                    \"description\": \"Clip inline content that overflows. Characters may be only partially rendered.\"\n                },\n                {\n                    \"name\": \"ellipsis\",\n                    \"description\": \"Render an ellipsis character (U+2026) to represent clipped inline content.\"\n                }\n            ],\n            \"syntax\": \"[ clip | ellipsis | <string> ]{1,2}\",\n            \"relevance\": 81,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-overflow\"\n                }\n            ],\n            \"description\": \"Text can overflow for example when it is prevented from wrapping.\",\n            \"restrictions\": [\n                \"enum\",\n                \"string\"\n            ]\n        },\n        {\n            \"name\": \"text-rendering\",\n            \"browsers\": [\n                \"E79\",\n                \"FF1\",\n                \"S5\",\n                \"C4\",\n                \"O15\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"geometricPrecision\",\n                    \"description\": \"Indicates that the user agent shall emphasize geometric precision over legibility and rendering speed.\"\n                },\n                {\n                    \"name\": \"optimizeLegibility\",\n                    \"description\": \"Indicates that the user agent shall emphasize legibility over rendering speed and geometric precision.\"\n                },\n                {\n                    \"name\": \"optimizeSpeed\",\n                    \"description\": \"Indicates that the user agent shall emphasize rendering speed over legibility and geometric precision.\"\n                }\n            ],\n            \"syntax\": \"auto | optimizeSpeed | optimizeLegibility | geometricPrecision\",\n            \"relevance\": 68,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-rendering\"\n                }\n            ],\n            \"description\": \"The creator of SVG content might want to provide a hint to the implementation about what tradeoffs to make as it renders text. The ‘text-rendering’ property provides these hints.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"text-shadow\",\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No shadow.\"\n                }\n            ],\n            \"syntax\": \"none | <shadow-t>#\",\n            \"relevance\": 74,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-shadow\"\n                }\n            ],\n            \"description\": \"Enables shadow effects to be applied to the text of the element.\",\n            \"restrictions\": [\n                \"length\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"text-transform\",\n            \"values\": [\n                {\n                    \"name\": \"capitalize\",\n                    \"description\": \"Puts the first typographic letter unit of each word in titlecase.\"\n                },\n                {\n                    \"name\": \"lowercase\",\n                    \"description\": \"Puts all letters in lowercase.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No effects.\"\n                },\n                {\n                    \"name\": \"uppercase\",\n                    \"description\": \"Puts all letters in uppercase.\"\n                }\n            ],\n            \"syntax\": \"none | capitalize | uppercase | lowercase | full-width | full-size-kana\",\n            \"relevance\": 84,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-transform\"\n                }\n            ],\n            \"description\": \"Controls capitalization effects of an element’s text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"text-underline-position\",\n            \"values\": [\n                {\n                    \"name\": \"above\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The user agent may use any algorithm to determine the underline’s position. In horizontal line layout, the underline should be aligned as for alphabetic. In vertical line layout, if the language is set to Japanese or Korean, the underline should be aligned as for over.\"\n                },\n                {\n                    \"name\": \"below\",\n                    \"description\": \"The underline is aligned with the under edge of the element’s content box.\"\n                }\n            ],\n            \"syntax\": \"auto | from-font | [ under || [ left | right ] ]\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-underline-position\"\n                }\n            ],\n            \"description\": \"Sets the position of an underline specified on the same element: it does not affect underlines specified by ancestor elements. This property is typically used in vertical writing contexts such as in Japanese documents where it often desired to have the underline appear 'over' (to the right of) the affected run of text\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"top\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"For non-replaced elements, the effect of this value depends on which of related properties have the value 'auto' as well\"\n                }\n            ],\n            \"syntax\": \"<length> | <percentage> | auto\",\n            \"relevance\": 95,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/top\"\n                }\n            ],\n            \"description\": \"Specifies how far an absolutely positioned box's top margin edge is offset below the top edge of the box's 'containing block'.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"touch-action\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The user agent may determine any permitted touch behaviors for touches that begin on the element.\"\n                },\n                {\n                    \"name\": \"cross-slide-x\"\n                },\n                {\n                    \"name\": \"cross-slide-y\"\n                },\n                {\n                    \"name\": \"double-tap-zoom\"\n                },\n                {\n                    \"name\": \"manipulation\",\n                    \"description\": \"The user agent may consider touches that begin on the element only for the purposes of scrolling and continuous zooming.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Touches that begin on the element must not trigger default touch behaviors.\"\n                },\n                {\n                    \"name\": \"pan-x\",\n                    \"description\": \"The user agent may consider touches that begin on the element only for the purposes of horizontally scrolling the element’s nearest ancestor with horizontally scrollable content.\"\n                },\n                {\n                    \"name\": \"pan-y\",\n                    \"description\": \"The user agent may consider touches that begin on the element only for the purposes of vertically scrolling the element’s nearest ancestor with vertically scrollable content.\"\n                },\n                {\n                    \"name\": \"pinch-zoom\"\n                }\n            ],\n            \"syntax\": \"auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation\",\n            \"relevance\": 65,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/touch-action\"\n                }\n            ],\n            \"description\": \"Determines whether touch input may trigger default behavior supplied by user agent.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"transform\",\n            \"values\": [\n                {\n                    \"name\": \"matrix()\",\n                    \"description\": \"Specifies a 2D transformation in the form of a transformation matrix of six values. matrix(a,b,c,d,e,f) is equivalent to applying the transformation matrix [a b c d e f]\"\n                },\n                {\n                    \"name\": \"matrix3d()\",\n                    \"description\": \"Specifies a 3D transformation as a 4x4 homogeneous matrix of 16 values in column-major order.\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"perspective()\",\n                    \"description\": \"Specifies a perspective projection matrix.\"\n                },\n                {\n                    \"name\": \"rotate()\",\n                    \"description\": \"Specifies a 2D rotation by the angle specified in the parameter about the origin of the element, as defined by the transform-origin property.\"\n                },\n                {\n                    \"name\": \"rotate3d()\",\n                    \"description\": \"Specifies a clockwise 3D rotation by the angle specified in last parameter about the [x,y,z] direction vector described by the first 3 parameters.\"\n                },\n                {\n                    \"name\": \"rotateX('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the X axis.\"\n                },\n                {\n                    \"name\": \"rotateY('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the Y axis.\"\n                },\n                {\n                    \"name\": \"rotateZ('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the Z axis.\"\n                },\n                {\n                    \"name\": \"scale()\",\n                    \"description\": \"Specifies a 2D scale operation by the [sx,sy] scaling vector described by the 2 parameters. If the second parameter is not provided, it is takes a value equal to the first.\"\n                },\n                {\n                    \"name\": \"scale3d()\",\n                    \"description\": \"Specifies a 3D scale operation by the [sx,sy,sz] scaling vector described by the 3 parameters.\"\n                },\n                {\n                    \"name\": \"scaleX()\",\n                    \"description\": \"Specifies a scale operation using the [sx,1] scaling vector, where sx is given as the parameter.\"\n                },\n                {\n                    \"name\": \"scaleY()\",\n                    \"description\": \"Specifies a scale operation using the [sy,1] scaling vector, where sy is given as the parameter.\"\n                },\n                {\n                    \"name\": \"scaleZ()\",\n                    \"description\": \"Specifies a scale operation using the [1,1,sz] scaling vector, where sz is given as the parameter.\"\n                },\n                {\n                    \"name\": \"skew()\",\n                    \"description\": \"Specifies a skew transformation along the X and Y axes. The first angle parameter specifies the skew on the X axis. The second angle parameter specifies the skew on the Y axis. If the second parameter is not given then a value of 0 is used for the Y angle (ie: no skew on the Y axis).\"\n                },\n                {\n                    \"name\": \"skewX()\",\n                    \"description\": \"Specifies a skew transformation along the X axis by the given angle.\"\n                },\n                {\n                    \"name\": \"skewY()\",\n                    \"description\": \"Specifies a skew transformation along the Y axis by the given angle.\"\n                },\n                {\n                    \"name\": \"translate()\",\n                    \"description\": \"Specifies a 2D translation by the vector [tx, ty], where tx is the first translation-value parameter and ty is the optional second translation-value parameter.\"\n                },\n                {\n                    \"name\": \"translate3d()\",\n                    \"description\": \"Specifies a 3D translation by the vector [tx,ty,tz], with tx, ty and tz being the first, second and third translation-value parameters respectively.\"\n                },\n                {\n                    \"name\": \"translateX()\",\n                    \"description\": \"Specifies a translation by the given amount in the X direction.\"\n                },\n                {\n                    \"name\": \"translateY()\",\n                    \"description\": \"Specifies a translation by the given amount in the Y direction.\"\n                },\n                {\n                    \"name\": \"translateZ()\",\n                    \"description\": \"Specifies a translation by the given amount in the Z direction. Note that percentage values are not allowed in the translateZ translation-value, and if present are evaluated as 0.\"\n                }\n            ],\n            \"syntax\": \"none | <transform-list>\",\n            \"relevance\": 88,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/transform\"\n                }\n            ],\n            \"description\": \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"transform-origin\",\n            \"syntax\": \"[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?\",\n            \"relevance\": 74,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/transform-origin\"\n                }\n            ],\n            \"description\": \"Establishes the origin of transformation for an element.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"transform-style\",\n            \"browsers\": [\n                \"E12\",\n                \"FF16\",\n                \"S9\",\n                \"C36\",\n                \"O23\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"flat\",\n                    \"description\": \"All children of this element are rendered flattened into the 2D plane of the element.\"\n                },\n                {\n                    \"name\": \"preserve-3d\",\n                    \"browsers\": [\n                        \"E12\",\n                        \"FF16\",\n                        \"S9\",\n                        \"C36\",\n                        \"O23\"\n                    ],\n                    \"description\": \"Flattening is not performed, so children maintain their position in 3D space.\"\n                }\n            ],\n            \"syntax\": \"flat | preserve-3d\",\n            \"relevance\": 54,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/transform-style\"\n                }\n            ],\n            \"description\": \"Defines how nested elements are rendered in 3D space.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"transition\",\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"syntax\": \"<single-transition>#\",\n            \"relevance\": 87,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/transition\"\n                }\n            ],\n            \"description\": \"Shorthand property combines four of the transition properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"property\",\n                \"timing-function\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"transition-delay\",\n            \"syntax\": \"<time>#\",\n            \"relevance\": 62,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/transition-delay\"\n                }\n            ],\n            \"description\": \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"transition-duration\",\n            \"syntax\": \"<time>#\",\n            \"relevance\": 62,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/transition-duration\"\n                }\n            ],\n            \"description\": \"Specifies how long the transition from the old value to the new value should take.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"transition-property\",\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"syntax\": \"none | <single-transition-property>#\",\n            \"relevance\": 64,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/transition-property\"\n                }\n            ],\n            \"description\": \"Specifies the name of the CSS property to which the transition is applied.\",\n            \"restrictions\": [\n                \"property\"\n            ]\n        },\n        {\n            \"name\": \"transition-timing-function\",\n            \"syntax\": \"<timing-function>#\",\n            \"relevance\": 60,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/transition-timing-function\"\n                }\n            ],\n            \"description\": \"Describes how the intermediate values used during a transition will be calculated.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            \"name\": \"unicode-bidi\",\n            \"values\": [\n                {\n                    \"name\": \"bidi-override\",\n                    \"description\": \"Inside the element, reordering is strictly in sequence according to the 'direction' property; the implicit part of the bidirectional algorithm is ignored.\"\n                },\n                {\n                    \"name\": \"embed\",\n                    \"description\": \"If the element is inline-level, this value opens an additional level of embedding with respect to the bidirectional algorithm. The direction of this embedding level is given by the 'direction' property.\"\n                },\n                {\n                    \"name\": \"isolate\",\n                    \"description\": \"The contents of the element are considered to be inside a separate, independent paragraph.\"\n                },\n                {\n                    \"name\": \"isolate-override\",\n                    \"description\": \"This combines the isolation behavior of 'isolate' with the directional override behavior of 'bidi-override'\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"The element does not open an additional level of embedding with respect to the bidirectional algorithm. For inline-level elements, implicit reordering works across element boundaries.\"\n                },\n                {\n                    \"name\": \"plaintext\",\n                    \"description\": \"For the purposes of the Unicode bidirectional algorithm, the base directionality of each bidi paragraph for which the element forms the containing block is determined not by the element's computed 'direction'.\"\n                }\n            ],\n            \"syntax\": \"normal | embed | isolate | bidi-override | isolate-override | plaintext\",\n            \"relevance\": 57,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/unicode-bidi\"\n                }\n            ],\n            \"description\": \"The level of embedding with respect to the bidirectional algorithm.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"unicode-range\",\n            \"values\": [\n                {\n                    \"name\": \"U+26\",\n                    \"description\": \"Ampersand.\"\n                },\n                {\n                    \"name\": \"U+20-24F, U+2B0-2FF, U+370-4FF, U+1E00-1EFF, U+2000-20CF, U+2100-23FF, U+2500-26FF, U+E000-F8FF, U+FB00–FB4F\",\n                    \"description\": \"WGL4 character set (Pan-European).\"\n                },\n                {\n                    \"name\": \"U+20-17F, U+2B0-2FF, U+2000-206F, U+20A0-20CF, U+2100-21FF, U+2600-26FF\",\n                    \"description\": \"The Multilingual European Subset No. 1. Latin. Covers ~44 languages.\"\n                },\n                {\n                    \"name\": \"U+20-2FF, U+370-4FF, U+1E00-20CF, U+2100-23FF, U+2500-26FF, U+FB00-FB4F, U+FFF0-FFFD\",\n                    \"description\": \"The Multilingual European Subset No. 2. Latin, Greek, and Cyrillic. Covers ~128 language.\"\n                },\n                {\n                    \"name\": \"U+20-4FF, U+530-58F, U+10D0-10FF, U+1E00-23FF, U+2440-245F, U+2500-26FF, U+FB00-FB4F, U+FE20-FE2F, U+FFF0-FFFD\",\n                    \"description\": \"The Multilingual European Subset No. 3. Covers all characters belonging to European scripts.\"\n                },\n                {\n                    \"name\": \"U+00-7F\",\n                    \"description\": \"Basic Latin (ASCII).\"\n                },\n                {\n                    \"name\": \"U+80-FF\",\n                    \"description\": \"Latin-1 Supplement. Accented characters for Western European languages, common punctuation characters, multiplication and division signs.\"\n                },\n                {\n                    \"name\": \"U+100-17F\",\n                    \"description\": \"Latin Extended-A. Accented characters for for Czech, Dutch, Polish, and Turkish.\"\n                },\n                {\n                    \"name\": \"U+180-24F\",\n                    \"description\": \"Latin Extended-B. Croatian, Slovenian, Romanian, Non-European and historic latin, Khoisan, Pinyin, Livonian, Sinology.\"\n                },\n                {\n                    \"name\": \"U+1E00-1EFF\",\n                    \"description\": \"Latin Extended Additional. Vietnamese, German captial sharp s, Medievalist, Latin general use.\"\n                },\n                {\n                    \"name\": \"U+250-2AF\",\n                    \"description\": \"International Phonetic Alphabet Extensions.\"\n                },\n                {\n                    \"name\": \"U+370-3FF\",\n                    \"description\": \"Greek and Coptic.\"\n                },\n                {\n                    \"name\": \"U+1F00-1FFF\",\n                    \"description\": \"Greek Extended. Accented characters for polytonic Greek.\"\n                },\n                {\n                    \"name\": \"U+400-4FF\",\n                    \"description\": \"Cyrillic.\"\n                },\n                {\n                    \"name\": \"U+500-52F\",\n                    \"description\": \"Cyrillic Supplement. Extra letters for Komi, Khanty, Chukchi, Mordvin, Kurdish, Aleut, Chuvash, Abkhaz, Azerbaijani, and Orok.\"\n                },\n                {\n                    \"name\": \"U+00-52F, U+1E00-1FFF, U+2200–22FF\",\n                    \"description\": \"Latin, Greek, Cyrillic, some punctuation and symbols.\"\n                },\n                {\n                    \"name\": \"U+530–58F\",\n                    \"description\": \"Armenian.\"\n                },\n                {\n                    \"name\": \"U+590–5FF\",\n                    \"description\": \"Hebrew.\"\n                },\n                {\n                    \"name\": \"U+600–6FF\",\n                    \"description\": \"Arabic.\"\n                },\n                {\n                    \"name\": \"U+750–77F\",\n                    \"description\": \"Arabic Supplement. Additional letters for African languages, Khowar, Torwali, Burushaski, and early Persian.\"\n                },\n                {\n                    \"name\": \"U+8A0–8FF\",\n                    \"description\": \"Arabic Extended-A. Additional letters for African languages, European and Central Asian languages, Rohingya, Tamazight, Arwi, and Koranic annotation signs.\"\n                },\n                {\n                    \"name\": \"U+700–74F\",\n                    \"description\": \"Syriac.\"\n                },\n                {\n                    \"name\": \"U+900–97F\",\n                    \"description\": \"Devanagari.\"\n                },\n                {\n                    \"name\": \"U+980–9FF\",\n                    \"description\": \"Bengali.\"\n                },\n                {\n                    \"name\": \"U+A00–A7F\",\n                    \"description\": \"Gurmukhi.\"\n                },\n                {\n                    \"name\": \"U+A80–AFF\",\n                    \"description\": \"Gujarati.\"\n                },\n                {\n                    \"name\": \"U+B00–B7F\",\n                    \"description\": \"Oriya.\"\n                },\n                {\n                    \"name\": \"U+B80–BFF\",\n                    \"description\": \"Tamil.\"\n                },\n                {\n                    \"name\": \"U+C00–C7F\",\n                    \"description\": \"Telugu.\"\n                },\n                {\n                    \"name\": \"U+C80–CFF\",\n                    \"description\": \"Kannada.\"\n                },\n                {\n                    \"name\": \"U+D00–D7F\",\n                    \"description\": \"Malayalam.\"\n                },\n                {\n                    \"name\": \"U+D80–DFF\",\n                    \"description\": \"Sinhala.\"\n                },\n                {\n                    \"name\": \"U+118A0–118FF\",\n                    \"description\": \"Warang Citi.\"\n                },\n                {\n                    \"name\": \"U+E00–E7F\",\n                    \"description\": \"Thai.\"\n                },\n                {\n                    \"name\": \"U+1A20–1AAF\",\n                    \"description\": \"Tai Tham.\"\n                },\n                {\n                    \"name\": \"U+AA80–AADF\",\n                    \"description\": \"Tai Viet.\"\n                },\n                {\n                    \"name\": \"U+E80–EFF\",\n                    \"description\": \"Lao.\"\n                },\n                {\n                    \"name\": \"U+F00–FFF\",\n                    \"description\": \"Tibetan.\"\n                },\n                {\n                    \"name\": \"U+1000–109F\",\n                    \"description\": \"Myanmar (Burmese).\"\n                },\n                {\n                    \"name\": \"U+10A0–10FF\",\n                    \"description\": \"Georgian.\"\n                },\n                {\n                    \"name\": \"U+1200–137F\",\n                    \"description\": \"Ethiopic.\"\n                },\n                {\n                    \"name\": \"U+1380–139F\",\n                    \"description\": \"Ethiopic Supplement. Extra Syllables for Sebatbeit, and Tonal marks\"\n                },\n                {\n                    \"name\": \"U+2D80–2DDF\",\n                    \"description\": \"Ethiopic Extended. Extra Syllables for Me'en, Blin, and Sebatbeit.\"\n                },\n                {\n                    \"name\": \"U+AB00–AB2F\",\n                    \"description\": \"Ethiopic Extended-A. Extra characters for Gamo-Gofa-Dawro, Basketo, and Gumuz.\"\n                },\n                {\n                    \"name\": \"U+1780–17FF\",\n                    \"description\": \"Khmer.\"\n                },\n                {\n                    \"name\": \"U+1800–18AF\",\n                    \"description\": \"Mongolian.\"\n                },\n                {\n                    \"name\": \"U+1B80–1BBF\",\n                    \"description\": \"Sundanese.\"\n                },\n                {\n                    \"name\": \"U+1CC0–1CCF\",\n                    \"description\": \"Sundanese Supplement. Punctuation.\"\n                },\n                {\n                    \"name\": \"U+4E00–9FD5\",\n                    \"description\": \"CJK (Chinese, Japanese, Korean) Unified Ideographs. Most common ideographs for modern Chinese and Japanese.\"\n                },\n                {\n                    \"name\": \"U+3400–4DB5\",\n                    \"description\": \"CJK Unified Ideographs Extension A. Rare ideographs.\"\n                },\n                {\n                    \"name\": \"U+2F00–2FDF\",\n                    \"description\": \"Kangxi Radicals.\"\n                },\n                {\n                    \"name\": \"U+2E80–2EFF\",\n                    \"description\": \"CJK Radicals Supplement. Alternative forms of Kangxi Radicals.\"\n                },\n                {\n                    \"name\": \"U+1100–11FF\",\n                    \"description\": \"Hangul Jamo.\"\n                },\n                {\n                    \"name\": \"U+AC00–D7AF\",\n                    \"description\": \"Hangul Syllables.\"\n                },\n                {\n                    \"name\": \"U+3040–309F\",\n                    \"description\": \"Hiragana.\"\n                },\n                {\n                    \"name\": \"U+30A0–30FF\",\n                    \"description\": \"Katakana.\"\n                },\n                {\n                    \"name\": \"U+A5, U+4E00-9FFF, U+30??, U+FF00-FF9F\",\n                    \"description\": \"Japanese Kanji, Hiragana and Katakana characters plus Yen/Yuan symbol.\"\n                },\n                {\n                    \"name\": \"U+A4D0–A4FF\",\n                    \"description\": \"Lisu.\"\n                },\n                {\n                    \"name\": \"U+A000–A48F\",\n                    \"description\": \"Yi Syllables.\"\n                },\n                {\n                    \"name\": \"U+A490–A4CF\",\n                    \"description\": \"Yi Radicals.\"\n                },\n                {\n                    \"name\": \"U+2000-206F\",\n                    \"description\": \"General Punctuation.\"\n                },\n                {\n                    \"name\": \"U+3000–303F\",\n                    \"description\": \"CJK Symbols and Punctuation.\"\n                },\n                {\n                    \"name\": \"U+2070–209F\",\n                    \"description\": \"Superscripts and Subscripts.\"\n                },\n                {\n                    \"name\": \"U+20A0–20CF\",\n                    \"description\": \"Currency Symbols.\"\n                },\n                {\n                    \"name\": \"U+2100–214F\",\n                    \"description\": \"Letterlike Symbols.\"\n                },\n                {\n                    \"name\": \"U+2150–218F\",\n                    \"description\": \"Number Forms.\"\n                },\n                {\n                    \"name\": \"U+2190–21FF\",\n                    \"description\": \"Arrows.\"\n                },\n                {\n                    \"name\": \"U+2200–22FF\",\n                    \"description\": \"Mathematical Operators.\"\n                },\n                {\n                    \"name\": \"U+2300–23FF\",\n                    \"description\": \"Miscellaneous Technical.\"\n                },\n                {\n                    \"name\": \"U+E000-F8FF\",\n                    \"description\": \"Private Use Area.\"\n                },\n                {\n                    \"name\": \"U+FB00–FB4F\",\n                    \"description\": \"Alphabetic Presentation Forms. Ligatures for latin, Armenian, and Hebrew.\"\n                },\n                {\n                    \"name\": \"U+FB50–FDFF\",\n                    \"description\": \"Arabic Presentation Forms-A. Contextual forms / ligatures for Persian, Urdu, Sindhi, Central Asian languages, etc, Arabic pedagogical symbols, word ligatures.\"\n                },\n                {\n                    \"name\": \"U+1F600–1F64F\",\n                    \"description\": \"Emoji: Emoticons.\"\n                },\n                {\n                    \"name\": \"U+2600–26FF\",\n                    \"description\": \"Emoji: Miscellaneous Symbols.\"\n                },\n                {\n                    \"name\": \"U+1F300–1F5FF\",\n                    \"description\": \"Emoji: Miscellaneous Symbols and Pictographs.\"\n                },\n                {\n                    \"name\": \"U+1F900–1F9FF\",\n                    \"description\": \"Emoji: Supplemental Symbols and Pictographs.\"\n                },\n                {\n                    \"name\": \"U+1F680–1F6FF\",\n                    \"description\": \"Emoji: Transport and Map Symbols.\"\n                }\n            ],\n            \"syntax\": \"<unicode-range>#\",\n            \"relevance\": 58,\n            \"description\": \"@font-face descriptor. Defines the set of Unicode codepoints that may be supported by the font face for which it is declared.\",\n            \"restrictions\": [\n                \"unicode-range\"\n            ]\n        },\n        {\n            \"name\": \"user-select\",\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"The content of the element must be selected atomically\"\n                },\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"contain\",\n                    \"description\": \"UAs must not allow a selection which is started in this element to be extended outside of this element.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The UA must not allow selections to be started in this element.\"\n                },\n                {\n                    \"name\": \"text\",\n                    \"description\": \"The element imposes no constraint on the selection.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | text | none | contain | all\",\n            \"relevance\": 24,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/user-select\"\n                }\n            ],\n            \"description\": \"Controls the appearance of selection.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"vertical-align\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Align the dominant baseline of the parent box with the equivalent, or heuristically reconstructed, baseline of the element inline box.\"\n                },\n                {\n                    \"name\": \"baseline\",\n                    \"description\": \"Align the 'alphabetic' baseline of the element with the 'alphabetic' baseline of the parent element.\"\n                },\n                {\n                    \"name\": \"bottom\",\n                    \"description\": \"Align the after edge of the extended inline box with the after-edge of the line box.\"\n                },\n                {\n                    \"name\": \"middle\",\n                    \"description\": \"Align the 'middle' baseline of the inline element with the middle baseline of the parent.\"\n                },\n                {\n                    \"name\": \"sub\",\n                    \"description\": \"Lower the baseline of the box to the proper position for subscripts of the parent's box. (This value has no effect on the font size of the element's text.)\"\n                },\n                {\n                    \"name\": \"super\",\n                    \"description\": \"Raise the baseline of the box to the proper position for superscripts of the parent's box. (This value has no effect on the font size of the element's text.)\"\n                },\n                {\n                    \"name\": \"text-bottom\",\n                    \"description\": \"Align the bottom of the box with the after-edge of the parent element's font.\"\n                },\n                {\n                    \"name\": \"text-top\",\n                    \"description\": \"Align the top of the box with the before-edge of the parent element's font.\"\n                },\n                {\n                    \"name\": \"top\",\n                    \"description\": \"Align the before edge of the extended inline box with the before-edge of the line box.\"\n                },\n                {\n                    \"name\": \"-webkit-baseline-middle\"\n                }\n            ],\n            \"syntax\": \"baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>\",\n            \"relevance\": 91,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/vertical-align\"\n                }\n            ],\n            \"description\": \"Affects the vertical positioning of the inline boxes generated by an inline-level element inside a line box.\",\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"visibility\",\n            \"values\": [\n                {\n                    \"name\": \"collapse\",\n                    \"description\": \"Table-specific. If used on elements other than rows, row groups, columns, or column groups, 'collapse' has the same meaning as 'hidden'.\"\n                },\n                {\n                    \"name\": \"hidden\",\n                    \"description\": \"The generated box is invisible (fully transparent, nothing is drawn), but still affects layout.\"\n                },\n                {\n                    \"name\": \"visible\",\n                    \"description\": \"The generated box is visible.\"\n                }\n            ],\n            \"syntax\": \"visible | hidden | collapse\",\n            \"relevance\": 88,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/visibility\"\n                }\n            ],\n            \"description\": \"Specifies whether the boxes generated by an element are rendered. Invisible boxes still affect layout (set the ‘display’ property to ‘none’ to suppress box generation altogether).\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-animation\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"alternate\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\"\n                },\n                {\n                    \"name\": \"alternate-reverse\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\"\n                },\n                {\n                    \"name\": \"backwards\",\n                    \"description\": \"The beginning property value (as defined in the first @keyframes at-rule) is applied before the animation is displayed, during the period defined by 'animation-delay'.\"\n                },\n                {\n                    \"name\": \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    \"name\": \"forwards\",\n                    \"description\": \"The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes.\"\n                },\n                {\n                    \"name\": \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No animation is performed\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property combines six of the animation properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"enum\",\n                \"timing-function\",\n                \"identifier\",\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-animation-delay\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines when the animation will start.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-animation-direction\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"alternate\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction.\"\n                },\n                {\n                    \"name\": \"alternate-reverse\",\n                    \"description\": \"The animation cycle iterations that are odd counts are played in the reverse direction, and the animation cycle iterations that are even counts are played in a normal direction.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Normal playback.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"All iterations of the animation are played in the reverse direction from the way they were specified.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines whether or not the animation should play in reverse on alternate cycles.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-animation-duration\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines the length of time that an animation takes to complete one cycle.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-animation-fill-mode\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"backwards\",\n                    \"description\": \"The beginning property value (as defined in the first @keyframes at-rule) is applied before the animation is displayed, during the period defined by 'animation-delay'.\"\n                },\n                {\n                    \"name\": \"both\",\n                    \"description\": \"Both forwards and backwards fill modes are applied.\"\n                },\n                {\n                    \"name\": \"forwards\",\n                    \"description\": \"The final property value (as defined in the last @keyframes at-rule) is maintained after the animation completes.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"There is no change to the property value between the time the animation is applied and the time the animation begins playing or after the animation completes.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines what values are applied by the animation outside the time it is executing.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-animation-iteration-count\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"infinite\",\n                    \"description\": \"Causes the animation to repeat forever.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines the number of times an animation cycle is played. The default value is one, meaning the animation will play from beginning to end once.\",\n            \"restrictions\": [\n                \"number\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-animation-name\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No animation is performed\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines a list of animations that apply. Each name is used to select the keyframe at-rule that provides the property values for the animation.\",\n            \"restrictions\": [\n                \"identifier\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-animation-play-state\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"paused\",\n                    \"description\": \"A running animation will be paused.\"\n                },\n                {\n                    \"name\": \"running\",\n                    \"description\": \"Resume playback of a paused animation.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines whether the animation is running or paused.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-animation-timing-function\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes how the animation will progress over one cycle of its duration. See the 'transition-timing-function'.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-appearance\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"button\"\n                },\n                {\n                    \"name\": \"button-bevel\"\n                },\n                {\n                    \"name\": \"caps-lock-indicator\"\n                },\n                {\n                    \"name\": \"caret\"\n                },\n                {\n                    \"name\": \"checkbox\"\n                },\n                {\n                    \"name\": \"default-button\"\n                },\n                {\n                    \"name\": \"listbox\"\n                },\n                {\n                    \"name\": \"listitem\"\n                },\n                {\n                    \"name\": \"media-fullscreen-button\"\n                },\n                {\n                    \"name\": \"media-mute-button\"\n                },\n                {\n                    \"name\": \"media-play-button\"\n                },\n                {\n                    \"name\": \"media-seek-back-button\"\n                },\n                {\n                    \"name\": \"media-seek-forward-button\"\n                },\n                {\n                    \"name\": \"media-slider\"\n                },\n                {\n                    \"name\": \"media-sliderthumb\"\n                },\n                {\n                    \"name\": \"menulist\"\n                },\n                {\n                    \"name\": \"menulist-button\"\n                },\n                {\n                    \"name\": \"menulist-text\"\n                },\n                {\n                    \"name\": \"menulist-textfield\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"push-button\"\n                },\n                {\n                    \"name\": \"radio\"\n                },\n                {\n                    \"name\": \"scrollbarbutton-down\"\n                },\n                {\n                    \"name\": \"scrollbarbutton-left\"\n                },\n                {\n                    \"name\": \"scrollbarbutton-right\"\n                },\n                {\n                    \"name\": \"scrollbarbutton-up\"\n                },\n                {\n                    \"name\": \"scrollbargripper-horizontal\"\n                },\n                {\n                    \"name\": \"scrollbargripper-vertical\"\n                },\n                {\n                    \"name\": \"scrollbarthumb-horizontal\"\n                },\n                {\n                    \"name\": \"scrollbarthumb-vertical\"\n                },\n                {\n                    \"name\": \"scrollbartrack-horizontal\"\n                },\n                {\n                    \"name\": \"scrollbartrack-vertical\"\n                },\n                {\n                    \"name\": \"searchfield\"\n                },\n                {\n                    \"name\": \"searchfield-cancel-button\"\n                },\n                {\n                    \"name\": \"searchfield-decoration\"\n                },\n                {\n                    \"name\": \"searchfield-results-button\"\n                },\n                {\n                    \"name\": \"searchfield-results-decoration\"\n                },\n                {\n                    \"name\": \"slider-horizontal\"\n                },\n                {\n                    \"name\": \"sliderthumb-horizontal\"\n                },\n                {\n                    \"name\": \"sliderthumb-vertical\"\n                },\n                {\n                    \"name\": \"slider-vertical\"\n                },\n                {\n                    \"name\": \"square-button\"\n                },\n                {\n                    \"name\": \"textarea\"\n                },\n                {\n                    \"name\": \"textfield\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield\",\n            \"relevance\": 0,\n            \"description\": \"Changes the appearance of buttons and other controls to resemble native controls.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-backdrop-filter\",\n            \"browsers\": [\n                \"S9\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No filter effects are applied.\"\n                },\n                {\n                    \"name\": \"blur()\",\n                    \"description\": \"Applies a Gaussian blur to the input image.\"\n                },\n                {\n                    \"name\": \"brightness()\",\n                    \"description\": \"Applies a linear multiplier to input image, making it appear more or less bright.\"\n                },\n                {\n                    \"name\": \"contrast()\",\n                    \"description\": \"Adjusts the contrast of the input.\"\n                },\n                {\n                    \"name\": \"drop-shadow()\",\n                    \"description\": \"Applies a drop shadow effect to the input image.\"\n                },\n                {\n                    \"name\": \"grayscale()\",\n                    \"description\": \"Converts the input image to grayscale.\"\n                },\n                {\n                    \"name\": \"hue-rotate()\",\n                    \"description\": \"Applies a hue rotation on the input image. \"\n                },\n                {\n                    \"name\": \"invert()\",\n                    \"description\": \"Inverts the samples in the input image.\"\n                },\n                {\n                    \"name\": \"opacity()\",\n                    \"description\": \"Applies transparency to the samples in the input image.\"\n                },\n                {\n                    \"name\": \"saturate()\",\n                    \"description\": \"Saturates the input image.\"\n                },\n                {\n                    \"name\": \"sepia()\",\n                    \"description\": \"Converts the input image to sepia.\"\n                },\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"A filter reference to a <filter> element.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Applies a filter effect where the first filter in the list takes the element's background image as the input image.\",\n            \"restrictions\": [\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-backface-visibility\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"hidden\"\n                },\n                {\n                    \"name\": \"visible\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Determines whether or not the 'back' side of a transformed element is visible when facing the viewer. With an identity transform, the front side of an element faces the viewer.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-background-clip\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Determines the background painting area.\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-background-composite\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"border\"\n                },\n                {\n                    \"name\": \"padding\"\n                }\n            ],\n            \"relevance\": 50,\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-background-origin\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"For elements rendered as a single box, specifies the background positioning area. For elements rendered as multiple boxes (e.g., inline boxes on several lines, boxes on several pages) specifies which boxes 'box-decoration-break' operates on to determine the background positioning area(s).\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-border-image\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"If 'auto' is specified then the border image width is the intrinsic width or height (whichever is applicable) of the corresponding image slice. If the image does not have the required intrinsic dimension then the corresponding border-width is used instead.\"\n                },\n                {\n                    \"name\": \"fill\",\n                    \"description\": \"Causes the middle part of the border-image to be preserved.\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"repeat\",\n                    \"description\": \"The image is tiled (repeated) to fill the area.\"\n                },\n                {\n                    \"name\": \"round\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the image is rescaled so that it does.\"\n                },\n                {\n                    \"name\": \"space\",\n                    \"description\": \"The image is tiled (repeated) to fill the area. If it does not fill the area with a whole number of tiles, the extra space is distributed around the tiles.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"The image is stretched to fill the area.\"\n                },\n                {\n                    \"name\": \"url()\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property for setting 'border-image-source', 'border-image-slice', 'border-image-width', 'border-image-outset' and 'border-image-repeat'. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"number\",\n                \"url\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-box-align\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"baseline\",\n                    \"description\": \"If this box orientation is inline-axis or horizontal, all children are placed with their baselines aligned, and extra space placed before or after as necessary. For block flows, the baseline of the first non-empty line box located within the element is used. For tables, the baseline of the first cell is used.\"\n                },\n                {\n                    \"name\": \"center\",\n                    \"description\": \"Any extra space is divided evenly, with half placed above the child and the other half placed after the child.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"For normal direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element. For reverse direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"For normal direction boxes, the top edge of each child is placed along the top of the box. Extra space is placed below the element. For reverse direction boxes, the bottom edge of each child is placed along the bottom of the box. Extra space is placed above the element.\"\n                },\n                {\n                    \"name\": \"stretch\",\n                    \"description\": \"The height of each child is adjusted to that of the containing block.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the alignment of nested elements within an outer flexible box element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-box-direction\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"A box with a computed value of horizontal for box-orient displays its children from left to right. A box with a computed value of vertical displays its children from top to bottom.\"\n                },\n                {\n                    \"name\": \"reverse\",\n                    \"description\": \"A box with a computed value of horizontal for box-orient displays its children from right to left. A box with a computed value of vertical displays its children from bottom to top.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"In webkit applications, -webkit-box-direction specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-box-flex\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies an element's flexibility.\",\n            \"restrictions\": [\n                \"number\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-box-flex-group\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Flexible elements can be assigned to flex groups using the 'box-flex-group' property.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-box-ordinal-group\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Indicates the ordinal group the element belongs to. Elements with a lower ordinal group are displayed before those with a higher ordinal group.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-box-orient\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"block-axis\",\n                    \"description\": \"Elements are oriented along the box's axis.\"\n                },\n                {\n                    \"name\": \"horizontal\",\n                    \"description\": \"The box displays its children from left to right in a horizontal line.\"\n                },\n                {\n                    \"name\": \"inline-axis\",\n                    \"description\": \"Elements are oriented vertically.\"\n                },\n                {\n                    \"name\": \"vertical\",\n                    \"description\": \"The box displays its children from stacked from top to bottom vertically.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"In webkit applications, -webkit-box-orient specifies whether a box lays out its contents horizontally or vertically.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-box-pack\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"center\",\n                    \"description\": \"The extra space is divided evenly, with half placed before the first child and the other half placed after the last child.\"\n                },\n                {\n                    \"name\": \"end\",\n                    \"description\": \"For normal direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child. For reverse direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child.\"\n                },\n                {\n                    \"name\": \"justify\",\n                    \"description\": \"The space is divided evenly in-between each child, with none of the extra space placed before the first child or after the last child. If there is only one child, treat the pack value as if it were start.\"\n                },\n                {\n                    \"name\": \"start\",\n                    \"description\": \"For normal direction boxes, the left edge of the first child is placed at the left side, with all extra space placed after the last child. For reverse direction boxes, the right edge of the last child is placed at the right side, with all extra space placed before the first child.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies alignment of child elements within the current element in the direction of orientation.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-box-reflect\",\n            \"browsers\": [\n                \"E79\",\n                \"S4\",\n                \"C4\",\n                \"O15\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"above\",\n                    \"description\": \"The reflection appears above the border box.\"\n                },\n                {\n                    \"name\": \"below\",\n                    \"description\": \"The reflection appears below the border box.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"The reflection appears to the left of the border box.\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"The reflection appears to the right of the border box.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ above | below | right | left ]? <length>? <image>?\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-box-reflect\"\n                }\n            ],\n            \"description\": \"Defines a reflection of a border box.\"\n        },\n        {\n            \"name\": \"-webkit-box-sizing\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"border-box\",\n                    \"description\": \"The specified width and height (and respective min/max properties) on this element determine the border box of the element.\"\n                },\n                {\n                    \"name\": \"content-box\",\n                    \"description\": \"Behavior of width and height as specified by CSS2.1. The specified width and height (and respective min/max properties) apply to the width and height respectively of the content box of the element.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Box Model addition in CSS3.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-break-after\",\n            \"browsers\": [\n                \"S7\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a page/column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-region\"\n                },\n                {\n                    \"name\": \"column\",\n                    \"description\": \"Always force a column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    \"name\": \"page\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"region\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes the page/column break behavior before the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-break-before\",\n            \"browsers\": [\n                \"S7\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a page/column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-region\"\n                },\n                {\n                    \"name\": \"column\",\n                    \"description\": \"Always force a column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    \"name\": \"page\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"region\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes the page/column break behavior before the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-break-inside\",\n            \"browsers\": [\n                \"S7\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break inside the generated box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a page/column break inside the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-column\",\n                    \"description\": \"Avoid a column break inside the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-page\",\n                    \"description\": \"Avoid a page break inside the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-region\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes the page/column break behavior inside the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-break-after\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a page/column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-region\"\n                },\n                {\n                    \"name\": \"column\",\n                    \"description\": \"Always force a column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    \"name\": \"page\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"region\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes the page/column break behavior before the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-break-before\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"always\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a page/column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-column\",\n                    \"description\": \"Avoid a column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-page\",\n                    \"description\": \"Avoid a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-region\"\n                },\n                {\n                    \"name\": \"column\",\n                    \"description\": \"Always force a column break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"left\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a left page.\"\n                },\n                {\n                    \"name\": \"page\",\n                    \"description\": \"Always force a page break before/after the generated box.\"\n                },\n                {\n                    \"name\": \"region\"\n                },\n                {\n                    \"name\": \"right\",\n                    \"description\": \"Force one or two page breaks before/after the generated box so that the next page is formatted as a right page.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes the page/column break behavior before the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-break-inside\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Neither force nor forbid a page/column break inside the generated box.\"\n                },\n                {\n                    \"name\": \"avoid\",\n                    \"description\": \"Avoid a page/column break inside the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-column\",\n                    \"description\": \"Avoid a column break inside the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-page\",\n                    \"description\": \"Avoid a page break inside the generated box.\"\n                },\n                {\n                    \"name\": \"avoid-region\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes the page/column break behavior inside the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-count\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Determines the number of columns by the 'column-width' property and the element width.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes the optimal number of columns into which the content of the element will be flowed.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-gap\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"User agent specific and typically equivalent to 1em.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets the gap between columns. If there is a column rule between columns, it will appear in the middle of the gap.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-rule\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"This property is a shorthand for setting 'column-rule-width', 'column-rule-style', and 'column-rule-color' at the same place in the style sheet. Omitted values are set to their initial values.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"line-style\",\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-rule-color\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets the color of the column rule\",\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-rule-style\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets the style of the rule between columns of an element.\",\n            \"restrictions\": [\n                \"line-style\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-rule-width\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Sets the width of the rule between columns. Negative values are not allowed.\",\n            \"restrictions\": [\n                \"length\",\n                \"line-width\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-columns\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"A shorthand property which sets both 'column-width' and 'column-count'.\",\n            \"restrictions\": [\n                \"length\",\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-span\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"The element spans across all columns. Content in the normal flow that appears before the element is automatically balanced across all columns before the element appear.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The element does not span multiple columns.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes the page/column break behavior after the generated box.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-column-width\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"This property describes the width of columns in multicol elements.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-filter\",\n            \"browsers\": [\n                \"C18\",\n                \"O15\",\n                \"S6\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No filter effects are applied.\"\n                },\n                {\n                    \"name\": \"blur()\",\n                    \"description\": \"Applies a Gaussian blur to the input image.\"\n                },\n                {\n                    \"name\": \"brightness()\",\n                    \"description\": \"Applies a linear multiplier to input image, making it appear more or less bright.\"\n                },\n                {\n                    \"name\": \"contrast()\",\n                    \"description\": \"Adjusts the contrast of the input.\"\n                },\n                {\n                    \"name\": \"drop-shadow()\",\n                    \"description\": \"Applies a drop shadow effect to the input image.\"\n                },\n                {\n                    \"name\": \"grayscale()\",\n                    \"description\": \"Converts the input image to grayscale.\"\n                },\n                {\n                    \"name\": \"hue-rotate()\",\n                    \"description\": \"Applies a hue rotation on the input image. \"\n                },\n                {\n                    \"name\": \"invert()\",\n                    \"description\": \"Inverts the samples in the input image.\"\n                },\n                {\n                    \"name\": \"opacity()\",\n                    \"description\": \"Applies transparency to the samples in the input image.\"\n                },\n                {\n                    \"name\": \"saturate()\",\n                    \"description\": \"Saturates the input image.\"\n                },\n                {\n                    \"name\": \"sepia()\",\n                    \"description\": \"Converts the input image to sepia.\"\n                },\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"A filter reference to a <filter> element.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Processes an element’s rendering before it is displayed in the document, by applying one or more filter effects.\",\n            \"restrictions\": [\n                \"enum\",\n                \"url\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-flow-from\",\n            \"browsers\": [\n                \"S6.1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The block container is not a CSS Region.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Makes a block container a region and associates it with a named flow.\",\n            \"restrictions\": [\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-flow-into\",\n            \"browsers\": [\n                \"S6.1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"The element is not moved to a named flow and normal CSS processing takes place.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Places an element or its contents into a named flow.\",\n            \"restrictions\": [\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-font-feature-settings\",\n            \"browsers\": [\n                \"C16\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"\\\"c2cs\\\"\"\n                },\n                {\n                    \"name\": \"\\\"dlig\\\"\"\n                },\n                {\n                    \"name\": \"\\\"kern\\\"\"\n                },\n                {\n                    \"name\": \"\\\"liga\\\"\"\n                },\n                {\n                    \"name\": \"\\\"lnum\\\"\"\n                },\n                {\n                    \"name\": \"\\\"onum\\\"\"\n                },\n                {\n                    \"name\": \"\\\"smcp\\\"\"\n                },\n                {\n                    \"name\": \"\\\"swsh\\\"\"\n                },\n                {\n                    \"name\": \"\\\"tnum\\\"\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"No change in glyph substitution or positioning occurs.\"\n                },\n                {\n                    \"name\": \"off\"\n                },\n                {\n                    \"name\": \"on\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"This property provides low-level control over OpenType font features. It is intended as a way of providing access to font features that are not widely used but are needed for a particular use case.\",\n            \"restrictions\": [\n                \"string\",\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-hyphens\",\n            \"browsers\": [\n                \"S5.1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Conditional hyphenation characters inside a word, if present, take priority over automatic resources when determining hyphenation points within the word.\"\n                },\n                {\n                    \"name\": \"manual\",\n                    \"description\": \"Words are only broken at line breaks where there are characters inside the word that suggest line break opportunities\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Words are not broken at line breaks, even if characters inside the word suggest line break points.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Controls whether hyphenation is allowed to create more break opportunities within a line of text.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-line-break\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"after-white-space\"\n                },\n                {\n                    \"name\": \"normal\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies line-breaking rules for CJK (Chinese, Japanese, and Korean) text.\"\n        },\n        {\n            \"name\": \"-webkit-margin-bottom-collapse\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"collapse\"\n                },\n                {\n                    \"name\": \"discard\"\n                },\n                {\n                    \"name\": \"separate\"\n                }\n            ],\n            \"relevance\": 50,\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-margin-collapse\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"collapse\"\n                },\n                {\n                    \"name\": \"discard\"\n                },\n                {\n                    \"name\": \"separate\"\n                }\n            ],\n            \"relevance\": 50,\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-margin-start\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                }\n            ],\n            \"relevance\": 50,\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-margin-top-collapse\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"collapse\"\n                },\n                {\n                    \"name\": \"discard\"\n                },\n                {\n                    \"name\": \"separate\"\n                }\n            ],\n            \"relevance\": 50,\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-mask-clip\",\n            \"browsers\": [\n                \"C\",\n                \"O15\",\n                \"S4\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ <box> | border | padding | content | text ]#\",\n            \"relevance\": 0,\n            \"description\": \"Determines the mask painting area, which determines the area that is affected by the mask.\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-mask-image\",\n            \"browsers\": [\n                \"C\",\n                \"O15\",\n                \"S4\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Counts as a transparent black image layer.\"\n                },\n                {\n                    \"name\": \"url()\",\n                    \"description\": \"Reference to a <mask element or to a CSS image.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<mask-reference>#\",\n            \"relevance\": 0,\n            \"description\": \"Sets the mask layer image of an element.\",\n            \"restrictions\": [\n                \"url\",\n                \"image\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-mask-origin\",\n            \"browsers\": [\n                \"C\",\n                \"O15\",\n                \"S4\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ <box> | border | padding | content ]#\",\n            \"relevance\": 0,\n            \"description\": \"Specifies the mask positioning area.\",\n            \"restrictions\": [\n                \"box\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-mask-repeat\",\n            \"browsers\": [\n                \"C\",\n                \"O15\",\n                \"S4\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<repeat-style>#\",\n            \"relevance\": 0,\n            \"description\": \"Specifies how mask layer images are tiled after they have been sized and positioned.\",\n            \"restrictions\": [\n                \"repeat\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-mask-size\",\n            \"browsers\": [\n                \"C\",\n                \"O15\",\n                \"S4\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Resolved by using the image’s intrinsic ratio and the size of the other dimension, or failing that, using the image’s intrinsic size, or failing that, treating it as 100%.\"\n                },\n                {\n                    \"name\": \"contain\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the largest size such that both its width and its height can fit inside the background positioning area.\"\n                },\n                {\n                    \"name\": \"cover\",\n                    \"description\": \"Scale the image, while preserving its intrinsic aspect ratio (if any), to the smallest size such that both its width and its height can completely cover the background positioning area.\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<bg-size>#\",\n            \"relevance\": 0,\n            \"description\": \"Specifies the size of the mask layer images.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-nbsp-mode\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\"\n                },\n                {\n                    \"name\": \"space\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines the behavior of nonbreaking spaces within text.\"\n        },\n        {\n            \"name\": \"-webkit-overflow-scrolling\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"touch\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | touch\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-overflow-scrolling\"\n                }\n            ],\n            \"description\": \"Specifies whether to use native-style scrolling in an overflow:scroll element.\"\n        },\n        {\n            \"name\": \"-webkit-padding-start\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"relevance\": 50,\n            \"restrictions\": [\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-perspective\",\n            \"browsers\": [\n                \"C\",\n                \"S4\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No perspective transform is applied.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Applies the same transform as the perspective(<number>) transform function, except that it applies only to the positioned or transformed children of the element, not to the transform on the element itself.\",\n            \"restrictions\": [\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-perspective-origin\",\n            \"browsers\": [\n                \"C\",\n                \"S4\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Establishes the origin for the perspective property. It effectively sets the X and Y position at which the viewer appears to be looking at the children of the element.\",\n            \"restrictions\": [\n                \"position\",\n                \"percentage\",\n                \"length\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-region-fragment\",\n            \"browsers\": [\n                \"S7\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Content flows as it would in a regular content box.\"\n                },\n                {\n                    \"name\": \"break\",\n                    \"description\": \"If the content fits within the CSS Region, then this property has no effect.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"The 'region-fragment' property controls the behavior of the last region associated with a named flow.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-tap-highlight-color\",\n            \"browsers\": [\n                \"E12\",\n                \"C16\",\n                \"O≤15\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-tap-highlight-color\"\n                }\n            ],\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-text-fill-color\",\n            \"browsers\": [\n                \"E12\",\n                \"FF49\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-text-fill-color\"\n                }\n            ],\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-text-size-adjust\",\n            \"browsers\": [\n                \"E\",\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Renderers must use the default size adjustment when displaying on a small device.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"Renderers must not do size adjustment when displaying on a small device.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies a size adjustment for displaying text content in mobile browsers.\",\n            \"restrictions\": [\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-text-stroke\",\n            \"browsers\": [\n                \"E15\",\n                \"FF49\",\n                \"S3\",\n                \"C4\",\n                \"O15\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<length> || <color>\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke\"\n                }\n            ],\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"color\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-text-stroke-color\",\n            \"browsers\": [\n                \"E15\",\n                \"FF49\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-color\"\n                }\n            ],\n            \"restrictions\": [\n                \"color\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-text-stroke-width\",\n            \"browsers\": [\n                \"E15\",\n                \"FF49\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-width\"\n                }\n            ],\n            \"restrictions\": [\n                \"length\",\n                \"line-width\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-touch-callout\",\n            \"browsers\": [\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"none\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"default | none\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-touch-callout\"\n                }\n            ],\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transform\",\n            \"browsers\": [\n                \"C\",\n                \"O12\",\n                \"S3.1\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"matrix()\",\n                    \"description\": \"Specifies a 2D transformation in the form of a transformation matrix of six values. matrix(a,b,c,d,e,f) is equivalent to applying the transformation matrix [a b c d e f]\"\n                },\n                {\n                    \"name\": \"matrix3d()\",\n                    \"description\": \"Specifies a 3D transformation as a 4x4 homogeneous matrix of 16 values in column-major order.\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"perspective()\",\n                    \"description\": \"Specifies a perspective projection matrix.\"\n                },\n                {\n                    \"name\": \"rotate()\",\n                    \"description\": \"Specifies a 2D rotation by the angle specified in the parameter about the origin of the element, as defined by the transform-origin property.\"\n                },\n                {\n                    \"name\": \"rotate3d()\",\n                    \"description\": \"Specifies a clockwise 3D rotation by the angle specified in last parameter about the [x,y,z] direction vector described by the first 3 parameters.\"\n                },\n                {\n                    \"name\": \"rotateX('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the X axis.\"\n                },\n                {\n                    \"name\": \"rotateY('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the Y axis.\"\n                },\n                {\n                    \"name\": \"rotateZ('angle')\",\n                    \"description\": \"Specifies a clockwise rotation by the given angle about the Z axis.\"\n                },\n                {\n                    \"name\": \"scale()\",\n                    \"description\": \"Specifies a 2D scale operation by the [sx,sy] scaling vector described by the 2 parameters. If the second parameter is not provided, it is takes a value equal to the first.\"\n                },\n                {\n                    \"name\": \"scale3d()\",\n                    \"description\": \"Specifies a 3D scale operation by the [sx,sy,sz] scaling vector described by the 3 parameters.\"\n                },\n                {\n                    \"name\": \"scaleX()\",\n                    \"description\": \"Specifies a scale operation using the [sx,1] scaling vector, where sx is given as the parameter.\"\n                },\n                {\n                    \"name\": \"scaleY()\",\n                    \"description\": \"Specifies a scale operation using the [sy,1] scaling vector, where sy is given as the parameter.\"\n                },\n                {\n                    \"name\": \"scaleZ()\",\n                    \"description\": \"Specifies a scale operation using the [1,1,sz] scaling vector, where sz is given as the parameter.\"\n                },\n                {\n                    \"name\": \"skew()\",\n                    \"description\": \"Specifies a skew transformation along the X and Y axes. The first angle parameter specifies the skew on the X axis. The second angle parameter specifies the skew on the Y axis. If the second parameter is not given then a value of 0 is used for the Y angle (ie: no skew on the Y axis).\"\n                },\n                {\n                    \"name\": \"skewX()\",\n                    \"description\": \"Specifies a skew transformation along the X axis by the given angle.\"\n                },\n                {\n                    \"name\": \"skewY()\",\n                    \"description\": \"Specifies a skew transformation along the Y axis by the given angle.\"\n                },\n                {\n                    \"name\": \"translate()\",\n                    \"description\": \"Specifies a 2D translation by the vector [tx, ty], where tx is the first translation-value parameter and ty is the optional second translation-value parameter.\"\n                },\n                {\n                    \"name\": \"translate3d()\",\n                    \"description\": \"Specifies a 3D translation by the vector [tx,ty,tz], with tx, ty and tz being the first, second and third translation-value parameters respectively.\"\n                },\n                {\n                    \"name\": \"translateX()\",\n                    \"description\": \"Specifies a translation by the given amount in the X direction.\"\n                },\n                {\n                    \"name\": \"translateY()\",\n                    \"description\": \"Specifies a translation by the given amount in the Y direction.\"\n                },\n                {\n                    \"name\": \"translateZ()\",\n                    \"description\": \"Specifies a translation by the given amount in the Z direction. Note that percentage values are not allowed in the translateZ translation-value, and if present are evaluated as 0.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"A two-dimensional transformation is applied to an element through the 'transform' property. This property contains a list of transform functions similar to those allowed by SVG.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transform-origin\",\n            \"browsers\": [\n                \"C\",\n                \"O15\",\n                \"S3.1\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Establishes the origin of transformation for an element.\",\n            \"restrictions\": [\n                \"position\",\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transform-origin-x\",\n            \"browsers\": [\n                \"C\",\n                \"S3.1\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"The x coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transform-origin-y\",\n            \"browsers\": [\n                \"C\",\n                \"S3.1\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"The y coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transform-origin-z\",\n            \"browsers\": [\n                \"C\",\n                \"S4\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"The z coordinate of the origin for transforms applied to an element with respect to its border box.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transform-style\",\n            \"browsers\": [\n                \"C\",\n                \"S4\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"flat\",\n                    \"description\": \"All children of this element are rendered flattened into the 2D plane of the element.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines how nested elements are rendered in 3D space.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transition\",\n            \"browsers\": [\n                \"C\",\n                \"O12\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Shorthand property combines four of the transition properties into a single property.\",\n            \"restrictions\": [\n                \"time\",\n                \"property\",\n                \"timing-function\",\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transition-delay\",\n            \"browsers\": [\n                \"C\",\n                \"O12\",\n                \"S5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Defines when the transition will start. It allows a transition to begin execution some period of time from when it is applied.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transition-duration\",\n            \"browsers\": [\n                \"C\",\n                \"O12\",\n                \"S5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies how long the transition from the old value to the new value should take.\",\n            \"restrictions\": [\n                \"time\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transition-property\",\n            \"browsers\": [\n                \"C\",\n                \"O12\",\n                \"S5\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"all\",\n                    \"description\": \"Every property that is able to undergo a transition will do so.\"\n                },\n                {\n                    \"name\": \"none\",\n                    \"description\": \"No property will transition.\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Specifies the name of the CSS property to which the transition is applied.\",\n            \"restrictions\": [\n                \"property\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-transition-timing-function\",\n            \"browsers\": [\n                \"C\",\n                \"O12\",\n                \"S5\"\n            ],\n            \"relevance\": 50,\n            \"description\": \"Describes how the intermediate values used during a transition will be calculated.\",\n            \"restrictions\": [\n                \"timing-function\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-user-drag\",\n            \"browsers\": [\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"element\"\n                },\n                {\n                    \"name\": \"none\"\n                }\n            ],\n            \"relevance\": 50,\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-user-modify\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"read-only\"\n                },\n                {\n                    \"name\": \"read-write\"\n                },\n                {\n                    \"name\": \"read-write-plaintext-only\"\n                }\n            ],\n            \"status\": \"nonstandard\",\n            \"syntax\": \"read-only | read-write | read-write-plaintext-only\",\n            \"relevance\": 0,\n            \"description\": \"Determines whether a user can edit the content of an element.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"-webkit-user-select\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\"\n                },\n                {\n                    \"name\": \"none\"\n                },\n                {\n                    \"name\": \"text\"\n                }\n            ],\n            \"relevance\": 50,\n            \"description\": \"Controls the appearance of selection.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"white-space\",\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Sets 'white-space-collapsing' to 'collapse' and 'text-wrap' to 'normal'.\"\n                },\n                {\n                    \"name\": \"nowrap\",\n                    \"description\": \"Sets 'white-space-collapsing' to 'collapse' and 'text-wrap' to 'none'.\"\n                },\n                {\n                    \"name\": \"pre\",\n                    \"description\": \"Sets 'white-space-collapsing' to 'preserve' and 'text-wrap' to 'none'.\"\n                },\n                {\n                    \"name\": \"pre-line\",\n                    \"description\": \"Sets 'white-space-collapsing' to 'preserve-breaks' and 'text-wrap' to 'normal'.\"\n                },\n                {\n                    \"name\": \"pre-wrap\",\n                    \"description\": \"Sets 'white-space-collapsing' to 'preserve' and 'text-wrap' to 'normal'.\"\n                }\n            ],\n            \"syntax\": \"normal | pre | nowrap | pre-wrap | pre-line | break-spaces\",\n            \"relevance\": 88,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/white-space\"\n                }\n            ],\n            \"description\": \"Shorthand property for the 'white-space-collapsing' and 'text-wrap' properties.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"widows\",\n            \"browsers\": [\n                \"E12\",\n                \"S1.3\",\n                \"C25\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            \"syntax\": \"<integer>\",\n            \"relevance\": 51,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/widows\"\n                }\n            ],\n            \"description\": \"Specifies the minimum number of line boxes of a block container that must be left in a fragment after a break.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"width\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The width depends on the values of other properties.\"\n                },\n                {\n                    \"name\": \"fit-content\",\n                    \"description\": \"Use the fit-content inline size or fit-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"max-content\",\n                    \"description\": \"Use the max-content inline size or max-content block size, as appropriate to the writing mode.\"\n                },\n                {\n                    \"name\": \"min-content\",\n                    \"description\": \"Use the min-content inline size or min-content block size, as appropriate to the writing mode.\"\n                }\n            ],\n            \"syntax\": \"<viewport-length>{1,2}\",\n            \"relevance\": 96,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/width\"\n                }\n            ],\n            \"description\": \"Specifies the width of the content area, padding area or border area (depending on 'box-sizing') of certain boxes.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"will-change\",\n            \"browsers\": [\n                \"E79\",\n                \"FF36\",\n                \"S9.1\",\n                \"C36\",\n                \"O24\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"Expresses no particular intent.\"\n                },\n                {\n                    \"name\": \"contents\",\n                    \"description\": \"Indicates that the author expects to animate or change something about the element’s contents in the near future.\"\n                },\n                {\n                    \"name\": \"scroll-position\",\n                    \"description\": \"Indicates that the author expects to animate or change the scroll position of the element in the near future.\"\n                }\n            ],\n            \"syntax\": \"auto | <animateable-feature>#\",\n            \"relevance\": 62,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/will-change\"\n                }\n            ],\n            \"description\": \"Provides a rendering hint to the user agent, stating what kinds of changes the author expects to perform on the element.\",\n            \"restrictions\": [\n                \"enum\",\n                \"identifier\"\n            ]\n        },\n        {\n            \"name\": \"word-break\",\n            \"values\": [\n                {\n                    \"name\": \"break-all\",\n                    \"description\": \"Lines may break between any two grapheme clusters for non-CJK scripts.\"\n                },\n                {\n                    \"name\": \"keep-all\",\n                    \"description\": \"Block characters can no longer create implied break points.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Breaks non-CJK scripts according to their own rules.\"\n                }\n            ],\n            \"syntax\": \"normal | break-all | keep-all | break-word\",\n            \"relevance\": 72,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/word-break\"\n                }\n            ],\n            \"description\": \"Specifies line break opportunities for non-CJK scripts.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"word-spacing\",\n            \"values\": [\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"No additional spacing is applied. Computes to zero.\"\n                }\n            ],\n            \"syntax\": \"normal | <length-percentage>\",\n            \"relevance\": 57,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/word-spacing\"\n                }\n            ],\n            \"description\": \"Specifies additional spacing between “words”.\",\n            \"restrictions\": [\n                \"length\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"word-wrap\",\n            \"values\": [\n                {\n                    \"name\": \"break-word\",\n                    \"description\": \"An otherwise unbreakable sequence of characters may be broken at an arbitrary point if there are no otherwise-acceptable break points in the line.\"\n                },\n                {\n                    \"name\": \"normal\",\n                    \"description\": \"Lines may break only at allowed break points.\"\n                }\n            ],\n            \"syntax\": \"normal | break-word\",\n            \"relevance\": 77,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overflow-wrap\"\n                }\n            ],\n            \"description\": \"Specifies whether the UA may break within a word to prevent overflow when an otherwise-unbreakable string is too long to fit.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"writing-mode\",\n            \"values\": [\n                {\n                    \"name\": \"horizontal-tb\",\n                    \"description\": \"Top-to-bottom block flow direction. The writing mode is horizontal.\"\n                },\n                {\n                    \"name\": \"sideways-lr\",\n                    \"description\": \"Left-to-right block flow direction. The writing mode is vertical, while the typographic mode is horizontal.\"\n                },\n                {\n                    \"name\": \"sideways-rl\",\n                    \"description\": \"Right-to-left block flow direction. The writing mode is vertical, while the typographic mode is horizontal.\"\n                },\n                {\n                    \"name\": \"vertical-lr\",\n                    \"description\": \"Left-to-right block flow direction. The writing mode is vertical.\"\n                },\n                {\n                    \"name\": \"vertical-rl\",\n                    \"description\": \"Right-to-left block flow direction. The writing mode is vertical.\"\n                }\n            ],\n            \"syntax\": \"horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/writing-mode\"\n                }\n            ],\n            \"description\": \"This is a shorthand property for both 'direction' and 'block-progression'.\",\n            \"restrictions\": [\n                \"enum\"\n            ]\n        },\n        {\n            \"name\": \"z-index\",\n            \"values\": [\n                {\n                    \"name\": \"auto\",\n                    \"description\": \"The stack level of the generated box in the current stacking context is 0. The box does not establish a new stacking context unless it is the root element.\"\n                }\n            ],\n            \"syntax\": \"auto | <integer>\",\n            \"relevance\": 91,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/z-index\"\n                }\n            ],\n            \"description\": \"For a positioned box, the 'z-index' property specifies the stack level of the box in the current stacking context and whether the box establishes a local stacking context.\",\n            \"restrictions\": [\n                \"integer\"\n            ]\n        },\n        {\n            \"name\": \"zoom\",\n            \"browsers\": [\n                \"E12\",\n                \"S3.1\",\n                \"C1\",\n                \"IE5.5\",\n                \"O15\"\n            ],\n            \"values\": [\n                {\n                    \"name\": \"normal\"\n                }\n            ],\n            \"syntax\": \"auto | <number> | <percentage>\",\n            \"relevance\": 74,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/zoom\"\n                }\n            ],\n            \"description\": \"Non-standard. Specifies the magnification scale of the object. See 'transform: scale()' for a standards-based alternative.\",\n            \"restrictions\": [\n                \"enum\",\n                \"integer\",\n                \"number\",\n                \"percentage\"\n            ]\n        },\n        {\n            \"name\": \"-ms-ime-align\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | after\",\n            \"relevance\": 0,\n            \"description\": \"Aligns the Input Method Editor (IME) candidate window box relative to the element on which the IME composition is active.\"\n        },\n        {\n            \"name\": \"-moz-binding\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<url> | none\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-binding\"\n                }\n            ],\n            \"description\": \"The -moz-binding CSS property is used by Mozilla-based applications to attach an XBL binding to a DOM element.\"\n        },\n        {\n            \"name\": \"-moz-context-properties\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | [ fill | fill-opacity | stroke | stroke-opacity ]#\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF55\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-context-properties\"\n                }\n            ],\n            \"description\": \"If you reference an SVG image in a webpage (such as with the <img> element or as a background image), the SVG image can coordinate with the embedding element (its context) to have the image adopt property values set on the embedding element. To do this the embedding element needs to list the properties that are to be made available to the image by listing them as values of the -moz-context-properties property, and the image needs to opt in to using those properties by using values such as the context-fill value.\\n\\nThis feature is available since Firefox 55, but is only currently supported with SVG images loaded via chrome:// or resource:// URLs. To experiment with the feature in SVG on the Web it is necessary to set the svg.context-properties.content.enabled pref to true.\"\n        },\n        {\n            \"name\": \"-moz-float-edge\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"border-box | content-box | margin-box | padding-box\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-float-edge\"\n                }\n            ],\n            \"description\": \"The non-standard -moz-float-edge CSS property specifies whether the height and width properties of the element include the margin, border, or padding thickness.\"\n        },\n        {\n            \"name\": \"-moz-force-broken-image-icon\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<integer>\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-force-broken-image-icon\"\n                }\n            ],\n            \"description\": \"The -moz-force-broken-image-icon extended CSS property can be used to force the broken image icon to be shown even when a broken image has an alt attribute.\"\n        },\n        {\n            \"name\": \"-moz-image-region\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<shape> | auto\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-image-region\"\n                }\n            ],\n            \"description\": \"For certain XUL elements and pseudo-elements that use an image from the list-style-image property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.\"\n        },\n        {\n            \"name\": \"-moz-orient\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"inline | block | horizontal | vertical\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF6\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-orient\"\n                }\n            ],\n            \"description\": \"The -moz-orient CSS property specifies the orientation of the element to which it's applied.\"\n        },\n        {\n            \"name\": \"-moz-outline-radius\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius\"\n                }\n            ],\n            \"description\": \"In Mozilla applications like Firefox, the -moz-outline-radius CSS property can be used to give an element's outline rounded corners.\"\n        },\n        {\n            \"name\": \"-moz-outline-radius-bottomleft\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<outline-radius>\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-bottomleft\"\n                }\n            ],\n            \"description\": \"In Mozilla applications, the -moz-outline-radius-bottomleft CSS property can be used to round the bottom-left corner of an element's outline.\"\n        },\n        {\n            \"name\": \"-moz-outline-radius-bottomright\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<outline-radius>\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-bottomright\"\n                }\n            ],\n            \"description\": \"In Mozilla applications, the -moz-outline-radius-bottomright CSS property can be used to round the bottom-right corner of an element's outline.\"\n        },\n        {\n            \"name\": \"-moz-outline-radius-topleft\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<outline-radius>\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-topleft\"\n                }\n            ],\n            \"description\": \"In Mozilla applications, the -moz-outline-radius-topleft CSS property can be used to round the top-left corner of an element's outline.\"\n        },\n        {\n            \"name\": \"-moz-outline-radius-topright\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<outline-radius>\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-topright\"\n                }\n            ],\n            \"description\": \"In Mozilla applications, the -moz-outline-radius-topright CSS property can be used to round the top-right corner of an element's outline.\"\n        },\n        {\n            \"name\": \"-moz-stack-sizing\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"ignore | stretch-to-fit\",\n            \"relevance\": 0,\n            \"description\": \"-moz-stack-sizing is an extended CSS property. Normally, a stack will change its size so that all of its child elements are completely visible. For example, moving a child of the stack far to the right will widen the stack so the child remains visible.\"\n        },\n        {\n            \"name\": \"-moz-text-blink\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"none | blink\",\n            \"relevance\": 0,\n            \"description\": \"The -moz-text-blink non-standard Mozilla CSS extension specifies the blink mode.\"\n        },\n        {\n            \"name\": \"-moz-user-input\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | none | enabled | disabled\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-moz-user-input\"\n                }\n            ],\n            \"description\": \"In Mozilla applications, -moz-user-input determines if an element will accept user input.\"\n        },\n        {\n            \"name\": \"-moz-user-modify\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"read-only | read-write | write-only\",\n            \"relevance\": 0,\n            \"description\": \"The -moz-user-modify property has no effect. It was originally planned to determine whether or not the content of an element can be edited by a user.\"\n        },\n        {\n            \"name\": \"-moz-window-dragging\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"drag | no-drag\",\n            \"relevance\": 0,\n            \"description\": \"The -moz-window-dragging CSS property specifies whether a window is draggable or not. It only works in Chrome code, and only on Mac OS X.\"\n        },\n        {\n            \"name\": \"-moz-window-shadow\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"default | menu | tooltip | sheet | none\",\n            \"relevance\": 0,\n            \"description\": \"The -moz-window-shadow CSS property specifies whether a window will have a shadow. It only works on Mac OS X.\"\n        },\n        {\n            \"name\": \"-webkit-border-before\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'border-width'> || <'border-style'> || <'color'>\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E79\",\n                \"S5.1\",\n                \"C8\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-border-before\"\n                }\n            ],\n            \"description\": \"The -webkit-border-before CSS property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet.\"\n        },\n        {\n            \"name\": \"-webkit-border-before-color\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'color'>\",\n            \"relevance\": 0,\n            \"description\": \"The -webkit-border-before-color CSS property sets the color of the individual logical block start border in a single place in the style sheet.\"\n        },\n        {\n            \"name\": \"-webkit-border-before-style\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'border-style'>\",\n            \"relevance\": 0,\n            \"description\": \"The -webkit-border-before-style CSS property sets the style of the individual logical block start border in a single place in the style sheet.\"\n        },\n        {\n            \"name\": \"-webkit-border-before-width\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<'border-width'>\",\n            \"relevance\": 0,\n            \"description\": \"The -webkit-border-before-width CSS property sets the width of the individual logical block start border in a single place in the style sheet.\"\n        },\n        {\n            \"name\": \"-webkit-line-clamp\",\n            \"syntax\": \"none | <integer>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E17\",\n                \"FF68\",\n                \"S5\",\n                \"C6\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-line-clamp\"\n                }\n            ],\n            \"description\": \"The -webkit-line-clamp CSS property allows limiting of the contents of a block container to the specified number of lines.\"\n        },\n        {\n            \"name\": \"-webkit-mask\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#\",\n            \"relevance\": 0,\n            \"description\": \"The mask CSS property alters the visibility of an element by either partially or fully hiding it. This is accomplished by either masking or clipping the image at specific points.\"\n        },\n        {\n            \"name\": \"-webkit-mask-attachment\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<attachment>#\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"S4\",\n                \"C1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-attachment\"\n                }\n            ],\n            \"description\": \"If a -webkit-mask-image is specified, -webkit-mask-attachment determines whether the mask image's position is fixed within the viewport, or scrolls along with its containing block.\"\n        },\n        {\n            \"name\": \"-webkit-mask-composite\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<composite-style>#\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E18\",\n                \"FF53\",\n                \"S3.2\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-composite\"\n                }\n            ],\n            \"description\": \"The -webkit-mask-composite property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the -webkit-mask-image property.\"\n        },\n        {\n            \"name\": \"-webkit-mask-position\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<position>#\",\n            \"relevance\": 0,\n            \"description\": \"The mask-position CSS property sets the initial position, relative to the mask position layer defined by mask-origin, for each defined mask image.\"\n        },\n        {\n            \"name\": \"-webkit-mask-position-x\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ <length-percentage> | left | center | right ]#\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E18\",\n                \"FF49\",\n                \"S3.2\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-position-x\"\n                }\n            ],\n            \"description\": \"The -webkit-mask-position-x CSS property sets the initial horizontal position of a mask image.\"\n        },\n        {\n            \"name\": \"-webkit-mask-position-y\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"[ <length-percentage> | top | center | bottom ]#\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E18\",\n                \"FF49\",\n                \"S3.2\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-position-y\"\n                }\n            ],\n            \"description\": \"The -webkit-mask-position-y CSS property sets the initial vertical position of a mask image.\"\n        },\n        {\n            \"name\": \"-webkit-mask-repeat-x\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"repeat | no-repeat | space | round\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E18\",\n                \"S5\",\n                \"C3\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-repeat-x\"\n                }\n            ],\n            \"description\": \"The -webkit-mask-repeat-x property specifies whether and how a mask image is repeated (tiled) horizontally.\"\n        },\n        {\n            \"name\": \"-webkit-mask-repeat-y\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"repeat | no-repeat | space | round\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E18\",\n                \"S5\",\n                \"C3\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-repeat-y\"\n                }\n            ],\n            \"description\": \"The -webkit-mask-repeat-y property specifies whether and how a mask image is repeated (tiled) vertically.\"\n        },\n        {\n            \"name\": \"appearance\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | auto | button | textfield | menulist-button | <compat-auto>\",\n            \"relevance\": 60,\n            \"browsers\": [\n                \"E84\",\n                \"FF1\",\n                \"S3\",\n                \"C84\",\n                \"O70\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/appearance\"\n                }\n            ],\n            \"description\": \"Changes the appearance of buttons and other controls to resemble native controls.\"\n        },\n        {\n            \"name\": \"aspect-ratio\",\n            \"status\": \"experimental\",\n            \"syntax\": \"auto | <ratio>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF71\",\n                \"C79\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/aspect-ratio\"\n                }\n            ],\n            \"description\": \"The aspect-ratio   CSS property sets a preferred aspect ratio for the box, which will be used in the calculation of auto sizes and some other layout functions.\"\n        },\n        {\n            \"name\": \"azimuth\",\n            \"status\": \"obsolete\",\n            \"syntax\": \"<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards\",\n            \"relevance\": 0,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/azimuth\"\n                }\n            ],\n            \"description\": \"In combination with elevation, the azimuth CSS property enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.\"\n        },\n        {\n            \"name\": \"backdrop-filter\",\n            \"syntax\": \"none | <filter-function-list>\",\n            \"relevance\": 51,\n            \"browsers\": [\n                \"E17\",\n                \"FF70\",\n                \"S9\",\n                \"C76\",\n                \"O34\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/backdrop-filter\"\n                }\n            ],\n            \"description\": \"The backdrop-filter CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything behind the element, to see the effect you must make the element or its background at least partially transparent.\"\n        },\n        {\n            \"name\": \"border-block\",\n            \"syntax\": \"<'border-top-width'> || <'border-top-style'> || <'color'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block\"\n                }\n            ],\n            \"description\": \"The border-block CSS property is a shorthand property for setting the individual logical block border property values in a single place in the style sheet.\"\n        },\n        {\n            \"name\": \"border-block-color\",\n            \"syntax\": \"<'border-top-color'>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-color\"\n                }\n            ],\n            \"description\": \"The border-block-color CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color and border-bottom-color, or border-right-color and border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"border-block-style\",\n            \"syntax\": \"<'border-top-style'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-style\"\n                }\n            ],\n            \"description\": \"The border-block-style CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style and border-bottom-style, or border-left-style and border-right-style properties depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"border-block-width\",\n            \"syntax\": \"<'border-top-width'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-block-width\"\n                }\n            ],\n            \"description\": \"The border-block-width CSS property defines the width of the logical block borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width and border-bottom-width, or border-left-width, and border-right-width property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"border-end-end-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF66\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-end-end-radius\"\n                }\n            ],\n            \"description\": \"The border-end-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on on the element's writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"border-end-start-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF66\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-end-start-radius\"\n                }\n            ],\n            \"description\": \"The border-end-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"border-inline\",\n            \"syntax\": \"<'border-top-width'> || <'border-top-style'> || <'color'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline\"\n                }\n            ],\n            \"description\": \"The border-inline CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet.\"\n        },\n        {\n            \"name\": \"border-inline-color\",\n            \"syntax\": \"<'border-top-color'>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-color\"\n                }\n            ],\n            \"description\": \"The border-inline-color CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color and border-bottom-color, or border-right-color and border-left-color property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"border-inline-style\",\n            \"syntax\": \"<'border-top-style'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-style\"\n                }\n            ],\n            \"description\": \"The border-inline-style CSS property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style and border-bottom-style, or border-left-style and border-right-style properties depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"border-inline-width\",\n            \"syntax\": \"<'border-top-width'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-inline-width\"\n                }\n            ],\n            \"description\": \"The border-inline-width CSS property defines the width of the logical inline borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width and border-bottom-width, or border-left-width, and border-right-width property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"border-start-end-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF66\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-start-end-radius\"\n                }\n            ],\n            \"description\": \"The border-start-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"border-start-start-radius\",\n            \"syntax\": \"<length-percentage>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF66\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/border-start-start-radius\"\n                }\n            ],\n            \"description\": \"The border-start-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"box-align\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"start | center | end | baseline | stretch\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E12\",\n                \"FF1\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-align\"\n                }\n            ],\n            \"description\": \"The box-align CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\"\n        },\n        {\n            \"name\": \"box-direction\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"normal | reverse | inherit\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E12\",\n                \"FF1\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-direction\"\n                }\n            ],\n            \"description\": \"The box-direction CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\"\n        },\n        {\n            \"name\": \"box-flex\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<number>\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E12\",\n                \"FF1\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-flex\"\n                }\n            ],\n            \"description\": \"The -moz-box-flex and -webkit-box-flex CSS properties specify how a -moz-box or -webkit-box grows to fill the box that contains it, in the direction of the containing box's layout.\"\n        },\n        {\n            \"name\": \"box-flex-group\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<integer>\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-flex-group\"\n                }\n            ],\n            \"description\": \"The box-flex-group CSS property assigns the flexbox's child elements to a flex group.\"\n        },\n        {\n            \"name\": \"box-lines\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"single | multiple\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-lines\"\n                }\n            ],\n            \"description\": \"The box-lines CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\"\n        },\n        {\n            \"name\": \"box-ordinal-group\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"<integer>\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E12\",\n                \"FF1\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-ordinal-group\"\n                }\n            ],\n            \"description\": \"The box-ordinal-group CSS property assigns the flexbox's child elements to an ordinal group.\"\n        },\n        {\n            \"name\": \"box-orient\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"horizontal | vertical | inline-axis | block-axis | inherit\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E12\",\n                \"FF1\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-orient\"\n                }\n            ],\n            \"description\": \"The box-orient CSS property specifies whether an element lays out its contents horizontally or vertically.\"\n        },\n        {\n            \"name\": \"box-pack\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"start | center | end | justify\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E12\",\n                \"FF1\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/box-pack\"\n                }\n            ],\n            \"description\": \"The -moz-box-pack and -webkit-box-pack CSS properties specify how a -moz-box or -webkit-box packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\"\n        },\n        {\n            \"name\": \"color-adjust\",\n            \"syntax\": \"economy | exact\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF48\",\n                \"S6\",\n                \"C49\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/color-adjust\"\n                }\n            ],\n            \"description\": \"The color-adjust property is a non-standard CSS extension that can be used to force printing of background colors and images in browsers based on the WebKit engine.\"\n        },\n        {\n            \"name\": \"counter-set\",\n            \"syntax\": \"[ <custom-ident> <integer>? ]+ | none\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF68\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/counter-set\"\n                }\n            ],\n            \"description\": \"The counter-set CSS property sets a CSS counter to a given value. It manipulates the value of existing counters, and will only create new counters if there isn't already a counter of the given name on the element.\"\n        },\n        {\n            \"name\": \"font-optical-sizing\",\n            \"syntax\": \"auto | none\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E17\",\n                \"FF62\",\n                \"S11\",\n                \"C79\",\n                \"O66\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-optical-sizing\"\n                }\n            ],\n            \"description\": \"The font-optical-sizing CSS property allows developers to control whether browsers render text with slightly differing visual representations to optimize viewing at different sizes, or not. This only works for fonts that have an optical size variation axis.\"\n        },\n        {\n            \"name\": \"font-variation-settings\",\n            \"syntax\": \"normal | [ <string> <number> ]#\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E17\",\n                \"FF62\",\n                \"S11\",\n                \"C62\",\n                \"O49\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-variation-settings\"\n                }\n            ],\n            \"description\": \"The font-variation-settings CSS property provides low-level control over OpenType or TrueType font variations, by specifying the four letter axis names of the features you want to vary, along with their variation values.\"\n        },\n        {\n            \"name\": \"font-smooth\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"auto | never | always | <absolute-size> | <length>\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"E79\",\n                \"FF25\",\n                \"S4\",\n                \"C5\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/font-smooth\"\n                }\n            ],\n            \"description\": \"\"\n        },\n        {\n            \"name\": \"gap\",\n            \"syntax\": \"<'row-gap'> <'column-gap'>?\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E84\",\n                \"FF63\",\n                \"S10.1\",\n                \"C84\",\n                \"O70\"\n            ],\n            \"description\": \"The gap CSS property is a shorthand property for row-gap and column-gap specifying the gutters between grid rows and columns.\"\n        },\n        {\n            \"name\": \"hanging-punctuation\",\n            \"syntax\": \"none | [ first || [ force-end | allow-end ] || last ]\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"S10\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/hanging-punctuation\"\n                }\n            ],\n            \"description\": \"The hanging-punctuation CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box.\"\n        },\n        {\n            \"name\": \"image-resolution\",\n            \"status\": \"experimental\",\n            \"syntax\": \"[ from-image || <resolution> ] && snap?\",\n            \"relevance\": 50,\n            \"description\": \"The image-resolution property specifies the intrinsic resolution of all raster images used in or on the element. It affects both content images (e.g. replaced elements and generated content) and decorative images (such as background-image). The intrinsic resolution of an image is used to determine the image’s intrinsic dimensions.\"\n        },\n        {\n            \"name\": \"initial-letter\",\n            \"status\": \"experimental\",\n            \"syntax\": \"normal | [ <number> <integer>? ]\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"S9\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/initial-letter\"\n                }\n            ],\n            \"description\": \"The initial-letter CSS property specifies styling for dropped, raised, and sunken initial letters.\"\n        },\n        {\n            \"name\": \"initial-letter-align\",\n            \"status\": \"experimental\",\n            \"syntax\": \"[ auto | alphabetic | hanging | ideographic ]\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/initial-letter-align\"\n                }\n            ],\n            \"description\": \"The initial-letter-align CSS property specifies the alignment of initial letters within a paragraph.\"\n        },\n        {\n            \"name\": \"inset\",\n            \"syntax\": \"<'top'>{1,4}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF66\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/inset\"\n                }\n            ],\n            \"description\": \"The inset CSS property defines the logical block and inline start and end offsets of an element, which map to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"inset-block\",\n            \"syntax\": \"<'top'>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF63\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/inset-block\"\n                }\n            ],\n            \"description\": \"The inset-block CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"inset-block-end\",\n            \"syntax\": \"<'top'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF63\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/inset-block-end\"\n                }\n            ],\n            \"description\": \"The inset-block-end CSS property defines the logical block end offset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"inset-block-start\",\n            \"syntax\": \"<'top'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF63\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/inset-block-start\"\n                }\n            ],\n            \"description\": \"The inset-block-start CSS property defines the logical block start offset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"inset-inline\",\n            \"syntax\": \"<'top'>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF63\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/inset-inline\"\n                }\n            ],\n            \"description\": \"The inset-inline CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"inset-inline-end\",\n            \"syntax\": \"<'top'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF63\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/inset-inline-end\"\n                }\n            ],\n            \"description\": \"The inset-inline-end CSS property defines the logical inline end inset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"inset-inline-start\",\n            \"syntax\": \"<'top'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF63\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/inset-inline-start\"\n                }\n            ],\n            \"description\": \"The inset-inline-start CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation.\"\n        },\n        {\n            \"name\": \"line-clamp\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | <integer>\",\n            \"relevance\": 50,\n            \"description\": \"The line-clamp property allows limiting the contents of a block container to the specified number of lines; remaining content is fragmented away and neither rendered nor measured. Optionally, it also allows inserting content into the last line box to indicate the continuity of truncated/interrupted content.\"\n        },\n        {\n            \"name\": \"line-height-step\",\n            \"status\": \"experimental\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"C60\",\n                \"O47\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/line-height-step\"\n                }\n            ],\n            \"description\": \"The line-height-step CSS property defines the step units for line box heights. When the step unit is positive, line box heights are rounded up to the closest multiple of the unit. Negative values are invalid.\"\n        },\n        {\n            \"name\": \"margin-block\",\n            \"syntax\": \"<'margin-left'>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-block\"\n                }\n            ],\n            \"description\": \"The margin-block CSS property defines the logical block start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.\"\n        },\n        {\n            \"name\": \"margin-inline\",\n            \"syntax\": \"<'margin-left'>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-inline\"\n                }\n            ],\n            \"description\": \"The margin-inline CSS property defines the logical inline start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation.\"\n        },\n        {\n            \"name\": \"margin-trim\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | in-flow | all\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/margin-trim\"\n                }\n            ],\n            \"description\": \"The margin-trim property allows the container to trim the margins of its children where they adjoin the container’s edges.\"\n        },\n        {\n            \"name\": \"mask\",\n            \"syntax\": \"<mask-layer>#\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E12\",\n                \"FF2\",\n                \"S3.2\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mask\"\n                }\n            ],\n            \"description\": \"The mask CSS property alters the visibility of an element by either partially or fully hiding it. This is accomplished by either masking or clipping the image at specific points.\"\n        },\n        {\n            \"name\": \"mask-border\",\n            \"syntax\": \"<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>\",\n            \"relevance\": 50,\n            \"description\": \"The mask-border CSS property lets you create a mask along the edge of an element's border.\\n\\nThis property is a shorthand for mask-border-source, mask-border-slice, mask-border-width, mask-border-outset, mask-border-repeat, and mask-border-mode. As with all shorthand properties, any omitted sub-values will be set to their initial value.\"\n        },\n        {\n            \"name\": \"mask-border-mode\",\n            \"syntax\": \"luminance | alpha\",\n            \"relevance\": 50,\n            \"description\": \"The mask-border-mode CSS property specifies the blending mode used in a mask border.\"\n        },\n        {\n            \"name\": \"mask-border-outset\",\n            \"syntax\": \"[ <length> | <number> ]{1,4}\",\n            \"relevance\": 50,\n            \"description\": \"The mask-border-outset CSS property specifies the distance by which an element's mask border is set out from its border box.\"\n        },\n        {\n            \"name\": \"mask-border-repeat\",\n            \"syntax\": \"[ stretch | repeat | round | space ]{1,2}\",\n            \"relevance\": 50,\n            \"description\": \"The mask-border-repeat CSS property defines how the edge regions of a source image are adjusted to fit the dimensions of an element's mask border.\"\n        },\n        {\n            \"name\": \"mask-border-slice\",\n            \"syntax\": \"<number-percentage>{1,4} fill?\",\n            \"relevance\": 50,\n            \"description\": \"The mask-border-slice CSS property divides the image specified by mask-border-source into regions. These regions are used to form the components of an element's mask border.\"\n        },\n        {\n            \"name\": \"mask-border-source\",\n            \"syntax\": \"none | <image>\",\n            \"relevance\": 50,\n            \"description\": \"The mask-border-source CSS property specifies the source image used to create an element's mask border.\\n\\nThe mask-border-slice property is used to divide the source image into regions, which are then dynamically applied to the final mask border.\"\n        },\n        {\n            \"name\": \"mask-border-width\",\n            \"syntax\": \"[ <length-percentage> | <number> | auto ]{1,4}\",\n            \"relevance\": 50,\n            \"description\": \"The mask-border-width CSS property specifies the width of an element's mask border.\"\n        },\n        {\n            \"name\": \"mask-clip\",\n            \"syntax\": \"[ <geometry-box> | no-clip ]#\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF53\",\n                \"S4\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mask-clip\"\n                }\n            ],\n            \"description\": \"The mask-clip CSS property determines the area, which is affected by a mask. The painted content of an element must be restricted to this area.\"\n        },\n        {\n            \"name\": \"mask-composite\",\n            \"syntax\": \"<compositing-operator>#\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E18\",\n                \"FF53\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/mask-composite\"\n                }\n            ],\n            \"description\": \"The mask-composite CSS property represents a compositing operation used on the current mask layer with the mask layers below it.\"\n        },\n        {\n            \"name\": \"max-lines\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | <integer>\",\n            \"relevance\": 50,\n            \"description\": \"The max-liens property forces a break after a set number of lines\"\n        },\n        {\n            \"name\": \"offset\",\n            \"syntax\": \"[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF72\",\n                \"C55\",\n                \"O42\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/offset\"\n                }\n            ],\n            \"description\": \"The offset CSS property is a shorthand property for animating an element along a defined path.\"\n        },\n        {\n            \"name\": \"offset-anchor\",\n            \"syntax\": \"auto | <position>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF72\",\n                \"C79\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/offset-anchor\"\n                }\n            ],\n            \"description\": \"Defines an anchor point of the box positioned along the path. The anchor point specifies the point of the box which is to be considered as the point that is moved along the path.\"\n        },\n        {\n            \"name\": \"offset-distance\",\n            \"syntax\": \"<length-percentage>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF72\",\n                \"C55\",\n                \"O42\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/offset-distance\"\n                }\n            ],\n            \"description\": \"The offset-distance CSS property specifies a position along an offset-path.\"\n        },\n        {\n            \"name\": \"offset-path\",\n            \"syntax\": \"none | ray( [ <angle> && <size>? && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF72\",\n                \"C55\",\n                \"O45\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/offset-path\"\n                }\n            ],\n            \"description\": \"The offset-path CSS property specifies the offset path where the element gets positioned. The exact element’s position on the offset path is determined by the offset-distance property. An offset path is either a specified path with one or multiple sub-paths or the geometry of a not-styled basic shape. Each shape or path must define an initial position for the computed value of \\\"0\\\" for offset-distance and an initial direction which specifies the rotation of the object to the initial position.\\n\\nIn this specification, a direction (or rotation) of 0 degrees is equivalent to the direction of the positive x-axis in the object’s local coordinate system. In other words, a rotation of 0 degree points to the right side of the UA if the object and its ancestors have no transformation applied.\"\n        },\n        {\n            \"name\": \"offset-position\",\n            \"status\": \"experimental\",\n            \"syntax\": \"auto | <position>\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/offset-position\"\n                }\n            ],\n            \"description\": \"Specifies the initial position of the offset path. If position is specified with static, offset-position would be ignored.\"\n        },\n        {\n            \"name\": \"offset-rotate\",\n            \"syntax\": \"[ auto | reverse ] || <angle>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF72\",\n                \"C56\",\n                \"O43\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/offset-rotate\"\n                }\n            ],\n            \"description\": \"The offset-rotate CSS property defines the direction of the element while positioning along the offset path.\"\n        },\n        {\n            \"name\": \"overflow-anchor\",\n            \"syntax\": \"auto | none\",\n            \"relevance\": 51,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C56\",\n                \"O43\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overflow-anchor\"\n                }\n            ],\n            \"description\": \"The overflow-anchor CSS property provides a way to opt out browser scroll anchoring behavior which adjusts scroll position to minimize content shifts.\"\n        },\n        {\n            \"name\": \"overflow-block\",\n            \"syntax\": \"visible | hidden | clip | scroll | auto\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF69\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overflow-block\"\n                }\n            ],\n            \"description\": \"The overflow-block CSS media feature can be used to test how the output device handles content that overflows the initial containing block along the block axis.\"\n        },\n        {\n            \"name\": \"overflow-clip-box\",\n            \"status\": \"nonstandard\",\n            \"syntax\": \"padding-box | content-box\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF29\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Mozilla/Gecko/Chrome/CSS/overflow-clip-box\"\n                }\n            ],\n            \"description\": \"The overflow-clip-box CSS property specifies relative to which box the clipping happens when there is an overflow. It is short hand for the overflow-clip-box-inline and overflow-clip-box-block properties.\"\n        },\n        {\n            \"name\": \"overflow-inline\",\n            \"syntax\": \"visible | hidden | clip | scroll | auto\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF69\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overflow-inline\"\n                }\n            ],\n            \"description\": \"The overflow-inline CSS media feature can be used to test how the output device handles content that overflows the initial containing block along the inline axis.\"\n        },\n        {\n            \"name\": \"overscroll-behavior\",\n            \"syntax\": \"[ contain | none | auto ]{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E18\",\n                \"FF59\",\n                \"C63\",\n                \"O50\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior\"\n                }\n            ],\n            \"description\": \"The overscroll-behavior CSS property is shorthand for the overscroll-behavior-x and overscroll-behavior-y properties, which allow you to control the browser's scroll overflow behavior — what happens when the boundary of a scrolling area is reached.\"\n        },\n        {\n            \"name\": \"overscroll-behavior-block\",\n            \"syntax\": \"contain | none | auto\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF73\",\n                \"C77\",\n                \"O64\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-block\"\n                }\n            ],\n            \"description\": \"The overscroll-behavior-block CSS property sets the browser's behavior when the block direction boundary of a scrolling area is reached.\"\n        },\n        {\n            \"name\": \"overscroll-behavior-inline\",\n            \"syntax\": \"contain | none | auto\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF73\",\n                \"C77\",\n                \"O64\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-inline\"\n                }\n            ],\n            \"description\": \"The overscroll-behavior-inline CSS property sets the browser's behavior when the inline direction boundary of a scrolling area is reached.\"\n        },\n        {\n            \"name\": \"overscroll-behavior-x\",\n            \"syntax\": \"contain | none | auto\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E18\",\n                \"FF59\",\n                \"C63\",\n                \"O50\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-x\"\n                }\n            ],\n            \"description\": \"The overscroll-behavior-x CSS property is allows you to control the browser's scroll overflow behavior — what happens when the boundary of a scrolling area is reached — in the x axis direction.\"\n        },\n        {\n            \"name\": \"overscroll-behavior-y\",\n            \"syntax\": \"contain | none | auto\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E18\",\n                \"FF59\",\n                \"C63\",\n                \"O50\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-y\"\n                }\n            ],\n            \"description\": \"The overscroll-behavior-y CSS property is allows you to control the browser's scroll overflow behavior — what happens when the boundary of a scrolling area is reached — in the y axis direction.\"\n        },\n        {\n            \"name\": \"padding-block\",\n            \"syntax\": \"<'padding-left'>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding-block\"\n                }\n            ],\n            \"description\": \"The padding-block CSS property defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.\"\n        },\n        {\n            \"name\": \"padding-inline\",\n            \"syntax\": \"<'padding-left'>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF66\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/padding-inline\"\n                }\n            ],\n            \"description\": \"The padding-inline CSS property defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation.\"\n        },\n        {\n            \"name\": \"place-content\",\n            \"syntax\": \"<'align-content'> <'justify-content'>?\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF53\",\n                \"S9\",\n                \"C59\",\n                \"O46\"\n            ],\n            \"description\": \"The place-content CSS shorthand property sets both the align-content and justify-content properties.\"\n        },\n        {\n            \"name\": \"place-items\",\n            \"syntax\": \"<'align-items'> <'justify-items'>?\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF45\",\n                \"S11\",\n                \"C59\",\n                \"O46\"\n            ],\n            \"description\": \"The CSS place-items shorthand property sets both the align-items and justify-items properties. The first value is the align-items property value, the second the justify-items one. If the second value is not present, the first value is also used for it.\"\n        },\n        {\n            \"name\": \"place-self\",\n            \"syntax\": \"<'align-self'> <'justify-self'>?\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF45\",\n                \"C59\",\n                \"O46\"\n            ],\n            \"description\": \"The place-self CSS property is a shorthand property sets both the align-self and justify-self properties. The first value is the align-self property value, the second the justify-self one. If the second value is not present, the first value is also used for it.\"\n        },\n        {\n            \"name\": \"rotate\",\n            \"syntax\": \"none | <angle> | [ x | y | z | <number>{3} ] && <angle>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF72\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/rotate\"\n                }\n            ],\n            \"description\": \"The rotate CSS property allows you to specify rotation transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value.\"\n        },\n        {\n            \"name\": \"row-gap\",\n            \"syntax\": \"normal | <length-percentage>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E84\",\n                \"FF63\",\n                \"S10.1\",\n                \"C84\",\n                \"O70\"\n            ],\n            \"description\": \"The row-gap CSS property specifies the gutter between grid rows.\"\n        },\n        {\n            \"name\": \"ruby-merge\",\n            \"status\": \"experimental\",\n            \"syntax\": \"separate | collapse | auto\",\n            \"relevance\": 50,\n            \"description\": \"This property controls how ruby annotation boxes should be rendered when there are more than one in a ruby container box: whether each pair should be kept separate, the annotations should be collapsed and rendered as a group, or the separation should be determined based on the space available.\"\n        },\n        {\n            \"name\": \"scale\",\n            \"syntax\": \"none | <number>{1,3}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF72\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scale\"\n                }\n            ],\n            \"description\": \"The scale CSS property allows you to specify scale transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value.\"\n        },\n        {\n            \"name\": \"scrollbar-color\",\n            \"syntax\": \"auto | dark | light | <color>{2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF64\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scrollbar-color\"\n                }\n            ],\n            \"description\": \"The scrollbar-color CSS property sets the color of the scrollbar track and thumb.\"\n        },\n        {\n            \"name\": \"scrollbar-width\",\n            \"syntax\": \"auto | thin | none\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF64\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scrollbar-width\"\n                }\n            ],\n            \"description\": \"The scrollbar-width property allows the author to set the maximum thickness of an element’s scrollbars when they are shown. \"\n        },\n        {\n            \"name\": \"scroll-margin\",\n            \"syntax\": \"<length>{1,4}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin\"\n                }\n            ],\n            \"description\": \"The scroll-margin property is a shorthand property which sets all of the scroll-margin longhands, assigning values much like the margin property does for the margin-* longhands.\"\n        },\n        {\n            \"name\": \"scroll-margin-block\",\n            \"syntax\": \"<length>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block\"\n                }\n            ],\n            \"description\": \"The scroll-margin-block property is a shorthand property which sets the scroll-margin longhands in the block dimension.\"\n        },\n        {\n            \"name\": \"scroll-margin-block-start\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-start\"\n                }\n            ],\n            \"description\": \"The scroll-margin-block-start property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            \"name\": \"scroll-margin-block-end\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-end\"\n                }\n            ],\n            \"description\": \"The scroll-margin-block-end property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            \"name\": \"scroll-margin-bottom\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom\"\n                }\n            ],\n            \"description\": \"The scroll-margin-bottom property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            \"name\": \"scroll-margin-inline\",\n            \"syntax\": \"<length>{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF68\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline\"\n                }\n            ],\n            \"description\": \"The scroll-margin-inline property is a shorthand property which sets the scroll-margin longhands in the inline dimension.\"\n        },\n        {\n            \"name\": \"scroll-margin-inline-start\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-start\"\n                }\n            ],\n            \"description\": \"The scroll-margin-inline-start property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            \"name\": \"scroll-margin-inline-end\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-end\"\n                }\n            ],\n            \"description\": \"The scroll-margin-inline-end property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            \"name\": \"scroll-margin-left\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left\"\n                }\n            ],\n            \"description\": \"The scroll-margin-left property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            \"name\": \"scroll-margin-right\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right\"\n                }\n            ],\n            \"description\": \"The scroll-margin-right property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            \"name\": \"scroll-margin-top\",\n            \"syntax\": \"<length>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top\"\n                }\n            ],\n            \"description\": \"The scroll-margin-top property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container’s coordinate space), then adding the specified outsets.\"\n        },\n        {\n            \"name\": \"scroll-padding\",\n            \"syntax\": \"[ auto | <length-percentage> ]{1,4}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding\"\n                }\n            ],\n            \"description\": \"The scroll-padding property is a shorthand property which sets all of the scroll-padding longhands, assigning values much like the padding property does for the padding-* longhands.\"\n        },\n        {\n            \"name\": \"scroll-padding-block\",\n            \"syntax\": \"[ auto | <length-percentage> ]{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block\"\n                }\n            ],\n            \"description\": \"The scroll-padding-block property is a shorthand property which sets the scroll-padding longhands for the block dimension.\"\n        },\n        {\n            \"name\": \"scroll-padding-block-start\",\n            \"syntax\": \"auto | <length-percentage>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-start\"\n                }\n            ],\n            \"description\": \"The scroll-padding-block-start property defines offsets for the start edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            \"name\": \"scroll-padding-block-end\",\n            \"syntax\": \"auto | <length-percentage>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-end\"\n                }\n            ],\n            \"description\": \"The scroll-padding-block-end property defines offsets for the end edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            \"name\": \"scroll-padding-bottom\",\n            \"syntax\": \"auto | <length-percentage>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding-bottom\"\n                }\n            ],\n            \"description\": \"The scroll-padding-bottom property defines offsets for the bottom of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            \"name\": \"scroll-padding-inline\",\n            \"syntax\": \"[ auto | <length-percentage> ]{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline\"\n                }\n            ],\n            \"description\": \"The scroll-padding-inline property is a shorthand property which sets the scroll-padding longhands for the inline dimension.\"\n        },\n        {\n            \"name\": \"scroll-padding-inline-start\",\n            \"syntax\": \"auto | <length-percentage>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-start\"\n                }\n            ],\n            \"description\": \"The scroll-padding-inline-start property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            \"name\": \"scroll-padding-inline-end\",\n            \"syntax\": \"auto | <length-percentage>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-end\"\n                }\n            ],\n            \"description\": \"The scroll-padding-inline-end property defines offsets for the end edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            \"name\": \"scroll-padding-left\",\n            \"syntax\": \"auto | <length-percentage>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding-left\"\n                }\n            ],\n            \"description\": \"The scroll-padding-left property defines offsets for the left of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            \"name\": \"scroll-padding-right\",\n            \"syntax\": \"auto | <length-percentage>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding-right\"\n                }\n            ],\n            \"description\": \"The scroll-padding-right property defines offsets for the right of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            \"name\": \"scroll-padding-top\",\n            \"syntax\": \"auto | <length-percentage>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-padding-top\"\n                }\n            ],\n            \"description\": \"The scroll-padding-top property defines offsets for the top of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or simply to put more breathing room between a targeted element and the edges of the scrollport.\"\n        },\n        {\n            \"name\": \"scroll-snap-align\",\n            \"syntax\": \"[ none | start | end | center ]{1,2}\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF68\",\n                \"S11\",\n                \"C69\",\n                \"O56\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-snap-align\"\n                }\n            ],\n            \"description\": \"The scroll-snap-align property specifies the box’s snap position as an alignment of its snap area (as the alignment subject) within its snap container’s snapport (as the alignment container). The two values specify the snapping alignment in the block axis and inline axis, respectively. If only one value is specified, the second value defaults to the same value.\"\n        },\n        {\n            \"name\": \"scroll-snap-stop\",\n            \"syntax\": \"normal | always\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"C75\",\n                \"O62\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop\"\n                }\n            ],\n            \"description\": \"The scroll-snap-stop CSS property defines whether the scroll container is allowed to \\\"pass over\\\" possible snap positions.\"\n        },\n        {\n            \"name\": \"scroll-snap-type-x\",\n            \"status\": \"obsolete\",\n            \"syntax\": \"none | mandatory | proximity\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF39\",\n                \"S9\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type-x\"\n                }\n            ],\n            \"description\": \"The scroll-snap-type-x CSS property defines how strictly snap points are enforced on the horizontal axis of the scroll container in case there is one.\\n\\nSpecifying any precise animations or physics used to enforce those snap points is not covered by this property but instead left up to the user agent.\"\n        },\n        {\n            \"name\": \"scroll-snap-type-y\",\n            \"status\": \"obsolete\",\n            \"syntax\": \"none | mandatory | proximity\",\n            \"relevance\": 0,\n            \"browsers\": [\n                \"FF39\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type-y\"\n                }\n            ],\n            \"description\": \"The scroll-snap-type-y CSS property defines how strictly snap points are enforced on the vertical axis of the scroll container in case there is one.\\n\\nSpecifying any precise animations or physics used to enforce those snap points is not covered by this property but instead left up to the user agent.\"\n        },\n        {\n            \"name\": \"text-combine-upright\",\n            \"syntax\": \"none | all | [ digits <integer>? ]\",\n            \"relevance\": 50,\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-combine-upright\"\n                }\n            ],\n            \"description\": \"The text-combine-upright CSS property specifies the combination of multiple characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\\n\\nThis is used to produce an effect that is known as tate-chū-yoko (縦中横) in Japanese, or as 直書橫向 in Chinese.\"\n        },\n        {\n            \"name\": \"text-decoration-skip\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]\",\n            \"relevance\": 52,\n            \"browsers\": [\n                \"S12.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip\"\n                }\n            ],\n            \"description\": \"The text-decoration-skip CSS property specifies what parts of the element’s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.\"\n        },\n        {\n            \"name\": \"text-decoration-skip-ink\",\n            \"syntax\": \"auto | all | none\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF70\",\n                \"C64\",\n                \"O50\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip-ink\"\n                }\n            ],\n            \"description\": \"The text-decoration-skip-ink CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.\"\n        },\n        {\n            \"name\": \"text-decoration-thickness\",\n            \"syntax\": \"auto | from-font | <length> | <percentage> \",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF70\",\n                \"S12.1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness\"\n                }\n            ],\n            \"description\": \"The text-decoration-thickness CSS property sets the thickness, or width, of the decoration line that is used on text in an element, such as a line-through, underline, or overline.\"\n        },\n        {\n            \"name\": \"text-emphasis\",\n            \"syntax\": \"<'text-emphasis-style'> || <'text-emphasis-color'>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF46\",\n                \"S6.1\",\n                \"C25\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-emphasis\"\n                }\n            ],\n            \"description\": \"The text-emphasis CSS property is a shorthand property for setting text-emphasis-style and text-emphasis-color in one declaration. This property will apply the specified emphasis mark to each character of the element's text, except separator characters, like spaces,  and control characters.\"\n        },\n        {\n            \"name\": \"text-emphasis-color\",\n            \"syntax\": \"<color>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF46\",\n                \"S6.1\",\n                \"C25\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-emphasis-color\"\n                }\n            ],\n            \"description\": \"The text-emphasis-color CSS property defines the color used to draw emphasis marks on text being rendered in the HTML document. This value can also be set and reset using the text-emphasis shorthand.\"\n        },\n        {\n            \"name\": \"text-emphasis-position\",\n            \"syntax\": \"[ over | under ] && [ right | left ]\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF46\",\n                \"S6.1\",\n                \"C25\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-emphasis-position\"\n                }\n            ],\n            \"description\": \"The text-emphasis-position CSS property describes where emphasis marks are drawn at. The effect of emphasis marks on the line height is the same as for ruby text: if there isn't enough place, the line height is increased.\"\n        },\n        {\n            \"name\": \"text-emphasis-style\",\n            \"syntax\": \"none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF46\",\n                \"S6.1\",\n                \"C25\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-emphasis-style\"\n                }\n            ],\n            \"description\": \"The text-emphasis-style CSS property defines the type of emphasis used. It can also be set, and reset, using the text-emphasis shorthand.\"\n        },\n        {\n            \"name\": \"text-size-adjust\",\n            \"status\": \"experimental\",\n            \"syntax\": \"none | auto | <percentage>\",\n            \"relevance\": 56,\n            \"browsers\": [\n                \"E79\",\n                \"C54\",\n                \"O41\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-size-adjust\"\n                }\n            ],\n            \"description\": \"The text-size-adjust CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\"\n        },\n        {\n            \"name\": \"text-underline-offset\",\n            \"syntax\": \"auto | <length> | <percentage> \",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF70\",\n                \"S12.1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/text-underline-offset\"\n                }\n            ],\n            \"description\": \"The text-underline-offset CSS property sets the offset distance of an underline text decoration line (applied using text-decoration) from its original position.\"\n        },\n        {\n            \"name\": \"transform-box\",\n            \"syntax\": \"content-box | border-box | fill-box | stroke-box | view-box\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"E79\",\n                \"FF55\",\n                \"S11\",\n                \"C64\",\n                \"O51\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/transform-box\"\n                }\n            ],\n            \"description\": \"The transform-box CSS property defines the layout box to which the transform and transform-origin properties relate.\"\n        },\n        {\n            \"name\": \"translate\",\n            \"syntax\": \"none | <length-percentage> [ <length-percentage> <length>? ]?\",\n            \"relevance\": 50,\n            \"browsers\": [\n                \"FF72\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/translate\"\n                }\n            ],\n            \"description\": \"The translate CSS property allows you to specify translation transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value.\"\n        },\n        {\n            \"name\": \"speak-as\",\n            \"syntax\": \"auto | bullets | numbers | words | spell-out | <counter-style-name>\",\n            \"relevance\": 50,\n            \"description\": \"The speak-as descriptor specifies how a counter symbol constructed with a given @counter-style will be represented in the spoken form. For example, an author can specify a counter symbol to be either spoken as its numerical value or just represented with an audio cue.\"\n        },\n        {\n            \"name\": \"font-display\",\n            \"status\": \"experimental\",\n            \"syntax\": \"[ auto | block | swap | fallback | optional ]\",\n            \"relevance\": 54,\n            \"description\": \"The font-display descriptor determines how a font face is displayed based on whether and when it is downloaded and ready to use.\"\n        },\n        {\n            \"name\": \"bleed\",\n            \"syntax\": \"auto | <length>\",\n            \"relevance\": 50,\n            \"description\": \"The bleed CSS at-rule descriptor, used with the @page at-rule, specifies the extent of the page bleed area outside the page box. This property only has effect if crop marks are enabled using the marks property.\"\n        },\n        {\n            \"name\": \"marks\",\n            \"syntax\": \"none | [ crop || cross ]\",\n            \"relevance\": 50,\n            \"description\": \"The marks CSS at-rule descriptor, used with the @page at-rule, adds crop and/or cross marks to the presentation of the document. Crop marks indicate where the page should be cut. Cross marks are used to align sheets.\"\n        },\n        {\n            \"name\": \"max-zoom\",\n            \"syntax\": \"auto | <number> | <percentage>\",\n            \"relevance\": 50,\n            \"description\": \"The max-zoom CSS descriptor sets the maximum zoom factor of a document defined by the @viewport at-rule. The browser will not zoom in any further than this, whether automatically or at the user's request.\\n\\nA zoom factor of 1.0 or 100% corresponds to no zooming. Larger values are zoomed in. Smaller values are zoomed out.\"\n        },\n        {\n            \"name\": \"min-zoom\",\n            \"syntax\": \"auto | <number> | <percentage>\",\n            \"relevance\": 50,\n            \"description\": \"The min-zoom CSS descriptor sets the minimum zoom factor of a document defined by the @viewport at-rule. The browser will not zoom out any further than this, whether automatically or at the user's request.\\n\\nA zoom factor of 1.0 or 100% corresponds to no zooming. Larger values are zoomed in. Smaller values are zoomed out.\"\n        },\n        {\n            \"name\": \"orientation\",\n            \"syntax\": \"auto | portrait | landscape\",\n            \"relevance\": 50,\n            \"description\": \"The orientation CSS @media media feature can be used to apply styles based on the orientation of the viewport (or the page box, for paged media).\"\n        },\n        {\n            \"name\": \"user-zoom\",\n            \"syntax\": \"zoom | fixed\",\n            \"relevance\": 50,\n            \"description\": \"The user-zoom CSS descriptor controls whether or not the user can change the zoom factor of a document defined by @viewport.\"\n        },\n        {\n            \"name\": \"viewport-fit\",\n            \"syntax\": \"auto | contain | cover\",\n            \"relevance\": 50,\n            \"description\": \"The border-block-style CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation.\"\n        }\n    ],\n    \"atDirectives\": [\n        {\n            \"name\": \"@charset\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/@charset\"\n                }\n            ],\n            \"description\": \"Defines character set of the document.\"\n        },\n        {\n            \"name\": \"@counter-style\",\n            \"browsers\": [\n                \"FF33\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/@counter-style\"\n                }\n            ],\n            \"description\": \"Defines a custom counter style.\"\n        },\n        {\n            \"name\": \"@font-face\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/@font-face\"\n                }\n            ],\n            \"description\": \"Allows for linking to fonts that are automatically activated when needed. This permits authors to work around the limitation of 'web-safe' fonts, allowing for consistent rendering independent of the fonts available in a given user's environment.\"\n        },\n        {\n            \"name\": \"@font-feature-values\",\n            \"browsers\": [\n                \"FF34\",\n                \"S9.1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/@font-feature-values\"\n                }\n            ],\n            \"description\": \"Defines named values for the indices used to select alternate glyphs for a given font family.\"\n        },\n        {\n            \"name\": \"@import\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/@import\"\n                }\n            ],\n            \"description\": \"Includes content of another file.\"\n        },\n        {\n            \"name\": \"@keyframes\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/@keyframes\"\n                }\n            ],\n            \"description\": \"Defines set of animation key frames.\"\n        },\n        {\n            \"name\": \"@media\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/@media\"\n                }\n            ],\n            \"description\": \"Defines a stylesheet for a particular media type.\"\n        },\n        {\n            \"name\": \"@-moz-document\",\n            \"browsers\": [\n                \"FF1.8\"\n            ],\n            \"description\": \"Gecko-specific at-rule that restricts the style rules contained within it based on the URL of the document.\"\n        },\n        {\n            \"name\": \"@-moz-keyframes\",\n            \"browsers\": [\n                \"FF5\"\n            ],\n            \"description\": \"Defines set of animation key frames.\"\n        },\n        {\n            \"name\": \"@-ms-viewport\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Specifies the size, zoom factor, and orientation of the viewport.\"\n        },\n        {\n            \"name\": \"@namespace\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/@namespace\"\n                }\n            ],\n            \"description\": \"Declares a prefix and associates it with a namespace name.\"\n        },\n        {\n            \"name\": \"@-o-keyframes\",\n            \"browsers\": [\n                \"O12\"\n            ],\n            \"description\": \"Defines set of animation key frames.\"\n        },\n        {\n            \"name\": \"@-o-viewport\",\n            \"browsers\": [\n                \"O11\"\n            ],\n            \"description\": \"Specifies the size, zoom factor, and orientation of the viewport.\"\n        },\n        {\n            \"name\": \"@page\",\n            \"browsers\": [\n                \"E12\",\n                \"FF19\",\n                \"C2\",\n                \"IE8\",\n                \"O6\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/@page\"\n                }\n            ],\n            \"description\": \"Directive defines various page parameters.\"\n        },\n        {\n            \"name\": \"@supports\",\n            \"browsers\": [\n                \"E12\",\n                \"FF22\",\n                \"S9\",\n                \"C28\",\n                \"O12.1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/@supports\"\n                }\n            ],\n            \"description\": \"A conditional group rule whose condition tests whether the user agent supports CSS property:value pairs.\"\n        },\n        {\n            \"name\": \"@-webkit-keyframes\",\n            \"browsers\": [\n                \"C\",\n                \"S4\"\n            ],\n            \"description\": \"Defines set of animation key frames.\"\n        }\n    ],\n    \"pseudoClasses\": [\n        {\n            \"name\": \":active\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:active\"\n                }\n            ],\n            \"description\": \"Applies while an element is being activated by the user. For example, between the times the user presses the mouse button and releases it.\"\n        },\n        {\n            \"name\": \":any-link\",\n            \"browsers\": [\n                \"E79\",\n                \"FF50\",\n                \"S9\",\n                \"C65\",\n                \"O52\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:any-link\"\n                }\n            ],\n            \"description\": \"Represents an element that acts as the source anchor of a hyperlink. Applies to both visited and unvisited links.\"\n        },\n        {\n            \"name\": \":checked\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:checked\"\n                }\n            ],\n            \"description\": \"Radio and checkbox elements can be toggled by the user. Some menu items are 'checked' when the user selects them. When such elements are toggled 'on' the :checked pseudo-class applies.\"\n        },\n        {\n            \"name\": \":corner-present\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Indicates whether or not a scrollbar corner is present.\"\n        },\n        {\n            \"name\": \":decrement\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Indicates whether or not the button or track piece will decrement the view’s position when used.\"\n        },\n        {\n            \"name\": \":default\",\n            \"browsers\": [\n                \"E79\",\n                \"FF4\",\n                \"S5\",\n                \"C10\",\n                \"O10\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:default\"\n                }\n            ],\n            \"description\": \"Applies to the one or more UI elements that are the default among a set of similar elements. Typically applies to context menu items, buttons, and select lists/menus.\"\n        },\n        {\n            \"name\": \":disabled\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:disabled\"\n                }\n            ],\n            \"description\": \"Represents user interface elements that are in a disabled state; such elements have a corresponding enabled state.\"\n        },\n        {\n            \"name\": \":double-button\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Applies when both buttons are displayed together at the same end of the scrollbar.\"\n        },\n        {\n            \"name\": \":empty\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:empty\"\n                }\n            ],\n            \"description\": \"Represents an element that has no children at all.\"\n        },\n        {\n            \"name\": \":enabled\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:enabled\"\n                }\n            ],\n            \"description\": \"Represents user interface elements that are in an enabled state; such elements have a corresponding disabled state.\"\n        },\n        {\n            \"name\": \":end\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Indicates whether the object is placed after the thumb.\"\n        },\n        {\n            \"name\": \":first\",\n            \"browsers\": [\n                \"E12\",\n                \"S6\",\n                \"C18\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:first\"\n                }\n            ],\n            \"description\": \"When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context.\"\n        },\n        {\n            \"name\": \":first-child\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:first-child\"\n                }\n            ],\n            \"description\": \"Same as :nth-child(1). Represents an element that is the first child of some other element.\"\n        },\n        {\n            \"name\": \":first-of-type\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:first-of-type\"\n                }\n            ],\n            \"description\": \"Same as :nth-of-type(1). Represents an element that is the first sibling of its type in the list of children of its parent element.\"\n        },\n        {\n            \"name\": \":focus\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:focus\"\n                }\n            ],\n            \"description\": \"Applies while an element has the focus (accepts keyboard or mouse events, or other forms of input).\"\n        },\n        {\n            \"name\": \":fullscreen\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:fullscreen\"\n                }\n            ],\n            \"description\": \"Matches any element that has its fullscreen flag set.\"\n        },\n        {\n            \"name\": \":future\",\n            \"browsers\": [\n                \"C\",\n                \"O16\",\n                \"S6\"\n            ],\n            \"description\": \"Represents any element that is defined to occur entirely after a :current element.\"\n        },\n        {\n            \"name\": \":horizontal\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to any scrollbar pieces that have a horizontal orientation.\"\n        },\n        {\n            \"name\": \":host\",\n            \"browsers\": [\n                \"E79\",\n                \"FF63\",\n                \"S10\",\n                \"C54\",\n                \"O41\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:host\"\n                }\n            ],\n            \"description\": \"When evaluated in the context of a shadow tree, matches the shadow tree’s host element.\"\n        },\n        {\n            \"name\": \":host()\",\n            \"browsers\": [\n                \"C35\",\n                \"O22\"\n            ],\n            \"description\": \"When evaluated in the context of a shadow tree, it matches the shadow tree’s host element if the host element, in its normal context, matches the selector argument.\"\n        },\n        {\n            \"name\": \":host-context()\",\n            \"browsers\": [\n                \"C35\",\n                \"O22\"\n            ],\n            \"description\": \"Tests whether there is an ancestor, outside the shadow tree, which matches a particular selector.\"\n        },\n        {\n            \"name\": \":hover\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:hover\"\n                }\n            ],\n            \"description\": \"Applies while the user designates an element with a pointing device, but does not necessarily activate it. For example, a visual user agent could apply this pseudo-class when the cursor (mouse pointer) hovers over a box generated by the element.\"\n        },\n        {\n            \"name\": \":increment\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Indicates whether or not the button or track piece will increment the view’s position when used.\"\n        },\n        {\n            \"name\": \":indeterminate\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:indeterminate\"\n                }\n            ],\n            \"description\": \"Applies to UI elements whose value is in an indeterminate state.\"\n        },\n        {\n            \"name\": \":in-range\",\n            \"browsers\": [\n                \"E13\",\n                \"FF29\",\n                \"S5.1\",\n                \"C10\",\n                \"O11\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:in-range\"\n                }\n            ],\n            \"description\": \"Used in conjunction with the min and max attributes, whether on a range input, a number field, or any other types that accept those attributes.\"\n        },\n        {\n            \"name\": \":invalid\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:invalid\"\n                }\n            ],\n            \"description\": \"An element is :valid or :invalid when it is, respectively, valid or invalid with respect to data validity semantics defined by a different specification.\"\n        },\n        {\n            \"name\": \":lang()\",\n            \"browsers\": [\n                \"E\",\n                \"C\",\n                \"FF1\",\n                \"IE8\",\n                \"O8\",\n                \"S3\"\n            ],\n            \"description\": \"Represents an element that is in language specified.\"\n        },\n        {\n            \"name\": \":last-child\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:last-child\"\n                }\n            ],\n            \"description\": \"Same as :nth-last-child(1). Represents an element that is the last child of some other element.\"\n        },\n        {\n            \"name\": \":last-of-type\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:last-of-type\"\n                }\n            ],\n            \"description\": \"Same as :nth-last-of-type(1). Represents an element that is the last sibling of its type in the list of children of its parent element.\"\n        },\n        {\n            \"name\": \":left\",\n            \"browsers\": [\n                \"E12\",\n                \"S5.1\",\n                \"C6\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:left\"\n                }\n            ],\n            \"description\": \"When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context.\"\n        },\n        {\n            \"name\": \":link\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:link\"\n                }\n            ],\n            \"description\": \"Applies to links that have not yet been visited.\"\n        },\n        {\n            \"name\": \":matches()\",\n            \"browsers\": [\n                \"S9\"\n            ],\n            \"description\": \"Takes a selector list as its argument. It represents an element that is represented by its argument.\"\n        },\n        {\n            \"name\": \":-moz-any()\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"description\": \"Represents an element that is represented by the selector list passed as its argument. Standardized as :matches().\"\n        },\n        {\n            \"name\": \":-moz-any-link\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"description\": \"Represents an element that acts as the source anchor of a hyperlink. Applies to both visited and unvisited links.\"\n        },\n        {\n            \"name\": \":-moz-broken\",\n            \"browsers\": [\n                \"FF3\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:-moz-broken\"\n                }\n            ],\n            \"description\": \"Non-standard. Matches elements representing broken images.\"\n        },\n        {\n            \"name\": \":-moz-drag-over\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"description\": \"Non-standard. Matches elements when a drag-over event applies to it.\"\n        },\n        {\n            \"name\": \":-moz-first-node\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"description\": \"Non-standard. Represents an element that is the first child node of some other element.\"\n        },\n        {\n            \"name\": \":-moz-focusring\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"description\": \"Non-standard. Matches an element that has focus and focus ring drawing is enabled in the browser.\"\n        },\n        {\n            \"name\": \":-moz-full-screen\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"description\": \"Matches any element that has its fullscreen flag set. Standardized as :fullscreen.\"\n        },\n        {\n            \"name\": \":-moz-last-node\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"description\": \"Non-standard. Represents an element that is the last child node of some other element.\"\n        },\n        {\n            \"name\": \":-moz-loading\",\n            \"browsers\": [\n                \"FF3\"\n            ],\n            \"description\": \"Non-standard. Matches elements, such as images, that haven’t started loading yet.\"\n        },\n        {\n            \"name\": \":-moz-only-whitespace\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:-moz-only-whitespace\"\n                }\n            ],\n            \"description\": \"The same as :empty, except that it additionally matches elements that only contain code points affected by whitespace processing. Standardized as :blank.\"\n        },\n        {\n            \"name\": \":-moz-placeholder\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"description\": \"Deprecated. Represents placeholder text in an input field. Use ::-moz-placeholder for Firefox 19+.\"\n        },\n        {\n            \"name\": \":-moz-submit-invalid\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:-moz-submit-invalid\"\n                }\n            ],\n            \"description\": \"Non-standard. Represents any submit button when the contents of the associated form are not valid.\"\n        },\n        {\n            \"name\": \":-moz-suppressed\",\n            \"browsers\": [\n                \"FF3\"\n            ],\n            \"description\": \"Non-standard. Matches elements representing images that have been blocked from loading.\"\n        },\n        {\n            \"name\": \":-moz-ui-invalid\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:-moz-ui-invalid\"\n                }\n            ],\n            \"description\": \"Non-standard. Represents any validated form element whose value isn't valid \"\n        },\n        {\n            \"name\": \":-moz-ui-valid\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:-moz-ui-valid\"\n                }\n            ],\n            \"description\": \"Non-standard. Represents any validated form element whose value is valid \"\n        },\n        {\n            \"name\": \":-moz-user-disabled\",\n            \"browsers\": [\n                \"FF3\"\n            ],\n            \"description\": \"Non-standard. Matches elements representing images that have been disabled due to the user’s preferences.\"\n        },\n        {\n            \"name\": \":-moz-window-inactive\",\n            \"browsers\": [\n                \"FF4\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:-moz-window-inactive\"\n                }\n            ],\n            \"description\": \"Non-standard. Matches elements in an inactive window.\"\n        },\n        {\n            \"name\": \":-ms-fullscreen\",\n            \"browsers\": [\n                \"IE11\"\n            ],\n            \"description\": \"Matches any element that has its fullscreen flag set.\"\n        },\n        {\n            \"name\": \":-ms-input-placeholder\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"description\": \"Represents placeholder text in an input field. Note: for Edge use the pseudo-element ::-ms-input-placeholder. Standardized as ::placeholder.\"\n        },\n        {\n            \"name\": \":-ms-keyboard-active\",\n            \"browsers\": [\n                \"IE10\"\n            ],\n            \"description\": \"Windows Store apps only. Applies one or more styles to an element when it has focus and the user presses the space bar.\"\n        },\n        {\n            \"name\": \":-ms-lang()\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents an element that is in the language specified. Accepts a comma separated list of language tokens.\"\n        },\n        {\n            \"name\": \":no-button\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to track pieces. Applies when there is no button at that end of the track.\"\n        },\n        {\n            \"name\": \":not()\",\n            \"browsers\": [\n                \"E\",\n                \"C\",\n                \"FF1\",\n                \"IE9\",\n                \"O9.5\",\n                \"S2\"\n            ],\n            \"description\": \"The negation pseudo-class, :not(X), is a functional notation taking a simple selector (excluding the negation pseudo-class itself) as an argument. It represents an element that is not represented by its argument.\"\n        },\n        {\n            \"name\": \":nth-child()\",\n            \"browsers\": [\n                \"E\",\n                \"C\",\n                \"FF3.5\",\n                \"IE9\",\n                \"O9.5\",\n                \"S3.1\"\n            ],\n            \"description\": \"Represents an element that has an+b-1 siblings before it in the document tree, for any positive integer or zero value of n, and has a parent element.\"\n        },\n        {\n            \"name\": \":nth-last-child()\",\n            \"browsers\": [\n                \"E\",\n                \"C\",\n                \"FF3.5\",\n                \"IE9\",\n                \"O9.5\",\n                \"S3.1\"\n            ],\n            \"description\": \"Represents an element that has an+b-1 siblings after it in the document tree, for any positive integer or zero value of n, and has a parent element.\"\n        },\n        {\n            \"name\": \":nth-last-of-type()\",\n            \"browsers\": [\n                \"E\",\n                \"C\",\n                \"FF3.5\",\n                \"IE9\",\n                \"O9.5\",\n                \"S3.1\"\n            ],\n            \"description\": \"Represents an element that has an+b-1 siblings with the same expanded element name after it in the document tree, for any zero or positive integer value of n, and has a parent element.\"\n        },\n        {\n            \"name\": \":nth-of-type()\",\n            \"browsers\": [\n                \"E\",\n                \"C\",\n                \"FF3.5\",\n                \"IE9\",\n                \"O9.5\",\n                \"S3.1\"\n            ],\n            \"description\": \"Represents an element that has an+b-1 siblings with the same expanded element name before it in the document tree, for any zero or positive integer value of n, and has a parent element.\"\n        },\n        {\n            \"name\": \":only-child\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:only-child\"\n                }\n            ],\n            \"description\": \"Represents an element that has a parent element and whose parent element has no other element children. Same as :first-child:last-child or :nth-child(1):nth-last-child(1), but with a lower specificity.\"\n        },\n        {\n            \"name\": \":only-of-type\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:only-of-type\"\n                }\n            ],\n            \"description\": \"Matches every element that is the only child of its type, of its parent. Same as :first-of-type:last-of-type or :nth-of-type(1):nth-last-of-type(1), but with a lower specificity.\"\n        },\n        {\n            \"name\": \":optional\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:optional\"\n                }\n            ],\n            \"description\": \"A form element is :required or :optional if a value for it is, respectively, required or optional before the form it belongs to is submitted. Elements that are not form elements are neither required nor optional.\"\n        },\n        {\n            \"name\": \":out-of-range\",\n            \"browsers\": [\n                \"E13\",\n                \"FF29\",\n                \"S5.1\",\n                \"C10\",\n                \"O11\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:out-of-range\"\n                }\n            ],\n            \"description\": \"Used in conjunction with the min and max attributes, whether on a range input, a number field, or any other types that accept those attributes.\"\n        },\n        {\n            \"name\": \":past\",\n            \"browsers\": [\n                \"C\",\n                \"O16\",\n                \"S6\"\n            ],\n            \"description\": \"Represents any element that is defined to occur entirely prior to a :current element.\"\n        },\n        {\n            \"name\": \":read-only\",\n            \"browsers\": [\n                \"E13\",\n                \"FF78\",\n                \"S4\",\n                \"C1\",\n                \"O9\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:read-only\"\n                }\n            ],\n            \"description\": \"An element whose contents are not user-alterable is :read-only. However, elements whose contents are user-alterable (such as text input fields) are considered to be in a :read-write state. In typical documents, most elements are :read-only.\"\n        },\n        {\n            \"name\": \":read-write\",\n            \"browsers\": [\n                \"E13\",\n                \"FF78\",\n                \"S4\",\n                \"C1\",\n                \"O9\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:read-write\"\n                }\n            ],\n            \"description\": \"An element whose contents are not user-alterable is :read-only. However, elements whose contents are user-alterable (such as text input fields) are considered to be in a :read-write state. In typical documents, most elements are :read-only.\"\n        },\n        {\n            \"name\": \":required\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:required\"\n                }\n            ],\n            \"description\": \"A form element is :required or :optional if a value for it is, respectively, required or optional before the form it belongs to is submitted. Elements that are not form elements are neither required nor optional.\"\n        },\n        {\n            \"name\": \":right\",\n            \"browsers\": [\n                \"E12\",\n                \"S5.1\",\n                \"C6\",\n                \"IE8\",\n                \"O9.2\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:right\"\n                }\n            ],\n            \"description\": \"When printing double-sided documents, the page boxes on left and right pages may be different. This can be expressed through CSS pseudo-classes defined in the  page context.\"\n        },\n        {\n            \"name\": \":root\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:root\"\n                }\n            ],\n            \"description\": \"Represents an element that is the root of the document. In HTML 4, this is always the HTML element.\"\n        },\n        {\n            \"name\": \":scope\",\n            \"browsers\": [\n                \"E79\",\n                \"FF32\",\n                \"S7\",\n                \"C27\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:scope\"\n                }\n            ],\n            \"description\": \"Represents any element that is in the contextual reference element set.\"\n        },\n        {\n            \"name\": \":single-button\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Applies when both buttons are displayed separately at either end of the scrollbar.\"\n        },\n        {\n            \"name\": \":start\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to buttons and track pieces. Indicates whether the object is placed before the thumb.\"\n        },\n        {\n            \"name\": \":target\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:target\"\n                }\n            ],\n            \"description\": \"Some URIs refer to a location within a resource. This kind of URI ends with a 'number sign' (#) followed by an anchor identifier (called the fragment identifier).\"\n        },\n        {\n            \"name\": \":valid\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:valid\"\n                }\n            ],\n            \"description\": \"An element is :valid or :invalid when it is, respectively, valid or invalid with respect to data validity semantics defined by a different specification.\"\n        },\n        {\n            \"name\": \":vertical\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Non-standard. Applies to any scrollbar pieces that have a vertical orientation.\"\n        },\n        {\n            \"name\": \":visited\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:visited\"\n                }\n            ],\n            \"description\": \"Applies once the link has been visited by the user.\"\n        },\n        {\n            \"name\": \":-webkit-any()\",\n            \"browsers\": [\n                \"C\",\n                \"S5\"\n            ],\n            \"description\": \"Represents an element that is represented by the selector list passed as its argument. Standardized as :matches().\"\n        },\n        {\n            \"name\": \":-webkit-full-screen\",\n            \"browsers\": [\n                \"C\",\n                \"S6\"\n            ],\n            \"description\": \"Matches any element that has its fullscreen flag set. Standardized as :fullscreen.\"\n        },\n        {\n            \"name\": \":window-inactive\",\n            \"browsers\": [\n                \"C\",\n                \"S3\"\n            ],\n            \"description\": \"Non-standard. Applies to all scrollbar pieces. Indicates whether or not the window containing the scrollbar is currently active.\"\n        },\n        {\n            \"name\": \":blank\",\n            \"status\": \"experimental\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:blank\"\n                }\n            ],\n            \"description\": \"The :blank CSS pseudo-class selects empty user input elements (eg. <input> or <textarea>).\"\n        },\n        {\n            \"name\": \":defined\",\n            \"status\": \"experimental\",\n            \"browsers\": [\n                \"E79\",\n                \"FF63\",\n                \"S10\",\n                \"C54\",\n                \"O41\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:defined\"\n                }\n            ],\n            \"description\": \"The :defined CSS pseudo-class represents any element that has been defined. This includes any standard element built in to the browser, and custom elements that have been successfully defined (i.e. with the CustomElementRegistry.define() method).\"\n        },\n        {\n            \"name\": \":dir\",\n            \"browsers\": [\n                \"FF49\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:dir\"\n                }\n            ],\n            \"description\": \"The :dir() CSS pseudo-class matches elements based on the directionality of the text contained in them.\"\n        },\n        {\n            \"name\": \":focus-visible\",\n            \"status\": \"experimental\",\n            \"browsers\": [\n                \"E79\",\n                \"FF4\",\n                \"C67\",\n                \"O54\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:focus-visible\"\n                }\n            ],\n            \"description\": \"The :focus-visible pseudo-class applies while an element matches the :focus pseudo-class and the UA determines via heuristics that the focus should be made evident on the element.\"\n        },\n        {\n            \"name\": \":focus-within\",\n            \"status\": \"experimental\",\n            \"browsers\": [\n                \"E79\",\n                \"FF52\",\n                \"S10.1\",\n                \"C60\",\n                \"O47\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:focus-within\"\n                }\n            ],\n            \"description\": \"The :focus-within pseudo-class applies to any element for which the :focus pseudo class applies as well as to an element whose descendant in the flat tree (including non-element nodes, such as text nodes) matches the conditions for matching :focus.\"\n        },\n        {\n            \"name\": \":has\",\n            \"status\": \"experimental\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:has\"\n                }\n            ],\n            \"description\": \":The :has() CSS pseudo-class represents an element if any of the selectors passed as parameters (relative to the :scope of the given element), match at least one element.\"\n        },\n        {\n            \"name\": \":is\",\n            \"status\": \"experimental\",\n            \"browsers\": [\n                \"E79\",\n                \"FF78\",\n                \"S9\",\n                \"C68\",\n                \"O55\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:is\"\n                }\n            ],\n            \"description\": \"The :is() CSS pseudo-class function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list. This is useful for writing large selectors in a more compact form.\"\n        },\n        {\n            \"name\": \":placeholder-shown\",\n            \"status\": \"experimental\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:placeholder-shown\"\n                }\n            ],\n            \"description\": \"The :placeholder-shown CSS pseudo-class represents any <input> or <textarea> element that is currently displaying placeholder text.\"\n        },\n        {\n            \"name\": \":where\",\n            \"status\": \"experimental\",\n            \"browsers\": [\n                \"FF78\",\n                \"C72\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/:where\"\n                }\n            ],\n            \"description\": \"The :where() CSS pseudo-class function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list.\"\n        }\n    ],\n    \"pseudoElements\": [\n        {\n            \"name\": \"::after\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::after\"\n                }\n            ],\n            \"description\": \"Represents a styleable child pseudo-element immediately after the originating element’s actual content.\"\n        },\n        {\n            \"name\": \"::backdrop\",\n            \"browsers\": [\n                \"E12\",\n                \"FF47\",\n                \"C37\",\n                \"IE11\",\n                \"O24\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::backdrop\"\n                }\n            ],\n            \"description\": \"Used to create a backdrop that hides the underlying document for an element in a top layer (such as an element that is displayed fullscreen).\"\n        },\n        {\n            \"name\": \"::before\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::before\"\n                }\n            ],\n            \"description\": \"Represents a styleable child pseudo-element immediately before the originating element’s actual content.\"\n        },\n        {\n            \"name\": \"::content\",\n            \"browsers\": [\n                \"C35\",\n                \"O22\"\n            ],\n            \"description\": \"Deprecated. Matches the distribution list itself, on elements that have one. Use ::slotted for forward compatibility.\"\n        },\n        {\n            \"name\": \"::cue\",\n            \"browsers\": [\n                \"E79\",\n                \"FF55\",\n                \"S6.1\",\n                \"C26\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::cue\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::cue()\",\n            \"browsers\": [\n                \"C\",\n                \"O16\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::cue-region\",\n            \"browsers\": [\n                \"C\",\n                \"O16\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::cue-region()\",\n            \"browsers\": [\n                \"C\",\n                \"O16\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::first-letter\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::first-letter\"\n                }\n            ],\n            \"description\": \"Represents the first letter of an element, if it is not preceded by any other content (such as images or inline tables) on its line.\"\n        },\n        {\n            \"name\": \"::first-line\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::first-line\"\n                }\n            ],\n            \"description\": \"Describes the contents of the first formatted line of its originating element.\"\n        },\n        {\n            \"name\": \"::-moz-focus-inner\",\n            \"browsers\": [\n                \"FF4\"\n            ]\n        },\n        {\n            \"name\": \"::-moz-focus-outer\",\n            \"browsers\": [\n                \"FF4\"\n            ]\n        },\n        {\n            \"name\": \"::-moz-list-bullet\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"description\": \"Used to style the bullet of a list element. Similar to the standardized ::marker.\"\n        },\n        {\n            \"name\": \"::-moz-list-number\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"description\": \"Used to style the numbers of a list element. Similar to the standardized ::marker.\"\n        },\n        {\n            \"name\": \"::-moz-placeholder\",\n            \"browsers\": [\n                \"FF19\"\n            ],\n            \"description\": \"Represents placeholder text in an input field\"\n        },\n        {\n            \"name\": \"::-moz-progress-bar\",\n            \"browsers\": [\n                \"FF9\"\n            ],\n            \"description\": \"Represents the bar portion of a progress bar.\"\n        },\n        {\n            \"name\": \"::-moz-selection\",\n            \"browsers\": [\n                \"FF1\"\n            ],\n            \"description\": \"Represents the portion of a document that has been highlighted by the user.\"\n        },\n        {\n            \"name\": \"::-ms-backdrop\",\n            \"browsers\": [\n                \"IE11\"\n            ],\n            \"description\": \"Used to create a backdrop that hides the underlying document for an element in a top layer (such as an element that is displayed fullscreen).\"\n        },\n        {\n            \"name\": \"::-ms-browse\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the browse button of an input type=file control.\"\n        },\n        {\n            \"name\": \"::-ms-check\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the check of a checkbox or radio button input control.\"\n        },\n        {\n            \"name\": \"::-ms-clear\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the clear button of a text input control\"\n        },\n        {\n            \"name\": \"::-ms-expand\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the drop-down button of a select control.\"\n        },\n        {\n            \"name\": \"::-ms-fill\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the bar portion of a progress bar.\"\n        },\n        {\n            \"name\": \"::-ms-fill-lower\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the portion of the slider track from its smallest value up to the value currently selected by the thumb. In a left-to-right layout, this is the portion of the slider track to the left of the thumb.\"\n        },\n        {\n            \"name\": \"::-ms-fill-upper\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the portion of the slider track from the value currently selected by the thumb up to the slider's largest value. In a left-to-right layout, this is the portion of the slider track to the right of the thumb.\"\n        },\n        {\n            \"name\": \"::-ms-reveal\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the password reveal button of an input type=password control.\"\n        },\n        {\n            \"name\": \"::-ms-thumb\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the portion of range input control (also known as a slider control) that the user drags.\"\n        },\n        {\n            \"name\": \"::-ms-ticks-after\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the tick marks of a slider that begin just after the thumb and continue up to the slider's largest value. In a left-to-right layout, these are the ticks to the right of the thumb.\"\n        },\n        {\n            \"name\": \"::-ms-ticks-before\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the tick marks of a slider that represent its smallest values up to the value currently selected by the thumb. In a left-to-right layout, these are the ticks to the left of the thumb.\"\n        },\n        {\n            \"name\": \"::-ms-tooltip\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the tooltip of a slider (input type=range).\"\n        },\n        {\n            \"name\": \"::-ms-track\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the track of a slider.\"\n        },\n        {\n            \"name\": \"::-ms-value\",\n            \"browsers\": [\n                \"E\",\n                \"IE10\"\n            ],\n            \"description\": \"Represents the content of a text or password input control, or a select control.\"\n        },\n        {\n            \"name\": \"::selection\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::selection\"\n                }\n            ],\n            \"description\": \"Represents the portion of a document that has been highlighted by the user.\"\n        },\n        {\n            \"name\": \"::shadow\",\n            \"browsers\": [\n                \"C35\",\n                \"O22\"\n            ],\n            \"description\": \"Matches the shadow root if an element has a shadow tree.\"\n        },\n        {\n            \"name\": \"::-webkit-file-upload-button\",\n            \"browsers\": [\n                \"E79\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-file-upload-button\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-inner-spin-button\",\n            \"browsers\": [\n                \"E79\",\n                \"S5\",\n                \"C6\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-inner-spin-button\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-input-placeholder\",\n            \"browsers\": [\n                \"C\",\n                \"S4\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-keygen-select\",\n            \"browsers\": [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-meter-bar\",\n            \"browsers\": [\n                \"E79\",\n                \"S5.1\",\n                \"C12\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-meter-bar\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-meter-even-less-good-value\",\n            \"browsers\": [\n                \"E79\",\n                \"S5.1\",\n                \"C12\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-meter-even-less-good-value\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-meter-optimum-value\",\n            \"browsers\": [\n                \"E79\",\n                \"S5.1\",\n                \"C12\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-meter-optimum-value\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-meter-suboptimum-value\",\n            \"browsers\": [\n                \"E79\",\n                \"S5.1\",\n                \"C12\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-meter-suboptimum-value\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-outer-spin-button\",\n            \"browsers\": [\n                \"S5\",\n                \"C6\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-outer-spin-button\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-progress-bar\",\n            \"browsers\": [\n                \"E79\",\n                \"S6.1\",\n                \"C25\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-progress-bar\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-progress-inner-element\",\n            \"browsers\": [\n                \"E79\",\n                \"S6.1\",\n                \"C23\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-progress-inner-element\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-progress-value\",\n            \"browsers\": [\n                \"E79\",\n                \"S6.1\",\n                \"C25\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-progress-value\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-resizer\",\n            \"browsers\": [\n                \"E79\",\n                \"S4\",\n                \"C2\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-scrollbar\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-scrollbar\",\n            \"browsers\": [\n                \"E79\",\n                \"S4\",\n                \"C2\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-scrollbar\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-scrollbar-button\",\n            \"browsers\": [\n                \"E79\",\n                \"S4\",\n                \"C2\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-scrollbar\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-scrollbar-corner\",\n            \"browsers\": [\n                \"E79\",\n                \"S4\",\n                \"C2\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-scrollbar\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-scrollbar-thumb\",\n            \"browsers\": [\n                \"E79\",\n                \"S4\",\n                \"C2\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-scrollbar\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-scrollbar-track\",\n            \"browsers\": [\n                \"E79\",\n                \"S4\",\n                \"C2\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-scrollbar\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-scrollbar-track-piece\",\n            \"browsers\": [\n                \"E79\",\n                \"S4\",\n                \"C2\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-scrollbar\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-search-cancel-button\",\n            \"browsers\": [\n                \"E79\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-search-cancel-button\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-search-decoration\",\n            \"browsers\": [\n                \"C\",\n                \"S4\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-search-results-button\",\n            \"browsers\": [\n                \"E79\",\n                \"S3\",\n                \"C1\",\n                \"O15\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-webkit-search-results-button\"\n                }\n            ]\n        },\n        {\n            \"name\": \"::-webkit-search-results-decoration\",\n            \"browsers\": [\n                \"C\",\n                \"S4\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-slider-runnable-track\",\n            \"browsers\": [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-slider-thumb\",\n            \"browsers\": [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-textfield-decoration-container\",\n            \"browsers\": [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-validation-bubble\",\n            \"browsers\": [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-validation-bubble-arrow\",\n            \"browsers\": [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-validation-bubble-arrow-clipper\",\n            \"browsers\": [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-validation-bubble-heading\",\n            \"browsers\": [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-validation-bubble-message\",\n            \"browsers\": [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::-webkit-validation-bubble-text-block\",\n            \"browsers\": [\n                \"C\",\n                \"O\",\n                \"S6\"\n            ]\n        },\n        {\n            \"name\": \"::-moz-range-progress\",\n            \"status\": \"nonstandard\",\n            \"browsers\": [\n                \"FF22\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-moz-range-progress\"\n                }\n            ],\n            \"description\": \"The ::-moz-range-progress CSS pseudo-element is a Mozilla extension that represents the lower portion of the track (i.e., groove) in which the indicator slides in an <input> of type=\\\"range\\\". This portion corresponds to values lower than the value currently selected by the thumb (i.e., virtual knob).\"\n        },\n        {\n            \"name\": \"::-moz-range-thumb\",\n            \"status\": \"nonstandard\",\n            \"browsers\": [\n                \"FF21\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-moz-range-thumb\"\n                }\n            ],\n            \"description\": \"The ::-moz-range-thumb CSS pseudo-element is a Mozilla extension that represents the thumb (i.e., virtual knob) of an <input> of type=\\\"range\\\". The user can move the thumb along the input's track to alter its numerical value.\"\n        },\n        {\n            \"name\": \"::-moz-range-track\",\n            \"status\": \"nonstandard\",\n            \"browsers\": [\n                \"FF21\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::-moz-range-track\"\n                }\n            ],\n            \"description\": \"The ::-moz-range-track CSS pseudo-element is a Mozilla extension that represents the track (i.e., groove) in which the indicator slides in an <input> of type=\\\"range\\\".\"\n        },\n        {\n            \"name\": \"::-webkit-progress-inner-value\",\n            \"status\": \"nonstandard\",\n            \"description\": \"The ::-webkit-progress-value CSS pseudo-element represents the filled-in portion of the bar of a <progress> element. It is a child of the ::-webkit-progress-bar pseudo-element.\\n\\nIn order to let ::-webkit-progress-value take effect, -webkit-appearance needs to be set to none on the <progress> element.\"\n        },\n        {\n            \"name\": \"::grammar-error\",\n            \"status\": \"experimental\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::grammar-error\"\n                }\n            ],\n            \"description\": \"The ::grammar-error CSS pseudo-element represents a text segment which the user agent has flagged as grammatically incorrect.\"\n        },\n        {\n            \"name\": \"::marker\",\n            \"browsers\": [\n                \"E80\",\n                \"FF68\",\n                \"S11.1\",\n                \"C80\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::marker\"\n                }\n            ],\n            \"description\": \"The ::marker CSS pseudo-element selects the marker box of a list item, which typically contains a bullet or number. It works on any element or pseudo-element set to display: list-item, such as the <li> and <summary> elements.\"\n        },\n        {\n            \"name\": \"::part\",\n            \"status\": \"experimental\",\n            \"browsers\": [\n                \"E79\",\n                \"FF72\",\n                \"S13.1\",\n                \"C73\",\n                \"O60\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::part\"\n                }\n            ],\n            \"description\": \"The ::part CSS pseudo-element represents any element within a shadow tree that has a matching part attribute.\"\n        },\n        {\n            \"name\": \"::placeholder\",\n            \"browsers\": [\n                \"E12\",\n                \"FF51\",\n                \"S10.1\",\n                \"C57\",\n                \"O44\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::placeholder\"\n                }\n            ],\n            \"description\": \"The ::placeholder CSS pseudo-element represents the placeholder text of a form element.\"\n        },\n        {\n            \"name\": \"::slotted\",\n            \"browsers\": [\n                \"E79\",\n                \"FF63\",\n                \"S10\",\n                \"C50\",\n                \"O37\"\n            ],\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::slotted\"\n                }\n            ],\n            \"description\": \"The :slotted() CSS pseudo-element represents any element that has been placed into a slot inside an HTML template.\"\n        },\n        {\n            \"name\": \"::spelling-error\",\n            \"status\": \"experimental\",\n            \"references\": [\n                {\n                    \"name\": \"MDN Reference\",\n                    \"url\": \"https://developer.mozilla.org/docs/Web/CSS/::spelling-error\"\n                }\n            ],\n            \"description\": \"The ::spelling-error CSS pseudo-element represents a text segment which the user agent has flagged as incorrectly spelled.\"\n        }\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/webCustomData.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/builtinData.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"positionKeywords\", function() { return positionKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"repeatStyleKeywords\", function() { return repeatStyleKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lineStyleKeywords\", function() { return lineStyleKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lineWidthKeywords\", function() { return lineWidthKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"boxKeywords\", function() { return boxKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"geometryBoxKeywords\", function() { return geometryBoxKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cssWideKeywords\", function() { return cssWideKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"imageFunctions\", function() { return imageFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transitionTimingFunctions\", function() { return transitionTimingFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"basicShapeFunctions\", function() { return basicShapeFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"units\", function() { return units; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"html5Tags\", function() { return html5Tags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"svgElements\", function() { return svgElements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pageBoxDirectives\", function() { return pageBoxDirectives; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar positionKeywords = {\n    'bottom': 'Computes to ‘100%’ for the vertical position if one or two values are given, otherwise specifies the bottom edge as the origin for the next offset.',\n    'center': 'Computes to ‘50%’ (‘left 50%’) for the horizontal position if the horizontal position is not otherwise specified, or ‘50%’ (‘top 50%’) for the vertical position if it is.',\n    'left': 'Computes to ‘0%’ for the horizontal position if one or two values are given, otherwise specifies the left edge as the origin for the next offset.',\n    'right': 'Computes to ‘100%’ for the horizontal position if one or two values are given, otherwise specifies the right edge as the origin for the next offset.',\n    'top': 'Computes to ‘0%’ for the vertical position if one or two values are given, otherwise specifies the top edge as the origin for the next offset.'\n};\nvar repeatStyleKeywords = {\n    'no-repeat': 'Placed once and not repeated in this direction.',\n    'repeat': 'Repeated in this direction as often as needed to cover the background painting area.',\n    'repeat-x': 'Computes to ‘repeat no-repeat’.',\n    'repeat-y': 'Computes to ‘no-repeat repeat’.',\n    'round': 'Repeated as often as will fit within the background positioning area. If it doesn’t fit a whole number of times, it is rescaled so that it does.',\n    'space': 'Repeated as often as will fit within the background positioning area without being clipped and then the images are spaced out to fill the area.'\n};\nvar lineStyleKeywords = {\n    'dashed': 'A series of square-ended dashes.',\n    'dotted': 'A series of round dots.',\n    'double': 'Two parallel solid lines with some space between them.',\n    'groove': 'Looks as if it were carved in the canvas.',\n    'hidden': 'Same as ‘none’, but has different behavior in the border conflict resolution rules for border-collapsed tables.',\n    'inset': 'Looks as if the content on the inside of the border is sunken into the canvas.',\n    'none': 'No border. Color and width are ignored.',\n    'outset': 'Looks as if the content on the inside of the border is coming out of the canvas.',\n    'ridge': 'Looks as if it were coming out of the canvas.',\n    'solid': 'A single line segment.'\n};\nvar lineWidthKeywords = ['medium', 'thick', 'thin'];\nvar boxKeywords = {\n    'border-box': 'The background is painted within (clipped to) the border box.',\n    'content-box': 'The background is painted within (clipped to) the content box.',\n    'padding-box': 'The background is painted within (clipped to) the padding box.'\n};\nvar geometryBoxKeywords = {\n    'margin-box': 'Uses the margin box as reference box.',\n    'fill-box': 'Uses the object bounding box as reference box.',\n    'stroke-box': 'Uses the stroke bounding box as reference box.',\n    'view-box': 'Uses the nearest SVG viewport as reference box.'\n};\nvar cssWideKeywords = {\n    'initial': 'Represents the value specified as the property’s initial value.',\n    'inherit': 'Represents the computed value of the property on the element’s parent.',\n    'unset': 'Acts as either `inherit` or `initial`, depending on whether the property is inherited or not.'\n};\nvar imageFunctions = {\n    'url()': 'Reference an image file by URL',\n    'image()': 'Provide image fallbacks and annotations.',\n    '-webkit-image-set()': 'Provide multiple resolutions. Remember to use unprefixed image-set() in addition.',\n    'image-set()': 'Provide multiple resolutions of an image and const the UA decide which is most appropriate in a given situation.',\n    '-moz-element()': 'Use an element in the document as an image. Remember to use unprefixed element() in addition.',\n    'element()': 'Use an element in the document as an image.',\n    'cross-fade()': 'Indicates the two images to be combined and how far along in the transition the combination is.',\n    '-webkit-gradient()': 'Deprecated. Use modern linear-gradient() or radial-gradient() instead.',\n    '-webkit-linear-gradient()': 'Linear gradient. Remember to use unprefixed version in addition.',\n    '-moz-linear-gradient()': 'Linear gradient. Remember to use unprefixed version in addition.',\n    '-o-linear-gradient()': 'Linear gradient. Remember to use unprefixed version in addition.',\n    'linear-gradient()': 'A linear gradient is created by specifying a straight gradient line, and then several colors placed along that line.',\n    '-webkit-repeating-linear-gradient()': 'Repeating Linear gradient. Remember to use unprefixed version in addition.',\n    '-moz-repeating-linear-gradient()': 'Repeating Linear gradient. Remember to use unprefixed version in addition.',\n    '-o-repeating-linear-gradient()': 'Repeating Linear gradient. Remember to use unprefixed version in addition.',\n    'repeating-linear-gradient()': 'Same as linear-gradient, except the color-stops are repeated infinitely in both directions, with their positions shifted by multiples of the difference between the last specified color-stop’s position and the first specified color-stop’s position.',\n    '-webkit-radial-gradient()': 'Radial gradient. Remember to use unprefixed version in addition.',\n    '-moz-radial-gradient()': 'Radial gradient. Remember to use unprefixed version in addition.',\n    'radial-gradient()': 'Colors emerge from a single point and smoothly spread outward in a circular or elliptical shape.',\n    '-webkit-repeating-radial-gradient()': 'Repeating radial gradient. Remember to use unprefixed version in addition.',\n    '-moz-repeating-radial-gradient()': 'Repeating radial gradient. Remember to use unprefixed version in addition.',\n    'repeating-radial-gradient()': 'Same as radial-gradient, except the color-stops are repeated infinitely in both directions, with their positions shifted by multiples of the difference between the last specified color-stop’s position and the first specified color-stop’s position.'\n};\nvar transitionTimingFunctions = {\n    'ease': 'Equivalent to cubic-bezier(0.25, 0.1, 0.25, 1.0).',\n    'ease-in': 'Equivalent to cubic-bezier(0.42, 0, 1.0, 1.0).',\n    'ease-in-out': 'Equivalent to cubic-bezier(0.42, 0, 0.58, 1.0).',\n    'ease-out': 'Equivalent to cubic-bezier(0, 0, 0.58, 1.0).',\n    'linear': 'Equivalent to cubic-bezier(0.0, 0.0, 1.0, 1.0).',\n    'step-end': 'Equivalent to steps(1, end).',\n    'step-start': 'Equivalent to steps(1, start).',\n    'steps()': 'The first parameter specifies the number of intervals in the function. The second parameter, which is optional, is either the value “start” or “end”.',\n    'cubic-bezier()': 'Specifies a cubic-bezier curve. The four values specify points P1 and P2  of the curve as (x1, y1, x2, y2).',\n    'cubic-bezier(0.6, -0.28, 0.735, 0.045)': 'Ease-in Back. Overshoots.',\n    'cubic-bezier(0.68, -0.55, 0.265, 1.55)': 'Ease-in-out Back. Overshoots.',\n    'cubic-bezier(0.175, 0.885, 0.32, 1.275)': 'Ease-out Back. Overshoots.',\n    'cubic-bezier(0.6, 0.04, 0.98, 0.335)': 'Ease-in Circular. Based on half circle.',\n    'cubic-bezier(0.785, 0.135, 0.15, 0.86)': 'Ease-in-out Circular. Based on half circle.',\n    'cubic-bezier(0.075, 0.82, 0.165, 1)': 'Ease-out Circular. Based on half circle.',\n    'cubic-bezier(0.55, 0.055, 0.675, 0.19)': 'Ease-in Cubic. Based on power of three.',\n    'cubic-bezier(0.645, 0.045, 0.355, 1)': 'Ease-in-out Cubic. Based on power of three.',\n    'cubic-bezier(0.215, 0.610, 0.355, 1)': 'Ease-out Cubic. Based on power of three.',\n    'cubic-bezier(0.95, 0.05, 0.795, 0.035)': 'Ease-in Exponential. Based on two to the power ten.',\n    'cubic-bezier(1, 0, 0, 1)': 'Ease-in-out Exponential. Based on two to the power ten.',\n    'cubic-bezier(0.19, 1, 0.22, 1)': 'Ease-out Exponential. Based on two to the power ten.',\n    'cubic-bezier(0.47, 0, 0.745, 0.715)': 'Ease-in Sine.',\n    'cubic-bezier(0.445, 0.05, 0.55, 0.95)': 'Ease-in-out Sine.',\n    'cubic-bezier(0.39, 0.575, 0.565, 1)': 'Ease-out Sine.',\n    'cubic-bezier(0.55, 0.085, 0.68, 0.53)': 'Ease-in Quadratic. Based on power of two.',\n    'cubic-bezier(0.455, 0.03, 0.515, 0.955)': 'Ease-in-out Quadratic. Based on power of two.',\n    'cubic-bezier(0.25, 0.46, 0.45, 0.94)': 'Ease-out Quadratic. Based on power of two.',\n    'cubic-bezier(0.895, 0.03, 0.685, 0.22)': 'Ease-in Quartic. Based on power of four.',\n    'cubic-bezier(0.77, 0, 0.175, 1)': 'Ease-in-out Quartic. Based on power of four.',\n    'cubic-bezier(0.165, 0.84, 0.44, 1)': 'Ease-out Quartic. Based on power of four.',\n    'cubic-bezier(0.755, 0.05, 0.855, 0.06)': 'Ease-in Quintic. Based on power of five.',\n    'cubic-bezier(0.86, 0, 0.07, 1)': 'Ease-in-out Quintic. Based on power of five.',\n    'cubic-bezier(0.23, 1, 0.320, 1)': 'Ease-out Quintic. Based on power of five.'\n};\nvar basicShapeFunctions = {\n    'circle()': 'Defines a circle.',\n    'ellipse()': 'Defines an ellipse.',\n    'inset()': 'Defines an inset rectangle.',\n    'polygon()': 'Defines a polygon.'\n};\nvar units = {\n    'length': ['em', 'rem', 'ex', 'px', 'cm', 'mm', 'in', 'pt', 'pc', 'ch', 'vw', 'vh', 'vmin', 'vmax'],\n    'angle': ['deg', 'rad', 'grad', 'turn'],\n    'time': ['ms', 's'],\n    'frequency': ['Hz', 'kHz'],\n    'resolution': ['dpi', 'dpcm', 'dppx'],\n    'percentage': ['%', 'fr']\n};\nvar html5Tags = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption',\n    'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer',\n    'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link',\n    'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q',\n    'rb', 'rp', 'rt', 'rtc', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td',\n    'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'const', 'video', 'wbr'];\nvar svgElements = ['circle', 'clipPath', 'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting',\n    'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology',\n    'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence', 'filter', 'foreignObject', 'g', 'hatch', 'hatchpath', 'image', 'line', 'linearGradient',\n    'marker', 'mask', 'mesh', 'meshpatch', 'meshrow', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'set', 'solidcolor', 'stop', 'svg', 'switch',\n    'symbol', 'text', 'textPath', 'tspan', 'use', 'view'];\nvar pageBoxDirectives = [\n    '@bottom-center', '@bottom-left', '@bottom-left-corner', '@bottom-right', '@bottom-right-corner',\n    '@left-bottom', '@left-middle', '@left-top', '@right-bottom', '@right-middle', '@right-top',\n    '@top-center', '@top-left', '@top-left-corner', '@top-right', '@top-right-corner'\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/builtinData.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/colors.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFunctions\", function() { return colorFunctions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colors\", function() { return colors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorKeywords\", function() { return colorKeywords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isColorConstructor\", function() { return isColorConstructor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isColorValue\", function() { return isColorValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hexDigit\", function() { return hexDigit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFromHex\", function() { return colorFromHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFrom256RGB\", function() { return colorFrom256RGB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"colorFromHSL\", function() { return colorFromHSL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hslFromColor\", function() { return hslFromColor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getColorValue\", function() { return getColorValue; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__[\"loadMessageBundle\"]();\nvar colorFunctions = [\n    { func: 'rgb($red, $green, $blue)', desc: localize('css.builtin.rgb', 'Creates a Color from red, green, and blue values.') },\n    { func: 'rgba($red, $green, $blue, $alpha)', desc: localize('css.builtin.rgba', 'Creates a Color from red, green, blue, and alpha values.') },\n    { func: 'hsl($hue, $saturation, $lightness)', desc: localize('css.builtin.hsl', 'Creates a Color from hue, saturation, and lightness values.') },\n    { func: 'hsla($hue, $saturation, $lightness, $alpha)', desc: localize('css.builtin.hsla', 'Creates a Color from hue, saturation, lightness, and alpha values.') }\n];\nvar colors = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgrey: '#a9a9a9',\n    darkgreen: '#006400',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    grey: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgrey: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370d8',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#d87093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    red: '#ff0000',\n    rebeccapurple: '#663399',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n};\nvar colorKeywords = {\n    'currentColor': 'The value of the \\'color\\' property. The computed value of the \\'currentColor\\' keyword is the computed value of the \\'color\\' property. If the \\'currentColor\\' keyword is set on the \\'color\\' property itself, it is treated as \\'color:inherit\\' at parse time.',\n    'transparent': 'Fully transparent. This keyword can be considered a shorthand for rgba(0,0,0,0) which is its computed value.',\n};\nfunction getNumericValue(node, factor) {\n    var val = node.getText();\n    var m = val.match(/^([-+]?[0-9]*\\.?[0-9]+)(%?)$/);\n    if (m) {\n        if (m[2]) {\n            factor = 100.0;\n        }\n        var result = parseFloat(m[1]) / factor;\n        if (result >= 0 && result <= 1) {\n            return result;\n        }\n    }\n    throw new Error();\n}\nfunction getAngle(node) {\n    var val = node.getText();\n    var m = val.match(/^([-+]?[0-9]*\\.?[0-9]+)(deg)?$/);\n    if (m) {\n        return parseFloat(val) % 360;\n    }\n    throw new Error();\n}\nfunction isColorConstructor(node) {\n    var name = node.getName();\n    if (!name) {\n        return false;\n    }\n    return /^(rgb|rgba|hsl|hsla)$/gi.test(name);\n}\n/**\n * Returns true if the node is a color value - either\n * defined a hex number, as rgb or rgba function, or\n * as color name.\n */\nfunction isColorValue(node) {\n    if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].HexColorValue) {\n        return true;\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Function) {\n        return isColorConstructor(node);\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Identifier) {\n        if (node.parent && node.parent.type !== _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Term) {\n            return false;\n        }\n        var candidateColor = node.getText().toLowerCase();\n        if (candidateColor === 'none') {\n            return false;\n        }\n        if (colors[candidateColor]) {\n            return true;\n        }\n    }\n    return false;\n}\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar F = 70;\nvar a = 97;\nvar f = 102;\nfunction hexDigit(charCode) {\n    if (charCode < Digit0) {\n        return 0;\n    }\n    if (charCode <= Digit9) {\n        return charCode - Digit0;\n    }\n    if (charCode < a) {\n        charCode += (a - A);\n    }\n    if (charCode >= a && charCode <= f) {\n        return charCode - a + 10;\n    }\n    return 0;\n}\nfunction colorFromHex(text) {\n    if (text[0] !== '#') {\n        return null;\n    }\n    switch (text.length) {\n        case 4:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: 1\n            };\n        case 5:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(4)) * 0x11) / 255.0,\n            };\n        case 7:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: 1\n            };\n        case 9:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(7)) * 0x10 + hexDigit(text.charCodeAt(8))) / 255.0\n            };\n    }\n    return null;\n}\nfunction colorFrom256RGB(red, green, blue, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    return {\n        red: red / 255.0,\n        green: green / 255.0,\n        blue: blue / 255.0,\n        alpha: alpha\n    };\n}\nfunction colorFromHSL(hue, sat, light, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    hue = hue / 60.0;\n    if (sat === 0) {\n        return { red: light, green: light, blue: light, alpha: alpha };\n    }\n    else {\n        var hueToRgb = function (t1, t2, hue) {\n            while (hue < 0) {\n                hue += 6;\n            }\n            while (hue >= 6) {\n                hue -= 6;\n            }\n            if (hue < 1) {\n                return (t2 - t1) * hue + t1;\n            }\n            if (hue < 3) {\n                return t2;\n            }\n            if (hue < 4) {\n                return (t2 - t1) * (4 - hue) + t1;\n            }\n            return t1;\n        };\n        var t2 = light <= 0.5 ? (light * (sat + 1)) : (light + sat - (light * sat));\n        var t1 = light * 2 - t2;\n        return { red: hueToRgb(t1, t2, hue + 2), green: hueToRgb(t1, t2, hue), blue: hueToRgb(t1, t2, hue - 2), alpha: alpha };\n    }\n}\nfunction hslFromColor(rgba) {\n    var r = rgba.red;\n    var g = rgba.green;\n    var b = rgba.blue;\n    var a = rgba.alpha;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (min + max) / 2;\n    var chroma = max - min;\n    if (chroma > 0) {\n        s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n        switch (max) {\n            case r:\n                h = (g - b) / chroma + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / chroma + 2;\n                break;\n            case b:\n                h = (r - g) / chroma + 4;\n                break;\n        }\n        h *= 60;\n        h = Math.round(h);\n    }\n    return { h: h, s: s, l: l, a: a };\n}\nfunction getColorValue(node) {\n    if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].HexColorValue) {\n        var text = node.getText();\n        return colorFromHex(text);\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Function) {\n        var functionNode = node;\n        var name = functionNode.getName();\n        var colorValues = functionNode.getArguments().getChildren();\n        if (!name || colorValues.length < 3 || colorValues.length > 4) {\n            return null;\n        }\n        try {\n            var alpha = colorValues.length === 4 ? getNumericValue(colorValues[3], 1) : 1;\n            if (name === 'rgb' || name === 'rgba') {\n                return {\n                    red: getNumericValue(colorValues[0], 255.0),\n                    green: getNumericValue(colorValues[1], 255.0),\n                    blue: getNumericValue(colorValues[2], 255.0),\n                    alpha: alpha\n                };\n            }\n            else if (name === 'hsl' || name === 'hsla') {\n                var h = getAngle(colorValues[0]);\n                var s = getNumericValue(colorValues[1], 100.0);\n                var l = getNumericValue(colorValues[2], 100.0);\n                return colorFromHSL(h, s, l, alpha);\n            }\n        }\n        catch (e) {\n            // parse error on numeric value\n            return null;\n        }\n    }\n    else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Identifier) {\n        if (node.parent && node.parent.type !== _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Term) {\n            return null;\n        }\n        var term = node.parent;\n        if (term && term.parent && term.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].BinaryExpression) {\n            var expression = term.parent;\n            if (expression.parent && expression.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ListEntry && expression.parent.key === expression) {\n                return null;\n            }\n        }\n        var candidateColor = node.getText().toLowerCase();\n        if (candidateColor === 'none') {\n            return null;\n        }\n        var colorHex = colors[candidateColor];\n        if (colorHex) {\n            return colorFromHex(colorHex);\n        }\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/colors.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataManager.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSDataManager\", function() { return CSSDataManager; });\n/* harmony import */ var _utils_objects_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/objects.js\");\n/* harmony import */ var _data_webCustomData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/data/webCustomData.js\");\n/* harmony import */ var _dataProvider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataProvider.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nvar CSSDataManager = /** @class */ (function () {\n    function CSSDataManager(options) {\n        this.dataProviders = [];\n        this._propertySet = {};\n        this._atDirectiveSet = {};\n        this._pseudoClassSet = {};\n        this._pseudoElementSet = {};\n        this._properties = [];\n        this._atDirectives = [];\n        this._pseudoClasses = [];\n        this._pseudoElements = [];\n        this.setDataProviders((options === null || options === void 0 ? void 0 : options.useDefaultDataProvider) !== false, (options === null || options === void 0 ? void 0 : options.customDataProviders) || []);\n    }\n    CSSDataManager.prototype.setDataProviders = function (builtIn, providers) {\n        var _a;\n        this.dataProviders = [];\n        if (builtIn) {\n            this.dataProviders.push(new _dataProvider_js__WEBPACK_IMPORTED_MODULE_2__[\"CSSDataProvider\"](_data_webCustomData_js__WEBPACK_IMPORTED_MODULE_1__[\"cssData\"]));\n        }\n        (_a = this.dataProviders).push.apply(_a, providers);\n        this.collectData();\n    };\n    /**\n     * Collect all data  & handle duplicates\n     */\n    CSSDataManager.prototype.collectData = function () {\n        var _this = this;\n        this._propertySet = {};\n        this._atDirectiveSet = {};\n        this._pseudoClassSet = {};\n        this._pseudoElementSet = {};\n        this.dataProviders.forEach(function (provider) {\n            provider.provideProperties().forEach(function (p) {\n                if (!_this._propertySet[p.name]) {\n                    _this._propertySet[p.name] = p;\n                }\n            });\n            provider.provideAtDirectives().forEach(function (p) {\n                if (!_this._atDirectiveSet[p.name]) {\n                    _this._atDirectiveSet[p.name] = p;\n                }\n            });\n            provider.providePseudoClasses().forEach(function (p) {\n                if (!_this._pseudoClassSet[p.name]) {\n                    _this._pseudoClassSet[p.name] = p;\n                }\n            });\n            provider.providePseudoElements().forEach(function (p) {\n                if (!_this._pseudoElementSet[p.name]) {\n                    _this._pseudoElementSet[p.name] = p;\n                }\n            });\n        });\n        this._properties = _utils_objects_js__WEBPACK_IMPORTED_MODULE_0__[\"values\"](this._propertySet);\n        this._atDirectives = _utils_objects_js__WEBPACK_IMPORTED_MODULE_0__[\"values\"](this._atDirectiveSet);\n        this._pseudoClasses = _utils_objects_js__WEBPACK_IMPORTED_MODULE_0__[\"values\"](this._pseudoClassSet);\n        this._pseudoElements = _utils_objects_js__WEBPACK_IMPORTED_MODULE_0__[\"values\"](this._pseudoElementSet);\n    };\n    CSSDataManager.prototype.getProperty = function (name) { return this._propertySet[name]; };\n    CSSDataManager.prototype.getAtDirective = function (name) { return this._atDirectiveSet[name]; };\n    CSSDataManager.prototype.getPseudoClass = function (name) { return this._pseudoClassSet[name]; };\n    CSSDataManager.prototype.getPseudoElement = function (name) { return this._pseudoElementSet[name]; };\n    CSSDataManager.prototype.getProperties = function () {\n        return this._properties;\n    };\n    CSSDataManager.prototype.getAtDirectives = function () {\n        return this._atDirectives;\n    };\n    CSSDataManager.prototype.getPseudoClasses = function () {\n        return this._pseudoClasses;\n    };\n    CSSDataManager.prototype.getPseudoElements = function () {\n        return this._pseudoElements;\n    };\n    CSSDataManager.prototype.isKnownProperty = function (name) {\n        return name.toLowerCase() in this._propertySet;\n    };\n    CSSDataManager.prototype.isStandardProperty = function (name) {\n        return this.isKnownProperty(name) &&\n            (!this._propertySet[name.toLowerCase()].status || this._propertySet[name.toLowerCase()].status === 'standard');\n    };\n    return CSSDataManager;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZGF0YU1hbmFnZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZGF0YU1hbmFnZXIuanM/Y2Q0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIG9iamVjdHMgZnJvbSAnLi4vdXRpbHMvb2JqZWN0cy5qcyc7XG5pbXBvcnQgeyBjc3NEYXRhIH0gZnJvbSAnLi4vZGF0YS93ZWJDdXN0b21EYXRhLmpzJztcbmltcG9ydCB7IENTU0RhdGFQcm92aWRlciB9IGZyb20gJy4vZGF0YVByb3ZpZGVyLmpzJztcbnZhciBDU1NEYXRhTWFuYWdlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDU1NEYXRhTWFuYWdlcihvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuZGF0YVByb3ZpZGVycyA9IFtdO1xuICAgICAgICB0aGlzLl9wcm9wZXJ0eVNldCA9IHt9O1xuICAgICAgICB0aGlzLl9hdERpcmVjdGl2ZVNldCA9IHt9O1xuICAgICAgICB0aGlzLl9wc2V1ZG9DbGFzc1NldCA9IHt9O1xuICAgICAgICB0aGlzLl9wc2V1ZG9FbGVtZW50U2V0ID0ge307XG4gICAgICAgIHRoaXMuX3Byb3BlcnRpZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fYXREaXJlY3RpdmVzID0gW107XG4gICAgICAgIHRoaXMuX3BzZXVkb0NsYXNzZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fcHNldWRvRWxlbWVudHMgPSBbXTtcbiAgICAgICAgdGhpcy5zZXREYXRhUHJvdmlkZXJzKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudXNlRGVmYXVsdERhdGFQcm92aWRlcikgIT09IGZhbHNlLCAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmN1c3RvbURhdGFQcm92aWRlcnMpIHx8IFtdKTtcbiAgICB9XG4gICAgQ1NTRGF0YU1hbmFnZXIucHJvdG90eXBlLnNldERhdGFQcm92aWRlcnMgPSBmdW5jdGlvbiAoYnVpbHRJbiwgcHJvdmlkZXJzKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXJzID0gW107XG4gICAgICAgIGlmIChidWlsdEluKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGFQcm92aWRlcnMucHVzaChuZXcgQ1NTRGF0YVByb3ZpZGVyKGNzc0RhdGEpKTtcbiAgICAgICAgfVxuICAgICAgICAoX2EgPSB0aGlzLmRhdGFQcm92aWRlcnMpLnB1c2guYXBwbHkoX2EsIHByb3ZpZGVycyk7XG4gICAgICAgIHRoaXMuY29sbGVjdERhdGEoKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIENvbGxlY3QgYWxsIGRhdGEgICYgaGFuZGxlIGR1cGxpY2F0ZXNcbiAgICAgKi9cbiAgICBDU1NEYXRhTWFuYWdlci5wcm90b3R5cGUuY29sbGVjdERhdGEgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuX3Byb3BlcnR5U2V0ID0ge307XG4gICAgICAgIHRoaXMuX2F0RGlyZWN0aXZlU2V0ID0ge307XG4gICAgICAgIHRoaXMuX3BzZXVkb0NsYXNzU2V0ID0ge307XG4gICAgICAgIHRoaXMuX3BzZXVkb0VsZW1lbnRTZXQgPSB7fTtcbiAgICAgICAgdGhpcy5kYXRhUHJvdmlkZXJzLmZvckVhY2goZnVuY3Rpb24gKHByb3ZpZGVyKSB7XG4gICAgICAgICAgICBwcm92aWRlci5wcm92aWRlUHJvcGVydGllcygpLmZvckVhY2goZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgICAgICBpZiAoIV90aGlzLl9wcm9wZXJ0eVNldFtwLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLl9wcm9wZXJ0eVNldFtwLm5hbWVdID0gcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHByb3ZpZGVyLnByb3ZpZGVBdERpcmVjdGl2ZXMoKS5mb3JFYWNoKGZ1bmN0aW9uIChwKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFfdGhpcy5fYXREaXJlY3RpdmVTZXRbcC5uYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5fYXREaXJlY3RpdmVTZXRbcC5uYW1lXSA9IHA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBwcm92aWRlci5wcm92aWRlUHNldWRvQ2xhc3NlcygpLmZvckVhY2goZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgICAgICBpZiAoIV90aGlzLl9wc2V1ZG9DbGFzc1NldFtwLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLl9wc2V1ZG9DbGFzc1NldFtwLm5hbWVdID0gcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHByb3ZpZGVyLnByb3ZpZGVQc2V1ZG9FbGVtZW50cygpLmZvckVhY2goZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgICAgICBpZiAoIV90aGlzLl9wc2V1ZG9FbGVtZW50U2V0W3AubmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuX3BzZXVkb0VsZW1lbnRTZXRbcC5uYW1lXSA9IHA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9wcm9wZXJ0aWVzID0gb2JqZWN0cy52YWx1ZXModGhpcy5fcHJvcGVydHlTZXQpO1xuICAgICAgICB0aGlzLl9hdERpcmVjdGl2ZXMgPSBvYmplY3RzLnZhbHVlcyh0aGlzLl9hdERpcmVjdGl2ZVNldCk7XG4gICAgICAgIHRoaXMuX3BzZXVkb0NsYXNzZXMgPSBvYmplY3RzLnZhbHVlcyh0aGlzLl9wc2V1ZG9DbGFzc1NldCk7XG4gICAgICAgIHRoaXMuX3BzZXVkb0VsZW1lbnRzID0gb2JqZWN0cy52YWx1ZXModGhpcy5fcHNldWRvRWxlbWVudFNldCk7XG4gICAgfTtcbiAgICBDU1NEYXRhTWFuYWdlci5wcm90b3R5cGUuZ2V0UHJvcGVydHkgPSBmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gdGhpcy5fcHJvcGVydHlTZXRbbmFtZV07IH07XG4gICAgQ1NTRGF0YU1hbmFnZXIucHJvdG90eXBlLmdldEF0RGlyZWN0aXZlID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIHRoaXMuX2F0RGlyZWN0aXZlU2V0W25hbWVdOyB9O1xuICAgIENTU0RhdGFNYW5hZ2VyLnByb3RvdHlwZS5nZXRQc2V1ZG9DbGFzcyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiB0aGlzLl9wc2V1ZG9DbGFzc1NldFtuYW1lXTsgfTtcbiAgICBDU1NEYXRhTWFuYWdlci5wcm90b3R5cGUuZ2V0UHNldWRvRWxlbWVudCA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiB0aGlzLl9wc2V1ZG9FbGVtZW50U2V0W25hbWVdOyB9O1xuICAgIENTU0RhdGFNYW5hZ2VyLnByb3RvdHlwZS5nZXRQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvcGVydGllcztcbiAgICB9O1xuICAgIENTU0RhdGFNYW5hZ2VyLnByb3RvdHlwZS5nZXRBdERpcmVjdGl2ZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hdERpcmVjdGl2ZXM7XG4gICAgfTtcbiAgICBDU1NEYXRhTWFuYWdlci5wcm90b3R5cGUuZ2V0UHNldWRvQ2xhc3NlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BzZXVkb0NsYXNzZXM7XG4gICAgfTtcbiAgICBDU1NEYXRhTWFuYWdlci5wcm90b3R5cGUuZ2V0UHNldWRvRWxlbWVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wc2V1ZG9FbGVtZW50cztcbiAgICB9O1xuICAgIENTU0RhdGFNYW5hZ2VyLnByb3RvdHlwZS5pc0tub3duUHJvcGVydHkgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICByZXR1cm4gbmFtZS50b0xvd2VyQ2FzZSgpIGluIHRoaXMuX3Byb3BlcnR5U2V0O1xuICAgIH07XG4gICAgQ1NTRGF0YU1hbmFnZXIucHJvdG90eXBlLmlzU3RhbmRhcmRQcm9wZXJ0eSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzS25vd25Qcm9wZXJ0eShuYW1lKSAmJlxuICAgICAgICAgICAgKCF0aGlzLl9wcm9wZXJ0eVNldFtuYW1lLnRvTG93ZXJDYXNlKCldLnN0YXR1cyB8fCB0aGlzLl9wcm9wZXJ0eVNldFtuYW1lLnRvTG93ZXJDYXNlKCldLnN0YXR1cyA9PT0gJ3N0YW5kYXJkJyk7XG4gICAgfTtcbiAgICByZXR1cm4gQ1NTRGF0YU1hbmFnZXI7XG59KCkpO1xuZXhwb3J0IHsgQ1NTRGF0YU1hbmFnZXIgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataManager.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataProvider.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSDataProvider\", function() { return CSSDataProvider; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar CSSDataProvider = /** @class */ (function () {\n    /**\n     * Currently, unversioned data uses the V1 implementation\n     * In the future when the provider handles multiple versions of HTML custom data,\n     * use the latest implementation for unversioned data\n     */\n    function CSSDataProvider(data) {\n        this._properties = [];\n        this._atDirectives = [];\n        this._pseudoClasses = [];\n        this._pseudoElements = [];\n        this.addData(data);\n    }\n    CSSDataProvider.prototype.provideProperties = function () {\n        return this._properties;\n    };\n    CSSDataProvider.prototype.provideAtDirectives = function () {\n        return this._atDirectives;\n    };\n    CSSDataProvider.prototype.providePseudoClasses = function () {\n        return this._pseudoClasses;\n    };\n    CSSDataProvider.prototype.providePseudoElements = function () {\n        return this._pseudoElements;\n    };\n    CSSDataProvider.prototype.addData = function (data) {\n        if (Array.isArray(data.properties)) {\n            for (var _i = 0, _a = data.properties; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (isPropertyData(prop)) {\n                    this._properties.push(prop);\n                }\n            }\n        }\n        if (Array.isArray(data.atDirectives)) {\n            for (var _b = 0, _c = data.atDirectives; _b < _c.length; _b++) {\n                var prop = _c[_b];\n                if (isAtDirective(prop)) {\n                    this._atDirectives.push(prop);\n                }\n            }\n        }\n        if (Array.isArray(data.pseudoClasses)) {\n            for (var _d = 0, _e = data.pseudoClasses; _d < _e.length; _d++) {\n                var prop = _e[_d];\n                if (isPseudoClassData(prop)) {\n                    this._pseudoClasses.push(prop);\n                }\n            }\n        }\n        if (Array.isArray(data.pseudoElements)) {\n            for (var _f = 0, _g = data.pseudoElements; _f < _g.length; _f++) {\n                var prop = _g[_f];\n                if (isPseudoElementData(prop)) {\n                    this._pseudoElements.push(prop);\n                }\n            }\n        }\n    };\n    return CSSDataProvider;\n}());\n\nfunction isPropertyData(d) {\n    return typeof d.name === 'string';\n}\nfunction isAtDirective(d) {\n    return typeof d.name === 'string';\n}\nfunction isPseudoClassData(d) {\n    return typeof d.name === 'string';\n}\nfunction isPseudoElementData(d) {\n    return typeof d.name === 'string';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZGF0YVByb3ZpZGVyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9sYW5ndWFnZUZhY3RzL2RhdGFQcm92aWRlci5qcz9mZWMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJ3VzZSBzdHJpY3QnO1xudmFyIENTU0RhdGFQcm92aWRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBDdXJyZW50bHksIHVudmVyc2lvbmVkIGRhdGEgdXNlcyB0aGUgVjEgaW1wbGVtZW50YXRpb25cbiAgICAgKiBJbiB0aGUgZnV0dXJlIHdoZW4gdGhlIHByb3ZpZGVyIGhhbmRsZXMgbXVsdGlwbGUgdmVyc2lvbnMgb2YgSFRNTCBjdXN0b20gZGF0YSxcbiAgICAgKiB1c2UgdGhlIGxhdGVzdCBpbXBsZW1lbnRhdGlvbiBmb3IgdW52ZXJzaW9uZWQgZGF0YVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIENTU0RhdGFQcm92aWRlcihkYXRhKSB7XG4gICAgICAgIHRoaXMuX3Byb3BlcnRpZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fYXREaXJlY3RpdmVzID0gW107XG4gICAgICAgIHRoaXMuX3BzZXVkb0NsYXNzZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fcHNldWRvRWxlbWVudHMgPSBbXTtcbiAgICAgICAgdGhpcy5hZGREYXRhKGRhdGEpO1xuICAgIH1cbiAgICBDU1NEYXRhUHJvdmlkZXIucHJvdG90eXBlLnByb3ZpZGVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvcGVydGllcztcbiAgICB9O1xuICAgIENTU0RhdGFQcm92aWRlci5wcm90b3R5cGUucHJvdmlkZUF0RGlyZWN0aXZlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2F0RGlyZWN0aXZlcztcbiAgICB9O1xuICAgIENTU0RhdGFQcm92aWRlci5wcm90b3R5cGUucHJvdmlkZVBzZXVkb0NsYXNzZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wc2V1ZG9DbGFzc2VzO1xuICAgIH07XG4gICAgQ1NTRGF0YVByb3ZpZGVyLnByb3RvdHlwZS5wcm92aWRlUHNldWRvRWxlbWVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wc2V1ZG9FbGVtZW50cztcbiAgICB9O1xuICAgIENTU0RhdGFQcm92aWRlci5wcm90b3R5cGUuYWRkRGF0YSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEucHJvcGVydGllcykpIHtcbiAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSBkYXRhLnByb3BlcnRpZXM7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHByb3AgPSBfYVtfaV07XG4gICAgICAgICAgICAgICAgaWYgKGlzUHJvcGVydHlEYXRhKHByb3ApKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3Byb3BlcnRpZXMucHVzaChwcm9wKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YS5hdERpcmVjdGl2ZXMpKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfYiA9IDAsIF9jID0gZGF0YS5hdERpcmVjdGl2ZXM7IF9iIDwgX2MubGVuZ3RoOyBfYisrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHByb3AgPSBfY1tfYl07XG4gICAgICAgICAgICAgICAgaWYgKGlzQXREaXJlY3RpdmUocHJvcCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fYXREaXJlY3RpdmVzLnB1c2gocHJvcCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGEucHNldWRvQ2xhc3NlcykpIHtcbiAgICAgICAgICAgIGZvciAodmFyIF9kID0gMCwgX2UgPSBkYXRhLnBzZXVkb0NsYXNzZXM7IF9kIDwgX2UubGVuZ3RoOyBfZCsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHByb3AgPSBfZVtfZF07XG4gICAgICAgICAgICAgICAgaWYgKGlzUHNldWRvQ2xhc3NEYXRhKHByb3ApKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3BzZXVkb0NsYXNzZXMucHVzaChwcm9wKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YS5wc2V1ZG9FbGVtZW50cykpIHtcbiAgICAgICAgICAgIGZvciAodmFyIF9mID0gMCwgX2cgPSBkYXRhLnBzZXVkb0VsZW1lbnRzOyBfZiA8IF9nLmxlbmd0aDsgX2YrKykge1xuICAgICAgICAgICAgICAgIHZhciBwcm9wID0gX2dbX2ZdO1xuICAgICAgICAgICAgICAgIGlmIChpc1BzZXVkb0VsZW1lbnREYXRhKHByb3ApKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3BzZXVkb0VsZW1lbnRzLnB1c2gocHJvcCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gQ1NTRGF0YVByb3ZpZGVyO1xufSgpKTtcbmV4cG9ydCB7IENTU0RhdGFQcm92aWRlciB9O1xuZnVuY3Rpb24gaXNQcm9wZXJ0eURhdGEoZCkge1xuICAgIHJldHVybiB0eXBlb2YgZC5uYW1lID09PSAnc3RyaW5nJztcbn1cbmZ1bmN0aW9uIGlzQXREaXJlY3RpdmUoZCkge1xuICAgIHJldHVybiB0eXBlb2YgZC5uYW1lID09PSAnc3RyaW5nJztcbn1cbmZ1bmN0aW9uIGlzUHNldWRvQ2xhc3NEYXRhKGQpIHtcbiAgICByZXR1cm4gdHlwZW9mIGQubmFtZSA9PT0gJ3N0cmluZyc7XG59XG5mdW5jdGlvbiBpc1BzZXVkb0VsZW1lbnREYXRhKGQpIHtcbiAgICByZXR1cm4gdHlwZW9mIGQubmFtZSA9PT0gJ3N0cmluZyc7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/dataProvider.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/entry.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"browserNames\", function() { return browserNames; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getEntryDescription\", function() { return getEntryDescription; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"textToMarkedString\", function() { return textToMarkedString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBrowserLabel\", function() { return getBrowserLabel; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar browserNames = {\n    E: 'Edge',\n    FF: 'Firefox',\n    S: 'Safari',\n    C: 'Chrome',\n    IE: 'IE',\n    O: 'Opera'\n};\nfunction getEntryStatus(status) {\n    switch (status) {\n        case 'experimental':\n            return '⚠️ Property is experimental. Be cautious when using it.️\\n\\n';\n        case 'nonstandard':\n            return '🚨️ Property is nonstandard. Avoid using it.\\n\\n';\n        case 'obsolete':\n            return '🚨️️️ Property is obsolete. Avoid using it.\\n\\n';\n        default:\n            return '';\n    }\n}\nfunction getEntryDescription(entry, doesSupportMarkdown) {\n    var result;\n    if (doesSupportMarkdown) {\n        result = {\n            kind: 'markdown',\n            value: getEntryMarkdownDescription(entry)\n        };\n    }\n    else {\n        result = {\n            kind: 'plaintext',\n            value: getEntryStringDescription(entry)\n        };\n    }\n    if (result.value === '') {\n        return undefined;\n    }\n    return result;\n}\nfunction textToMarkedString(text) {\n    text = text.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n}\nfunction getEntryStringDescription(entry) {\n    if (!entry.description || entry.description === '') {\n        return '';\n    }\n    if (typeof entry.description !== 'string') {\n        return entry.description.value;\n    }\n    var result = '';\n    if (entry.status) {\n        result += getEntryStatus(entry.status);\n    }\n    result += entry.description;\n    var browserLabel = getBrowserLabel(entry.browsers);\n    if (browserLabel) {\n        result += '\\n(' + browserLabel + ')';\n    }\n    if ('syntax' in entry) {\n        result += \"\\n\\nSyntax: \" + entry.syntax;\n    }\n    if (entry.references && entry.references.length > 0) {\n        result += '\\n\\n';\n        result += entry.references.map(function (r) {\n            return r.name + \": \" + r.url;\n        }).join(' | ');\n    }\n    return result;\n}\nfunction getEntryMarkdownDescription(entry) {\n    if (!entry.description || entry.description === '') {\n        return '';\n    }\n    var result = '';\n    if (entry.status) {\n        result += getEntryStatus(entry.status);\n    }\n    var description = typeof entry.description === 'string' ? entry.description : entry.description.value;\n    result += textToMarkedString(description);\n    var browserLabel = getBrowserLabel(entry.browsers);\n    if (browserLabel) {\n        result += '\\n\\n(' + textToMarkedString(browserLabel) + ')';\n    }\n    if ('syntax' in entry && entry.syntax) {\n        result += \"\\n\\nSyntax: \" + textToMarkedString(entry.syntax);\n    }\n    if (entry.references && entry.references.length > 0) {\n        result += '\\n\\n';\n        result += entry.references.map(function (r) {\n            return \"[\" + r.name + \"](\" + r.url + \")\";\n        }).join(' | ');\n    }\n    return result;\n}\n/**\n * Input is like `[\"E12\",\"FF49\",\"C47\",\"IE\",\"O\"]`\n * Output is like `Edge 12, Firefox 49, Chrome 47, IE, Opera`\n */\nfunction getBrowserLabel(browsers) {\n    if (browsers === void 0) { browsers = []; }\n    if (browsers.length === 0) {\n        return null;\n    }\n    return browsers\n        .map(function (b) {\n        var result = '';\n        var matches = b.match(/([A-Z]+)(\\d+)?/);\n        var name = matches[1];\n        var version = matches[2];\n        if (name in browserNames) {\n            result += browserNames[name];\n        }\n        if (version) {\n            result += ' ' + version;\n        }\n        return result;\n    })\n        .join(', ');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZW50cnkuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZW50cnkuanM/Zjg4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCB2YXIgYnJvd3Nlck5hbWVzID0ge1xuICAgIEU6ICdFZGdlJyxcbiAgICBGRjogJ0ZpcmVmb3gnLFxuICAgIFM6ICdTYWZhcmknLFxuICAgIEM6ICdDaHJvbWUnLFxuICAgIElFOiAnSUUnLFxuICAgIE86ICdPcGVyYSdcbn07XG5mdW5jdGlvbiBnZXRFbnRyeVN0YXR1cyhzdGF0dXMpIHtcbiAgICBzd2l0Y2ggKHN0YXR1cykge1xuICAgICAgICBjYXNlICdleHBlcmltZW50YWwnOlxuICAgICAgICAgICAgcmV0dXJuICfimqDvuI8gUHJvcGVydHkgaXMgZXhwZXJpbWVudGFsLiBCZSBjYXV0aW91cyB3aGVuIHVzaW5nIGl0Lu+4j1xcblxcbic7XG4gICAgICAgIGNhc2UgJ25vbnN0YW5kYXJkJzpcbiAgICAgICAgICAgIHJldHVybiAn8J+aqO+4jyBQcm9wZXJ0eSBpcyBub25zdGFuZGFyZC4gQXZvaWQgdXNpbmcgaXQuXFxuXFxuJztcbiAgICAgICAgY2FzZSAnb2Jzb2xldGUnOlxuICAgICAgICAgICAgcmV0dXJuICfwn5qo77iP77iP77iPIFByb3BlcnR5IGlzIG9ic29sZXRlLiBBdm9pZCB1c2luZyBpdC5cXG5cXG4nO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnRyeURlc2NyaXB0aW9uKGVudHJ5LCBkb2VzU3VwcG9ydE1hcmtkb3duKSB7XG4gICAgdmFyIHJlc3VsdDtcbiAgICBpZiAoZG9lc1N1cHBvcnRNYXJrZG93bikge1xuICAgICAgICByZXN1bHQgPSB7XG4gICAgICAgICAgICBraW5kOiAnbWFya2Rvd24nLFxuICAgICAgICAgICAgdmFsdWU6IGdldEVudHJ5TWFya2Rvd25EZXNjcmlwdGlvbihlbnRyeSlcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgICAgIGtpbmQ6ICdwbGFpbnRleHQnLFxuICAgICAgICAgICAgdmFsdWU6IGdldEVudHJ5U3RyaW5nRGVzY3JpcHRpb24oZW50cnkpXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChyZXN1bHQudmFsdWUgPT09ICcnKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnQgZnVuY3Rpb24gdGV4dFRvTWFya2VkU3RyaW5nKHRleHQpIHtcbiAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9bXFxcXGAqX3t9W1xcXSgpIytcXC0uIV0vZywgJ1xcXFwkJicpOyAvLyBlc2NhcGUgbWFya2Rvd24gc3ludGF4IHRva2VuczogaHR0cDovL2RhcmluZ2ZpcmViYWxsLm5ldC9wcm9qZWN0cy9tYXJrZG93bi9zeW50YXgjYmFja3NsYXNoXG4gICAgcmV0dXJuIHRleHQucmVwbGFjZSgvPC9nLCAnJmx0OycpLnJlcGxhY2UoLz4vZywgJyZndDsnKTtcbn1cbmZ1bmN0aW9uIGdldEVudHJ5U3RyaW5nRGVzY3JpcHRpb24oZW50cnkpIHtcbiAgICBpZiAoIWVudHJ5LmRlc2NyaXB0aW9uIHx8IGVudHJ5LmRlc2NyaXB0aW9uID09PSAnJykge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZW50cnkuZGVzY3JpcHRpb24gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBlbnRyeS5kZXNjcmlwdGlvbi52YWx1ZTtcbiAgICB9XG4gICAgdmFyIHJlc3VsdCA9ICcnO1xuICAgIGlmIChlbnRyeS5zdGF0dXMpIHtcbiAgICAgICAgcmVzdWx0ICs9IGdldEVudHJ5U3RhdHVzKGVudHJ5LnN0YXR1cyk7XG4gICAgfVxuICAgIHJlc3VsdCArPSBlbnRyeS5kZXNjcmlwdGlvbjtcbiAgICB2YXIgYnJvd3NlckxhYmVsID0gZ2V0QnJvd3NlckxhYmVsKGVudHJ5LmJyb3dzZXJzKTtcbiAgICBpZiAoYnJvd3NlckxhYmVsKSB7XG4gICAgICAgIHJlc3VsdCArPSAnXFxuKCcgKyBicm93c2VyTGFiZWwgKyAnKSc7XG4gICAgfVxuICAgIGlmICgnc3ludGF4JyBpbiBlbnRyeSkge1xuICAgICAgICByZXN1bHQgKz0gXCJcXG5cXG5TeW50YXg6IFwiICsgZW50cnkuc3ludGF4O1xuICAgIH1cbiAgICBpZiAoZW50cnkucmVmZXJlbmNlcyAmJiBlbnRyeS5yZWZlcmVuY2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmVzdWx0ICs9ICdcXG5cXG4nO1xuICAgICAgICByZXN1bHQgKz0gZW50cnkucmVmZXJlbmNlcy5tYXAoZnVuY3Rpb24gKHIpIHtcbiAgICAgICAgICAgIHJldHVybiByLm5hbWUgKyBcIjogXCIgKyByLnVybDtcbiAgICAgICAgfSkuam9pbignIHwgJyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBnZXRFbnRyeU1hcmtkb3duRGVzY3JpcHRpb24oZW50cnkpIHtcbiAgICBpZiAoIWVudHJ5LmRlc2NyaXB0aW9uIHx8IGVudHJ5LmRlc2NyaXB0aW9uID09PSAnJykge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIHZhciByZXN1bHQgPSAnJztcbiAgICBpZiAoZW50cnkuc3RhdHVzKSB7XG4gICAgICAgIHJlc3VsdCArPSBnZXRFbnRyeVN0YXR1cyhlbnRyeS5zdGF0dXMpO1xuICAgIH1cbiAgICB2YXIgZGVzY3JpcHRpb24gPSB0eXBlb2YgZW50cnkuZGVzY3JpcHRpb24gPT09ICdzdHJpbmcnID8gZW50cnkuZGVzY3JpcHRpb24gOiBlbnRyeS5kZXNjcmlwdGlvbi52YWx1ZTtcbiAgICByZXN1bHQgKz0gdGV4dFRvTWFya2VkU3RyaW5nKGRlc2NyaXB0aW9uKTtcbiAgICB2YXIgYnJvd3NlckxhYmVsID0gZ2V0QnJvd3NlckxhYmVsKGVudHJ5LmJyb3dzZXJzKTtcbiAgICBpZiAoYnJvd3NlckxhYmVsKSB7XG4gICAgICAgIHJlc3VsdCArPSAnXFxuXFxuKCcgKyB0ZXh0VG9NYXJrZWRTdHJpbmcoYnJvd3NlckxhYmVsKSArICcpJztcbiAgICB9XG4gICAgaWYgKCdzeW50YXgnIGluIGVudHJ5ICYmIGVudHJ5LnN5bnRheCkge1xuICAgICAgICByZXN1bHQgKz0gXCJcXG5cXG5TeW50YXg6IFwiICsgdGV4dFRvTWFya2VkU3RyaW5nKGVudHJ5LnN5bnRheCk7XG4gICAgfVxuICAgIGlmIChlbnRyeS5yZWZlcmVuY2VzICYmIGVudHJ5LnJlZmVyZW5jZXMubGVuZ3RoID4gMCkge1xuICAgICAgICByZXN1bHQgKz0gJ1xcblxcbic7XG4gICAgICAgIHJlc3VsdCArPSBlbnRyeS5yZWZlcmVuY2VzLm1hcChmdW5jdGlvbiAocikge1xuICAgICAgICAgICAgcmV0dXJuIFwiW1wiICsgci5uYW1lICsgXCJdKFwiICsgci51cmwgKyBcIilcIjtcbiAgICAgICAgfSkuam9pbignIHwgJyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIElucHV0IGlzIGxpa2UgYFtcIkUxMlwiLFwiRkY0OVwiLFwiQzQ3XCIsXCJJRVwiLFwiT1wiXWBcbiAqIE91dHB1dCBpcyBsaWtlIGBFZGdlIDEyLCBGaXJlZm94IDQ5LCBDaHJvbWUgNDcsIElFLCBPcGVyYWBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJyb3dzZXJMYWJlbChicm93c2Vycykge1xuICAgIGlmIChicm93c2VycyA9PT0gdm9pZCAwKSB7IGJyb3dzZXJzID0gW107IH1cbiAgICBpZiAoYnJvd3NlcnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gYnJvd3NlcnNcbiAgICAgICAgLm1hcChmdW5jdGlvbiAoYikge1xuICAgICAgICB2YXIgcmVzdWx0ID0gJyc7XG4gICAgICAgIHZhciBtYXRjaGVzID0gYi5tYXRjaCgvKFtBLVpdKykoXFxkKyk/Lyk7XG4gICAgICAgIHZhciBuYW1lID0gbWF0Y2hlc1sxXTtcbiAgICAgICAgdmFyIHZlcnNpb24gPSBtYXRjaGVzWzJdO1xuICAgICAgICBpZiAobmFtZSBpbiBicm93c2VyTmFtZXMpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBicm93c2VyTmFtZXNbbmFtZV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZlcnNpb24pIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSAnICcgKyB2ZXJzaW9uO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSlcbiAgICAgICAgLmpvaW4oJywgJyk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/entry.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _entry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/entry.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"browserNames\", function() { return _entry_js__WEBPACK_IMPORTED_MODULE_0__[\"browserNames\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getEntryDescription\", function() { return _entry_js__WEBPACK_IMPORTED_MODULE_0__[\"getEntryDescription\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"textToMarkedString\", function() { return _entry_js__WEBPACK_IMPORTED_MODULE_0__[\"textToMarkedString\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getBrowserLabel\", function() { return _entry_js__WEBPACK_IMPORTED_MODULE_0__[\"getBrowserLabel\"]; });\n\n/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/colors.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colorFunctions\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"colorFunctions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colors\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"colors\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colorKeywords\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"colorKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isColorConstructor\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"isColorConstructor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isColorValue\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"isColorValue\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hexDigit\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"hexDigit\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colorFromHex\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"colorFromHex\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colorFrom256RGB\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"colorFrom256RGB\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"colorFromHSL\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"colorFromHSL\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"hslFromColor\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"hslFromColor\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getColorValue\", function() { return _colors_js__WEBPACK_IMPORTED_MODULE_1__[\"getColorValue\"]; });\n\n/* harmony import */ var _builtinData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/builtinData.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"positionKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"positionKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"repeatStyleKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"repeatStyleKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lineStyleKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"lineStyleKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"lineWidthKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"lineWidthKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"boxKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"boxKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"geometryBoxKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"geometryBoxKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"cssWideKeywords\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"cssWideKeywords\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"imageFunctions\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"imageFunctions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"transitionTimingFunctions\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"transitionTimingFunctions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"basicShapeFunctions\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"basicShapeFunctions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"units\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"units\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"html5Tags\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"html5Tags\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"svgElements\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"svgElements\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"pageBoxDirectives\", function() { return _builtinData_js__WEBPACK_IMPORTED_MODULE_2__[\"pageBoxDirectives\"]; });\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZmFjdHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL2xhbmd1YWdlRmFjdHMvZmFjdHMuanM/ZmU5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCAqIGZyb20gJy4vZW50cnkuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb2xvcnMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9idWlsdGluRGF0YS5qcyc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSIssueType\", function() { return CSSIssueType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParseError\", function() { return ParseError; });\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__[\"loadMessageBundle\"]();\nvar CSSIssueType = /** @class */ (function () {\n    function CSSIssueType(id, message) {\n        this.id = id;\n        this.message = message;\n    }\n    return CSSIssueType;\n}());\n\nvar ParseError = {\n    NumberExpected: new CSSIssueType('css-numberexpected', localize('expected.number', \"number expected\")),\n    ConditionExpected: new CSSIssueType('css-conditionexpected', localize('expected.condt', \"condition expected\")),\n    RuleOrSelectorExpected: new CSSIssueType('css-ruleorselectorexpected', localize('expected.ruleorselector', \"at-rule or selector expected\")),\n    DotExpected: new CSSIssueType('css-dotexpected', localize('expected.dot', \"dot expected\")),\n    ColonExpected: new CSSIssueType('css-colonexpected', localize('expected.colon', \"colon expected\")),\n    SemiColonExpected: new CSSIssueType('css-semicolonexpected', localize('expected.semicolon', \"semi-colon expected\")),\n    TermExpected: new CSSIssueType('css-termexpected', localize('expected.term', \"term expected\")),\n    ExpressionExpected: new CSSIssueType('css-expressionexpected', localize('expected.expression', \"expression expected\")),\n    OperatorExpected: new CSSIssueType('css-operatorexpected', localize('expected.operator', \"operator expected\")),\n    IdentifierExpected: new CSSIssueType('css-identifierexpected', localize('expected.ident', \"identifier expected\")),\n    PercentageExpected: new CSSIssueType('css-percentageexpected', localize('expected.percentage', \"percentage expected\")),\n    URIOrStringExpected: new CSSIssueType('css-uriorstringexpected', localize('expected.uriorstring', \"uri or string expected\")),\n    URIExpected: new CSSIssueType('css-uriexpected', localize('expected.uri', \"URI expected\")),\n    VariableNameExpected: new CSSIssueType('css-varnameexpected', localize('expected.varname', \"variable name expected\")),\n    VariableValueExpected: new CSSIssueType('css-varvalueexpected', localize('expected.varvalue', \"variable value expected\")),\n    PropertyValueExpected: new CSSIssueType('css-propertyvalueexpected', localize('expected.propvalue', \"property value expected\")),\n    LeftCurlyExpected: new CSSIssueType('css-lcurlyexpected', localize('expected.lcurly', \"{ expected\")),\n    RightCurlyExpected: new CSSIssueType('css-rcurlyexpected', localize('expected.rcurly', \"} expected\")),\n    LeftSquareBracketExpected: new CSSIssueType('css-rbracketexpected', localize('expected.lsquare', \"[ expected\")),\n    RightSquareBracketExpected: new CSSIssueType('css-lbracketexpected', localize('expected.rsquare', \"] expected\")),\n    LeftParenthesisExpected: new CSSIssueType('css-lparentexpected', localize('expected.lparen', \"( expected\")),\n    RightParenthesisExpected: new CSSIssueType('css-rparentexpected', localize('expected.rparent', \") expected\")),\n    CommaExpected: new CSSIssueType('css-commaexpected', localize('expected.comma', \"comma expected\")),\n    PageDirectiveOrDeclarationExpected: new CSSIssueType('css-pagedirordeclexpected', localize('expected.pagedirordecl', \"page directive or declaraton expected\")),\n    UnknownAtRule: new CSSIssueType('css-unknownatrule', localize('unknown.atrule', \"at-rule unknown\")),\n    UnknownKeyword: new CSSIssueType('css-unknownkeyword', localize('unknown.keyword', \"unknown keyword\")),\n    SelectorExpected: new CSSIssueType('css-selectorexpected', localize('expected.selector', \"selector expected\")),\n    StringLiteralExpected: new CSSIssueType('css-stringliteralexpected', localize('expected.stringliteral', \"string literal expected\")),\n    WhitespaceExpected: new CSSIssueType('css-whitespaceexpected', localize('expected.whitespace', \"whitespace expected\")),\n    MediaQueryExpected: new CSSIssueType('css-mediaqueryexpected', localize('expected.mediaquery', \"media query expected\")),\n    IdentifierOrWildcardExpected: new CSSIssueType('css-idorwildcardexpected', localize('expected.idorwildcard', \"identifier or wildcard expected\")),\n    WildcardExpected: new CSSIssueType('css-wildcardexpected', localize('expected.wildcard', \"wildcard expected\")),\n    IdentifierOrVariableExpected: new CSSIssueType('css-idorvarexpected', localize('expected.idorvar', \"identifier or variable expected\")),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9jc3NFcnJvcnMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9jc3NFcnJvcnMuanM/M2ZmZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIG5scyBmcm9tICcuLi8uLi8uLi9maWxsZXJzL3ZzY29kZS1ubHMuanMnO1xudmFyIGxvY2FsaXplID0gbmxzLmxvYWRNZXNzYWdlQnVuZGxlKCk7XG52YXIgQ1NTSXNzdWVUeXBlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENTU0lzc3VlVHlwZShpZCwgbWVzc2FnZSkge1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgfVxuICAgIHJldHVybiBDU1NJc3N1ZVR5cGU7XG59KCkpO1xuZXhwb3J0IHsgQ1NTSXNzdWVUeXBlIH07XG5leHBvcnQgdmFyIFBhcnNlRXJyb3IgPSB7XG4gICAgTnVtYmVyRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1udW1iZXJleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5udW1iZXInLCBcIm51bWJlciBleHBlY3RlZFwiKSksXG4gICAgQ29uZGl0aW9uRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1jb25kaXRpb25leHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5jb25kdCcsIFwiY29uZGl0aW9uIGV4cGVjdGVkXCIpKSxcbiAgICBSdWxlT3JTZWxlY3RvckV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtcnVsZW9yc2VsZWN0b3JleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5ydWxlb3JzZWxlY3RvcicsIFwiYXQtcnVsZSBvciBzZWxlY3RvciBleHBlY3RlZFwiKSksXG4gICAgRG90RXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1kb3RleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5kb3QnLCBcImRvdCBleHBlY3RlZFwiKSksXG4gICAgQ29sb25FeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLWNvbG9uZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQuY29sb24nLCBcImNvbG9uIGV4cGVjdGVkXCIpKSxcbiAgICBTZW1pQ29sb25FeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXNlbWljb2xvbmV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnNlbWljb2xvbicsIFwic2VtaS1jb2xvbiBleHBlY3RlZFwiKSksXG4gICAgVGVybUV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtdGVybWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnRlcm0nLCBcInRlcm0gZXhwZWN0ZWRcIikpLFxuICAgIEV4cHJlc3Npb25FeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLWV4cHJlc3Npb25leHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5leHByZXNzaW9uJywgXCJleHByZXNzaW9uIGV4cGVjdGVkXCIpKSxcbiAgICBPcGVyYXRvckV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3Mtb3BlcmF0b3JleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5vcGVyYXRvcicsIFwib3BlcmF0b3IgZXhwZWN0ZWRcIikpLFxuICAgIElkZW50aWZpZXJFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLWlkZW50aWZpZXJleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5pZGVudCcsIFwiaWRlbnRpZmllciBleHBlY3RlZFwiKSksXG4gICAgUGVyY2VudGFnZUV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtcGVyY2VudGFnZWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnBlcmNlbnRhZ2UnLCBcInBlcmNlbnRhZ2UgZXhwZWN0ZWRcIikpLFxuICAgIFVSSU9yU3RyaW5nRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy11cmlvcnN0cmluZ2V4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnVyaW9yc3RyaW5nJywgXCJ1cmkgb3Igc3RyaW5nIGV4cGVjdGVkXCIpKSxcbiAgICBVUklFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXVyaWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnVyaScsIFwiVVJJIGV4cGVjdGVkXCIpKSxcbiAgICBWYXJpYWJsZU5hbWVFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXZhcm5hbWVleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC52YXJuYW1lJywgXCJ2YXJpYWJsZSBuYW1lIGV4cGVjdGVkXCIpKSxcbiAgICBWYXJpYWJsZVZhbHVlRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy12YXJ2YWx1ZWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnZhcnZhbHVlJywgXCJ2YXJpYWJsZSB2YWx1ZSBleHBlY3RlZFwiKSksXG4gICAgUHJvcGVydHlWYWx1ZUV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtcHJvcGVydHl2YWx1ZWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnByb3B2YWx1ZScsIFwicHJvcGVydHkgdmFsdWUgZXhwZWN0ZWRcIikpLFxuICAgIExlZnRDdXJseUV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtbGN1cmx5ZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQubGN1cmx5JywgXCJ7IGV4cGVjdGVkXCIpKSxcbiAgICBSaWdodEN1cmx5RXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1yY3VybHlleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5yY3VybHknLCBcIn0gZXhwZWN0ZWRcIikpLFxuICAgIExlZnRTcXVhcmVCcmFja2V0RXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1yYnJhY2tldGV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLmxzcXVhcmUnLCBcIlsgZXhwZWN0ZWRcIikpLFxuICAgIFJpZ2h0U3F1YXJlQnJhY2tldEV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtbGJyYWNrZXRleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5yc3F1YXJlJywgXCJdIGV4cGVjdGVkXCIpKSxcbiAgICBMZWZ0UGFyZW50aGVzaXNFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLWxwYXJlbnRleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5scGFyZW4nLCBcIiggZXhwZWN0ZWRcIikpLFxuICAgIFJpZ2h0UGFyZW50aGVzaXNFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXJwYXJlbnRleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5ycGFyZW50JywgXCIpIGV4cGVjdGVkXCIpKSxcbiAgICBDb21tYUV4cGVjdGVkOiBuZXcgQ1NTSXNzdWVUeXBlKCdjc3MtY29tbWFleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5jb21tYScsIFwiY29tbWEgZXhwZWN0ZWRcIikpLFxuICAgIFBhZ2VEaXJlY3RpdmVPckRlY2xhcmF0aW9uRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1wYWdlZGlyb3JkZWNsZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQucGFnZWRpcm9yZGVjbCcsIFwicGFnZSBkaXJlY3RpdmUgb3IgZGVjbGFyYXRvbiBleHBlY3RlZFwiKSksXG4gICAgVW5rbm93bkF0UnVsZTogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXVua25vd25hdHJ1bGUnLCBsb2NhbGl6ZSgndW5rbm93bi5hdHJ1bGUnLCBcImF0LXJ1bGUgdW5rbm93blwiKSksXG4gICAgVW5rbm93bktleXdvcmQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy11bmtub3dua2V5d29yZCcsIGxvY2FsaXplKCd1bmtub3duLmtleXdvcmQnLCBcInVua25vd24ga2V5d29yZFwiKSksXG4gICAgU2VsZWN0b3JFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXNlbGVjdG9yZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQuc2VsZWN0b3InLCBcInNlbGVjdG9yIGV4cGVjdGVkXCIpKSxcbiAgICBTdHJpbmdMaXRlcmFsRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1zdHJpbmdsaXRlcmFsZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQuc3RyaW5nbGl0ZXJhbCcsIFwic3RyaW5nIGxpdGVyYWwgZXhwZWN0ZWRcIikpLFxuICAgIFdoaXRlc3BhY2VFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLXdoaXRlc3BhY2VleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC53aGl0ZXNwYWNlJywgXCJ3aGl0ZXNwYWNlIGV4cGVjdGVkXCIpKSxcbiAgICBNZWRpYVF1ZXJ5RXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1tZWRpYXF1ZXJ5ZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQubWVkaWFxdWVyeScsIFwibWVkaWEgcXVlcnkgZXhwZWN0ZWRcIikpLFxuICAgIElkZW50aWZpZXJPcldpbGRjYXJkRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy1pZG9yd2lsZGNhcmRleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5pZG9yd2lsZGNhcmQnLCBcImlkZW50aWZpZXIgb3Igd2lsZGNhcmQgZXhwZWN0ZWRcIikpLFxuICAgIFdpbGRjYXJkRXhwZWN0ZWQ6IG5ldyBDU1NJc3N1ZVR5cGUoJ2Nzcy13aWxkY2FyZGV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLndpbGRjYXJkJywgXCJ3aWxkY2FyZCBleHBlY3RlZFwiKSksXG4gICAgSWRlbnRpZmllck9yVmFyaWFibGVFeHBlY3RlZDogbmV3IENTU0lzc3VlVHlwZSgnY3NzLWlkb3J2YXJleHBlY3RlZCcsIGxvY2FsaXplKCdleHBlY3RlZC5pZG9ydmFyJywgXCJpZGVudGlmaWVyIG9yIHZhcmlhYmxlIGV4cGVjdGVkXCIpKSxcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NodeType\", function() { return NodeType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReferenceType\", function() { return ReferenceType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNodeAtOffset\", function() { return getNodeAtOffset; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNodePath\", function() { return getNodePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getParentDeclaration\", function() { return getParentDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Node\", function() { return Node; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Nodelist\", function() { return Nodelist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Identifier\", function() { return Identifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stylesheet\", function() { return Stylesheet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Declarations\", function() { return Declarations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BodyDeclaration\", function() { return BodyDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RuleSet\", function() { return RuleSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Selector\", function() { return Selector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleSelector\", function() { return SimpleSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AtApplyRule\", function() { return AtApplyRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractDeclaration\", function() { return AbstractDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CustomPropertyDeclaration\", function() { return CustomPropertyDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CustomPropertySet\", function() { return CustomPropertySet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Declaration\", function() { return Declaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Property\", function() { return Property; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Invocation\", function() { return Invocation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Function\", function() { return Function; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionParameter\", function() { return FunctionParameter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionArgument\", function() { return FunctionArgument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IfStatement\", function() { return IfStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ForStatement\", function() { return ForStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EachStatement\", function() { return EachStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WhileStatement\", function() { return WhileStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ElseStatement\", function() { return ElseStatement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FunctionDeclaration\", function() { return FunctionDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ViewPort\", function() { return ViewPort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FontFace\", function() { return FontFace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NestedProperties\", function() { return NestedProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Keyframe\", function() { return Keyframe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyframeSelector\", function() { return KeyframeSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Import\", function() { return Import; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Use\", function() { return Use; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ModuleConfiguration\", function() { return ModuleConfiguration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Forward\", function() { return Forward; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ForwardVisibility\", function() { return ForwardVisibility; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Namespace\", function() { return Namespace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Media\", function() { return Media; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Supports\", function() { return Supports; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Document\", function() { return Document; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Medialist\", function() { return Medialist; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MediaQuery\", function() { return MediaQuery; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SupportsCondition\", function() { return SupportsCondition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Page\", function() { return Page; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PageBoxMarginBox\", function() { return PageBoxMarginBox; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Expression\", function() { return Expression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BinaryExpression\", function() { return BinaryExpression; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Term\", function() { return Term; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AttributeSelector\", function() { return AttributeSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Operator\", function() { return Operator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HexColorValue\", function() { return HexColorValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NumericValue\", function() { return NumericValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VariableDeclaration\", function() { return VariableDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Interpolation\", function() { return Interpolation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Variable\", function() { return Variable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ExtendsReference\", function() { return ExtendsReference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MixinContentReference\", function() { return MixinContentReference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MixinContentDeclaration\", function() { return MixinContentDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MixinReference\", function() { return MixinReference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MixinDeclaration\", function() { return MixinDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UnknownAtRule\", function() { return UnknownAtRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ListEntry\", function() { return ListEntry; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LessGuard\", function() { return LessGuard; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GuardCondition\", function() { return GuardCondition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Module\", function() { return Module; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Level\", function() { return Level; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Marker\", function() { return Marker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParseErrorCollector\", function() { return ParseErrorCollector; });\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n/// <summary>\n/// Nodes for the css 2.1 specification. See for reference:\n/// http://www.w3.org/TR/CSS21/grammar.html#grammar\n/// </summary>\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Undefined\"] = 0] = \"Undefined\";\n    NodeType[NodeType[\"Identifier\"] = 1] = \"Identifier\";\n    NodeType[NodeType[\"Stylesheet\"] = 2] = \"Stylesheet\";\n    NodeType[NodeType[\"Ruleset\"] = 3] = \"Ruleset\";\n    NodeType[NodeType[\"Selector\"] = 4] = \"Selector\";\n    NodeType[NodeType[\"SimpleSelector\"] = 5] = \"SimpleSelector\";\n    NodeType[NodeType[\"SelectorInterpolation\"] = 6] = \"SelectorInterpolation\";\n    NodeType[NodeType[\"SelectorCombinator\"] = 7] = \"SelectorCombinator\";\n    NodeType[NodeType[\"SelectorCombinatorParent\"] = 8] = \"SelectorCombinatorParent\";\n    NodeType[NodeType[\"SelectorCombinatorSibling\"] = 9] = \"SelectorCombinatorSibling\";\n    NodeType[NodeType[\"SelectorCombinatorAllSiblings\"] = 10] = \"SelectorCombinatorAllSiblings\";\n    NodeType[NodeType[\"SelectorCombinatorShadowPiercingDescendant\"] = 11] = \"SelectorCombinatorShadowPiercingDescendant\";\n    NodeType[NodeType[\"Page\"] = 12] = \"Page\";\n    NodeType[NodeType[\"PageBoxMarginBox\"] = 13] = \"PageBoxMarginBox\";\n    NodeType[NodeType[\"ClassSelector\"] = 14] = \"ClassSelector\";\n    NodeType[NodeType[\"IdentifierSelector\"] = 15] = \"IdentifierSelector\";\n    NodeType[NodeType[\"ElementNameSelector\"] = 16] = \"ElementNameSelector\";\n    NodeType[NodeType[\"PseudoSelector\"] = 17] = \"PseudoSelector\";\n    NodeType[NodeType[\"AttributeSelector\"] = 18] = \"AttributeSelector\";\n    NodeType[NodeType[\"Declaration\"] = 19] = \"Declaration\";\n    NodeType[NodeType[\"Declarations\"] = 20] = \"Declarations\";\n    NodeType[NodeType[\"Property\"] = 21] = \"Property\";\n    NodeType[NodeType[\"Expression\"] = 22] = \"Expression\";\n    NodeType[NodeType[\"BinaryExpression\"] = 23] = \"BinaryExpression\";\n    NodeType[NodeType[\"Term\"] = 24] = \"Term\";\n    NodeType[NodeType[\"Operator\"] = 25] = \"Operator\";\n    NodeType[NodeType[\"Value\"] = 26] = \"Value\";\n    NodeType[NodeType[\"StringLiteral\"] = 27] = \"StringLiteral\";\n    NodeType[NodeType[\"URILiteral\"] = 28] = \"URILiteral\";\n    NodeType[NodeType[\"EscapedValue\"] = 29] = \"EscapedValue\";\n    NodeType[NodeType[\"Function\"] = 30] = \"Function\";\n    NodeType[NodeType[\"NumericValue\"] = 31] = \"NumericValue\";\n    NodeType[NodeType[\"HexColorValue\"] = 32] = \"HexColorValue\";\n    NodeType[NodeType[\"MixinDeclaration\"] = 33] = \"MixinDeclaration\";\n    NodeType[NodeType[\"MixinReference\"] = 34] = \"MixinReference\";\n    NodeType[NodeType[\"VariableName\"] = 35] = \"VariableName\";\n    NodeType[NodeType[\"VariableDeclaration\"] = 36] = \"VariableDeclaration\";\n    NodeType[NodeType[\"Prio\"] = 37] = \"Prio\";\n    NodeType[NodeType[\"Interpolation\"] = 38] = \"Interpolation\";\n    NodeType[NodeType[\"NestedProperties\"] = 39] = \"NestedProperties\";\n    NodeType[NodeType[\"ExtendsReference\"] = 40] = \"ExtendsReference\";\n    NodeType[NodeType[\"SelectorPlaceholder\"] = 41] = \"SelectorPlaceholder\";\n    NodeType[NodeType[\"Debug\"] = 42] = \"Debug\";\n    NodeType[NodeType[\"If\"] = 43] = \"If\";\n    NodeType[NodeType[\"Else\"] = 44] = \"Else\";\n    NodeType[NodeType[\"For\"] = 45] = \"For\";\n    NodeType[NodeType[\"Each\"] = 46] = \"Each\";\n    NodeType[NodeType[\"While\"] = 47] = \"While\";\n    NodeType[NodeType[\"MixinContentReference\"] = 48] = \"MixinContentReference\";\n    NodeType[NodeType[\"MixinContentDeclaration\"] = 49] = \"MixinContentDeclaration\";\n    NodeType[NodeType[\"Media\"] = 50] = \"Media\";\n    NodeType[NodeType[\"Keyframe\"] = 51] = \"Keyframe\";\n    NodeType[NodeType[\"FontFace\"] = 52] = \"FontFace\";\n    NodeType[NodeType[\"Import\"] = 53] = \"Import\";\n    NodeType[NodeType[\"Namespace\"] = 54] = \"Namespace\";\n    NodeType[NodeType[\"Invocation\"] = 55] = \"Invocation\";\n    NodeType[NodeType[\"FunctionDeclaration\"] = 56] = \"FunctionDeclaration\";\n    NodeType[NodeType[\"ReturnStatement\"] = 57] = \"ReturnStatement\";\n    NodeType[NodeType[\"MediaQuery\"] = 58] = \"MediaQuery\";\n    NodeType[NodeType[\"FunctionParameter\"] = 59] = \"FunctionParameter\";\n    NodeType[NodeType[\"FunctionArgument\"] = 60] = \"FunctionArgument\";\n    NodeType[NodeType[\"KeyframeSelector\"] = 61] = \"KeyframeSelector\";\n    NodeType[NodeType[\"ViewPort\"] = 62] = \"ViewPort\";\n    NodeType[NodeType[\"Document\"] = 63] = \"Document\";\n    NodeType[NodeType[\"AtApplyRule\"] = 64] = \"AtApplyRule\";\n    NodeType[NodeType[\"CustomPropertyDeclaration\"] = 65] = \"CustomPropertyDeclaration\";\n    NodeType[NodeType[\"CustomPropertySet\"] = 66] = \"CustomPropertySet\";\n    NodeType[NodeType[\"ListEntry\"] = 67] = \"ListEntry\";\n    NodeType[NodeType[\"Supports\"] = 68] = \"Supports\";\n    NodeType[NodeType[\"SupportsCondition\"] = 69] = \"SupportsCondition\";\n    NodeType[NodeType[\"NamespacePrefix\"] = 70] = \"NamespacePrefix\";\n    NodeType[NodeType[\"GridLine\"] = 71] = \"GridLine\";\n    NodeType[NodeType[\"Plugin\"] = 72] = \"Plugin\";\n    NodeType[NodeType[\"UnknownAtRule\"] = 73] = \"UnknownAtRule\";\n    NodeType[NodeType[\"Use\"] = 74] = \"Use\";\n    NodeType[NodeType[\"ModuleConfiguration\"] = 75] = \"ModuleConfiguration\";\n    NodeType[NodeType[\"Forward\"] = 76] = \"Forward\";\n    NodeType[NodeType[\"ForwardVisibility\"] = 77] = \"ForwardVisibility\";\n    NodeType[NodeType[\"Module\"] = 78] = \"Module\";\n})(NodeType || (NodeType = {}));\nvar ReferenceType;\n(function (ReferenceType) {\n    ReferenceType[ReferenceType[\"Mixin\"] = 0] = \"Mixin\";\n    ReferenceType[ReferenceType[\"Rule\"] = 1] = \"Rule\";\n    ReferenceType[ReferenceType[\"Variable\"] = 2] = \"Variable\";\n    ReferenceType[ReferenceType[\"Function\"] = 3] = \"Function\";\n    ReferenceType[ReferenceType[\"Keyframe\"] = 4] = \"Keyframe\";\n    ReferenceType[ReferenceType[\"Unknown\"] = 5] = \"Unknown\";\n    ReferenceType[ReferenceType[\"Module\"] = 6] = \"Module\";\n    ReferenceType[ReferenceType[\"Forward\"] = 7] = \"Forward\";\n    ReferenceType[ReferenceType[\"ForwardVisibility\"] = 8] = \"ForwardVisibility\";\n})(ReferenceType || (ReferenceType = {}));\nfunction getNodeAtOffset(node, offset) {\n    var candidate = null;\n    if (!node || offset < node.offset || offset > node.end) {\n        return null;\n    }\n    // Find the shortest node at the position\n    node.accept(function (node) {\n        if (node.offset === -1 && node.length === -1) {\n            return true;\n        }\n        if (node.offset <= offset && node.end >= offset) {\n            if (!candidate) {\n                candidate = node;\n            }\n            else if (node.length <= candidate.length) {\n                candidate = node;\n            }\n            return true;\n        }\n        return false;\n    });\n    return candidate;\n}\nfunction getNodePath(node, offset) {\n    var candidate = getNodeAtOffset(node, offset);\n    var path = [];\n    while (candidate) {\n        path.unshift(candidate);\n        candidate = candidate.parent;\n    }\n    return path;\n}\nfunction getParentDeclaration(node) {\n    var decl = node.findParent(NodeType.Declaration);\n    var value = decl && decl.getValue();\n    if (value && value.encloses(node)) {\n        return decl;\n    }\n    return null;\n}\nvar Node = /** @class */ (function () {\n    function Node(offset, len, nodeType) {\n        if (offset === void 0) { offset = -1; }\n        if (len === void 0) { len = -1; }\n        this.parent = null;\n        this.offset = offset;\n        this.length = len;\n        if (nodeType) {\n            this.nodeType = nodeType;\n        }\n    }\n    Object.defineProperty(Node.prototype, \"end\", {\n        get: function () { return this.offset + this.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"type\", {\n        get: function () {\n            return this.nodeType || NodeType.Undefined;\n        },\n        set: function (type) {\n            this.nodeType = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Node.prototype.getTextProvider = function () {\n        var node = this;\n        while (node && !node.textProvider) {\n            node = node.parent;\n        }\n        if (node) {\n            return node.textProvider;\n        }\n        return function () { return 'unknown'; };\n    };\n    Node.prototype.getText = function () {\n        return this.getTextProvider()(this.offset, this.length);\n    };\n    Node.prototype.matches = function (str) {\n        return this.length === str.length && this.getTextProvider()(this.offset, this.length) === str;\n    };\n    Node.prototype.startsWith = function (str) {\n        return this.length >= str.length && this.getTextProvider()(this.offset, str.length) === str;\n    };\n    Node.prototype.endsWith = function (str) {\n        return this.length >= str.length && this.getTextProvider()(this.end - str.length, str.length) === str;\n    };\n    Node.prototype.accept = function (visitor) {\n        if (visitor(this) && this.children) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.accept(visitor);\n            }\n        }\n    };\n    Node.prototype.acceptVisitor = function (visitor) {\n        this.accept(visitor.visitNode.bind(visitor));\n    };\n    Node.prototype.adoptChild = function (node, index) {\n        if (index === void 0) { index = -1; }\n        if (node.parent && node.parent.children) {\n            var idx = node.parent.children.indexOf(node);\n            if (idx >= 0) {\n                node.parent.children.splice(idx, 1);\n            }\n        }\n        node.parent = this;\n        var children = this.children;\n        if (!children) {\n            children = this.children = [];\n        }\n        if (index !== -1) {\n            children.splice(index, 0, node);\n        }\n        else {\n            children.push(node);\n        }\n        return node;\n    };\n    Node.prototype.attachTo = function (parent, index) {\n        if (index === void 0) { index = -1; }\n        if (parent) {\n            parent.adoptChild(this, index);\n        }\n        return this;\n    };\n    Node.prototype.collectIssues = function (results) {\n        if (this.issues) {\n            results.push.apply(results, this.issues);\n        }\n    };\n    Node.prototype.addIssue = function (issue) {\n        if (!this.issues) {\n            this.issues = [];\n        }\n        this.issues.push(issue);\n    };\n    Node.prototype.hasIssue = function (rule) {\n        return Array.isArray(this.issues) && this.issues.some(function (i) { return i.getRule() === rule; });\n    };\n    Node.prototype.isErroneous = function (recursive) {\n        if (recursive === void 0) { recursive = false; }\n        if (this.issues && this.issues.length > 0) {\n            return true;\n        }\n        return recursive && Array.isArray(this.children) && this.children.some(function (c) { return c.isErroneous(true); });\n    };\n    Node.prototype.setNode = function (field, node, index) {\n        if (index === void 0) { index = -1; }\n        if (node) {\n            node.attachTo(this, index);\n            this[field] = node;\n            return true;\n        }\n        return false;\n    };\n    Node.prototype.addChild = function (node) {\n        if (node) {\n            if (!this.children) {\n                this.children = [];\n            }\n            node.attachTo(this);\n            this.updateOffsetAndLength(node);\n            return true;\n        }\n        return false;\n    };\n    Node.prototype.updateOffsetAndLength = function (node) {\n        if (node.offset < this.offset || this.offset === -1) {\n            this.offset = node.offset;\n        }\n        var nodeEnd = node.end;\n        if ((nodeEnd > this.end) || this.length === -1) {\n            this.length = nodeEnd - this.offset;\n        }\n    };\n    Node.prototype.hasChildren = function () {\n        return !!this.children && this.children.length > 0;\n    };\n    Node.prototype.getChildren = function () {\n        return this.children ? this.children.slice(0) : [];\n    };\n    Node.prototype.getChild = function (index) {\n        if (this.children && index < this.children.length) {\n            return this.children[index];\n        }\n        return null;\n    };\n    Node.prototype.addChildren = function (nodes) {\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            this.addChild(node);\n        }\n    };\n    Node.prototype.findFirstChildBeforeOffset = function (offset) {\n        if (this.children) {\n            var current = null;\n            for (var i = this.children.length - 1; i >= 0; i--) {\n                // iterate until we find a child that has a start offset smaller than the input offset\n                current = this.children[i];\n                if (current.offset <= offset) {\n                    return current;\n                }\n            }\n        }\n        return null;\n    };\n    Node.prototype.findChildAtOffset = function (offset, goDeep) {\n        var current = this.findFirstChildBeforeOffset(offset);\n        if (current && current.end >= offset) {\n            if (goDeep) {\n                return current.findChildAtOffset(offset, true) || current;\n            }\n            return current;\n        }\n        return null;\n    };\n    Node.prototype.encloses = function (candidate) {\n        return this.offset <= candidate.offset && this.offset + this.length >= candidate.offset + candidate.length;\n    };\n    Node.prototype.getParent = function () {\n        var result = this.parent;\n        while (result instanceof Nodelist) {\n            result = result.parent;\n        }\n        return result;\n    };\n    Node.prototype.findParent = function (type) {\n        var result = this;\n        while (result && result.type !== type) {\n            result = result.parent;\n        }\n        return result;\n    };\n    Node.prototype.findAParent = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        var result = this;\n        while (result && !types.some(function (t) { return result.type === t; })) {\n            result = result.parent;\n        }\n        return result;\n    };\n    Node.prototype.setData = function (key, value) {\n        if (!this.options) {\n            this.options = {};\n        }\n        this.options[key] = value;\n    };\n    Node.prototype.getData = function (key) {\n        if (!this.options || !this.options.hasOwnProperty(key)) {\n            return null;\n        }\n        return this.options[key];\n    };\n    return Node;\n}());\n\nvar Nodelist = /** @class */ (function (_super) {\n    __extends(Nodelist, _super);\n    function Nodelist(parent, index) {\n        if (index === void 0) { index = -1; }\n        var _this = _super.call(this, -1, -1) || this;\n        _this.attachTo(parent, index);\n        _this.offset = -1;\n        _this.length = -1;\n        return _this;\n    }\n    return Nodelist;\n}(Node));\n\nvar Identifier = /** @class */ (function (_super) {\n    __extends(Identifier, _super);\n    function Identifier(offset, length) {\n        var _this = _super.call(this, offset, length) || this;\n        _this.isCustomProperty = false;\n        return _this;\n    }\n    Object.defineProperty(Identifier.prototype, \"type\", {\n        get: function () {\n            return NodeType.Identifier;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Identifier.prototype.containsInterpolation = function () {\n        return this.hasChildren();\n    };\n    return Identifier;\n}(Node));\n\nvar Stylesheet = /** @class */ (function (_super) {\n    __extends(Stylesheet, _super);\n    function Stylesheet(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Stylesheet.prototype, \"type\", {\n        get: function () {\n            return NodeType.Stylesheet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Stylesheet;\n}(Node));\n\nvar Declarations = /** @class */ (function (_super) {\n    __extends(Declarations, _super);\n    function Declarations(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Declarations.prototype, \"type\", {\n        get: function () {\n            return NodeType.Declarations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Declarations;\n}(Node));\n\nvar BodyDeclaration = /** @class */ (function (_super) {\n    __extends(BodyDeclaration, _super);\n    function BodyDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    BodyDeclaration.prototype.getDeclarations = function () {\n        return this.declarations;\n    };\n    BodyDeclaration.prototype.setDeclarations = function (decls) {\n        return this.setNode('declarations', decls);\n    };\n    return BodyDeclaration;\n}(Node));\n\nvar RuleSet = /** @class */ (function (_super) {\n    __extends(RuleSet, _super);\n    function RuleSet(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(RuleSet.prototype, \"type\", {\n        get: function () {\n            return NodeType.Ruleset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RuleSet.prototype.getSelectors = function () {\n        if (!this.selectors) {\n            this.selectors = new Nodelist(this);\n        }\n        return this.selectors;\n    };\n    RuleSet.prototype.isNested = function () {\n        return !!this.parent && this.parent.findParent(NodeType.Declarations) !== null;\n    };\n    return RuleSet;\n}(BodyDeclaration));\n\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Selector.prototype, \"type\", {\n        get: function () {\n            return NodeType.Selector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Selector;\n}(Node));\n\nvar SimpleSelector = /** @class */ (function (_super) {\n    __extends(SimpleSelector, _super);\n    function SimpleSelector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(SimpleSelector.prototype, \"type\", {\n        get: function () {\n            return NodeType.SimpleSelector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SimpleSelector;\n}(Node));\n\nvar AtApplyRule = /** @class */ (function (_super) {\n    __extends(AtApplyRule, _super);\n    function AtApplyRule(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(AtApplyRule.prototype, \"type\", {\n        get: function () {\n            return NodeType.AtApplyRule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AtApplyRule.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    AtApplyRule.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    AtApplyRule.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    return AtApplyRule;\n}(Node));\n\nvar AbstractDeclaration = /** @class */ (function (_super) {\n    __extends(AbstractDeclaration, _super);\n    function AbstractDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    return AbstractDeclaration;\n}(Node));\n\nvar CustomPropertyDeclaration = /** @class */ (function (_super) {\n    __extends(CustomPropertyDeclaration, _super);\n    function CustomPropertyDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(CustomPropertyDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.CustomPropertyDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CustomPropertyDeclaration.prototype.setProperty = function (node) {\n        return this.setNode('property', node);\n    };\n    CustomPropertyDeclaration.prototype.getProperty = function () {\n        return this.property;\n    };\n    CustomPropertyDeclaration.prototype.setValue = function (value) {\n        return this.setNode('value', value);\n    };\n    CustomPropertyDeclaration.prototype.getValue = function () {\n        return this.value;\n    };\n    CustomPropertyDeclaration.prototype.setPropertySet = function (value) {\n        return this.setNode('propertySet', value);\n    };\n    CustomPropertyDeclaration.prototype.getPropertySet = function () {\n        return this.propertySet;\n    };\n    return CustomPropertyDeclaration;\n}(AbstractDeclaration));\n\nvar CustomPropertySet = /** @class */ (function (_super) {\n    __extends(CustomPropertySet, _super);\n    function CustomPropertySet(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(CustomPropertySet.prototype, \"type\", {\n        get: function () {\n            return NodeType.CustomPropertySet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CustomPropertySet;\n}(BodyDeclaration));\n\nvar Declaration = /** @class */ (function (_super) {\n    __extends(Declaration, _super);\n    function Declaration(offset, length) {\n        var _this = _super.call(this, offset, length) || this;\n        _this.property = null;\n        return _this;\n    }\n    Object.defineProperty(Declaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.Declaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Declaration.prototype.setProperty = function (node) {\n        return this.setNode('property', node);\n    };\n    Declaration.prototype.getProperty = function () {\n        return this.property;\n    };\n    Declaration.prototype.getFullPropertyName = function () {\n        var propertyName = this.property ? this.property.getName() : 'unknown';\n        if (this.parent instanceof Declarations && this.parent.getParent() instanceof NestedProperties) {\n            var parentDecl = this.parent.getParent().getParent();\n            if (parentDecl instanceof Declaration) {\n                return parentDecl.getFullPropertyName() + propertyName;\n            }\n        }\n        return propertyName;\n    };\n    Declaration.prototype.getNonPrefixedPropertyName = function () {\n        var propertyName = this.getFullPropertyName();\n        if (propertyName && propertyName.charAt(0) === '-') {\n            var vendorPrefixEnd = propertyName.indexOf('-', 1);\n            if (vendorPrefixEnd !== -1) {\n                return propertyName.substring(vendorPrefixEnd + 1);\n            }\n        }\n        return propertyName;\n    };\n    Declaration.prototype.setValue = function (value) {\n        return this.setNode('value', value);\n    };\n    Declaration.prototype.getValue = function () {\n        return this.value;\n    };\n    Declaration.prototype.setNestedProperties = function (value) {\n        return this.setNode('nestedProperties', value);\n    };\n    Declaration.prototype.getNestedProperties = function () {\n        return this.nestedProperties;\n    };\n    return Declaration;\n}(AbstractDeclaration));\n\nvar Property = /** @class */ (function (_super) {\n    __extends(Property, _super);\n    function Property(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Property.prototype, \"type\", {\n        get: function () {\n            return NodeType.Property;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Property.prototype.setIdentifier = function (value) {\n        return this.setNode('identifier', value);\n    };\n    Property.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    Property.prototype.getName = function () {\n        return Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_0__[\"trim\"])(this.getText(), /[_\\+]+$/); /* +_: less merge */\n    };\n    Property.prototype.isCustomProperty = function () {\n        return !!this.identifier && this.identifier.isCustomProperty;\n    };\n    return Property;\n}(Node));\n\nvar Invocation = /** @class */ (function (_super) {\n    __extends(Invocation, _super);\n    function Invocation(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Invocation.prototype, \"type\", {\n        get: function () {\n            return NodeType.Invocation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Invocation.prototype.getArguments = function () {\n        if (!this.arguments) {\n            this.arguments = new Nodelist(this);\n        }\n        return this.arguments;\n    };\n    return Invocation;\n}(Node));\n\nvar Function = /** @class */ (function (_super) {\n    __extends(Function, _super);\n    function Function(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Function.prototype, \"type\", {\n        get: function () {\n            return NodeType.Function;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Function.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    Function.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    Function.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    return Function;\n}(Invocation));\n\nvar FunctionParameter = /** @class */ (function (_super) {\n    __extends(FunctionParameter, _super);\n    function FunctionParameter(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FunctionParameter.prototype, \"type\", {\n        get: function () {\n            return NodeType.FunctionParameter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionParameter.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    FunctionParameter.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    FunctionParameter.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    FunctionParameter.prototype.setDefaultValue = function (node) {\n        return this.setNode('defaultValue', node, 0);\n    };\n    FunctionParameter.prototype.getDefaultValue = function () {\n        return this.defaultValue;\n    };\n    return FunctionParameter;\n}(Node));\n\nvar FunctionArgument = /** @class */ (function (_super) {\n    __extends(FunctionArgument, _super);\n    function FunctionArgument(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FunctionArgument.prototype, \"type\", {\n        get: function () {\n            return NodeType.FunctionArgument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionArgument.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    FunctionArgument.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    FunctionArgument.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    FunctionArgument.prototype.setValue = function (node) {\n        return this.setNode('value', node, 0);\n    };\n    FunctionArgument.prototype.getValue = function () {\n        return this.value;\n    };\n    return FunctionArgument;\n}(Node));\n\nvar IfStatement = /** @class */ (function (_super) {\n    __extends(IfStatement, _super);\n    function IfStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(IfStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.If;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IfStatement.prototype.setExpression = function (node) {\n        return this.setNode('expression', node, 0);\n    };\n    IfStatement.prototype.setElseClause = function (elseClause) {\n        return this.setNode('elseClause', elseClause);\n    };\n    return IfStatement;\n}(BodyDeclaration));\n\nvar ForStatement = /** @class */ (function (_super) {\n    __extends(ForStatement, _super);\n    function ForStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ForStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.For;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ForStatement.prototype.setVariable = function (node) {\n        return this.setNode('variable', node, 0);\n    };\n    return ForStatement;\n}(BodyDeclaration));\n\nvar EachStatement = /** @class */ (function (_super) {\n    __extends(EachStatement, _super);\n    function EachStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(EachStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.Each;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EachStatement.prototype.getVariables = function () {\n        if (!this.variables) {\n            this.variables = new Nodelist(this);\n        }\n        return this.variables;\n    };\n    return EachStatement;\n}(BodyDeclaration));\n\nvar WhileStatement = /** @class */ (function (_super) {\n    __extends(WhileStatement, _super);\n    function WhileStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(WhileStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.While;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return WhileStatement;\n}(BodyDeclaration));\n\nvar ElseStatement = /** @class */ (function (_super) {\n    __extends(ElseStatement, _super);\n    function ElseStatement(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ElseStatement.prototype, \"type\", {\n        get: function () {\n            return NodeType.Else;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ElseStatement;\n}(BodyDeclaration));\n\nvar FunctionDeclaration = /** @class */ (function (_super) {\n    __extends(FunctionDeclaration, _super);\n    function FunctionDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FunctionDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.FunctionDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FunctionDeclaration.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    FunctionDeclaration.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    FunctionDeclaration.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    FunctionDeclaration.prototype.getParameters = function () {\n        if (!this.parameters) {\n            this.parameters = new Nodelist(this);\n        }\n        return this.parameters;\n    };\n    return FunctionDeclaration;\n}(BodyDeclaration));\n\nvar ViewPort = /** @class */ (function (_super) {\n    __extends(ViewPort, _super);\n    function ViewPort(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ViewPort.prototype, \"type\", {\n        get: function () {\n            return NodeType.ViewPort;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ViewPort;\n}(BodyDeclaration));\n\nvar FontFace = /** @class */ (function (_super) {\n    __extends(FontFace, _super);\n    function FontFace(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(FontFace.prototype, \"type\", {\n        get: function () {\n            return NodeType.FontFace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FontFace;\n}(BodyDeclaration));\n\nvar NestedProperties = /** @class */ (function (_super) {\n    __extends(NestedProperties, _super);\n    function NestedProperties(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(NestedProperties.prototype, \"type\", {\n        get: function () {\n            return NodeType.NestedProperties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return NestedProperties;\n}(BodyDeclaration));\n\nvar Keyframe = /** @class */ (function (_super) {\n    __extends(Keyframe, _super);\n    function Keyframe(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Keyframe.prototype, \"type\", {\n        get: function () {\n            return NodeType.Keyframe;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Keyframe.prototype.setKeyword = function (keyword) {\n        return this.setNode('keyword', keyword, 0);\n    };\n    Keyframe.prototype.getKeyword = function () {\n        return this.keyword;\n    };\n    Keyframe.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    Keyframe.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    Keyframe.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    return Keyframe;\n}(BodyDeclaration));\n\nvar KeyframeSelector = /** @class */ (function (_super) {\n    __extends(KeyframeSelector, _super);\n    function KeyframeSelector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(KeyframeSelector.prototype, \"type\", {\n        get: function () {\n            return NodeType.KeyframeSelector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyframeSelector;\n}(BodyDeclaration));\n\nvar Import = /** @class */ (function (_super) {\n    __extends(Import, _super);\n    function Import(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Import.prototype, \"type\", {\n        get: function () {\n            return NodeType.Import;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Import.prototype.setMedialist = function (node) {\n        if (node) {\n            node.attachTo(this);\n            return true;\n        }\n        return false;\n    };\n    return Import;\n}(Node));\n\nvar Use = /** @class */ (function (_super) {\n    __extends(Use, _super);\n    function Use() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Use.prototype, \"type\", {\n        get: function () {\n            return NodeType.Use;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Use.prototype.getParameters = function () {\n        if (!this.parameters) {\n            this.parameters = new Nodelist(this);\n        }\n        return this.parameters;\n    };\n    Use.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    Use.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    return Use;\n}(Node));\n\nvar ModuleConfiguration = /** @class */ (function (_super) {\n    __extends(ModuleConfiguration, _super);\n    function ModuleConfiguration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ModuleConfiguration.prototype, \"type\", {\n        get: function () {\n            return NodeType.ModuleConfiguration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ModuleConfiguration.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    ModuleConfiguration.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    ModuleConfiguration.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    ModuleConfiguration.prototype.setValue = function (node) {\n        return this.setNode('value', node, 0);\n    };\n    ModuleConfiguration.prototype.getValue = function () {\n        return this.value;\n    };\n    return ModuleConfiguration;\n}(Node));\n\nvar Forward = /** @class */ (function (_super) {\n    __extends(Forward, _super);\n    function Forward() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Forward.prototype, \"type\", {\n        get: function () {\n            return NodeType.Forward;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Forward.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    Forward.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    return Forward;\n}(Node));\n\nvar ForwardVisibility = /** @class */ (function (_super) {\n    __extends(ForwardVisibility, _super);\n    function ForwardVisibility() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ForwardVisibility.prototype, \"type\", {\n        get: function () {\n            return NodeType.ForwardVisibility;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ForwardVisibility.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    ForwardVisibility.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    return ForwardVisibility;\n}(Node));\n\nvar Namespace = /** @class */ (function (_super) {\n    __extends(Namespace, _super);\n    function Namespace(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Namespace.prototype, \"type\", {\n        get: function () {\n            return NodeType.Namespace;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Namespace;\n}(Node));\n\nvar Media = /** @class */ (function (_super) {\n    __extends(Media, _super);\n    function Media(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Media.prototype, \"type\", {\n        get: function () {\n            return NodeType.Media;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Media;\n}(BodyDeclaration));\n\nvar Supports = /** @class */ (function (_super) {\n    __extends(Supports, _super);\n    function Supports(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Supports.prototype, \"type\", {\n        get: function () {\n            return NodeType.Supports;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Supports;\n}(BodyDeclaration));\n\nvar Document = /** @class */ (function (_super) {\n    __extends(Document, _super);\n    function Document(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Document.prototype, \"type\", {\n        get: function () {\n            return NodeType.Document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Document;\n}(BodyDeclaration));\n\nvar Medialist = /** @class */ (function (_super) {\n    __extends(Medialist, _super);\n    function Medialist(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Medialist.prototype.getMediums = function () {\n        if (!this.mediums) {\n            this.mediums = new Nodelist(this);\n        }\n        return this.mediums;\n    };\n    return Medialist;\n}(Node));\n\nvar MediaQuery = /** @class */ (function (_super) {\n    __extends(MediaQuery, _super);\n    function MediaQuery(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MediaQuery.prototype, \"type\", {\n        get: function () {\n            return NodeType.MediaQuery;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return MediaQuery;\n}(Node));\n\nvar SupportsCondition = /** @class */ (function (_super) {\n    __extends(SupportsCondition, _super);\n    function SupportsCondition(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(SupportsCondition.prototype, \"type\", {\n        get: function () {\n            return NodeType.SupportsCondition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SupportsCondition;\n}(Node));\n\nvar Page = /** @class */ (function (_super) {\n    __extends(Page, _super);\n    function Page(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Page.prototype, \"type\", {\n        get: function () {\n            return NodeType.Page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Page;\n}(BodyDeclaration));\n\nvar PageBoxMarginBox = /** @class */ (function (_super) {\n    __extends(PageBoxMarginBox, _super);\n    function PageBoxMarginBox(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(PageBoxMarginBox.prototype, \"type\", {\n        get: function () {\n            return NodeType.PageBoxMarginBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageBoxMarginBox;\n}(BodyDeclaration));\n\nvar Expression = /** @class */ (function (_super) {\n    __extends(Expression, _super);\n    function Expression(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Expression.prototype, \"type\", {\n        get: function () {\n            return NodeType.Expression;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Expression;\n}(Node));\n\nvar BinaryExpression = /** @class */ (function (_super) {\n    __extends(BinaryExpression, _super);\n    function BinaryExpression(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(BinaryExpression.prototype, \"type\", {\n        get: function () {\n            return NodeType.BinaryExpression;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BinaryExpression.prototype.setLeft = function (left) {\n        return this.setNode('left', left);\n    };\n    BinaryExpression.prototype.getLeft = function () {\n        return this.left;\n    };\n    BinaryExpression.prototype.setRight = function (right) {\n        return this.setNode('right', right);\n    };\n    BinaryExpression.prototype.getRight = function () {\n        return this.right;\n    };\n    BinaryExpression.prototype.setOperator = function (value) {\n        return this.setNode('operator', value);\n    };\n    BinaryExpression.prototype.getOperator = function () {\n        return this.operator;\n    };\n    return BinaryExpression;\n}(Node));\n\nvar Term = /** @class */ (function (_super) {\n    __extends(Term, _super);\n    function Term(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Term.prototype, \"type\", {\n        get: function () {\n            return NodeType.Term;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Term.prototype.setOperator = function (value) {\n        return this.setNode('operator', value);\n    };\n    Term.prototype.getOperator = function () {\n        return this.operator;\n    };\n    Term.prototype.setExpression = function (value) {\n        return this.setNode('expression', value);\n    };\n    Term.prototype.getExpression = function () {\n        return this.expression;\n    };\n    return Term;\n}(Node));\n\nvar AttributeSelector = /** @class */ (function (_super) {\n    __extends(AttributeSelector, _super);\n    function AttributeSelector(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(AttributeSelector.prototype, \"type\", {\n        get: function () {\n            return NodeType.AttributeSelector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AttributeSelector.prototype.setNamespacePrefix = function (value) {\n        return this.setNode('namespacePrefix', value);\n    };\n    AttributeSelector.prototype.getNamespacePrefix = function () {\n        return this.namespacePrefix;\n    };\n    AttributeSelector.prototype.setIdentifier = function (value) {\n        return this.setNode('identifier', value);\n    };\n    AttributeSelector.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    AttributeSelector.prototype.setOperator = function (operator) {\n        return this.setNode('operator', operator);\n    };\n    AttributeSelector.prototype.getOperator = function () {\n        return this.operator;\n    };\n    AttributeSelector.prototype.setValue = function (value) {\n        return this.setNode('value', value);\n    };\n    AttributeSelector.prototype.getValue = function () {\n        return this.value;\n    };\n    return AttributeSelector;\n}(Node));\n\nvar Operator = /** @class */ (function (_super) {\n    __extends(Operator, _super);\n    function Operator(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Operator.prototype, \"type\", {\n        get: function () {\n            return NodeType.Operator;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Operator;\n}(Node));\n\nvar HexColorValue = /** @class */ (function (_super) {\n    __extends(HexColorValue, _super);\n    function HexColorValue(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(HexColorValue.prototype, \"type\", {\n        get: function () {\n            return NodeType.HexColorValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return HexColorValue;\n}(Node));\n\nvar _dot = '.'.charCodeAt(0), _0 = '0'.charCodeAt(0), _9 = '9'.charCodeAt(0);\nvar NumericValue = /** @class */ (function (_super) {\n    __extends(NumericValue, _super);\n    function NumericValue(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(NumericValue.prototype, \"type\", {\n        get: function () {\n            return NodeType.NumericValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NumericValue.prototype.getValue = function () {\n        var raw = this.getText();\n        var unitIdx = 0;\n        var code;\n        for (var i = 0, len = raw.length; i < len; i++) {\n            code = raw.charCodeAt(i);\n            if (!(_0 <= code && code <= _9 || code === _dot)) {\n                break;\n            }\n            unitIdx += 1;\n        }\n        return {\n            value: raw.substring(0, unitIdx),\n            unit: unitIdx < raw.length ? raw.substring(unitIdx) : undefined\n        };\n    };\n    return NumericValue;\n}(Node));\n\nvar VariableDeclaration = /** @class */ (function (_super) {\n    __extends(VariableDeclaration, _super);\n    function VariableDeclaration(offset, length) {\n        var _this = _super.call(this, offset, length) || this;\n        _this.variable = null;\n        _this.value = null;\n        _this.needsSemicolon = true;\n        return _this;\n    }\n    Object.defineProperty(VariableDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.VariableDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VariableDeclaration.prototype.setVariable = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.variable = node;\n            return true;\n        }\n        return false;\n    };\n    VariableDeclaration.prototype.getVariable = function () {\n        return this.variable;\n    };\n    VariableDeclaration.prototype.getName = function () {\n        return this.variable ? this.variable.getName() : '';\n    };\n    VariableDeclaration.prototype.setValue = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.value = node;\n            return true;\n        }\n        return false;\n    };\n    VariableDeclaration.prototype.getValue = function () {\n        return this.value;\n    };\n    return VariableDeclaration;\n}(AbstractDeclaration));\n\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    // private _interpolations: void; // workaround for https://github.com/Microsoft/TypeScript/issues/18276\n    function Interpolation(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Interpolation.prototype, \"type\", {\n        get: function () {\n            return NodeType.Interpolation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Interpolation;\n}(Node));\n\nvar Variable = /** @class */ (function (_super) {\n    __extends(Variable, _super);\n    function Variable(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(Variable.prototype, \"type\", {\n        get: function () {\n            return NodeType.VariableName;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Variable.prototype.getName = function () {\n        return this.getText();\n    };\n    return Variable;\n}(Node));\n\nvar ExtendsReference = /** @class */ (function (_super) {\n    __extends(ExtendsReference, _super);\n    function ExtendsReference(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(ExtendsReference.prototype, \"type\", {\n        get: function () {\n            return NodeType.ExtendsReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExtendsReference.prototype.getSelectors = function () {\n        if (!this.selectors) {\n            this.selectors = new Nodelist(this);\n        }\n        return this.selectors;\n    };\n    return ExtendsReference;\n}(Node));\n\nvar MixinContentReference = /** @class */ (function (_super) {\n    __extends(MixinContentReference, _super);\n    function MixinContentReference(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MixinContentReference.prototype, \"type\", {\n        get: function () {\n            return NodeType.MixinContentReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MixinContentReference.prototype.getArguments = function () {\n        if (!this.arguments) {\n            this.arguments = new Nodelist(this);\n        }\n        return this.arguments;\n    };\n    return MixinContentReference;\n}(Node));\n\nvar MixinContentDeclaration = /** @class */ (function (_super) {\n    __extends(MixinContentDeclaration, _super);\n    function MixinContentDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MixinContentDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.MixinContentReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MixinContentDeclaration.prototype.getParameters = function () {\n        if (!this.parameters) {\n            this.parameters = new Nodelist(this);\n        }\n        return this.parameters;\n    };\n    return MixinContentDeclaration;\n}(BodyDeclaration));\n\nvar MixinReference = /** @class */ (function (_super) {\n    __extends(MixinReference, _super);\n    function MixinReference(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MixinReference.prototype, \"type\", {\n        get: function () {\n            return NodeType.MixinReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MixinReference.prototype.getNamespaces = function () {\n        if (!this.namespaces) {\n            this.namespaces = new Nodelist(this);\n        }\n        return this.namespaces;\n    };\n    MixinReference.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    MixinReference.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    MixinReference.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    MixinReference.prototype.getArguments = function () {\n        if (!this.arguments) {\n            this.arguments = new Nodelist(this);\n        }\n        return this.arguments;\n    };\n    MixinReference.prototype.setContent = function (node) {\n        return this.setNode('content', node);\n    };\n    MixinReference.prototype.getContent = function () {\n        return this.content;\n    };\n    return MixinReference;\n}(Node));\n\nvar MixinDeclaration = /** @class */ (function (_super) {\n    __extends(MixinDeclaration, _super);\n    function MixinDeclaration(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(MixinDeclaration.prototype, \"type\", {\n        get: function () {\n            return NodeType.MixinDeclaration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MixinDeclaration.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    MixinDeclaration.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    MixinDeclaration.prototype.getName = function () {\n        return this.identifier ? this.identifier.getText() : '';\n    };\n    MixinDeclaration.prototype.getParameters = function () {\n        if (!this.parameters) {\n            this.parameters = new Nodelist(this);\n        }\n        return this.parameters;\n    };\n    MixinDeclaration.prototype.setGuard = function (node) {\n        if (node) {\n            node.attachTo(this);\n            this.guard = node;\n        }\n        return false;\n    };\n    return MixinDeclaration;\n}(BodyDeclaration));\n\nvar UnknownAtRule = /** @class */ (function (_super) {\n    __extends(UnknownAtRule, _super);\n    function UnknownAtRule(offset, length) {\n        return _super.call(this, offset, length) || this;\n    }\n    Object.defineProperty(UnknownAtRule.prototype, \"type\", {\n        get: function () {\n            return NodeType.UnknownAtRule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    UnknownAtRule.prototype.setAtRuleName = function (atRuleName) {\n        this.atRuleName = atRuleName;\n    };\n    UnknownAtRule.prototype.getAtRuleName = function () {\n        return this.atRuleName;\n    };\n    return UnknownAtRule;\n}(BodyDeclaration));\n\nvar ListEntry = /** @class */ (function (_super) {\n    __extends(ListEntry, _super);\n    function ListEntry() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ListEntry.prototype, \"type\", {\n        get: function () {\n            return NodeType.ListEntry;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ListEntry.prototype.setKey = function (node) {\n        return this.setNode('key', node, 0);\n    };\n    ListEntry.prototype.setValue = function (node) {\n        return this.setNode('value', node, 1);\n    };\n    return ListEntry;\n}(Node));\n\nvar LessGuard = /** @class */ (function (_super) {\n    __extends(LessGuard, _super);\n    function LessGuard() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LessGuard.prototype.getConditions = function () {\n        if (!this.conditions) {\n            this.conditions = new Nodelist(this);\n        }\n        return this.conditions;\n    };\n    return LessGuard;\n}(Node));\n\nvar GuardCondition = /** @class */ (function (_super) {\n    __extends(GuardCondition, _super);\n    function GuardCondition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GuardCondition.prototype.setVariable = function (node) {\n        return this.setNode('variable', node);\n    };\n    return GuardCondition;\n}(Node));\n\nvar Module = /** @class */ (function (_super) {\n    __extends(Module, _super);\n    function Module() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Module.prototype, \"type\", {\n        get: function () {\n            return NodeType.Module;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Module.prototype.setIdentifier = function (node) {\n        return this.setNode('identifier', node, 0);\n    };\n    Module.prototype.getIdentifier = function () {\n        return this.identifier;\n    };\n    return Module;\n}(Node));\n\nvar Level;\n(function (Level) {\n    Level[Level[\"Ignore\"] = 1] = \"Ignore\";\n    Level[Level[\"Warning\"] = 2] = \"Warning\";\n    Level[Level[\"Error\"] = 4] = \"Error\";\n})(Level || (Level = {}));\nvar Marker = /** @class */ (function () {\n    function Marker(node, rule, level, message, offset, length) {\n        if (offset === void 0) { offset = node.offset; }\n        if (length === void 0) { length = node.length; }\n        this.node = node;\n        this.rule = rule;\n        this.level = level;\n        this.message = message || rule.message;\n        this.offset = offset;\n        this.length = length;\n    }\n    Marker.prototype.getRule = function () {\n        return this.rule;\n    };\n    Marker.prototype.getLevel = function () {\n        return this.level;\n    };\n    Marker.prototype.getOffset = function () {\n        return this.offset;\n    };\n    Marker.prototype.getLength = function () {\n        return this.length;\n    };\n    Marker.prototype.getNode = function () {\n        return this.node;\n    };\n    Marker.prototype.getMessage = function () {\n        return this.message;\n    };\n    return Marker;\n}());\n\n/*\nexport class DefaultVisitor implements IVisitor {\n\n    public visitNode(node:Node):boolean {\n        switch (node.type) {\n            case NodeType.Stylesheet:\n                return this.visitStylesheet(<Stylesheet> node);\n            case NodeType.FontFace:\n                return this.visitFontFace(<FontFace> node);\n            case NodeType.Ruleset:\n                return this.visitRuleSet(<RuleSet> node);\n            case NodeType.Selector:\n                return this.visitSelector(<Selector> node);\n            case NodeType.SimpleSelector:\n                return this.visitSimpleSelector(<SimpleSelector> node);\n            case NodeType.Declaration:\n                return this.visitDeclaration(<Declaration> node);\n            case NodeType.Function:\n                return this.visitFunction(<Function> node);\n            case NodeType.FunctionDeclaration:\n                return this.visitFunctionDeclaration(<FunctionDeclaration> node);\n            case NodeType.FunctionParameter:\n                return this.visitFunctionParameter(<FunctionParameter> node);\n            case NodeType.FunctionArgument:\n                return this.visitFunctionArgument(<FunctionArgument> node);\n            case NodeType.Term:\n                return this.visitTerm(<Term> node);\n            case NodeType.Declaration:\n                return this.visitExpression(<Expression> node);\n            case NodeType.NumericValue:\n                return this.visitNumericValue(<NumericValue> node);\n            case NodeType.Page:\n                return this.visitPage(<Page> node);\n            case NodeType.PageBoxMarginBox:\n                return this.visitPageBoxMarginBox(<PageBoxMarginBox> node);\n            case NodeType.Property:\n                return this.visitProperty(<Property> node);\n            case NodeType.NumericValue:\n                return this.visitNodelist(<Nodelist> node);\n            case NodeType.Import:\n                return this.visitImport(<Import> node);\n            case NodeType.Namespace:\n                return this.visitNamespace(<Namespace> node);\n            case NodeType.Keyframe:\n                return this.visitKeyframe(<Keyframe> node);\n            case NodeType.KeyframeSelector:\n                return this.visitKeyframeSelector(<KeyframeSelector> node);\n            case NodeType.MixinDeclaration:\n                return this.visitMixinDeclaration(<MixinDeclaration> node);\n            case NodeType.MixinReference:\n                return this.visitMixinReference(<MixinReference> node);\n            case NodeType.Variable:\n                return this.visitVariable(<Variable> node);\n            case NodeType.VariableDeclaration:\n                return this.visitVariableDeclaration(<VariableDeclaration> node);\n        }\n        return this.visitUnknownNode(node);\n    }\n\n    public visitFontFace(node:FontFace):boolean {\n        return true;\n    }\n\n    public visitKeyframe(node:Keyframe):boolean {\n        return true;\n    }\n\n    public visitKeyframeSelector(node:KeyframeSelector):boolean {\n        return true;\n    }\n\n    public visitStylesheet(node:Stylesheet):boolean {\n        return true;\n    }\n\n    public visitProperty(Node:Property):boolean {\n        return true;\n    }\n\n    public visitRuleSet(node:RuleSet):boolean {\n        return true;\n    }\n\n    public visitSelector(node:Selector):boolean {\n        return true;\n    }\n\n    public visitSimpleSelector(node:SimpleSelector):boolean {\n        return true;\n    }\n\n    public visitDeclaration(node:Declaration):boolean {\n        return true;\n    }\n\n    public visitFunction(node:Function):boolean {\n        return true;\n    }\n\n    public visitFunctionDeclaration(node:FunctionDeclaration):boolean {\n        return true;\n    }\n\n    public visitInvocation(node:Invocation):boolean {\n        return true;\n    }\n\n    public visitTerm(node:Term):boolean {\n        return true;\n    }\n\n    public visitImport(node:Import):boolean {\n        return true;\n    }\n\n    public visitNamespace(node:Namespace):boolean {\n        return true;\n    }\n\n    public visitExpression(node:Expression):boolean {\n        return true;\n    }\n\n    public visitNumericValue(node:NumericValue):boolean {\n        return true;\n    }\n\n    public visitPage(node:Page):boolean {\n        return true;\n    }\n\n    public visitPageBoxMarginBox(node:PageBoxMarginBox):boolean {\n        return true;\n    }\n\n    public visitNodelist(node:Nodelist):boolean {\n        return true;\n    }\n\n    public visitVariableDeclaration(node:VariableDeclaration):boolean {\n        return true;\n    }\n\n    public visitVariable(node:Variable):boolean {\n        return true;\n    }\n\n    public visitMixinDeclaration(node:MixinDeclaration):boolean {\n        return true;\n    }\n\n    public visitMixinReference(node:MixinReference):boolean {\n        return true;\n    }\n\n    public visitUnknownNode(node:Node):boolean {\n        return true;\n    }\n}\n*/\nvar ParseErrorCollector = /** @class */ (function () {\n    function ParseErrorCollector() {\n        this.entries = [];\n    }\n    ParseErrorCollector.entries = function (node) {\n        var visitor = new ParseErrorCollector();\n        node.acceptVisitor(visitor);\n        return visitor.entries;\n    };\n    ParseErrorCollector.prototype.visitNode = function (node) {\n        if (node.isErroneous()) {\n            node.collectIssues(this.entries);\n        }\n        return true;\n    };\n    return ParseErrorCollector;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9jc3NOb2Rlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvX2RlcHMvdnNjb2RlLWNzcy1sYW5ndWFnZXNlcnZpY2UvcGFyc2VyL2Nzc05vZGVzLmpzP2I4OWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ndXNlIHN0cmljdCc7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbmltcG9ydCB7IHRyaW0gfSBmcm9tIFwiLi4vdXRpbHMvc3RyaW5ncy5qc1wiO1xuLy8vIDxzdW1tYXJ5PlxuLy8vIE5vZGVzIGZvciB0aGUgY3NzIDIuMSBzcGVjaWZpY2F0aW9uLiBTZWUgZm9yIHJlZmVyZW5jZTpcbi8vLyBodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS9ncmFtbWFyLmh0bWwjZ3JhbW1hclxuLy8vIDwvc3VtbWFyeT5cbmV4cG9ydCB2YXIgTm9kZVR5cGU7XG4oZnVuY3Rpb24gKE5vZGVUeXBlKSB7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJVbmRlZmluZWRcIl0gPSAwXSA9IFwiVW5kZWZpbmVkXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJJZGVudGlmaWVyXCJdID0gMV0gPSBcIklkZW50aWZpZXJcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIlN0eWxlc2hlZXRcIl0gPSAyXSA9IFwiU3R5bGVzaGVldFwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiUnVsZXNldFwiXSA9IDNdID0gXCJSdWxlc2V0XCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJTZWxlY3RvclwiXSA9IDRdID0gXCJTZWxlY3RvclwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiU2ltcGxlU2VsZWN0b3JcIl0gPSA1XSA9IFwiU2ltcGxlU2VsZWN0b3JcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIlNlbGVjdG9ySW50ZXJwb2xhdGlvblwiXSA9IDZdID0gXCJTZWxlY3RvckludGVycG9sYXRpb25cIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIlNlbGVjdG9yQ29tYmluYXRvclwiXSA9IDddID0gXCJTZWxlY3RvckNvbWJpbmF0b3JcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIlNlbGVjdG9yQ29tYmluYXRvclBhcmVudFwiXSA9IDhdID0gXCJTZWxlY3RvckNvbWJpbmF0b3JQYXJlbnRcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIlNlbGVjdG9yQ29tYmluYXRvclNpYmxpbmdcIl0gPSA5XSA9IFwiU2VsZWN0b3JDb21iaW5hdG9yU2libGluZ1wiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiU2VsZWN0b3JDb21iaW5hdG9yQWxsU2libGluZ3NcIl0gPSAxMF0gPSBcIlNlbGVjdG9yQ29tYmluYXRvckFsbFNpYmxpbmdzXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJTZWxlY3RvckNvbWJpbmF0b3JTaGFkb3dQaWVyY2luZ0Rlc2NlbmRhbnRcIl0gPSAxMV0gPSBcIlNlbGVjdG9yQ29tYmluYXRvclNoYWRvd1BpZXJjaW5nRGVzY2VuZGFudFwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiUGFnZVwiXSA9IDEyXSA9IFwiUGFnZVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiUGFnZUJveE1hcmdpbkJveFwiXSA9IDEzXSA9IFwiUGFnZUJveE1hcmdpbkJveFwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiQ2xhc3NTZWxlY3RvclwiXSA9IDE0XSA9IFwiQ2xhc3NTZWxlY3RvclwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiSWRlbnRpZmllclNlbGVjdG9yXCJdID0gMTVdID0gXCJJZGVudGlmaWVyU2VsZWN0b3JcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkVsZW1lbnROYW1lU2VsZWN0b3JcIl0gPSAxNl0gPSBcIkVsZW1lbnROYW1lU2VsZWN0b3JcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIlBzZXVkb1NlbGVjdG9yXCJdID0gMTddID0gXCJQc2V1ZG9TZWxlY3RvclwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiQXR0cmlidXRlU2VsZWN0b3JcIl0gPSAxOF0gPSBcIkF0dHJpYnV0ZVNlbGVjdG9yXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJEZWNsYXJhdGlvblwiXSA9IDE5XSA9IFwiRGVjbGFyYXRpb25cIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkRlY2xhcmF0aW9uc1wiXSA9IDIwXSA9IFwiRGVjbGFyYXRpb25zXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJQcm9wZXJ0eVwiXSA9IDIxXSA9IFwiUHJvcGVydHlcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkV4cHJlc3Npb25cIl0gPSAyMl0gPSBcIkV4cHJlc3Npb25cIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkJpbmFyeUV4cHJlc3Npb25cIl0gPSAyM10gPSBcIkJpbmFyeUV4cHJlc3Npb25cIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIlRlcm1cIl0gPSAyNF0gPSBcIlRlcm1cIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIk9wZXJhdG9yXCJdID0gMjVdID0gXCJPcGVyYXRvclwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiVmFsdWVcIl0gPSAyNl0gPSBcIlZhbHVlXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJTdHJpbmdMaXRlcmFsXCJdID0gMjddID0gXCJTdHJpbmdMaXRlcmFsXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJVUklMaXRlcmFsXCJdID0gMjhdID0gXCJVUklMaXRlcmFsXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJFc2NhcGVkVmFsdWVcIl0gPSAyOV0gPSBcIkVzY2FwZWRWYWx1ZVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiRnVuY3Rpb25cIl0gPSAzMF0gPSBcIkZ1bmN0aW9uXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJOdW1lcmljVmFsdWVcIl0gPSAzMV0gPSBcIk51bWVyaWNWYWx1ZVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiSGV4Q29sb3JWYWx1ZVwiXSA9IDMyXSA9IFwiSGV4Q29sb3JWYWx1ZVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiTWl4aW5EZWNsYXJhdGlvblwiXSA9IDMzXSA9IFwiTWl4aW5EZWNsYXJhdGlvblwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiTWl4aW5SZWZlcmVuY2VcIl0gPSAzNF0gPSBcIk1peGluUmVmZXJlbmNlXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJWYXJpYWJsZU5hbWVcIl0gPSAzNV0gPSBcIlZhcmlhYmxlTmFtZVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiVmFyaWFibGVEZWNsYXJhdGlvblwiXSA9IDM2XSA9IFwiVmFyaWFibGVEZWNsYXJhdGlvblwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiUHJpb1wiXSA9IDM3XSA9IFwiUHJpb1wiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiSW50ZXJwb2xhdGlvblwiXSA9IDM4XSA9IFwiSW50ZXJwb2xhdGlvblwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiTmVzdGVkUHJvcGVydGllc1wiXSA9IDM5XSA9IFwiTmVzdGVkUHJvcGVydGllc1wiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiRXh0ZW5kc1JlZmVyZW5jZVwiXSA9IDQwXSA9IFwiRXh0ZW5kc1JlZmVyZW5jZVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiU2VsZWN0b3JQbGFjZWhvbGRlclwiXSA9IDQxXSA9IFwiU2VsZWN0b3JQbGFjZWhvbGRlclwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiRGVidWdcIl0gPSA0Ml0gPSBcIkRlYnVnXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJJZlwiXSA9IDQzXSA9IFwiSWZcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkVsc2VcIl0gPSA0NF0gPSBcIkVsc2VcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkZvclwiXSA9IDQ1XSA9IFwiRm9yXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJFYWNoXCJdID0gNDZdID0gXCJFYWNoXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJXaGlsZVwiXSA9IDQ3XSA9IFwiV2hpbGVcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIk1peGluQ29udGVudFJlZmVyZW5jZVwiXSA9IDQ4XSA9IFwiTWl4aW5Db250ZW50UmVmZXJlbmNlXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJNaXhpbkNvbnRlbnREZWNsYXJhdGlvblwiXSA9IDQ5XSA9IFwiTWl4aW5Db250ZW50RGVjbGFyYXRpb25cIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIk1lZGlhXCJdID0gNTBdID0gXCJNZWRpYVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiS2V5ZnJhbWVcIl0gPSA1MV0gPSBcIktleWZyYW1lXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJGb250RmFjZVwiXSA9IDUyXSA9IFwiRm9udEZhY2VcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkltcG9ydFwiXSA9IDUzXSA9IFwiSW1wb3J0XCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJOYW1lc3BhY2VcIl0gPSA1NF0gPSBcIk5hbWVzcGFjZVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiSW52b2NhdGlvblwiXSA9IDU1XSA9IFwiSW52b2NhdGlvblwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiRnVuY3Rpb25EZWNsYXJhdGlvblwiXSA9IDU2XSA9IFwiRnVuY3Rpb25EZWNsYXJhdGlvblwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiUmV0dXJuU3RhdGVtZW50XCJdID0gNTddID0gXCJSZXR1cm5TdGF0ZW1lbnRcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIk1lZGlhUXVlcnlcIl0gPSA1OF0gPSBcIk1lZGlhUXVlcnlcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkZ1bmN0aW9uUGFyYW1ldGVyXCJdID0gNTldID0gXCJGdW5jdGlvblBhcmFtZXRlclwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiRnVuY3Rpb25Bcmd1bWVudFwiXSA9IDYwXSA9IFwiRnVuY3Rpb25Bcmd1bWVudFwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiS2V5ZnJhbWVTZWxlY3RvclwiXSA9IDYxXSA9IFwiS2V5ZnJhbWVTZWxlY3RvclwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiVmlld1BvcnRcIl0gPSA2Ml0gPSBcIlZpZXdQb3J0XCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJEb2N1bWVudFwiXSA9IDYzXSA9IFwiRG9jdW1lbnRcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkF0QXBwbHlSdWxlXCJdID0gNjRdID0gXCJBdEFwcGx5UnVsZVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiQ3VzdG9tUHJvcGVydHlEZWNsYXJhdGlvblwiXSA9IDY1XSA9IFwiQ3VzdG9tUHJvcGVydHlEZWNsYXJhdGlvblwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiQ3VzdG9tUHJvcGVydHlTZXRcIl0gPSA2Nl0gPSBcIkN1c3RvbVByb3BlcnR5U2V0XCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJMaXN0RW50cnlcIl0gPSA2N10gPSBcIkxpc3RFbnRyeVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiU3VwcG9ydHNcIl0gPSA2OF0gPSBcIlN1cHBvcnRzXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJTdXBwb3J0c0NvbmRpdGlvblwiXSA9IDY5XSA9IFwiU3VwcG9ydHNDb25kaXRpb25cIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIk5hbWVzcGFjZVByZWZpeFwiXSA9IDcwXSA9IFwiTmFtZXNwYWNlUHJlZml4XCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJHcmlkTGluZVwiXSA9IDcxXSA9IFwiR3JpZExpbmVcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIlBsdWdpblwiXSA9IDcyXSA9IFwiUGx1Z2luXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJVbmtub3duQXRSdWxlXCJdID0gNzNdID0gXCJVbmtub3duQXRSdWxlXCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJVc2VcIl0gPSA3NF0gPSBcIlVzZVwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiTW9kdWxlQ29uZmlndXJhdGlvblwiXSA9IDc1XSA9IFwiTW9kdWxlQ29uZmlndXJhdGlvblwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiRm9yd2FyZFwiXSA9IDc2XSA9IFwiRm9yd2FyZFwiO1xuICAgIE5vZGVUeXBlW05vZGVUeXBlW1wiRm9yd2FyZFZpc2liaWxpdHlcIl0gPSA3N10gPSBcIkZvcndhcmRWaXNpYmlsaXR5XCI7XG4gICAgTm9kZVR5cGVbTm9kZVR5cGVbXCJNb2R1bGVcIl0gPSA3OF0gPSBcIk1vZHVsZVwiO1xufSkoTm9kZVR5cGUgfHwgKE5vZGVUeXBlID0ge30pKTtcbmV4cG9ydCB2YXIgUmVmZXJlbmNlVHlwZTtcbihmdW5jdGlvbiAoUmVmZXJlbmNlVHlwZSkge1xuICAgIFJlZmVyZW5jZVR5cGVbUmVmZXJlbmNlVHlwZVtcIk1peGluXCJdID0gMF0gPSBcIk1peGluXCI7XG4gICAgUmVmZXJlbmNlVHlwZVtSZWZlcmVuY2VUeXBlW1wiUnVsZVwiXSA9IDFdID0gXCJSdWxlXCI7XG4gICAgUmVmZXJlbmNlVHlwZVtSZWZlcmVuY2VUeXBlW1wiVmFyaWFibGVcIl0gPSAyXSA9IFwiVmFyaWFibGVcIjtcbiAgICBSZWZlcmVuY2VUeXBlW1JlZmVyZW5jZVR5cGVbXCJGdW5jdGlvblwiXSA9IDNdID0gXCJGdW5jdGlvblwiO1xuICAgIFJlZmVyZW5jZVR5cGVbUmVmZXJlbmNlVHlwZVtcIktleWZyYW1lXCJdID0gNF0gPSBcIktleWZyYW1lXCI7XG4gICAgUmVmZXJlbmNlVHlwZVtSZWZlcmVuY2VUeXBlW1wiVW5rbm93blwiXSA9IDVdID0gXCJVbmtub3duXCI7XG4gICAgUmVmZXJlbmNlVHlwZVtSZWZlcmVuY2VUeXBlW1wiTW9kdWxlXCJdID0gNl0gPSBcIk1vZHVsZVwiO1xuICAgIFJlZmVyZW5jZVR5cGVbUmVmZXJlbmNlVHlwZVtcIkZvcndhcmRcIl0gPSA3XSA9IFwiRm9yd2FyZFwiO1xuICAgIFJlZmVyZW5jZVR5cGVbUmVmZXJlbmNlVHlwZVtcIkZvcndhcmRWaXNpYmlsaXR5XCJdID0gOF0gPSBcIkZvcndhcmRWaXNpYmlsaXR5XCI7XG59KShSZWZlcmVuY2VUeXBlIHx8IChSZWZlcmVuY2VUeXBlID0ge30pKTtcbmV4cG9ydCBmdW5jdGlvbiBnZXROb2RlQXRPZmZzZXQobm9kZSwgb2Zmc2V0KSB7XG4gICAgdmFyIGNhbmRpZGF0ZSA9IG51bGw7XG4gICAgaWYgKCFub2RlIHx8IG9mZnNldCA8IG5vZGUub2Zmc2V0IHx8IG9mZnNldCA+IG5vZGUuZW5kKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvLyBGaW5kIHRoZSBzaG9ydGVzdCBub2RlIGF0IHRoZSBwb3NpdGlvblxuICAgIG5vZGUuYWNjZXB0KGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIGlmIChub2RlLm9mZnNldCA9PT0gLTEgJiYgbm9kZS5sZW5ndGggPT09IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZS5vZmZzZXQgPD0gb2Zmc2V0ICYmIG5vZGUuZW5kID49IG9mZnNldCkge1xuICAgICAgICAgICAgaWYgKCFjYW5kaWRhdGUpIHtcbiAgICAgICAgICAgICAgICBjYW5kaWRhdGUgPSBub2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAobm9kZS5sZW5ndGggPD0gY2FuZGlkYXRlLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGNhbmRpZGF0ZSA9IG5vZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG4gICAgcmV0dXJuIGNhbmRpZGF0ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXROb2RlUGF0aChub2RlLCBvZmZzZXQpIHtcbiAgICB2YXIgY2FuZGlkYXRlID0gZ2V0Tm9kZUF0T2Zmc2V0KG5vZGUsIG9mZnNldCk7XG4gICAgdmFyIHBhdGggPSBbXTtcbiAgICB3aGlsZSAoY2FuZGlkYXRlKSB7XG4gICAgICAgIHBhdGgudW5zaGlmdChjYW5kaWRhdGUpO1xuICAgICAgICBjYW5kaWRhdGUgPSBjYW5kaWRhdGUucGFyZW50O1xuICAgIH1cbiAgICByZXR1cm4gcGF0aDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXJlbnREZWNsYXJhdGlvbihub2RlKSB7XG4gICAgdmFyIGRlY2wgPSBub2RlLmZpbmRQYXJlbnQoTm9kZVR5cGUuRGVjbGFyYXRpb24pO1xuICAgIHZhciB2YWx1ZSA9IGRlY2wgJiYgZGVjbC5nZXRWYWx1ZSgpO1xuICAgIGlmICh2YWx1ZSAmJiB2YWx1ZS5lbmNsb3Nlcyhub2RlKSkge1xuICAgICAgICByZXR1cm4gZGVjbDtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG52YXIgTm9kZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb2RlKG9mZnNldCwgbGVuLCBub2RlVHlwZSkge1xuICAgICAgICBpZiAob2Zmc2V0ID09PSB2b2lkIDApIHsgb2Zmc2V0ID0gLTE7IH1cbiAgICAgICAgaWYgKGxlbiA9PT0gdm9pZCAwKSB7IGxlbiA9IC0xOyB9XG4gICAgICAgIHRoaXMucGFyZW50ID0gbnVsbDtcbiAgICAgICAgdGhpcy5vZmZzZXQgPSBvZmZzZXQ7XG4gICAgICAgIHRoaXMubGVuZ3RoID0gbGVuO1xuICAgICAgICBpZiAobm9kZVR5cGUpIHtcbiAgICAgICAgICAgIHRoaXMubm9kZVR5cGUgPSBub2RlVHlwZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTm9kZS5wcm90b3R5cGUsIFwiZW5kXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLm9mZnNldCArIHRoaXMubGVuZ3RoOyB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTm9kZS5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubm9kZVR5cGUgfHwgTm9kZVR5cGUuVW5kZWZpbmVkO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgICAgICB0aGlzLm5vZGVUeXBlID0gdHlwZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgTm9kZS5wcm90b3R5cGUuZ2V0VGV4dFByb3ZpZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbm9kZSA9IHRoaXM7XG4gICAgICAgIHdoaWxlIChub2RlICYmICFub2RlLnRleHRQcm92aWRlcikge1xuICAgICAgICAgICAgbm9kZSA9IG5vZGUucGFyZW50O1xuICAgICAgICB9XG4gICAgICAgIGlmIChub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gbm9kZS50ZXh0UHJvdmlkZXI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgcmV0dXJuICd1bmtub3duJzsgfTtcbiAgICB9O1xuICAgIE5vZGUucHJvdG90eXBlLmdldFRleHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFRleHRQcm92aWRlcigpKHRoaXMub2Zmc2V0LCB0aGlzLmxlbmd0aCk7XG4gICAgfTtcbiAgICBOb2RlLnByb3RvdHlwZS5tYXRjaGVzID0gZnVuY3Rpb24gKHN0cikge1xuICAgICAgICByZXR1cm4gdGhpcy5sZW5ndGggPT09IHN0ci5sZW5ndGggJiYgdGhpcy5nZXRUZXh0UHJvdmlkZXIoKSh0aGlzLm9mZnNldCwgdGhpcy5sZW5ndGgpID09PSBzdHI7XG4gICAgfTtcbiAgICBOb2RlLnByb3RvdHlwZS5zdGFydHNXaXRoID0gZnVuY3Rpb24gKHN0cikge1xuICAgICAgICByZXR1cm4gdGhpcy5sZW5ndGggPj0gc3RyLmxlbmd0aCAmJiB0aGlzLmdldFRleHRQcm92aWRlcigpKHRoaXMub2Zmc2V0LCBzdHIubGVuZ3RoKSA9PT0gc3RyO1xuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUuZW5kc1dpdGggPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxlbmd0aCA+PSBzdHIubGVuZ3RoICYmIHRoaXMuZ2V0VGV4dFByb3ZpZGVyKCkodGhpcy5lbmQgLSBzdHIubGVuZ3RoLCBzdHIubGVuZ3RoKSA9PT0gc3RyO1xuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUuYWNjZXB0ID0gZnVuY3Rpb24gKHZpc2l0b3IpIHtcbiAgICAgICAgaWYgKHZpc2l0b3IodGhpcykgJiYgdGhpcy5jaGlsZHJlbikge1xuICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IHRoaXMuY2hpbGRyZW47IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGNoaWxkID0gX2FbX2ldO1xuICAgICAgICAgICAgICAgIGNoaWxkLmFjY2VwdCh2aXNpdG9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUuYWNjZXB0VmlzaXRvciA9IGZ1bmN0aW9uICh2aXNpdG9yKSB7XG4gICAgICAgIHRoaXMuYWNjZXB0KHZpc2l0b3IudmlzaXROb2RlLmJpbmQodmlzaXRvcikpO1xuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUuYWRvcHRDaGlsZCA9IGZ1bmN0aW9uIChub2RlLCBpbmRleCkge1xuICAgICAgICBpZiAoaW5kZXggPT09IHZvaWQgMCkgeyBpbmRleCA9IC0xOyB9XG4gICAgICAgIGlmIChub2RlLnBhcmVudCAmJiBub2RlLnBhcmVudC5jaGlsZHJlbikge1xuICAgICAgICAgICAgdmFyIGlkeCA9IG5vZGUucGFyZW50LmNoaWxkcmVuLmluZGV4T2Yobm9kZSk7XG4gICAgICAgICAgICBpZiAoaWR4ID49IDApIHtcbiAgICAgICAgICAgICAgICBub2RlLnBhcmVudC5jaGlsZHJlbi5zcGxpY2UoaWR4LCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBub2RlLnBhcmVudCA9IHRoaXM7XG4gICAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMuY2hpbGRyZW47XG4gICAgICAgIGlmICghY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGNoaWxkcmVuID0gdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgIGNoaWxkcmVuLnNwbGljZShpbmRleCwgMCwgbm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjaGlsZHJlbi5wdXNoKG5vZGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBub2RlO1xuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUuYXR0YWNoVG8gPSBmdW5jdGlvbiAocGFyZW50LCBpbmRleCkge1xuICAgICAgICBpZiAoaW5kZXggPT09IHZvaWQgMCkgeyBpbmRleCA9IC0xOyB9XG4gICAgICAgIGlmIChwYXJlbnQpIHtcbiAgICAgICAgICAgIHBhcmVudC5hZG9wdENoaWxkKHRoaXMsIGluZGV4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9O1xuICAgIE5vZGUucHJvdG90eXBlLmNvbGxlY3RJc3N1ZXMgPSBmdW5jdGlvbiAocmVzdWx0cykge1xuICAgICAgICBpZiAodGhpcy5pc3N1ZXMpIHtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaC5hcHBseShyZXN1bHRzLCB0aGlzLmlzc3Vlcyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE5vZGUucHJvdG90eXBlLmFkZElzc3VlID0gZnVuY3Rpb24gKGlzc3VlKSB7XG4gICAgICAgIGlmICghdGhpcy5pc3N1ZXMpIHtcbiAgICAgICAgICAgIHRoaXMuaXNzdWVzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pc3N1ZXMucHVzaChpc3N1ZSk7XG4gICAgfTtcbiAgICBOb2RlLnByb3RvdHlwZS5oYXNJc3N1ZSA9IGZ1bmN0aW9uIChydWxlKSB7XG4gICAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KHRoaXMuaXNzdWVzKSAmJiB0aGlzLmlzc3Vlcy5zb21lKGZ1bmN0aW9uIChpKSB7IHJldHVybiBpLmdldFJ1bGUoKSA9PT0gcnVsZTsgfSk7XG4gICAgfTtcbiAgICBOb2RlLnByb3RvdHlwZS5pc0Vycm9uZW91cyA9IGZ1bmN0aW9uIChyZWN1cnNpdmUpIHtcbiAgICAgICAgaWYgKHJlY3Vyc2l2ZSA9PT0gdm9pZCAwKSB7IHJlY3Vyc2l2ZSA9IGZhbHNlOyB9XG4gICAgICAgIGlmICh0aGlzLmlzc3VlcyAmJiB0aGlzLmlzc3Vlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVjdXJzaXZlICYmIEFycmF5LmlzQXJyYXkodGhpcy5jaGlsZHJlbikgJiYgdGhpcy5jaGlsZHJlbi5zb21lKGZ1bmN0aW9uIChjKSB7IHJldHVybiBjLmlzRXJyb25lb3VzKHRydWUpOyB9KTtcbiAgICB9O1xuICAgIE5vZGUucHJvdG90eXBlLnNldE5vZGUgPSBmdW5jdGlvbiAoZmllbGQsIG5vZGUsIGluZGV4KSB7XG4gICAgICAgIGlmIChpbmRleCA9PT0gdm9pZCAwKSB7IGluZGV4ID0gLTE7IH1cbiAgICAgICAgaWYgKG5vZGUpIHtcbiAgICAgICAgICAgIG5vZGUuYXR0YWNoVG8odGhpcywgaW5kZXgpO1xuICAgICAgICAgICAgdGhpc1tmaWVsZF0gPSBub2RlO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUuYWRkQ2hpbGQgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbm9kZS5hdHRhY2hUbyh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlT2Zmc2V0QW5kTGVuZ3RoKG5vZGUpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUudXBkYXRlT2Zmc2V0QW5kTGVuZ3RoID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUub2Zmc2V0IDwgdGhpcy5vZmZzZXQgfHwgdGhpcy5vZmZzZXQgPT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLm9mZnNldCA9IG5vZGUub2Zmc2V0O1xuICAgICAgICB9XG4gICAgICAgIHZhciBub2RlRW5kID0gbm9kZS5lbmQ7XG4gICAgICAgIGlmICgobm9kZUVuZCA+IHRoaXMuZW5kKSB8fCB0aGlzLmxlbmd0aCA9PT0gLTEpIHtcbiAgICAgICAgICAgIHRoaXMubGVuZ3RoID0gbm9kZUVuZCAtIHRoaXMub2Zmc2V0O1xuICAgICAgICB9XG4gICAgfTtcbiAgICBOb2RlLnByb3RvdHlwZS5oYXNDaGlsZHJlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICEhdGhpcy5jaGlsZHJlbiAmJiB0aGlzLmNoaWxkcmVuLmxlbmd0aCA+IDA7XG4gICAgfTtcbiAgICBOb2RlLnByb3RvdHlwZS5nZXRDaGlsZHJlbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2hpbGRyZW4gPyB0aGlzLmNoaWxkcmVuLnNsaWNlKDApIDogW107XG4gICAgfTtcbiAgICBOb2RlLnByb3RvdHlwZS5nZXRDaGlsZCA9IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICBpZiAodGhpcy5jaGlsZHJlbiAmJiBpbmRleCA8IHRoaXMuY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jaGlsZHJlbltpbmRleF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICBOb2RlLnByb3RvdHlwZS5hZGRDaGlsZHJlbiA9IGZ1bmN0aW9uIChub2Rlcykge1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIG5vZGVzXzEgPSBub2RlczsgX2kgPCBub2Rlc18xLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgdmFyIG5vZGUgPSBub2Rlc18xW19pXTtcbiAgICAgICAgICAgIHRoaXMuYWRkQ2hpbGQobm9kZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIE5vZGUucHJvdG90eXBlLmZpbmRGaXJzdENoaWxkQmVmb3JlT2Zmc2V0ID0gZnVuY3Rpb24gKG9mZnNldCkge1xuICAgICAgICBpZiAodGhpcy5jaGlsZHJlbikge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSBudWxsO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IHRoaXMuY2hpbGRyZW4ubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICAgICAgICAvLyBpdGVyYXRlIHVudGlsIHdlIGZpbmQgYSBjaGlsZCB0aGF0IGhhcyBhIHN0YXJ0IG9mZnNldCBzbWFsbGVyIHRoYW4gdGhlIGlucHV0IG9mZnNldFxuICAgICAgICAgICAgICAgIGN1cnJlbnQgPSB0aGlzLmNoaWxkcmVuW2ldO1xuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50Lm9mZnNldCA8PSBvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUuZmluZENoaWxkQXRPZmZzZXQgPSBmdW5jdGlvbiAob2Zmc2V0LCBnb0RlZXApIHtcbiAgICAgICAgdmFyIGN1cnJlbnQgPSB0aGlzLmZpbmRGaXJzdENoaWxkQmVmb3JlT2Zmc2V0KG9mZnNldCk7XG4gICAgICAgIGlmIChjdXJyZW50ICYmIGN1cnJlbnQuZW5kID49IG9mZnNldCkge1xuICAgICAgICAgICAgaWYgKGdvRGVlcCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjdXJyZW50LmZpbmRDaGlsZEF0T2Zmc2V0KG9mZnNldCwgdHJ1ZSkgfHwgY3VycmVudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjdXJyZW50O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUuZW5jbG9zZXMgPSBmdW5jdGlvbiAoY2FuZGlkYXRlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9mZnNldCA8PSBjYW5kaWRhdGUub2Zmc2V0ICYmIHRoaXMub2Zmc2V0ICsgdGhpcy5sZW5ndGggPj0gY2FuZGlkYXRlLm9mZnNldCArIGNhbmRpZGF0ZS5sZW5ndGg7XG4gICAgfTtcbiAgICBOb2RlLnByb3RvdHlwZS5nZXRQYXJlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSB0aGlzLnBhcmVudDtcbiAgICAgICAgd2hpbGUgKHJlc3VsdCBpbnN0YW5jZW9mIE5vZGVsaXN0KSB7XG4gICAgICAgICAgICByZXN1bHQgPSByZXN1bHQucGFyZW50O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBOb2RlLnByb3RvdHlwZS5maW5kUGFyZW50ID0gZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXM7XG4gICAgICAgIHdoaWxlIChyZXN1bHQgJiYgcmVzdWx0LnR5cGUgIT09IHR5cGUpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdC5wYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIE5vZGUucHJvdG90eXBlLmZpbmRBUGFyZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdHlwZXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIHR5cGVzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXM7XG4gICAgICAgIHdoaWxlIChyZXN1bHQgJiYgIXR5cGVzLnNvbWUoZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHJlc3VsdC50eXBlID09PSB0OyB9KSkge1xuICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LnBhcmVudDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUuc2V0RGF0YSA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICAgIGlmICghdGhpcy5vcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9wdGlvbnNba2V5XSA9IHZhbHVlO1xuICAgIH07XG4gICAgTm9kZS5wcm90b3R5cGUuZ2V0RGF0YSA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMgfHwgIXRoaXMub3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zW2tleV07XG4gICAgfTtcbiAgICByZXR1cm4gTm9kZTtcbn0oKSk7XG5leHBvcnQgeyBOb2RlIH07XG52YXIgTm9kZWxpc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE5vZGVsaXN0LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE5vZGVsaXN0KHBhcmVudCwgaW5kZXgpIHtcbiAgICAgICAgaWYgKGluZGV4ID09PSB2b2lkIDApIHsgaW5kZXggPSAtMTsgfVxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCAtMSwgLTEpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmF0dGFjaFRvKHBhcmVudCwgaW5kZXgpO1xuICAgICAgICBfdGhpcy5vZmZzZXQgPSAtMTtcbiAgICAgICAgX3RoaXMubGVuZ3RoID0gLTE7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIE5vZGVsaXN0O1xufShOb2RlKSk7XG5leHBvcnQgeyBOb2RlbGlzdCB9O1xudmFyIElkZW50aWZpZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKElkZW50aWZpZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSWRlbnRpZmllcihvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuaXNDdXN0b21Qcm9wZXJ0eSA9IGZhbHNlO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShJZGVudGlmaWVyLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuSWRlbnRpZmllcjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgSWRlbnRpZmllci5wcm90b3R5cGUuY29udGFpbnNJbnRlcnBvbGF0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5oYXNDaGlsZHJlbigpO1xuICAgIH07XG4gICAgcmV0dXJuIElkZW50aWZpZXI7XG59KE5vZGUpKTtcbmV4cG9ydCB7IElkZW50aWZpZXIgfTtcbnZhciBTdHlsZXNoZWV0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhTdHlsZXNoZWV0LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFN0eWxlc2hlZXQob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3R5bGVzaGVldC5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLlN0eWxlc2hlZXQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBTdHlsZXNoZWV0O1xufShOb2RlKSk7XG5leHBvcnQgeyBTdHlsZXNoZWV0IH07XG52YXIgRGVjbGFyYXRpb25zID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhEZWNsYXJhdGlvbnMsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRGVjbGFyYXRpb25zKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KERlY2xhcmF0aW9ucy5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLkRlY2xhcmF0aW9ucztcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIERlY2xhcmF0aW9ucztcbn0oTm9kZSkpO1xuZXhwb3J0IHsgRGVjbGFyYXRpb25zIH07XG52YXIgQm9keURlY2xhcmF0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhCb2R5RGVjbGFyYXRpb24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQm9keURlY2xhcmF0aW9uKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgQm9keURlY2xhcmF0aW9uLnByb3RvdHlwZS5nZXREZWNsYXJhdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRlY2xhcmF0aW9ucztcbiAgICB9O1xuICAgIEJvZHlEZWNsYXJhdGlvbi5wcm90b3R5cGUuc2V0RGVjbGFyYXRpb25zID0gZnVuY3Rpb24gKGRlY2xzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ2RlY2xhcmF0aW9ucycsIGRlY2xzKTtcbiAgICB9O1xuICAgIHJldHVybiBCb2R5RGVjbGFyYXRpb247XG59KE5vZGUpKTtcbmV4cG9ydCB7IEJvZHlEZWNsYXJhdGlvbiB9O1xudmFyIFJ1bGVTZXQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFJ1bGVTZXQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUnVsZVNldChvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShSdWxlU2V0LnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuUnVsZXNldDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgUnVsZVNldC5wcm90b3R5cGUuZ2V0U2VsZWN0b3JzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuc2VsZWN0b3JzKSB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdG9ycyA9IG5ldyBOb2RlbGlzdCh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5zZWxlY3RvcnM7XG4gICAgfTtcbiAgICBSdWxlU2V0LnByb3RvdHlwZS5pc05lc3RlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuICEhdGhpcy5wYXJlbnQgJiYgdGhpcy5wYXJlbnQuZmluZFBhcmVudChOb2RlVHlwZS5EZWNsYXJhdGlvbnMpICE9PSBudWxsO1xuICAgIH07XG4gICAgcmV0dXJuIFJ1bGVTZXQ7XG59KEJvZHlEZWNsYXJhdGlvbikpO1xuZXhwb3J0IHsgUnVsZVNldCB9O1xudmFyIFNlbGVjdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhTZWxlY3RvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTZWxlY3RvcihvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTZWxlY3Rvci5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLlNlbGVjdG9yO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gU2VsZWN0b3I7XG59KE5vZGUpKTtcbmV4cG9ydCB7IFNlbGVjdG9yIH07XG52YXIgU2ltcGxlU2VsZWN0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFNpbXBsZVNlbGVjdG9yLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFNpbXBsZVNlbGVjdG9yKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNpbXBsZVNlbGVjdG9yLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuU2ltcGxlU2VsZWN0b3I7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBTaW1wbGVTZWxlY3Rvcjtcbn0oTm9kZSkpO1xuZXhwb3J0IHsgU2ltcGxlU2VsZWN0b3IgfTtcbnZhciBBdEFwcGx5UnVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQXRBcHBseVJ1bGUsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQXRBcHBseVJ1bGUob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQXRBcHBseVJ1bGUucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5BdEFwcGx5UnVsZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgQXRBcHBseVJ1bGUucHJvdG90eXBlLnNldElkZW50aWZpZXIgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdpZGVudGlmaWVyJywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBBdEFwcGx5UnVsZS5wcm90b3R5cGUuZ2V0SWRlbnRpZmllciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllcjtcbiAgICB9O1xuICAgIEF0QXBwbHlSdWxlLnByb3RvdHlwZS5nZXROYW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZGVudGlmaWVyID8gdGhpcy5pZGVudGlmaWVyLmdldFRleHQoKSA6ICcnO1xuICAgIH07XG4gICAgcmV0dXJuIEF0QXBwbHlSdWxlO1xufShOb2RlKSk7XG5leHBvcnQgeyBBdEFwcGx5UnVsZSB9O1xudmFyIEFic3RyYWN0RGVjbGFyYXRpb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEFic3RyYWN0RGVjbGFyYXRpb24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQWJzdHJhY3REZWNsYXJhdGlvbihvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBBYnN0cmFjdERlY2xhcmF0aW9uO1xufShOb2RlKSk7XG5leHBvcnQgeyBBYnN0cmFjdERlY2xhcmF0aW9uIH07XG52YXIgQ3VzdG9tUHJvcGVydHlEZWNsYXJhdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQ3VzdG9tUHJvcGVydHlEZWNsYXJhdGlvbiwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBDdXN0b21Qcm9wZXJ0eURlY2xhcmF0aW9uKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEN1c3RvbVByb3BlcnR5RGVjbGFyYXRpb24ucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5DdXN0b21Qcm9wZXJ0eURlY2xhcmF0aW9uO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBDdXN0b21Qcm9wZXJ0eURlY2xhcmF0aW9uLnByb3RvdHlwZS5zZXRQcm9wZXJ0eSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ3Byb3BlcnR5Jywgbm9kZSk7XG4gICAgfTtcbiAgICBDdXN0b21Qcm9wZXJ0eURlY2xhcmF0aW9uLnByb3RvdHlwZS5nZXRQcm9wZXJ0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcGVydHk7XG4gICAgfTtcbiAgICBDdXN0b21Qcm9wZXJ0eURlY2xhcmF0aW9uLnByb3RvdHlwZS5zZXRWYWx1ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCd2YWx1ZScsIHZhbHVlKTtcbiAgICB9O1xuICAgIEN1c3RvbVByb3BlcnR5RGVjbGFyYXRpb24ucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICB9O1xuICAgIEN1c3RvbVByb3BlcnR5RGVjbGFyYXRpb24ucHJvdG90eXBlLnNldFByb3BlcnR5U2V0ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ3Byb3BlcnR5U2V0JywgdmFsdWUpO1xuICAgIH07XG4gICAgQ3VzdG9tUHJvcGVydHlEZWNsYXJhdGlvbi5wcm90b3R5cGUuZ2V0UHJvcGVydHlTZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3BlcnR5U2V0O1xuICAgIH07XG4gICAgcmV0dXJuIEN1c3RvbVByb3BlcnR5RGVjbGFyYXRpb247XG59KEFic3RyYWN0RGVjbGFyYXRpb24pKTtcbmV4cG9ydCB7IEN1c3RvbVByb3BlcnR5RGVjbGFyYXRpb24gfTtcbnZhciBDdXN0b21Qcm9wZXJ0eVNldCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQ3VzdG9tUHJvcGVydHlTZXQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ3VzdG9tUHJvcGVydHlTZXQob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ3VzdG9tUHJvcGVydHlTZXQucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5DdXN0b21Qcm9wZXJ0eVNldDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIEN1c3RvbVByb3BlcnR5U2V0O1xufShCb2R5RGVjbGFyYXRpb24pKTtcbmV4cG9ydCB7IEN1c3RvbVByb3BlcnR5U2V0IH07XG52YXIgRGVjbGFyYXRpb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKERlY2xhcmF0aW9uLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIERlY2xhcmF0aW9uKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5wcm9wZXJ0eSA9IG51bGw7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KERlY2xhcmF0aW9uLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuRGVjbGFyYXRpb247XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIERlY2xhcmF0aW9uLnByb3RvdHlwZS5zZXRQcm9wZXJ0eSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ3Byb3BlcnR5Jywgbm9kZSk7XG4gICAgfTtcbiAgICBEZWNsYXJhdGlvbi5wcm90b3R5cGUuZ2V0UHJvcGVydHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3BlcnR5O1xuICAgIH07XG4gICAgRGVjbGFyYXRpb24ucHJvdG90eXBlLmdldEZ1bGxQcm9wZXJ0eU5hbWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBwcm9wZXJ0eU5hbWUgPSB0aGlzLnByb3BlcnR5ID8gdGhpcy5wcm9wZXJ0eS5nZXROYW1lKCkgOiAndW5rbm93bic7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudCBpbnN0YW5jZW9mIERlY2xhcmF0aW9ucyAmJiB0aGlzLnBhcmVudC5nZXRQYXJlbnQoKSBpbnN0YW5jZW9mIE5lc3RlZFByb3BlcnRpZXMpIHtcbiAgICAgICAgICAgIHZhciBwYXJlbnREZWNsID0gdGhpcy5wYXJlbnQuZ2V0UGFyZW50KCkuZ2V0UGFyZW50KCk7XG4gICAgICAgICAgICBpZiAocGFyZW50RGVjbCBpbnN0YW5jZW9mIERlY2xhcmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcmVudERlY2wuZ2V0RnVsbFByb3BlcnR5TmFtZSgpICsgcHJvcGVydHlOYW1lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcm9wZXJ0eU5hbWU7XG4gICAgfTtcbiAgICBEZWNsYXJhdGlvbi5wcm90b3R5cGUuZ2V0Tm9uUHJlZml4ZWRQcm9wZXJ0eU5hbWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBwcm9wZXJ0eU5hbWUgPSB0aGlzLmdldEZ1bGxQcm9wZXJ0eU5hbWUoKTtcbiAgICAgICAgaWYgKHByb3BlcnR5TmFtZSAmJiBwcm9wZXJ0eU5hbWUuY2hhckF0KDApID09PSAnLScpIHtcbiAgICAgICAgICAgIHZhciB2ZW5kb3JQcmVmaXhFbmQgPSBwcm9wZXJ0eU5hbWUuaW5kZXhPZignLScsIDEpO1xuICAgICAgICAgICAgaWYgKHZlbmRvclByZWZpeEVuZCAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcGVydHlOYW1lLnN1YnN0cmluZyh2ZW5kb3JQcmVmaXhFbmQgKyAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJvcGVydHlOYW1lO1xuICAgIH07XG4gICAgRGVjbGFyYXRpb24ucHJvdG90eXBlLnNldFZhbHVlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ3ZhbHVlJywgdmFsdWUpO1xuICAgIH07XG4gICAgRGVjbGFyYXRpb24ucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICB9O1xuICAgIERlY2xhcmF0aW9uLnByb3RvdHlwZS5zZXROZXN0ZWRQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ25lc3RlZFByb3BlcnRpZXMnLCB2YWx1ZSk7XG4gICAgfTtcbiAgICBEZWNsYXJhdGlvbi5wcm90b3R5cGUuZ2V0TmVzdGVkUHJvcGVydGllcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmVzdGVkUHJvcGVydGllcztcbiAgICB9O1xuICAgIHJldHVybiBEZWNsYXJhdGlvbjtcbn0oQWJzdHJhY3REZWNsYXJhdGlvbikpO1xuZXhwb3J0IHsgRGVjbGFyYXRpb24gfTtcbnZhciBQcm9wZXJ0eSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUHJvcGVydHksIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUHJvcGVydHkob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUHJvcGVydHkucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5Qcm9wZXJ0eTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgUHJvcGVydHkucHJvdG90eXBlLnNldElkZW50aWZpZXIgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2V0Tm9kZSgnaWRlbnRpZmllcicsIHZhbHVlKTtcbiAgICB9O1xuICAgIFByb3BlcnR5LnByb3RvdHlwZS5nZXRJZGVudGlmaWVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZGVudGlmaWVyO1xuICAgIH07XG4gICAgUHJvcGVydHkucHJvdG90eXBlLmdldE5hbWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0cmltKHRoaXMuZ2V0VGV4dCgpLCAvW19cXCtdKyQvKTsgLyogK186IGxlc3MgbWVyZ2UgKi9cbiAgICB9O1xuICAgIFByb3BlcnR5LnByb3RvdHlwZS5pc0N1c3RvbVByb3BlcnR5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gISF0aGlzLmlkZW50aWZpZXIgJiYgdGhpcy5pZGVudGlmaWVyLmlzQ3VzdG9tUHJvcGVydHk7XG4gICAgfTtcbiAgICByZXR1cm4gUHJvcGVydHk7XG59KE5vZGUpKTtcbmV4cG9ydCB7IFByb3BlcnR5IH07XG52YXIgSW52b2NhdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoSW52b2NhdGlvbiwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBJbnZvY2F0aW9uKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEludm9jYXRpb24ucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5JbnZvY2F0aW9uO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBJbnZvY2F0aW9uLnByb3RvdHlwZS5nZXRBcmd1bWVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5hcmd1bWVudHMpIHtcbiAgICAgICAgICAgIHRoaXMuYXJndW1lbnRzID0gbmV3IE5vZGVsaXN0KHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmFyZ3VtZW50cztcbiAgICB9O1xuICAgIHJldHVybiBJbnZvY2F0aW9uO1xufShOb2RlKSk7XG5leHBvcnQgeyBJbnZvY2F0aW9uIH07XG52YXIgRnVuY3Rpb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEZ1bmN0aW9uLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEZ1bmN0aW9uKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZ1bmN0aW9uLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuRnVuY3Rpb247XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIEZ1bmN0aW9uLnByb3RvdHlwZS5zZXRJZGVudGlmaWVyID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2V0Tm9kZSgnaWRlbnRpZmllcicsIG5vZGUsIDApO1xuICAgIH07XG4gICAgRnVuY3Rpb24ucHJvdG90eXBlLmdldElkZW50aWZpZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlkZW50aWZpZXI7XG4gICAgfTtcbiAgICBGdW5jdGlvbi5wcm90b3R5cGUuZ2V0TmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllciA/IHRoaXMuaWRlbnRpZmllci5nZXRUZXh0KCkgOiAnJztcbiAgICB9O1xuICAgIHJldHVybiBGdW5jdGlvbjtcbn0oSW52b2NhdGlvbikpO1xuZXhwb3J0IHsgRnVuY3Rpb24gfTtcbnZhciBGdW5jdGlvblBhcmFtZXRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRnVuY3Rpb25QYXJhbWV0ZXIsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRnVuY3Rpb25QYXJhbWV0ZXIob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRnVuY3Rpb25QYXJhbWV0ZXIucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5GdW5jdGlvblBhcmFtZXRlcjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgRnVuY3Rpb25QYXJhbWV0ZXIucHJvdG90eXBlLnNldElkZW50aWZpZXIgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdpZGVudGlmaWVyJywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBGdW5jdGlvblBhcmFtZXRlci5wcm90b3R5cGUuZ2V0SWRlbnRpZmllciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllcjtcbiAgICB9O1xuICAgIEZ1bmN0aW9uUGFyYW1ldGVyLnByb3RvdHlwZS5nZXROYW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZGVudGlmaWVyID8gdGhpcy5pZGVudGlmaWVyLmdldFRleHQoKSA6ICcnO1xuICAgIH07XG4gICAgRnVuY3Rpb25QYXJhbWV0ZXIucHJvdG90eXBlLnNldERlZmF1bHRWYWx1ZSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ2RlZmF1bHRWYWx1ZScsIG5vZGUsIDApO1xuICAgIH07XG4gICAgRnVuY3Rpb25QYXJhbWV0ZXIucHJvdG90eXBlLmdldERlZmF1bHRWYWx1ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGVmYXVsdFZhbHVlO1xuICAgIH07XG4gICAgcmV0dXJuIEZ1bmN0aW9uUGFyYW1ldGVyO1xufShOb2RlKSk7XG5leHBvcnQgeyBGdW5jdGlvblBhcmFtZXRlciB9O1xudmFyIEZ1bmN0aW9uQXJndW1lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEZ1bmN0aW9uQXJndW1lbnQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRnVuY3Rpb25Bcmd1bWVudChvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGdW5jdGlvbkFyZ3VtZW50LnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuRnVuY3Rpb25Bcmd1bWVudDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgRnVuY3Rpb25Bcmd1bWVudC5wcm90b3R5cGUuc2V0SWRlbnRpZmllciA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ2lkZW50aWZpZXInLCBub2RlLCAwKTtcbiAgICB9O1xuICAgIEZ1bmN0aW9uQXJndW1lbnQucHJvdG90eXBlLmdldElkZW50aWZpZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlkZW50aWZpZXI7XG4gICAgfTtcbiAgICBGdW5jdGlvbkFyZ3VtZW50LnByb3RvdHlwZS5nZXROYW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZGVudGlmaWVyID8gdGhpcy5pZGVudGlmaWVyLmdldFRleHQoKSA6ICcnO1xuICAgIH07XG4gICAgRnVuY3Rpb25Bcmd1bWVudC5wcm90b3R5cGUuc2V0VmFsdWUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCd2YWx1ZScsIG5vZGUsIDApO1xuICAgIH07XG4gICAgRnVuY3Rpb25Bcmd1bWVudC5wcm90b3R5cGUuZ2V0VmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH07XG4gICAgcmV0dXJuIEZ1bmN0aW9uQXJndW1lbnQ7XG59KE5vZGUpKTtcbmV4cG9ydCB7IEZ1bmN0aW9uQXJndW1lbnQgfTtcbnZhciBJZlN0YXRlbWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoSWZTdGF0ZW1lbnQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSWZTdGF0ZW1lbnQob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoSWZTdGF0ZW1lbnQucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5JZjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgSWZTdGF0ZW1lbnQucHJvdG90eXBlLnNldEV4cHJlc3Npb24gPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdleHByZXNzaW9uJywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBJZlN0YXRlbWVudC5wcm90b3R5cGUuc2V0RWxzZUNsYXVzZSA9IGZ1bmN0aW9uIChlbHNlQ2xhdXNlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ2Vsc2VDbGF1c2UnLCBlbHNlQ2xhdXNlKTtcbiAgICB9O1xuICAgIHJldHVybiBJZlN0YXRlbWVudDtcbn0oQm9keURlY2xhcmF0aW9uKSk7XG5leHBvcnQgeyBJZlN0YXRlbWVudCB9O1xudmFyIEZvclN0YXRlbWVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRm9yU3RhdGVtZW50LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEZvclN0YXRlbWVudChvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGb3JTdGF0ZW1lbnQucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5Gb3I7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIEZvclN0YXRlbWVudC5wcm90b3R5cGUuc2V0VmFyaWFibGUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCd2YXJpYWJsZScsIG5vZGUsIDApO1xuICAgIH07XG4gICAgcmV0dXJuIEZvclN0YXRlbWVudDtcbn0oQm9keURlY2xhcmF0aW9uKSk7XG5leHBvcnQgeyBGb3JTdGF0ZW1lbnQgfTtcbnZhciBFYWNoU3RhdGVtZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhFYWNoU3RhdGVtZW50LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEVhY2hTdGF0ZW1lbnQob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRWFjaFN0YXRlbWVudC5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLkVhY2g7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIEVhY2hTdGF0ZW1lbnQucHJvdG90eXBlLmdldFZhcmlhYmxlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnZhcmlhYmxlcykge1xuICAgICAgICAgICAgdGhpcy52YXJpYWJsZXMgPSBuZXcgTm9kZWxpc3QodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMudmFyaWFibGVzO1xuICAgIH07XG4gICAgcmV0dXJuIEVhY2hTdGF0ZW1lbnQ7XG59KEJvZHlEZWNsYXJhdGlvbikpO1xuZXhwb3J0IHsgRWFjaFN0YXRlbWVudCB9O1xudmFyIFdoaWxlU3RhdGVtZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhXaGlsZVN0YXRlbWVudCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBXaGlsZVN0YXRlbWVudChvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXaGlsZVN0YXRlbWVudC5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLldoaWxlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gV2hpbGVTdGF0ZW1lbnQ7XG59KEJvZHlEZWNsYXJhdGlvbikpO1xuZXhwb3J0IHsgV2hpbGVTdGF0ZW1lbnQgfTtcbnZhciBFbHNlU3RhdGVtZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhFbHNlU3RhdGVtZW50LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEVsc2VTdGF0ZW1lbnQob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRWxzZVN0YXRlbWVudC5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLkVsc2U7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBFbHNlU3RhdGVtZW50O1xufShCb2R5RGVjbGFyYXRpb24pKTtcbmV4cG9ydCB7IEVsc2VTdGF0ZW1lbnQgfTtcbnZhciBGdW5jdGlvbkRlY2xhcmF0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhGdW5jdGlvbkRlY2xhcmF0aW9uLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEZ1bmN0aW9uRGVjbGFyYXRpb24ob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRnVuY3Rpb25EZWNsYXJhdGlvbi5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLkZ1bmN0aW9uRGVjbGFyYXRpb247XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIEZ1bmN0aW9uRGVjbGFyYXRpb24ucHJvdG90eXBlLnNldElkZW50aWZpZXIgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdpZGVudGlmaWVyJywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBGdW5jdGlvbkRlY2xhcmF0aW9uLnByb3RvdHlwZS5nZXRJZGVudGlmaWVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZGVudGlmaWVyO1xuICAgIH07XG4gICAgRnVuY3Rpb25EZWNsYXJhdGlvbi5wcm90b3R5cGUuZ2V0TmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllciA/IHRoaXMuaWRlbnRpZmllci5nZXRUZXh0KCkgOiAnJztcbiAgICB9O1xuICAgIEZ1bmN0aW9uRGVjbGFyYXRpb24ucHJvdG90eXBlLmdldFBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5wYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmFtZXRlcnMgPSBuZXcgTm9kZWxpc3QodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucGFyYW1ldGVycztcbiAgICB9O1xuICAgIHJldHVybiBGdW5jdGlvbkRlY2xhcmF0aW9uO1xufShCb2R5RGVjbGFyYXRpb24pKTtcbmV4cG9ydCB7IEZ1bmN0aW9uRGVjbGFyYXRpb24gfTtcbnZhciBWaWV3UG9ydCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoVmlld1BvcnQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gVmlld1BvcnQob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoVmlld1BvcnQucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5WaWV3UG9ydDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFZpZXdQb3J0O1xufShCb2R5RGVjbGFyYXRpb24pKTtcbmV4cG9ydCB7IFZpZXdQb3J0IH07XG52YXIgRm9udEZhY2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEZvbnRGYWNlLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEZvbnRGYWNlKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZvbnRGYWNlLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuRm9udEZhY2U7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBGb250RmFjZTtcbn0oQm9keURlY2xhcmF0aW9uKSk7XG5leHBvcnQgeyBGb250RmFjZSB9O1xudmFyIE5lc3RlZFByb3BlcnRpZXMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE5lc3RlZFByb3BlcnRpZXMsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTmVzdGVkUHJvcGVydGllcyhvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOZXN0ZWRQcm9wZXJ0aWVzLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuTmVzdGVkUHJvcGVydGllcztcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIE5lc3RlZFByb3BlcnRpZXM7XG59KEJvZHlEZWNsYXJhdGlvbikpO1xuZXhwb3J0IHsgTmVzdGVkUHJvcGVydGllcyB9O1xudmFyIEtleWZyYW1lID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhLZXlmcmFtZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBLZXlmcmFtZShvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShLZXlmcmFtZS5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLktleWZyYW1lO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBLZXlmcmFtZS5wcm90b3R5cGUuc2V0S2V5d29yZCA9IGZ1bmN0aW9uIChrZXl3b3JkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ2tleXdvcmQnLCBrZXl3b3JkLCAwKTtcbiAgICB9O1xuICAgIEtleWZyYW1lLnByb3RvdHlwZS5nZXRLZXl3b3JkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5rZXl3b3JkO1xuICAgIH07XG4gICAgS2V5ZnJhbWUucHJvdG90eXBlLnNldElkZW50aWZpZXIgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdpZGVudGlmaWVyJywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBLZXlmcmFtZS5wcm90b3R5cGUuZ2V0SWRlbnRpZmllciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllcjtcbiAgICB9O1xuICAgIEtleWZyYW1lLnByb3RvdHlwZS5nZXROYW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZGVudGlmaWVyID8gdGhpcy5pZGVudGlmaWVyLmdldFRleHQoKSA6ICcnO1xuICAgIH07XG4gICAgcmV0dXJuIEtleWZyYW1lO1xufShCb2R5RGVjbGFyYXRpb24pKTtcbmV4cG9ydCB7IEtleWZyYW1lIH07XG52YXIgS2V5ZnJhbWVTZWxlY3RvciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoS2V5ZnJhbWVTZWxlY3RvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBLZXlmcmFtZVNlbGVjdG9yKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEtleWZyYW1lU2VsZWN0b3IucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5LZXlmcmFtZVNlbGVjdG9yO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gS2V5ZnJhbWVTZWxlY3Rvcjtcbn0oQm9keURlY2xhcmF0aW9uKSk7XG5leHBvcnQgeyBLZXlmcmFtZVNlbGVjdG9yIH07XG52YXIgSW1wb3J0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhJbXBvcnQsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSW1wb3J0KG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEltcG9ydC5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLkltcG9ydDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgSW1wb3J0LnByb3RvdHlwZS5zZXRNZWRpYWxpc3QgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgbm9kZS5hdHRhY2hUbyh0aGlzKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIHJldHVybiBJbXBvcnQ7XG59KE5vZGUpKTtcbmV4cG9ydCB7IEltcG9ydCB9O1xudmFyIFVzZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoVXNlLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFVzZSgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoVXNlLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuVXNlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBVc2UucHJvdG90eXBlLmdldFBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5wYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmFtZXRlcnMgPSBuZXcgTm9kZWxpc3QodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucGFyYW1ldGVycztcbiAgICB9O1xuICAgIFVzZS5wcm90b3R5cGUuc2V0SWRlbnRpZmllciA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ2lkZW50aWZpZXInLCBub2RlLCAwKTtcbiAgICB9O1xuICAgIFVzZS5wcm90b3R5cGUuZ2V0SWRlbnRpZmllciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllcjtcbiAgICB9O1xuICAgIHJldHVybiBVc2U7XG59KE5vZGUpKTtcbmV4cG9ydCB7IFVzZSB9O1xudmFyIE1vZHVsZUNvbmZpZ3VyYXRpb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE1vZHVsZUNvbmZpZ3VyYXRpb24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTW9kdWxlQ29uZmlndXJhdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTW9kdWxlQ29uZmlndXJhdGlvbi5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLk1vZHVsZUNvbmZpZ3VyYXRpb247XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE1vZHVsZUNvbmZpZ3VyYXRpb24ucHJvdG90eXBlLnNldElkZW50aWZpZXIgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdpZGVudGlmaWVyJywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBNb2R1bGVDb25maWd1cmF0aW9uLnByb3RvdHlwZS5nZXRJZGVudGlmaWVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZGVudGlmaWVyO1xuICAgIH07XG4gICAgTW9kdWxlQ29uZmlndXJhdGlvbi5wcm90b3R5cGUuZ2V0TmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllciA/IHRoaXMuaWRlbnRpZmllci5nZXRUZXh0KCkgOiAnJztcbiAgICB9O1xuICAgIE1vZHVsZUNvbmZpZ3VyYXRpb24ucHJvdG90eXBlLnNldFZhbHVlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2V0Tm9kZSgndmFsdWUnLCBub2RlLCAwKTtcbiAgICB9O1xuICAgIE1vZHVsZUNvbmZpZ3VyYXRpb24ucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICB9O1xuICAgIHJldHVybiBNb2R1bGVDb25maWd1cmF0aW9uO1xufShOb2RlKSk7XG5leHBvcnQgeyBNb2R1bGVDb25maWd1cmF0aW9uIH07XG52YXIgRm9yd2FyZCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRm9yd2FyZCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBGb3J3YXJkKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGb3J3YXJkLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuRm9yd2FyZDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgRm9yd2FyZC5wcm90b3R5cGUuc2V0SWRlbnRpZmllciA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ2lkZW50aWZpZXInLCBub2RlLCAwKTtcbiAgICB9O1xuICAgIEZvcndhcmQucHJvdG90eXBlLmdldElkZW50aWZpZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlkZW50aWZpZXI7XG4gICAgfTtcbiAgICByZXR1cm4gRm9yd2FyZDtcbn0oTm9kZSkpO1xuZXhwb3J0IHsgRm9yd2FyZCB9O1xudmFyIEZvcndhcmRWaXNpYmlsaXR5ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhGb3J3YXJkVmlzaWJpbGl0eSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBGb3J3YXJkVmlzaWJpbGl0eSgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoRm9yd2FyZFZpc2liaWxpdHkucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5Gb3J3YXJkVmlzaWJpbGl0eTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgRm9yd2FyZFZpc2liaWxpdHkucHJvdG90eXBlLnNldElkZW50aWZpZXIgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdpZGVudGlmaWVyJywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBGb3J3YXJkVmlzaWJpbGl0eS5wcm90b3R5cGUuZ2V0SWRlbnRpZmllciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllcjtcbiAgICB9O1xuICAgIHJldHVybiBGb3J3YXJkVmlzaWJpbGl0eTtcbn0oTm9kZSkpO1xuZXhwb3J0IHsgRm9yd2FyZFZpc2liaWxpdHkgfTtcbnZhciBOYW1lc3BhY2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE5hbWVzcGFjZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBOYW1lc3BhY2Uob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTmFtZXNwYWNlLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuTmFtZXNwYWNlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gTmFtZXNwYWNlO1xufShOb2RlKSk7XG5leHBvcnQgeyBOYW1lc3BhY2UgfTtcbnZhciBNZWRpYSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoTWVkaWEsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTWVkaWEob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTWVkaWEucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5NZWRpYTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIE1lZGlhO1xufShCb2R5RGVjbGFyYXRpb24pKTtcbmV4cG9ydCB7IE1lZGlhIH07XG52YXIgU3VwcG9ydHMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFN1cHBvcnRzLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFN1cHBvcnRzKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFN1cHBvcnRzLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuU3VwcG9ydHM7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBTdXBwb3J0cztcbn0oQm9keURlY2xhcmF0aW9uKSk7XG5leHBvcnQgeyBTdXBwb3J0cyB9O1xudmFyIERvY3VtZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhEb2N1bWVudCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBEb2N1bWVudChvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEb2N1bWVudC5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLkRvY3VtZW50O1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gRG9jdW1lbnQ7XG59KEJvZHlEZWNsYXJhdGlvbikpO1xuZXhwb3J0IHsgRG9jdW1lbnQgfTtcbnZhciBNZWRpYWxpc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE1lZGlhbGlzdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNZWRpYWxpc3Qob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBNZWRpYWxpc3QucHJvdG90eXBlLmdldE1lZGl1bXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5tZWRpdW1zKSB7XG4gICAgICAgICAgICB0aGlzLm1lZGl1bXMgPSBuZXcgTm9kZWxpc3QodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubWVkaXVtcztcbiAgICB9O1xuICAgIHJldHVybiBNZWRpYWxpc3Q7XG59KE5vZGUpKTtcbmV4cG9ydCB7IE1lZGlhbGlzdCB9O1xudmFyIE1lZGlhUXVlcnkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE1lZGlhUXVlcnksIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTWVkaWFRdWVyeShvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNZWRpYVF1ZXJ5LnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuTWVkaWFRdWVyeTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIE1lZGlhUXVlcnk7XG59KE5vZGUpKTtcbmV4cG9ydCB7IE1lZGlhUXVlcnkgfTtcbnZhciBTdXBwb3J0c0NvbmRpdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoU3VwcG9ydHNDb25kaXRpb24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gU3VwcG9ydHNDb25kaXRpb24ob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3VwcG9ydHNDb25kaXRpb24ucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5TdXBwb3J0c0NvbmRpdGlvbjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFN1cHBvcnRzQ29uZGl0aW9uO1xufShOb2RlKSk7XG5leHBvcnQgeyBTdXBwb3J0c0NvbmRpdGlvbiB9O1xudmFyIFBhZ2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFBhZ2UsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUGFnZShvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShQYWdlLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuUGFnZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFBhZ2U7XG59KEJvZHlEZWNsYXJhdGlvbikpO1xuZXhwb3J0IHsgUGFnZSB9O1xudmFyIFBhZ2VCb3hNYXJnaW5Cb3ggPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFBhZ2VCb3hNYXJnaW5Cb3gsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gUGFnZUJveE1hcmdpbkJveChvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShQYWdlQm94TWFyZ2luQm94LnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuUGFnZUJveE1hcmdpbkJveDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFBhZ2VCb3hNYXJnaW5Cb3g7XG59KEJvZHlEZWNsYXJhdGlvbikpO1xuZXhwb3J0IHsgUGFnZUJveE1hcmdpbkJveCB9O1xudmFyIEV4cHJlc3Npb24gPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEV4cHJlc3Npb24sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRXhwcmVzc2lvbihvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShFeHByZXNzaW9uLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuRXhwcmVzc2lvbjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIEV4cHJlc3Npb247XG59KE5vZGUpKTtcbmV4cG9ydCB7IEV4cHJlc3Npb24gfTtcbnZhciBCaW5hcnlFeHByZXNzaW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhCaW5hcnlFeHByZXNzaW9uLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEJpbmFyeUV4cHJlc3Npb24ob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQmluYXJ5RXhwcmVzc2lvbi5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLkJpbmFyeUV4cHJlc3Npb247XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIEJpbmFyeUV4cHJlc3Npb24ucHJvdG90eXBlLnNldExlZnQgPSBmdW5jdGlvbiAobGVmdCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdsZWZ0JywgbGVmdCk7XG4gICAgfTtcbiAgICBCaW5hcnlFeHByZXNzaW9uLnByb3RvdHlwZS5nZXRMZWZ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sZWZ0O1xuICAgIH07XG4gICAgQmluYXJ5RXhwcmVzc2lvbi5wcm90b3R5cGUuc2V0UmlnaHQgPSBmdW5jdGlvbiAocmlnaHQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2V0Tm9kZSgncmlnaHQnLCByaWdodCk7XG4gICAgfTtcbiAgICBCaW5hcnlFeHByZXNzaW9uLnByb3RvdHlwZS5nZXRSaWdodCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmlnaHQ7XG4gICAgfTtcbiAgICBCaW5hcnlFeHByZXNzaW9uLnByb3RvdHlwZS5zZXRPcGVyYXRvciA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdvcGVyYXRvcicsIHZhbHVlKTtcbiAgICB9O1xuICAgIEJpbmFyeUV4cHJlc3Npb24ucHJvdG90eXBlLmdldE9wZXJhdG9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5vcGVyYXRvcjtcbiAgICB9O1xuICAgIHJldHVybiBCaW5hcnlFeHByZXNzaW9uO1xufShOb2RlKSk7XG5leHBvcnQgeyBCaW5hcnlFeHByZXNzaW9uIH07XG52YXIgVGVybSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoVGVybSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBUZXJtKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFRlcm0ucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5UZXJtO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBUZXJtLnByb3RvdHlwZS5zZXRPcGVyYXRvciA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdvcGVyYXRvcicsIHZhbHVlKTtcbiAgICB9O1xuICAgIFRlcm0ucHJvdG90eXBlLmdldE9wZXJhdG9yID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5vcGVyYXRvcjtcbiAgICB9O1xuICAgIFRlcm0ucHJvdG90eXBlLnNldEV4cHJlc3Npb24gPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2V0Tm9kZSgnZXhwcmVzc2lvbicsIHZhbHVlKTtcbiAgICB9O1xuICAgIFRlcm0ucHJvdG90eXBlLmdldEV4cHJlc3Npb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmV4cHJlc3Npb247XG4gICAgfTtcbiAgICByZXR1cm4gVGVybTtcbn0oTm9kZSkpO1xuZXhwb3J0IHsgVGVybSB9O1xudmFyIEF0dHJpYnV0ZVNlbGVjdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhBdHRyaWJ1dGVTZWxlY3RvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBBdHRyaWJ1dGVTZWxlY3RvcihvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBdHRyaWJ1dGVTZWxlY3Rvci5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLkF0dHJpYnV0ZVNlbGVjdG9yO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBBdHRyaWJ1dGVTZWxlY3Rvci5wcm90b3R5cGUuc2V0TmFtZXNwYWNlUHJlZml4ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ25hbWVzcGFjZVByZWZpeCcsIHZhbHVlKTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZVNlbGVjdG9yLnByb3RvdHlwZS5nZXROYW1lc3BhY2VQcmVmaXggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5hbWVzcGFjZVByZWZpeDtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZVNlbGVjdG9yLnByb3RvdHlwZS5zZXRJZGVudGlmaWVyID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNldE5vZGUoJ2lkZW50aWZpZXInLCB2YWx1ZSk7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVTZWxlY3Rvci5wcm90b3R5cGUuZ2V0SWRlbnRpZmllciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllcjtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZVNlbGVjdG9yLnByb3RvdHlwZS5zZXRPcGVyYXRvciA9IGZ1bmN0aW9uIChvcGVyYXRvcikge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdvcGVyYXRvcicsIG9wZXJhdG9yKTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZVNlbGVjdG9yLnByb3RvdHlwZS5nZXRPcGVyYXRvciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3BlcmF0b3I7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVTZWxlY3Rvci5wcm90b3R5cGUuc2V0VmFsdWUgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2V0Tm9kZSgndmFsdWUnLCB2YWx1ZSk7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVTZWxlY3Rvci5wcm90b3R5cGUuZ2V0VmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH07XG4gICAgcmV0dXJuIEF0dHJpYnV0ZVNlbGVjdG9yO1xufShOb2RlKSk7XG5leHBvcnQgeyBBdHRyaWJ1dGVTZWxlY3RvciB9O1xudmFyIE9wZXJhdG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhPcGVyYXRvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBPcGVyYXRvcihvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPcGVyYXRvci5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLk9wZXJhdG9yO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gT3BlcmF0b3I7XG59KE5vZGUpKTtcbmV4cG9ydCB7IE9wZXJhdG9yIH07XG52YXIgSGV4Q29sb3JWYWx1ZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoSGV4Q29sb3JWYWx1ZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBIZXhDb2xvclZhbHVlKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEhleENvbG9yVmFsdWUucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5IZXhDb2xvclZhbHVlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gSGV4Q29sb3JWYWx1ZTtcbn0oTm9kZSkpO1xuZXhwb3J0IHsgSGV4Q29sb3JWYWx1ZSB9O1xudmFyIF9kb3QgPSAnLicuY2hhckNvZGVBdCgwKSwgXzAgPSAnMCcuY2hhckNvZGVBdCgwKSwgXzkgPSAnOScuY2hhckNvZGVBdCgwKTtcbnZhciBOdW1lcmljVmFsdWUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE51bWVyaWNWYWx1ZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBOdW1lcmljVmFsdWUob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTnVtZXJpY1ZhbHVlLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuTnVtZXJpY1ZhbHVlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBOdW1lcmljVmFsdWUucHJvdG90eXBlLmdldFZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgcmF3ID0gdGhpcy5nZXRUZXh0KCk7XG4gICAgICAgIHZhciB1bml0SWR4ID0gMDtcbiAgICAgICAgdmFyIGNvZGU7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSByYXcubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGNvZGUgPSByYXcuY2hhckNvZGVBdChpKTtcbiAgICAgICAgICAgIGlmICghKF8wIDw9IGNvZGUgJiYgY29kZSA8PSBfOSB8fCBjb2RlID09PSBfZG90KSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdW5pdElkeCArPSAxO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogcmF3LnN1YnN0cmluZygwLCB1bml0SWR4KSxcbiAgICAgICAgICAgIHVuaXQ6IHVuaXRJZHggPCByYXcubGVuZ3RoID8gcmF3LnN1YnN0cmluZyh1bml0SWR4KSA6IHVuZGVmaW5lZFxuICAgICAgICB9O1xuICAgIH07XG4gICAgcmV0dXJuIE51bWVyaWNWYWx1ZTtcbn0oTm9kZSkpO1xuZXhwb3J0IHsgTnVtZXJpY1ZhbHVlIH07XG52YXIgVmFyaWFibGVEZWNsYXJhdGlvbiA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoVmFyaWFibGVEZWNsYXJhdGlvbiwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBWYXJpYWJsZURlY2xhcmF0aW9uKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy52YXJpYWJsZSA9IG51bGw7XG4gICAgICAgIF90aGlzLnZhbHVlID0gbnVsbDtcbiAgICAgICAgX3RoaXMubmVlZHNTZW1pY29sb24gPSB0cnVlO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShWYXJpYWJsZURlY2xhcmF0aW9uLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuVmFyaWFibGVEZWNsYXJhdGlvbjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgVmFyaWFibGVEZWNsYXJhdGlvbi5wcm90b3R5cGUuc2V0VmFyaWFibGUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgbm9kZS5hdHRhY2hUbyh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMudmFyaWFibGUgPSBub2RlO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG4gICAgVmFyaWFibGVEZWNsYXJhdGlvbi5wcm90b3R5cGUuZ2V0VmFyaWFibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhcmlhYmxlO1xuICAgIH07XG4gICAgVmFyaWFibGVEZWNsYXJhdGlvbi5wcm90b3R5cGUuZ2V0TmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFyaWFibGUgPyB0aGlzLnZhcmlhYmxlLmdldE5hbWUoKSA6ICcnO1xuICAgIH07XG4gICAgVmFyaWFibGVEZWNsYXJhdGlvbi5wcm90b3R5cGUuc2V0VmFsdWUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgbm9kZS5hdHRhY2hUbyh0aGlzKTtcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBub2RlO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG4gICAgVmFyaWFibGVEZWNsYXJhdGlvbi5wcm90b3R5cGUuZ2V0VmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH07XG4gICAgcmV0dXJuIFZhcmlhYmxlRGVjbGFyYXRpb247XG59KEFic3RyYWN0RGVjbGFyYXRpb24pKTtcbmV4cG9ydCB7IFZhcmlhYmxlRGVjbGFyYXRpb24gfTtcbnZhciBJbnRlcnBvbGF0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhJbnRlcnBvbGF0aW9uLCBfc3VwZXIpO1xuICAgIC8vIHByaXZhdGUgX2ludGVycG9sYXRpb25zOiB2b2lkOyAvLyB3b3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L1R5cGVTY3JpcHQvaXNzdWVzLzE4Mjc2XG4gICAgZnVuY3Rpb24gSW50ZXJwb2xhdGlvbihvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShJbnRlcnBvbGF0aW9uLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuSW50ZXJwb2xhdGlvbjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIEludGVycG9sYXRpb247XG59KE5vZGUpKTtcbmV4cG9ydCB7IEludGVycG9sYXRpb24gfTtcbnZhciBWYXJpYWJsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoVmFyaWFibGUsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gVmFyaWFibGUob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoVmFyaWFibGUucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5WYXJpYWJsZU5hbWU7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIFZhcmlhYmxlLnByb3RvdHlwZS5nZXROYW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRUZXh0KCk7XG4gICAgfTtcbiAgICByZXR1cm4gVmFyaWFibGU7XG59KE5vZGUpKTtcbmV4cG9ydCB7IFZhcmlhYmxlIH07XG52YXIgRXh0ZW5kc1JlZmVyZW5jZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRXh0ZW5kc1JlZmVyZW5jZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBFeHRlbmRzUmVmZXJlbmNlKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEV4dGVuZHNSZWZlcmVuY2UucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5FeHRlbmRzUmVmZXJlbmNlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBFeHRlbmRzUmVmZXJlbmNlLnByb3RvdHlwZS5nZXRTZWxlY3RvcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5zZWxlY3RvcnMpIHtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0b3JzID0gbmV3IE5vZGVsaXN0KHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnNlbGVjdG9ycztcbiAgICB9O1xuICAgIHJldHVybiBFeHRlbmRzUmVmZXJlbmNlO1xufShOb2RlKSk7XG5leHBvcnQgeyBFeHRlbmRzUmVmZXJlbmNlIH07XG52YXIgTWl4aW5Db250ZW50UmVmZXJlbmNlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNaXhpbkNvbnRlbnRSZWZlcmVuY2UsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTWl4aW5Db250ZW50UmVmZXJlbmNlKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1peGluQ29udGVudFJlZmVyZW5jZS5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLk1peGluQ29udGVudFJlZmVyZW5jZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgTWl4aW5Db250ZW50UmVmZXJlbmNlLnByb3RvdHlwZS5nZXRBcmd1bWVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5hcmd1bWVudHMpIHtcbiAgICAgICAgICAgIHRoaXMuYXJndW1lbnRzID0gbmV3IE5vZGVsaXN0KHRoaXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmFyZ3VtZW50cztcbiAgICB9O1xuICAgIHJldHVybiBNaXhpbkNvbnRlbnRSZWZlcmVuY2U7XG59KE5vZGUpKTtcbmV4cG9ydCB7IE1peGluQ29udGVudFJlZmVyZW5jZSB9O1xudmFyIE1peGluQ29udGVudERlY2xhcmF0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNaXhpbkNvbnRlbnREZWNsYXJhdGlvbiwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNaXhpbkNvbnRlbnREZWNsYXJhdGlvbihvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNaXhpbkNvbnRlbnREZWNsYXJhdGlvbi5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLk1peGluQ29udGVudFJlZmVyZW5jZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgTWl4aW5Db250ZW50RGVjbGFyYXRpb24ucHJvdG90eXBlLmdldFBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5wYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmFtZXRlcnMgPSBuZXcgTm9kZWxpc3QodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucGFyYW1ldGVycztcbiAgICB9O1xuICAgIHJldHVybiBNaXhpbkNvbnRlbnREZWNsYXJhdGlvbjtcbn0oQm9keURlY2xhcmF0aW9uKSk7XG5leHBvcnQgeyBNaXhpbkNvbnRlbnREZWNsYXJhdGlvbiB9O1xudmFyIE1peGluUmVmZXJlbmNlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNaXhpblJlZmVyZW5jZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNaXhpblJlZmVyZW5jZShvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgb2Zmc2V0LCBsZW5ndGgpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNaXhpblJlZmVyZW5jZS5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLk1peGluUmVmZXJlbmNlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBNaXhpblJlZmVyZW5jZS5wcm90b3R5cGUuZ2V0TmFtZXNwYWNlcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLm5hbWVzcGFjZXMpIHtcbiAgICAgICAgICAgIHRoaXMubmFtZXNwYWNlcyA9IG5ldyBOb2RlbGlzdCh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5uYW1lc3BhY2VzO1xuICAgIH07XG4gICAgTWl4aW5SZWZlcmVuY2UucHJvdG90eXBlLnNldElkZW50aWZpZXIgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdpZGVudGlmaWVyJywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBNaXhpblJlZmVyZW5jZS5wcm90b3R5cGUuZ2V0SWRlbnRpZmllciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllcjtcbiAgICB9O1xuICAgIE1peGluUmVmZXJlbmNlLnByb3RvdHlwZS5nZXROYW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZGVudGlmaWVyID8gdGhpcy5pZGVudGlmaWVyLmdldFRleHQoKSA6ICcnO1xuICAgIH07XG4gICAgTWl4aW5SZWZlcmVuY2UucHJvdG90eXBlLmdldEFyZ3VtZW50cyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmFyZ3VtZW50cykge1xuICAgICAgICAgICAgdGhpcy5hcmd1bWVudHMgPSBuZXcgTm9kZWxpc3QodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYXJndW1lbnRzO1xuICAgIH07XG4gICAgTWl4aW5SZWZlcmVuY2UucHJvdG90eXBlLnNldENvbnRlbnQgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdjb250ZW50Jywgbm9kZSk7XG4gICAgfTtcbiAgICBNaXhpblJlZmVyZW5jZS5wcm90b3R5cGUuZ2V0Q29udGVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29udGVudDtcbiAgICB9O1xuICAgIHJldHVybiBNaXhpblJlZmVyZW5jZTtcbn0oTm9kZSkpO1xuZXhwb3J0IHsgTWl4aW5SZWZlcmVuY2UgfTtcbnZhciBNaXhpbkRlY2xhcmF0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhNaXhpbkRlY2xhcmF0aW9uLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE1peGluRGVjbGFyYXRpb24ob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIG9mZnNldCwgbGVuZ3RoKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTWl4aW5EZWNsYXJhdGlvbi5wcm90b3R5cGUsIFwidHlwZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIE5vZGVUeXBlLk1peGluRGVjbGFyYXRpb247XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE1peGluRGVjbGFyYXRpb24ucHJvdG90eXBlLnNldElkZW50aWZpZXIgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdpZGVudGlmaWVyJywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBNaXhpbkRlY2xhcmF0aW9uLnByb3RvdHlwZS5nZXRJZGVudGlmaWVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZGVudGlmaWVyO1xuICAgIH07XG4gICAgTWl4aW5EZWNsYXJhdGlvbi5wcm90b3R5cGUuZ2V0TmFtZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaWRlbnRpZmllciA/IHRoaXMuaWRlbnRpZmllci5nZXRUZXh0KCkgOiAnJztcbiAgICB9O1xuICAgIE1peGluRGVjbGFyYXRpb24ucHJvdG90eXBlLmdldFBhcmFtZXRlcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5wYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmFtZXRlcnMgPSBuZXcgTm9kZWxpc3QodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucGFyYW1ldGVycztcbiAgICB9O1xuICAgIE1peGluRGVjbGFyYXRpb24ucHJvdG90eXBlLnNldEd1YXJkID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUpIHtcbiAgICAgICAgICAgIG5vZGUuYXR0YWNoVG8odGhpcyk7XG4gICAgICAgICAgICB0aGlzLmd1YXJkID0gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcbiAgICByZXR1cm4gTWl4aW5EZWNsYXJhdGlvbjtcbn0oQm9keURlY2xhcmF0aW9uKSk7XG5leHBvcnQgeyBNaXhpbkRlY2xhcmF0aW9uIH07XG52YXIgVW5rbm93bkF0UnVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoVW5rbm93bkF0UnVsZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBVbmtub3duQXRSdWxlKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBvZmZzZXQsIGxlbmd0aCkgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFVua25vd25BdFJ1bGUucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5Vbmtub3duQXRSdWxlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBVbmtub3duQXRSdWxlLnByb3RvdHlwZS5zZXRBdFJ1bGVOYW1lID0gZnVuY3Rpb24gKGF0UnVsZU5hbWUpIHtcbiAgICAgICAgdGhpcy5hdFJ1bGVOYW1lID0gYXRSdWxlTmFtZTtcbiAgICB9O1xuICAgIFVua25vd25BdFJ1bGUucHJvdG90eXBlLmdldEF0UnVsZU5hbWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF0UnVsZU5hbWU7XG4gICAgfTtcbiAgICByZXR1cm4gVW5rbm93bkF0UnVsZTtcbn0oQm9keURlY2xhcmF0aW9uKSk7XG5leHBvcnQgeyBVbmtub3duQXRSdWxlIH07XG52YXIgTGlzdEVudHJ5ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhMaXN0RW50cnksIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gTGlzdEVudHJ5KCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShMaXN0RW50cnkucHJvdG90eXBlLCBcInR5cGVcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBOb2RlVHlwZS5MaXN0RW50cnk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIExpc3RFbnRyeS5wcm90b3R5cGUuc2V0S2V5ID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2V0Tm9kZSgna2V5Jywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBMaXN0RW50cnkucHJvdG90eXBlLnNldFZhbHVlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2V0Tm9kZSgndmFsdWUnLCBub2RlLCAxKTtcbiAgICB9O1xuICAgIHJldHVybiBMaXN0RW50cnk7XG59KE5vZGUpKTtcbmV4cG9ydCB7IExpc3RFbnRyeSB9O1xudmFyIExlc3NHdWFyZCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoTGVzc0d1YXJkLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIExlc3NHdWFyZCgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBMZXNzR3VhcmQucHJvdG90eXBlLmdldENvbmRpdGlvbnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghdGhpcy5jb25kaXRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmRpdGlvbnMgPSBuZXcgTm9kZWxpc3QodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuY29uZGl0aW9ucztcbiAgICB9O1xuICAgIHJldHVybiBMZXNzR3VhcmQ7XG59KE5vZGUpKTtcbmV4cG9ydCB7IExlc3NHdWFyZCB9O1xudmFyIEd1YXJkQ29uZGl0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhHdWFyZENvbmRpdGlvbiwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBHdWFyZENvbmRpdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBHdWFyZENvbmRpdGlvbi5wcm90b3R5cGUuc2V0VmFyaWFibGUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCd2YXJpYWJsZScsIG5vZGUpO1xuICAgIH07XG4gICAgcmV0dXJuIEd1YXJkQ29uZGl0aW9uO1xufShOb2RlKSk7XG5leHBvcnQgeyBHdWFyZENvbmRpdGlvbiB9O1xudmFyIE1vZHVsZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoTW9kdWxlLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE1vZHVsZSgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTW9kdWxlLnByb3RvdHlwZSwgXCJ0eXBlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gTm9kZVR5cGUuTW9kdWxlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBNb2R1bGUucHJvdG90eXBlLnNldElkZW50aWZpZXIgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXROb2RlKCdpZGVudGlmaWVyJywgbm9kZSwgMCk7XG4gICAgfTtcbiAgICBNb2R1bGUucHJvdG90eXBlLmdldElkZW50aWZpZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmlkZW50aWZpZXI7XG4gICAgfTtcbiAgICByZXR1cm4gTW9kdWxlO1xufShOb2RlKSk7XG5leHBvcnQgeyBNb2R1bGUgfTtcbmV4cG9ydCB2YXIgTGV2ZWw7XG4oZnVuY3Rpb24gKExldmVsKSB7XG4gICAgTGV2ZWxbTGV2ZWxbXCJJZ25vcmVcIl0gPSAxXSA9IFwiSWdub3JlXCI7XG4gICAgTGV2ZWxbTGV2ZWxbXCJXYXJuaW5nXCJdID0gMl0gPSBcIldhcm5pbmdcIjtcbiAgICBMZXZlbFtMZXZlbFtcIkVycm9yXCJdID0gNF0gPSBcIkVycm9yXCI7XG59KShMZXZlbCB8fCAoTGV2ZWwgPSB7fSkpO1xudmFyIE1hcmtlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBNYXJrZXIobm9kZSwgcnVsZSwgbGV2ZWwsIG1lc3NhZ2UsIG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIGlmIChvZmZzZXQgPT09IHZvaWQgMCkgeyBvZmZzZXQgPSBub2RlLm9mZnNldDsgfVxuICAgICAgICBpZiAobGVuZ3RoID09PSB2b2lkIDApIHsgbGVuZ3RoID0gbm9kZS5sZW5ndGg7IH1cbiAgICAgICAgdGhpcy5ub2RlID0gbm9kZTtcbiAgICAgICAgdGhpcy5ydWxlID0gcnVsZTtcbiAgICAgICAgdGhpcy5sZXZlbCA9IGxldmVsO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlIHx8IHJ1bGUubWVzc2FnZTtcbiAgICAgICAgdGhpcy5vZmZzZXQgPSBvZmZzZXQ7XG4gICAgICAgIHRoaXMubGVuZ3RoID0gbGVuZ3RoO1xuICAgIH1cbiAgICBNYXJrZXIucHJvdG90eXBlLmdldFJ1bGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJ1bGU7XG4gICAgfTtcbiAgICBNYXJrZXIucHJvdG90eXBlLmdldExldmVsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sZXZlbDtcbiAgICB9O1xuICAgIE1hcmtlci5wcm90b3R5cGUuZ2V0T2Zmc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5vZmZzZXQ7XG4gICAgfTtcbiAgICBNYXJrZXIucHJvdG90eXBlLmdldExlbmd0aCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGVuZ3RoO1xuICAgIH07XG4gICAgTWFya2VyLnByb3RvdHlwZS5nZXROb2RlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ub2RlO1xuICAgIH07XG4gICAgTWFya2VyLnByb3RvdHlwZS5nZXRNZXNzYWdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXNzYWdlO1xuICAgIH07XG4gICAgcmV0dXJuIE1hcmtlcjtcbn0oKSk7XG5leHBvcnQgeyBNYXJrZXIgfTtcbi8qXG5leHBvcnQgY2xhc3MgRGVmYXVsdFZpc2l0b3IgaW1wbGVtZW50cyBJVmlzaXRvciB7XG5cbiAgICBwdWJsaWMgdmlzaXROb2RlKG5vZGU6Tm9kZSk6Ym9vbGVhbiB7XG4gICAgICAgIHN3aXRjaCAobm9kZS50eXBlKSB7XG4gICAgICAgICAgICBjYXNlIE5vZGVUeXBlLlN0eWxlc2hlZXQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudmlzaXRTdHlsZXNoZWV0KDxTdHlsZXNoZWV0PiBub2RlKTtcbiAgICAgICAgICAgIGNhc2UgTm9kZVR5cGUuRm9udEZhY2U6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudmlzaXRGb250RmFjZSg8Rm9udEZhY2U+IG5vZGUpO1xuICAgICAgICAgICAgY2FzZSBOb2RlVHlwZS5SdWxlc2V0OlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnZpc2l0UnVsZVNldCg8UnVsZVNldD4gbm9kZSk7XG4gICAgICAgICAgICBjYXNlIE5vZGVUeXBlLlNlbGVjdG9yOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnZpc2l0U2VsZWN0b3IoPFNlbGVjdG9yPiBub2RlKTtcbiAgICAgICAgICAgIGNhc2UgTm9kZVR5cGUuU2ltcGxlU2VsZWN0b3I6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudmlzaXRTaW1wbGVTZWxlY3Rvcig8U2ltcGxlU2VsZWN0b3I+IG5vZGUpO1xuICAgICAgICAgICAgY2FzZSBOb2RlVHlwZS5EZWNsYXJhdGlvbjpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdERlY2xhcmF0aW9uKDxEZWNsYXJhdGlvbj4gbm9kZSk7XG4gICAgICAgICAgICBjYXNlIE5vZGVUeXBlLkZ1bmN0aW9uOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnZpc2l0RnVuY3Rpb24oPEZ1bmN0aW9uPiBub2RlKTtcbiAgICAgICAgICAgIGNhc2UgTm9kZVR5cGUuRnVuY3Rpb25EZWNsYXJhdGlvbjpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdEZ1bmN0aW9uRGVjbGFyYXRpb24oPEZ1bmN0aW9uRGVjbGFyYXRpb24+IG5vZGUpO1xuICAgICAgICAgICAgY2FzZSBOb2RlVHlwZS5GdW5jdGlvblBhcmFtZXRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdEZ1bmN0aW9uUGFyYW1ldGVyKDxGdW5jdGlvblBhcmFtZXRlcj4gbm9kZSk7XG4gICAgICAgICAgICBjYXNlIE5vZGVUeXBlLkZ1bmN0aW9uQXJndW1lbnQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudmlzaXRGdW5jdGlvbkFyZ3VtZW50KDxGdW5jdGlvbkFyZ3VtZW50PiBub2RlKTtcbiAgICAgICAgICAgIGNhc2UgTm9kZVR5cGUuVGVybTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdFRlcm0oPFRlcm0+IG5vZGUpO1xuICAgICAgICAgICAgY2FzZSBOb2RlVHlwZS5EZWNsYXJhdGlvbjpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdEV4cHJlc3Npb24oPEV4cHJlc3Npb24+IG5vZGUpO1xuICAgICAgICAgICAgY2FzZSBOb2RlVHlwZS5OdW1lcmljVmFsdWU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudmlzaXROdW1lcmljVmFsdWUoPE51bWVyaWNWYWx1ZT4gbm9kZSk7XG4gICAgICAgICAgICBjYXNlIE5vZGVUeXBlLlBhZ2U6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudmlzaXRQYWdlKDxQYWdlPiBub2RlKTtcbiAgICAgICAgICAgIGNhc2UgTm9kZVR5cGUuUGFnZUJveE1hcmdpbkJveDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdFBhZ2VCb3hNYXJnaW5Cb3goPFBhZ2VCb3hNYXJnaW5Cb3g+IG5vZGUpO1xuICAgICAgICAgICAgY2FzZSBOb2RlVHlwZS5Qcm9wZXJ0eTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdFByb3BlcnR5KDxQcm9wZXJ0eT4gbm9kZSk7XG4gICAgICAgICAgICBjYXNlIE5vZGVUeXBlLk51bWVyaWNWYWx1ZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdE5vZGVsaXN0KDxOb2RlbGlzdD4gbm9kZSk7XG4gICAgICAgICAgICBjYXNlIE5vZGVUeXBlLkltcG9ydDpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdEltcG9ydCg8SW1wb3J0PiBub2RlKTtcbiAgICAgICAgICAgIGNhc2UgTm9kZVR5cGUuTmFtZXNwYWNlOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnZpc2l0TmFtZXNwYWNlKDxOYW1lc3BhY2U+IG5vZGUpO1xuICAgICAgICAgICAgY2FzZSBOb2RlVHlwZS5LZXlmcmFtZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdEtleWZyYW1lKDxLZXlmcmFtZT4gbm9kZSk7XG4gICAgICAgICAgICBjYXNlIE5vZGVUeXBlLktleWZyYW1lU2VsZWN0b3I6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudmlzaXRLZXlmcmFtZVNlbGVjdG9yKDxLZXlmcmFtZVNlbGVjdG9yPiBub2RlKTtcbiAgICAgICAgICAgIGNhc2UgTm9kZVR5cGUuTWl4aW5EZWNsYXJhdGlvbjpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdE1peGluRGVjbGFyYXRpb24oPE1peGluRGVjbGFyYXRpb24+IG5vZGUpO1xuICAgICAgICAgICAgY2FzZSBOb2RlVHlwZS5NaXhpblJlZmVyZW5jZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdE1peGluUmVmZXJlbmNlKDxNaXhpblJlZmVyZW5jZT4gbm9kZSk7XG4gICAgICAgICAgICBjYXNlIE5vZGVUeXBlLlZhcmlhYmxlOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnZpc2l0VmFyaWFibGUoPFZhcmlhYmxlPiBub2RlKTtcbiAgICAgICAgICAgIGNhc2UgTm9kZVR5cGUuVmFyaWFibGVEZWNsYXJhdGlvbjpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdFZhcmlhYmxlRGVjbGFyYXRpb24oPFZhcmlhYmxlRGVjbGFyYXRpb24+IG5vZGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnZpc2l0VW5rbm93bk5vZGUobm9kZSk7XG4gICAgfVxuXG4gICAgcHVibGljIHZpc2l0Rm9udEZhY2Uobm9kZTpGb250RmFjZSk6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdEtleWZyYW1lKG5vZGU6S2V5ZnJhbWUpOmJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdmlzaXRLZXlmcmFtZVNlbGVjdG9yKG5vZGU6S2V5ZnJhbWVTZWxlY3Rvcik6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdFN0eWxlc2hlZXQobm9kZTpTdHlsZXNoZWV0KTpib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIHZpc2l0UHJvcGVydHkoTm9kZTpQcm9wZXJ0eSk6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdFJ1bGVTZXQobm9kZTpSdWxlU2V0KTpib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIHZpc2l0U2VsZWN0b3Iobm9kZTpTZWxlY3Rvcik6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdFNpbXBsZVNlbGVjdG9yKG5vZGU6U2ltcGxlU2VsZWN0b3IpOmJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdmlzaXREZWNsYXJhdGlvbihub2RlOkRlY2xhcmF0aW9uKTpib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIHZpc2l0RnVuY3Rpb24obm9kZTpGdW5jdGlvbik6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdEZ1bmN0aW9uRGVjbGFyYXRpb24obm9kZTpGdW5jdGlvbkRlY2xhcmF0aW9uKTpib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIHZpc2l0SW52b2NhdGlvbihub2RlOkludm9jYXRpb24pOmJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdmlzaXRUZXJtKG5vZGU6VGVybSk6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdEltcG9ydChub2RlOkltcG9ydCk6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdE5hbWVzcGFjZShub2RlOk5hbWVzcGFjZSk6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdEV4cHJlc3Npb24obm9kZTpFeHByZXNzaW9uKTpib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIHZpc2l0TnVtZXJpY1ZhbHVlKG5vZGU6TnVtZXJpY1ZhbHVlKTpib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIHZpc2l0UGFnZShub2RlOlBhZ2UpOmJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdmlzaXRQYWdlQm94TWFyZ2luQm94KG5vZGU6UGFnZUJveE1hcmdpbkJveCk6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdE5vZGVsaXN0KG5vZGU6Tm9kZWxpc3QpOmJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdmlzaXRWYXJpYWJsZURlY2xhcmF0aW9uKG5vZGU6VmFyaWFibGVEZWNsYXJhdGlvbik6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdFZhcmlhYmxlKG5vZGU6VmFyaWFibGUpOmJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdmlzaXRNaXhpbkRlY2xhcmF0aW9uKG5vZGU6TWl4aW5EZWNsYXJhdGlvbik6Ym9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHB1YmxpYyB2aXNpdE1peGluUmVmZXJlbmNlKG5vZGU6TWl4aW5SZWZlcmVuY2UpOmJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgdmlzaXRVbmtub3duTm9kZShub2RlOk5vZGUpOmJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG59XG4qL1xudmFyIFBhcnNlRXJyb3JDb2xsZWN0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUGFyc2VFcnJvckNvbGxlY3RvcigpIHtcbiAgICAgICAgdGhpcy5lbnRyaWVzID0gW107XG4gICAgfVxuICAgIFBhcnNlRXJyb3JDb2xsZWN0b3IuZW50cmllcyA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHZhciB2aXNpdG9yID0gbmV3IFBhcnNlRXJyb3JDb2xsZWN0b3IoKTtcbiAgICAgICAgbm9kZS5hY2NlcHRWaXNpdG9yKHZpc2l0b3IpO1xuICAgICAgICByZXR1cm4gdmlzaXRvci5lbnRyaWVzO1xuICAgIH07XG4gICAgUGFyc2VFcnJvckNvbGxlY3Rvci5wcm90b3R5cGUudmlzaXROb2RlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUuaXNFcnJvbmVvdXMoKSkge1xuICAgICAgICAgICAgbm9kZS5jb2xsZWN0SXNzdWVzKHRoaXMuZW50cmllcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbiAgICByZXR1cm4gUGFyc2VFcnJvckNvbGxlY3Rvcjtcbn0oKSk7XG5leHBvcnQgeyBQYXJzZUVycm9yQ29sbGVjdG9yIH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Parser\", function() { return Parser; });\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\");\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _utils_objects_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/objects.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n\n\n\n\n\n/// <summary>\n/// A parser for the css core specification. See for reference:\n/// https://www.w3.org/TR/CSS21/grammar.html\n/// http://www.w3.org/TR/CSS21/syndata.html#tokenization\n/// </summary>\nvar Parser = /** @class */ (function () {\n    function Parser(scnr) {\n        if (scnr === void 0) { scnr = new _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"](); }\n        this.keyframeRegex = /^@(\\-(webkit|ms|moz|o)\\-)?keyframes$/i;\n        this.scanner = scnr;\n        this.token = { type: _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF, offset: -1, len: 0, text: '' };\n        this.prevToken = undefined;\n    }\n    Parser.prototype.peekIdent = function (text) {\n        return _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n    };\n    Parser.prototype.peekKeyword = function (text) {\n        return _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword === this.token.type && text.length === this.token.text.length && text === this.token.text.toLowerCase();\n    };\n    Parser.prototype.peekDelim = function (text) {\n        return _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Delim === this.token.type && text === this.token.text;\n    };\n    Parser.prototype.peek = function (type) {\n        return type === this.token.type;\n    };\n    Parser.prototype.peekRegExp = function (type, regEx) {\n        if (type !== this.token.type) {\n            return false;\n        }\n        return regEx.test(this.token.text);\n    };\n    Parser.prototype.hasWhitespace = function () {\n        return !!this.prevToken && (this.prevToken.offset + this.prevToken.len !== this.token.offset);\n    };\n    Parser.prototype.consumeToken = function () {\n        this.prevToken = this.token;\n        this.token = this.scanner.scan();\n    };\n    Parser.prototype.mark = function () {\n        return {\n            prev: this.prevToken,\n            curr: this.token,\n            pos: this.scanner.pos()\n        };\n    };\n    Parser.prototype.restoreAtMark = function (mark) {\n        this.prevToken = mark.prev;\n        this.token = mark.curr;\n        this.scanner.goBackTo(mark.pos);\n    };\n    Parser.prototype.try = function (func) {\n        var pos = this.mark();\n        var node = func();\n        if (!node) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return node;\n    };\n    Parser.prototype.acceptOneKeyword = function (keywords) {\n        if (_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword === this.token.type) {\n            for (var _i = 0, keywords_1 = keywords; _i < keywords_1.length; _i++) {\n                var keyword = keywords_1[_i];\n                if (keyword.length === this.token.text.length && keyword === this.token.text.toLowerCase()) {\n                    this.consumeToken();\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Parser.prototype.accept = function (type) {\n        if (type === this.token.type) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptIdent = function (text) {\n        if (this.peekIdent(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptKeyword = function (text) {\n        if (this.peekKeyword(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptDelim = function (text) {\n        if (this.peekDelim(text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype.acceptRegexp = function (regEx) {\n        if (regEx.test(this.token.text)) {\n            this.consumeToken();\n            return true;\n        }\n        return false;\n    };\n    Parser.prototype._parseRegexp = function (regEx) {\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Identifier);\n        do { } while (this.acceptRegexp(regEx));\n        return this.finish(node);\n    };\n    Parser.prototype.acceptUnquotedString = function () {\n        var pos = this.scanner.pos();\n        this.scanner.goBackTo(this.token.offset);\n        var unquoted = this.scanner.scanUnquotedString();\n        if (unquoted) {\n            this.token = unquoted;\n            this.consumeToken();\n            return true;\n        }\n        this.scanner.goBackTo(pos);\n        return false;\n    };\n    Parser.prototype.resync = function (resyncTokens, resyncStopTokens) {\n        while (true) {\n            if (resyncTokens && resyncTokens.indexOf(this.token.type) !== -1) {\n                this.consumeToken();\n                return true;\n            }\n            else if (resyncStopTokens && resyncStopTokens.indexOf(this.token.type) !== -1) {\n                return true;\n            }\n            else {\n                if (this.token.type === _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF) {\n                    return false;\n                }\n                this.token = this.scanner.scan();\n            }\n        }\n    };\n    Parser.prototype.createNode = function (nodeType) {\n        return new _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"](this.token.offset, this.token.len, nodeType);\n    };\n    Parser.prototype.create = function (ctor) {\n        return new ctor(this.token.offset, this.token.len);\n    };\n    Parser.prototype.finish = function (node, error, resyncTokens, resyncStopTokens) {\n        // parseNumeric misuses error for boolean flagging (however the real error mustn't be a false)\n        // + nodelist offsets mustn't be modified, because there is a offset hack in rulesets for smartselection\n        if (!(node instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Nodelist\"])) {\n            if (error) {\n                this.markError(node, error, resyncTokens, resyncStopTokens);\n            }\n            // set the node end position\n            if (this.prevToken) {\n                // length with more elements belonging together\n                var prevEnd = this.prevToken.offset + this.prevToken.len;\n                node.length = prevEnd > node.offset ? prevEnd - node.offset : 0; // offset is taken from current token, end from previous: Use 0 for empty nodes\n            }\n        }\n        return node;\n    };\n    Parser.prototype.markError = function (node, error, resyncTokens, resyncStopTokens) {\n        if (this.token !== this.lastErrorToken) { // do not report twice on the same token\n            node.addIssue(new _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Marker\"](node, error, _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Level\"].Error, undefined, this.token.offset, this.token.len));\n            this.lastErrorToken = this.token;\n        }\n        if (resyncTokens || resyncStopTokens) {\n            this.resync(resyncTokens, resyncStopTokens);\n        }\n    };\n    Parser.prototype.parseStylesheet = function (textDocument) {\n        var versionId = textDocument.version;\n        var text = textDocument.getText();\n        var textProvider = function (offset, length) {\n            if (textDocument.version !== versionId) {\n                throw new Error('Underlying model has changed, AST is no longer valid');\n            }\n            return text.substr(offset, length);\n        };\n        return this.internalParse(text, this._parseStylesheet, textProvider);\n    };\n    Parser.prototype.internalParse = function (input, parseFunc, textProvider) {\n        this.scanner.setSource(input);\n        this.token = this.scanner.scan();\n        var node = parseFunc.bind(this)();\n        if (node) {\n            if (textProvider) {\n                node.textProvider = textProvider;\n            }\n            else {\n                node.textProvider = function (offset, length) { return input.substr(offset, length); };\n            }\n        }\n        return node;\n    };\n    Parser.prototype._parseStylesheet = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Stylesheet\"]);\n        while (node.addChild(this._parseStylesheetStart())) {\n            // Parse statements only valid at the beginning of stylesheets.\n        }\n        var inRecovery = false;\n        do {\n            var hasMatch = false;\n            do {\n                hasMatch = false;\n                var statement = this._parseStylesheetStatement();\n                if (statement) {\n                    node.addChild(statement);\n                    hasMatch = true;\n                    inRecovery = false;\n                    if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF) && this._needsSemicolonAfter(statement) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                        this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected);\n                    }\n                }\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CDO) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CDC)) {\n                    // accept empty statements\n                    hasMatch = true;\n                    inRecovery = false;\n                }\n            } while (hasMatch);\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF)) {\n                break;\n            }\n            if (!inRecovery) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].UnknownAtRule);\n                }\n                else {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RuleOrSelectorExpected);\n                }\n                inRecovery = true;\n            }\n            this.consumeToken();\n        } while (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF));\n        return this.finish(node);\n    };\n    Parser.prototype._parseStylesheetStart = function () {\n        return this._parseCharset();\n    };\n    Parser.prototype._parseStylesheetStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return this._parseStylesheetAtStatement(isNested);\n        }\n        return this._parseRuleset(isNested);\n    };\n    Parser.prototype._parseStylesheetAtStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        return this._parseImport()\n            || this._parseMedia(isNested)\n            || this._parsePage()\n            || this._parseFontFace()\n            || this._parseKeyframe()\n            || this._parseSupports(isNested)\n            || this._parseViewPort()\n            || this._parseNamespace()\n            || this._parseDocument()\n            || this._parseUnknownAtRule();\n    };\n    Parser.prototype._tryParseRuleset = function (isNested) {\n        var mark = this.mark();\n        if (this._parseSelector(isNested)) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma) && this._parseSelector(isNested)) {\n                // loop\n            }\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n                this.restoreAtMark(mark);\n                return this._parseRuleset(isNested);\n            }\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parseRuleset = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"RuleSet\"]);\n        var selectors = node.getSelectors();\n        if (!selectors.addChild(this._parseSelector(isNested))) {\n            return null;\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!selectors.addChild(this._parseSelector(isNested))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SelectorExpected);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseRuleSetDeclarationAtStatement = function () {\n        return this._parseAtApply()\n            || this._parseUnknownAtRule();\n    };\n    Parser.prototype._parseRuleSetDeclaration = function () {\n        // https://www.w3.org/TR/css-syntax-3/#consume-a-list-of-declarations0\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return this._parseRuleSetDeclarationAtStatement();\n        }\n        return this._tryParseCustomPropertyDeclaration()\n            || this._parseDeclaration();\n    };\n    /**\n     * Parses declarations like:\n     *   @apply --my-theme;\n     *\n     * Follows https://tabatkins.github.io/specs/css-apply-rule/#using\n     */\n    Parser.prototype._parseAtApply = function () {\n        if (!this.peekKeyword('@apply')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"AtApplyRule\"]);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Variable]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._needsSemicolonAfter = function (node) {\n        switch (node.type) {\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Keyframe:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ViewPort:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Media:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Ruleset:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Namespace:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].If:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].For:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Each:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].While:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MixinDeclaration:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].FunctionDeclaration:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MixinContentDeclaration:\n                return false;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ExtendsReference:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MixinContentReference:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ReturnStatement:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MediaQuery:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Debug:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Import:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].AtApplyRule:\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].CustomPropertyDeclaration:\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].VariableDeclaration:\n                return node.needsSemicolon;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].MixinReference:\n                return !node.getContent();\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Declaration:\n                return !node.getNestedProperties();\n        }\n        return false;\n    };\n    Parser.prototype._parseDeclarations = function (parseDeclaration) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Declarations\"]);\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n            return null;\n        }\n        var decl = parseDeclaration();\n        while (node.addChild(decl)) {\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR)) {\n                break;\n            }\n            if (this._needsSemicolonAfter(decl) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR]);\n            }\n            // We accepted semicolon token. Link it to declaration.\n            if (decl && this.prevToken && this.prevToken.type === _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon) {\n                decl.semicolonPosition = this.prevToken.offset;\n            }\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                // accept empty statements\n            }\n            decl = parseDeclaration();\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightCurlyExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon]);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseBody = function (node, parseDeclaration) {\n        if (!node.setDeclarations(this._parseDeclarations(parseDeclaration))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftCurlyExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon]);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseSelector = function (isNested) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Selector\"]);\n        var hasContent = false;\n        if (isNested) {\n            // nested selectors can start with a combinator\n            hasContent = node.addChild(this._parseCombinator());\n        }\n        while (node.addChild(this._parseSimpleSelector())) {\n            hasContent = true;\n            node.addChild(this._parseCombinator()); // optional\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    Parser.prototype._parseDeclaration = function (resyncStopTokens) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Declaration\"]);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            var stopTokens = resyncStopTokens ? __spreadArrays(resyncStopTokens, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon]) : [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon];\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon], stopTokens);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        if (!node.setValue(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].PropertyValueExpected);\n        }\n        node.addChild(this._parsePrio());\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._tryParseCustomPropertyDeclaration = function () {\n        if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^--/)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"CustomPropertyDeclaration\"]);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon]);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        var mark = this.mark();\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n            // try to parse it as nested declaration\n            var propertySet = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"CustomPropertySet\"]);\n            var declarations = this._parseDeclarations(this._parseRuleSetDeclaration.bind(this));\n            if (propertySet.setDeclarations(declarations) && !declarations.isErroneous(true)) {\n                propertySet.addChild(this._parsePrio());\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                    this.finish(propertySet);\n                    node.setPropertySet(propertySet);\n                    node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n                    return this.finish(node);\n                }\n            }\n            this.restoreAtMark(mark);\n        }\n        // try tp parse as expression\n        var expression = this._parseExpr();\n        if (expression && !expression.isErroneous(true)) {\n            this._parsePrio();\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n                node.setValue(expression);\n                node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n                return this.finish(node);\n            }\n        }\n        this.restoreAtMark(mark);\n        node.addChild(this._parseCustomPropertyValue());\n        node.addChild(this._parsePrio());\n        if (Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_4__[\"isDefined\"])(node.colonPosition) && this.token.offset === node.colonPosition + 1) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].PropertyValueExpected);\n        }\n        return this.finish(node);\n    };\n    /**\n     * Parse custom property values.\n     *\n     * Based on https://www.w3.org/TR/css-variables/#syntax\n     *\n     * This code is somewhat unusual, as the allowed syntax is incredibly broad,\n     * parsing almost any sequence of tokens, save for a small set of exceptions.\n     * Unbalanced delimitors, invalid tokens, and declaration\n     * terminators like semicolons and !important directives (when not inside\n     * of delimitors).\n     */\n    Parser.prototype._parseCustomPropertyValue = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        var isTopLevel = function () { return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0; };\n        var curlyDepth = 0;\n        var parensDepth = 0;\n        var bracketsDepth = 0;\n        done: while (true) {\n            switch (this.token.type) {\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon:\n                    // A semicolon only ends things if we're not inside a delimitor.\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Exclamation:\n                    // An exclamation ends the value if we're not inside delims.\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL:\n                    curlyDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR:\n                    curlyDepth--;\n                    if (curlyDepth < 0) {\n                        // The property value has been terminated without a semicolon, and\n                        // this is the last declaration in the ruleset.\n                        if (parensDepth === 0 && bracketsDepth === 0) {\n                            break done;\n                        }\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftCurlyExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL:\n                    parensDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR:\n                    parensDepth--;\n                    if (parensDepth < 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL:\n                    bracketsDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR:\n                    bracketsDepth--;\n                    if (bracketsDepth < 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftSquareBracketExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadString: // fall through\n                    break done;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF:\n                    // We shouldn't have reached the end of input, something is\n                    // unterminated.\n                    var error = _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightCurlyExpected;\n                    if (bracketsDepth > 0) {\n                        error = _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected;\n                    }\n                    else if (parensDepth > 0) {\n                        error = _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected;\n                    }\n                    return this.finish(node, error);\n            }\n            this.consumeToken();\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._tryToParseDeclaration = function () {\n        var mark = this.mark();\n        if (this._parseProperty() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            // looks like a declaration, go ahead\n            this.restoreAtMark(mark);\n            return this._parseDeclaration();\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parseProperty = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Property\"]);\n        var mark = this.mark();\n        if (this.acceptDelim('*') || this.acceptDelim('_')) {\n            // support for  IE 5.x, 6 and 7 star hack: see http://en.wikipedia.org/wiki/CSS_filter#Star_hack\n            if (this.hasWhitespace()) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (node.setIdentifier(this._parsePropertyIdentifier())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parsePropertyIdentifier = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseCharset = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Charset)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken(); // charset\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].String)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Import\"]);\n        this.consumeToken(); // @import\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].URIOrStringExpected);\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamespace = function () {\n        // http://www.w3.org/TR/css3-namespace/\n        // namespace  : NAMESPACE_SYM S* [IDENT S*]? [STRING|URI] S* ';' S*\n        if (!this.peekKeyword('@namespace')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Namespace\"]);\n        this.consumeToken(); // @namespace\n        if (!node.addChild(this._parseURILiteral())) { // url literal also starts with ident\n            node.addChild(this._parseIdent()); // optional prefix\n            if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].URIExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon]);\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseFontFace = function () {\n        if (!this.peekKeyword('@font-face')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"FontFace\"]);\n        this.consumeToken(); // @font-face\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseViewPort = function () {\n        if (!this.peekKeyword('@-ms-viewport') &&\n            !this.peekKeyword('@-o-viewport') &&\n            !this.peekKeyword('@viewport')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ViewPort\"]);\n        this.consumeToken(); // @-ms-viewport\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseKeyframe = function () {\n        if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword, this.keyframeRegex)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Keyframe\"]);\n        var atNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken(); // atkeyword\n        node.setKeyword(this.finish(atNode));\n        if (atNode.matches('@-ms-keyframes')) { // -ms-keyframes never existed\n            this.markError(atNode, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].UnknownKeyword);\n        }\n        if (!node.setIdentifier(this._parseKeyframeIdent())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, this._parseKeyframeSelector.bind(this));\n    };\n    Parser.prototype._parseKeyframeIdent = function () {\n        return this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Keyframe]);\n    };\n    Parser.prototype._parseKeyframeSelector = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"KeyframeSelector\"]);\n        if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n            return null;\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].PercentageExpected);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._tryParseKeyframeSelector = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"KeyframeSelector\"]);\n        var pos = this.mark();\n        if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n            return null;\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseIdent()) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage)) {\n                this.restoreAtMark(pos);\n                return null;\n            }\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parseSupports = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        // SUPPORTS_SYM S* supports_condition '{' S* ruleset* '}' S*\n        if (!this.peekKeyword('@supports')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Supports\"]);\n        this.consumeToken(); // @supports\n        node.addChild(this._parseSupportsCondition());\n        return this._parseBody(node, this._parseSupportsDeclaration.bind(this, isNested));\n    };\n    Parser.prototype._parseSupportsDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (isNested) {\n            // if nested, the body can contain rulesets, but also declarations\n            return this._tryParseRuleset(true)\n                || this._tryToParseDeclaration()\n                || this._parseStylesheetStatement(true);\n        }\n        return this._parseStylesheetStatement(false);\n    };\n    Parser.prototype._parseSupportsCondition = function () {\n        // supports_condition : supports_negation | supports_conjunction | supports_disjunction | supports_condition_in_parens ;\n        // supports_condition_in_parens: ( '(' S* supports_condition S* ')' ) | supports_declaration_condition | general_enclosed ;\n        // supports_negation: NOT S+ supports_condition_in_parens ;\n        // supports_conjunction: supports_condition_in_parens ( S+ AND S+ supports_condition_in_parens )+;\n        // supports_disjunction: supports_condition_in_parens ( S+ OR S+ supports_condition_in_parens )+;\n        // supports_declaration_condition: '(' S* declaration ')';\n        // general_enclosed: ( FUNCTION | '(' ) ( any | unused )* ')' ;\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"SupportsCondition\"]);\n        if (this.acceptIdent('not')) {\n            node.addChild(this._parseSupportsConditionInParens());\n        }\n        else {\n            node.addChild(this._parseSupportsConditionInParens());\n            if (this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^(and|or)$/i)) {\n                var text = this.token.text.toLowerCase();\n                while (this.acceptIdent(text)) {\n                    node.addChild(this._parseSupportsConditionInParens());\n                }\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseSupportsConditionInParens = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"SupportsCondition\"]);\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            if (this.prevToken) {\n                node.lParent = this.prevToken.offset;\n            }\n            if (!node.addChild(this._tryToParseDeclaration())) {\n                if (!this._parseSupportsCondition()) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ConditionExpected);\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR], []);\n            }\n            if (this.prevToken) {\n                node.rParent = this.prevToken.offset;\n            }\n            return this.finish(node);\n        }\n        else if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident)) {\n            var pos = this.mark();\n            this.consumeToken();\n            if (!this.hasWhitespace() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n                var openParentCount = 1;\n                while (this.token.type !== _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF && openParentCount !== 0) {\n                    if (this.token.type === _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL) {\n                        openParentCount++;\n                    }\n                    else if (this.token.type === _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR) {\n                        openParentCount--;\n                    }\n                    this.consumeToken();\n                }\n                return this.finish(node);\n            }\n            else {\n                this.restoreAtMark(pos);\n            }\n        }\n        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL]);\n    };\n    Parser.prototype._parseMediaDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (isNested) {\n            // if nested, the body can contain rulesets, but also declarations\n            return this._tryParseRuleset(true)\n                || this._tryToParseDeclaration()\n                || this._parseStylesheetStatement(true);\n        }\n        return this._parseStylesheetStatement(false);\n    };\n    Parser.prototype._parseMedia = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        // MEDIA_SYM S* media_query_list '{' S* ruleset* '}' S*\n        // media_query_list : S* [media_query [ ',' S* media_query ]* ]?\n        if (!this.peekKeyword('@media')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Media\"]);\n        this.consumeToken(); // @media\n        if (!node.addChild(this._parseMediaQueryList())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].MediaQueryExpected);\n        }\n        return this._parseBody(node, this._parseMediaDeclaration.bind(this, isNested));\n    };\n    Parser.prototype._parseMediaQueryList = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Medialist\"]);\n        if (!node.addChild(this._parseMediaQuery([_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].MediaQueryExpected);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseMediaQuery([_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].MediaQueryExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseMediaQuery = function (resyncStopToken) {\n        // http://www.w3.org/TR/css3-mediaqueries/\n        // media_query : [ONLY | NOT]? S* IDENT S* [ AND S* expression ]* | expression [ AND S* expression ]*\n        // expression : '(' S* IDENT S* [ ':' S* expr ]? ')' S*\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"MediaQuery\"]);\n        var parseExpression = true;\n        var hasContent = false;\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            if (this.acceptIdent('only') || this.acceptIdent('not')) {\n                // optional\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return null;\n            }\n            hasContent = true;\n            parseExpression = this.acceptIdent('and');\n        }\n        while (parseExpression) {\n            // Allow short-circuting for other language constructs.\n            if (node.addChild(this._parseMediaContentStart())) {\n                parseExpression = this.acceptIdent('and');\n                continue;\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n                if (hasContent) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected, [], resyncStopToken);\n                }\n                return null;\n            }\n            if (!node.addChild(this._parseMediaFeatureName())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected, [], resyncStopToken);\n            }\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n                if (!node.addChild(this._parseExpr())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].TermExpected, [], resyncStopToken);\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected, [], resyncStopToken);\n            }\n            parseExpression = this.acceptIdent('and');\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseMediaContentStart = function () {\n        return null;\n    };\n    Parser.prototype._parseMediaFeatureName = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseMedium = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        if (node.addChild(this._parseIdent())) {\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parsePageDeclaration = function () {\n        return this._parsePageMarginBox() || this._parseRuleSetDeclaration();\n    };\n    Parser.prototype._parsePage = function () {\n        // http://www.w3.org/TR/css3-page/\n        // page_rule : PAGE_SYM S* page_selector_list '{' S* page_body '}' S*\n        // page_body :  /* Can be empty */ declaration? [ ';' S* page_body ]? | page_margin_box page_body\n        if (!this.peekKeyword('@page')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Page\"]);\n        this.consumeToken();\n        if (node.addChild(this._parsePageSelector())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n                if (!node.addChild(this._parsePageSelector())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n                }\n            }\n        }\n        return this._parseBody(node, this._parsePageDeclaration.bind(this));\n    };\n    Parser.prototype._parsePageMarginBox = function () {\n        // page_margin_box :  margin_sym S* '{' S* declaration? [ ';' S* declaration? ]* '}' S*\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"PageBoxMarginBox\"]);\n        if (!this.acceptOneKeyword(_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_3__[\"pageBoxDirectives\"])) {\n            this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].UnknownAtRule, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]);\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    Parser.prototype._parsePageSelector = function () {\n        // page_selector : pseudo_page+ | IDENT pseudo_page*\n        // pseudo_page :  ':' [ \"left\" | \"right\" | \"first\" | \"blank\" ];\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        node.addChild(this._parseIdent()); // optional ident\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            if (!node.addChild(this._parseIdent())) { // optional ident\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseDocument = function () {\n        // -moz-document is experimental but has been pushed to css4\n        if (!this.peekKeyword('@-moz-document')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Document\"]);\n        this.consumeToken(); // @-moz-document\n        this.resync([], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL]); // ignore all the rules\n        return this._parseBody(node, this._parseStylesheetStatement.bind(this));\n    };\n    // https://www.w3.org/TR/css-syntax-3/#consume-an-at-rule\n    Parser.prototype._parseUnknownAtRule = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"UnknownAtRule\"]);\n        node.addChild(this._parseUnknownAtRuleName());\n        var isTopLevel = function () { return curlyDepth === 0 && parensDepth === 0 && bracketsDepth === 0; };\n        var curlyLCount = 0;\n        var curlyDepth = 0;\n        var parensDepth = 0;\n        var bracketsDepth = 0;\n        done: while (true) {\n            switch (this.token.type) {\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SemiColon:\n                    if (isTopLevel()) {\n                        break done;\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF:\n                    if (curlyDepth > 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightCurlyExpected);\n                    }\n                    else if (bracketsDepth > 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected);\n                    }\n                    else if (parensDepth > 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n                    }\n                    else {\n                        return this.finish(node);\n                    }\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL:\n                    curlyLCount++;\n                    curlyDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR:\n                    curlyDepth--;\n                    // End of at-rule, consume CurlyR and return node\n                    if (curlyLCount > 0 && curlyDepth === 0) {\n                        this.consumeToken();\n                        if (bracketsDepth > 0) {\n                            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected);\n                        }\n                        else if (parensDepth > 0) {\n                            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n                        }\n                        break done;\n                    }\n                    if (curlyDepth < 0) {\n                        // The property value has been terminated without a semicolon, and\n                        // this is the last declaration in the ruleset.\n                        if (parensDepth === 0 && bracketsDepth === 0) {\n                            break done;\n                        }\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftCurlyExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL:\n                    parensDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR:\n                    parensDepth--;\n                    if (parensDepth < 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftParenthesisExpected);\n                    }\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL:\n                    bracketsDepth++;\n                    break;\n                case _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR:\n                    bracketsDepth--;\n                    if (bracketsDepth < 0) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].LeftSquareBracketExpected);\n                    }\n                    break;\n            }\n            this.consumeToken();\n        }\n        return node;\n    };\n    Parser.prototype._parseUnknownAtRuleName = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].AtKeyword)) {\n            return this.finish(node);\n        }\n        return node;\n    };\n    Parser.prototype._parseOperator = function () {\n        // these are operators for binary expressions\n        if (this.peekDelim('/') ||\n            this.peekDelim('*') ||\n            this.peekDelim('+') ||\n            this.peekDelim('-') ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Dashmatch) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Includes) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SubstringOperator) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].PrefixOperator) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].SuffixOperator) ||\n            this.peekDelim('=')) { // doesn't stick to the standard here\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Operator);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    Parser.prototype._parseUnaryOperator = function () {\n        if (!this.peekDelim('+') && !this.peekDelim('-')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseCombinator = function () {\n        if (this.peekDelim('>')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            var mark = this.mark();\n            if (!this.hasWhitespace() && this.acceptDelim('>')) {\n                if (!this.hasWhitespace() && this.acceptDelim('>')) {\n                    node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorShadowPiercingDescendant;\n                    return this.finish(node);\n                }\n                this.restoreAtMark(mark);\n            }\n            node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorParent;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('+')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorSibling;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('~')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorAllSiblings;\n            return this.finish(node);\n        }\n        else if (this.peekDelim('/')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n            this.consumeToken();\n            var mark = this.mark();\n            if (!this.hasWhitespace() && this.acceptIdent('deep') && !this.hasWhitespace() && this.acceptDelim('/')) {\n                node.type = _cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].SelectorCombinatorShadowPiercingDescendant;\n                return this.finish(node);\n            }\n            this.restoreAtMark(mark);\n        }\n        return null;\n    };\n    Parser.prototype._parseSimpleSelector = function () {\n        // simple_selector\n        //  : element_name [ HASH | class | attrib | pseudo ]* | [ HASH | class | attrib | pseudo ]+ ;\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"SimpleSelector\"]);\n        var c = 0;\n        if (node.addChild(this._parseElementName())) {\n            c++;\n        }\n        while ((c === 0 || !this.hasWhitespace()) && node.addChild(this._parseSimpleSelectorBody())) {\n            c++;\n        }\n        return c > 0 ? this.finish(node) : null;\n    };\n    Parser.prototype._parseSimpleSelectorBody = function () {\n        return this._parsePseudo() || this._parseHash() || this._parseClass() || this._parseAttrib();\n    };\n    Parser.prototype._parseSelectorIdent = function () {\n        return this._parseIdent();\n    };\n    Parser.prototype._parseHash = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Hash) && !this.peekDelim('#')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].IdentifierSelector);\n        if (this.acceptDelim('#')) {\n            if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n            }\n        }\n        else {\n            this.consumeToken(); // TokenType.Hash\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseClass = function () {\n        // class: '.' IDENT ;\n        if (!this.peekDelim('.')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ClassSelector);\n        this.consumeToken(); // '.'\n        if (this.hasWhitespace() || !node.addChild(this._parseSelectorIdent())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseElementName = function () {\n        // element_name: (ns? '|')? IDENT | '*';\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].ElementNameSelector);\n        node.addChild(this._parseNamespacePrefix());\n        if (!node.addChild(this._parseSelectorIdent()) && !this.acceptDelim('*')) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamespacePrefix = function () {\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].NamespacePrefix);\n        if (!node.addChild(this._parseIdent()) && !this.acceptDelim('*')) {\n            // ns is optional\n        }\n        if (!this.acceptDelim('|')) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseAttrib = function () {\n        // attrib : '[' S* IDENT S* [ [ '=' | INCLUDES | DASHMATCH ] S*   [ IDENT | STRING ] S* ]? ']'\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"AttributeSelector\"]);\n        this.consumeToken(); // BracketL\n        // Optional attrib namespace\n        node.setNamespacePrefix(this._parseNamespacePrefix());\n        if (!node.setIdentifier(this._parseIdent())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        if (node.setOperator(this._parseOperator())) {\n            node.setValue(this._parseBinaryExpr());\n            this.acceptIdent('i'); // case insensitive matching\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parsePseudo = function () {\n        var _this = this;\n        // pseudo: ':' [ IDENT | FUNCTION S* [IDENT S*]? ')' ]\n        var node = this._tryParsePseudoIdentifier();\n        if (node) {\n            if (!this.hasWhitespace() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n                var tryAsSelector = function () {\n                    var selectors = _this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n                    if (!selectors.addChild(_this._parseSelector(false))) {\n                        return null;\n                    }\n                    while (_this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma) && selectors.addChild(_this._parseSelector(false))) {\n                        // loop\n                    }\n                    if (_this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                        return _this.finish(selectors);\n                    }\n                    return null;\n                };\n                node.addChild(this.try(tryAsSelector) || this._parseBinaryExpr());\n                if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n                }\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._tryParsePseudoIdentifier = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n            return null;\n        }\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].PseudoSelector);\n        this.consumeToken(); // Colon\n        if (this.hasWhitespace()) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        // optional, support ::\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon) && this.hasWhitespace()) {\n            this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        if (!node.addChild(this._parseIdent())) {\n            this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].IdentifierExpected);\n        }\n        return node;\n    };\n    Parser.prototype._tryParsePrio = function () {\n        var mark = this.mark();\n        var prio = this._parsePrio();\n        if (prio) {\n            return prio;\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    Parser.prototype._parsePrio = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Exclamation)) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Prio);\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Exclamation) && this.acceptIdent('important')) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseExpr = function (stopOnComma) {\n        if (stopOnComma === void 0) { stopOnComma = false; }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Expression\"]);\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return null;\n        }\n        while (true) {\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) { // optional\n                if (stopOnComma) {\n                    return this.finish(node);\n                }\n                this.consumeToken();\n            }\n            if (!node.addChild(this._parseBinaryExpr())) {\n                break;\n            }\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNamedLine = function () {\n        // https://www.w3.org/TR/css-grid-1/#named-lines\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketL)) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].GridLine);\n        this.consumeToken();\n        while (node.addChild(this._parseIdent())) {\n            // repeat\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BracketR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightSquareBracketExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseBinaryExpr = function (preparsedLeft, preparsedOper) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"BinaryExpression\"]);\n        if (!node.setLeft((preparsedLeft || this._parseTerm()))) {\n            return null;\n        }\n        if (!node.setOperator(preparsedOper || this._parseOperator())) {\n            return this.finish(node);\n        }\n        if (!node.setRight(this._parseTerm())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].TermExpected);\n        }\n        // things needed for multiple binary expressions\n        node = this.finish(node);\n        var operator = this._parseOperator();\n        if (operator) {\n            node = this._parseBinaryExpr(node, operator);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseTerm = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Term\"]);\n        node.setOperator(this._parseUnaryOperator()); // optional\n        if (node.setExpression(this._parseTermExpression())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseTermExpression = function () {\n        return this._parseURILiteral() || // url before function\n            this._parseFunction() || // function before ident\n            this._parseIdent() ||\n            this._parseStringLiteral() ||\n            this._parseNumeric() ||\n            this._parseHexColor() ||\n            this._parseOperation() ||\n            this._parseNamedLine();\n    };\n    Parser.prototype._parseOperation = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        this.consumeToken(); // ParenthesisL\n        node.addChild(this._parseExpr());\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseNumeric = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Num) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Percentage) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Resolution) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Length) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EMS) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EXS) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Angle) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Time) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Dimension) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Freq)) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NumericValue\"]);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseStringLiteral = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].String) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadString)) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].StringLiteral);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseURILiteral = function () {\n        if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^url(-prefix)?$/i)) {\n            return null;\n        }\n        var pos = this.mark();\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].URILiteral);\n        this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident);\n        if (this.hasWhitespace() || !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        this.scanner.inURL = true;\n        this.consumeToken(); // consume ()\n        node.addChild(this._parseURLArgument()); // argument is optional\n        this.scanner.inURL = false;\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseURLArgument = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Node\"]);\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].String) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadString) && !this.acceptUnquotedString()) {\n            return null;\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseIdent = function (referenceTypes) {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Identifier\"]);\n        if (referenceTypes) {\n            node.referenceTypes = referenceTypes;\n        }\n        node.isCustomProperty = this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident, /^--/);\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunction = function () {\n        var pos = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Function\"]);\n        if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n            return null;\n        }\n        if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (node.getArguments().addChild(this._parseFunctionArgument())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comma)) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n                    break;\n                }\n                if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].ExpressionExpected);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_2__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunctionIdentifier = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"Identifier\"]);\n        node.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Function];\n        if (this.acceptIdent('progid')) {\n            // support for IE7 specific filters: 'progid:DXImageTransform.Microsoft.MotionBlur(strength=13, direction=310)'\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Colon)) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Ident) && this.acceptDelim('.')) {\n                    // loop\n                }\n            }\n            return this.finish(node);\n        }\n        this.consumeToken();\n        return this.finish(node);\n    };\n    Parser.prototype._parseFunctionArgument = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"FunctionArgument\"]);\n        if (node.setValue(this._parseExpr(true))) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    Parser.prototype._parseHexColor = function () {\n        if (this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Hash, /^#([A-Fa-f0-9]{3}|[A-Fa-f0-9]{4}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{8})$/g)) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"HexColorValue\"]);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        else {\n            return null;\n        }\n    };\n    return Parser;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenType\", function() { return TokenType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MultiLineStream\", function() { return MultiLineStream; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scanner\", function() { return Scanner; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"Ident\"] = 0] = \"Ident\";\n    TokenType[TokenType[\"AtKeyword\"] = 1] = \"AtKeyword\";\n    TokenType[TokenType[\"String\"] = 2] = \"String\";\n    TokenType[TokenType[\"BadString\"] = 3] = \"BadString\";\n    TokenType[TokenType[\"UnquotedString\"] = 4] = \"UnquotedString\";\n    TokenType[TokenType[\"Hash\"] = 5] = \"Hash\";\n    TokenType[TokenType[\"Num\"] = 6] = \"Num\";\n    TokenType[TokenType[\"Percentage\"] = 7] = \"Percentage\";\n    TokenType[TokenType[\"Dimension\"] = 8] = \"Dimension\";\n    TokenType[TokenType[\"UnicodeRange\"] = 9] = \"UnicodeRange\";\n    TokenType[TokenType[\"CDO\"] = 10] = \"CDO\";\n    TokenType[TokenType[\"CDC\"] = 11] = \"CDC\";\n    TokenType[TokenType[\"Colon\"] = 12] = \"Colon\";\n    TokenType[TokenType[\"SemiColon\"] = 13] = \"SemiColon\";\n    TokenType[TokenType[\"CurlyL\"] = 14] = \"CurlyL\";\n    TokenType[TokenType[\"CurlyR\"] = 15] = \"CurlyR\";\n    TokenType[TokenType[\"ParenthesisL\"] = 16] = \"ParenthesisL\";\n    TokenType[TokenType[\"ParenthesisR\"] = 17] = \"ParenthesisR\";\n    TokenType[TokenType[\"BracketL\"] = 18] = \"BracketL\";\n    TokenType[TokenType[\"BracketR\"] = 19] = \"BracketR\";\n    TokenType[TokenType[\"Whitespace\"] = 20] = \"Whitespace\";\n    TokenType[TokenType[\"Includes\"] = 21] = \"Includes\";\n    TokenType[TokenType[\"Dashmatch\"] = 22] = \"Dashmatch\";\n    TokenType[TokenType[\"SubstringOperator\"] = 23] = \"SubstringOperator\";\n    TokenType[TokenType[\"PrefixOperator\"] = 24] = \"PrefixOperator\";\n    TokenType[TokenType[\"SuffixOperator\"] = 25] = \"SuffixOperator\";\n    TokenType[TokenType[\"Delim\"] = 26] = \"Delim\";\n    TokenType[TokenType[\"EMS\"] = 27] = \"EMS\";\n    TokenType[TokenType[\"EXS\"] = 28] = \"EXS\";\n    TokenType[TokenType[\"Length\"] = 29] = \"Length\";\n    TokenType[TokenType[\"Angle\"] = 30] = \"Angle\";\n    TokenType[TokenType[\"Time\"] = 31] = \"Time\";\n    TokenType[TokenType[\"Freq\"] = 32] = \"Freq\";\n    TokenType[TokenType[\"Exclamation\"] = 33] = \"Exclamation\";\n    TokenType[TokenType[\"Resolution\"] = 34] = \"Resolution\";\n    TokenType[TokenType[\"Comma\"] = 35] = \"Comma\";\n    TokenType[TokenType[\"Charset\"] = 36] = \"Charset\";\n    TokenType[TokenType[\"EscapedJavaScript\"] = 37] = \"EscapedJavaScript\";\n    TokenType[TokenType[\"BadEscapedJavaScript\"] = 38] = \"BadEscapedJavaScript\";\n    TokenType[TokenType[\"Comment\"] = 39] = \"Comment\";\n    TokenType[TokenType[\"SingleLineComment\"] = 40] = \"SingleLineComment\";\n    TokenType[TokenType[\"EOF\"] = 41] = \"EOF\";\n    TokenType[TokenType[\"CustomToken\"] = 42] = \"CustomToken\";\n})(TokenType || (TokenType = {}));\nvar MultiLineStream = /** @class */ (function () {\n    function MultiLineStream(source) {\n        this.source = source;\n        this.len = source.length;\n        this.position = 0;\n    }\n    MultiLineStream.prototype.substring = function (from, to) {\n        if (to === void 0) { to = this.position; }\n        return this.source.substring(from, to);\n    };\n    MultiLineStream.prototype.eos = function () {\n        return this.len <= this.position;\n    };\n    MultiLineStream.prototype.pos = function () {\n        return this.position;\n    };\n    MultiLineStream.prototype.goBackTo = function (pos) {\n        this.position = pos;\n    };\n    MultiLineStream.prototype.goBack = function (n) {\n        this.position -= n;\n    };\n    MultiLineStream.prototype.advance = function (n) {\n        this.position += n;\n    };\n    MultiLineStream.prototype.nextChar = function () {\n        return this.source.charCodeAt(this.position++) || 0;\n    };\n    MultiLineStream.prototype.peekChar = function (n) {\n        if (n === void 0) { n = 0; }\n        return this.source.charCodeAt(this.position + n) || 0;\n    };\n    MultiLineStream.prototype.lookbackChar = function (n) {\n        if (n === void 0) { n = 0; }\n        return this.source.charCodeAt(this.position - n) || 0;\n    };\n    MultiLineStream.prototype.advanceIfChar = function (ch) {\n        if (ch === this.source.charCodeAt(this.position)) {\n            this.position++;\n            return true;\n        }\n        return false;\n    };\n    MultiLineStream.prototype.advanceIfChars = function (ch) {\n        if (this.position + ch.length > this.source.length) {\n            return false;\n        }\n        var i = 0;\n        for (; i < ch.length; i++) {\n            if (this.source.charCodeAt(this.position + i) !== ch[i]) {\n                return false;\n            }\n        }\n        this.advance(i);\n        return true;\n    };\n    MultiLineStream.prototype.advanceWhileChar = function (condition) {\n        var posNow = this.position;\n        while (this.position < this.len && condition(this.source.charCodeAt(this.position))) {\n            this.position++;\n        }\n        return this.position - posNow;\n    };\n    return MultiLineStream;\n}());\n\nvar _a = 'a'.charCodeAt(0);\nvar _f = 'f'.charCodeAt(0);\nvar _z = 'z'.charCodeAt(0);\nvar _A = 'A'.charCodeAt(0);\nvar _F = 'F'.charCodeAt(0);\nvar _Z = 'Z'.charCodeAt(0);\nvar _0 = '0'.charCodeAt(0);\nvar _9 = '9'.charCodeAt(0);\nvar _TLD = '~'.charCodeAt(0);\nvar _HAT = '^'.charCodeAt(0);\nvar _EQS = '='.charCodeAt(0);\nvar _PIP = '|'.charCodeAt(0);\nvar _MIN = '-'.charCodeAt(0);\nvar _USC = '_'.charCodeAt(0);\nvar _PRC = '%'.charCodeAt(0);\nvar _MUL = '*'.charCodeAt(0);\nvar _LPA = '('.charCodeAt(0);\nvar _RPA = ')'.charCodeAt(0);\nvar _LAN = '<'.charCodeAt(0);\nvar _RAN = '>'.charCodeAt(0);\nvar _ATS = '@'.charCodeAt(0);\nvar _HSH = '#'.charCodeAt(0);\nvar _DLR = '$'.charCodeAt(0);\nvar _BSL = '\\\\'.charCodeAt(0);\nvar _FSL = '/'.charCodeAt(0);\nvar _NWL = '\\n'.charCodeAt(0);\nvar _CAR = '\\r'.charCodeAt(0);\nvar _LFD = '\\f'.charCodeAt(0);\nvar _DQO = '\"'.charCodeAt(0);\nvar _SQO = '\\''.charCodeAt(0);\nvar _WSP = ' '.charCodeAt(0);\nvar _TAB = '\\t'.charCodeAt(0);\nvar _SEM = ';'.charCodeAt(0);\nvar _COL = ':'.charCodeAt(0);\nvar _CUL = '{'.charCodeAt(0);\nvar _CUR = '}'.charCodeAt(0);\nvar _BRL = '['.charCodeAt(0);\nvar _BRR = ']'.charCodeAt(0);\nvar _CMA = ','.charCodeAt(0);\nvar _DOT = '.'.charCodeAt(0);\nvar _BNG = '!'.charCodeAt(0);\nvar staticTokenTable = {};\nstaticTokenTable[_SEM] = TokenType.SemiColon;\nstaticTokenTable[_COL] = TokenType.Colon;\nstaticTokenTable[_CUL] = TokenType.CurlyL;\nstaticTokenTable[_CUR] = TokenType.CurlyR;\nstaticTokenTable[_BRR] = TokenType.BracketR;\nstaticTokenTable[_BRL] = TokenType.BracketL;\nstaticTokenTable[_LPA] = TokenType.ParenthesisL;\nstaticTokenTable[_RPA] = TokenType.ParenthesisR;\nstaticTokenTable[_CMA] = TokenType.Comma;\nvar staticUnitTable = {};\nstaticUnitTable['em'] = TokenType.EMS;\nstaticUnitTable['ex'] = TokenType.EXS;\nstaticUnitTable['px'] = TokenType.Length;\nstaticUnitTable['cm'] = TokenType.Length;\nstaticUnitTable['mm'] = TokenType.Length;\nstaticUnitTable['in'] = TokenType.Length;\nstaticUnitTable['pt'] = TokenType.Length;\nstaticUnitTable['pc'] = TokenType.Length;\nstaticUnitTable['deg'] = TokenType.Angle;\nstaticUnitTable['rad'] = TokenType.Angle;\nstaticUnitTable['grad'] = TokenType.Angle;\nstaticUnitTable['ms'] = TokenType.Time;\nstaticUnitTable['s'] = TokenType.Time;\nstaticUnitTable['hz'] = TokenType.Freq;\nstaticUnitTable['khz'] = TokenType.Freq;\nstaticUnitTable['%'] = TokenType.Percentage;\nstaticUnitTable['fr'] = TokenType.Percentage;\nstaticUnitTable['dpi'] = TokenType.Resolution;\nstaticUnitTable['dpcm'] = TokenType.Resolution;\nvar Scanner = /** @class */ (function () {\n    function Scanner() {\n        this.stream = new MultiLineStream('');\n        this.ignoreComment = true;\n        this.ignoreWhitespace = true;\n        this.inURL = false;\n    }\n    Scanner.prototype.setSource = function (input) {\n        this.stream = new MultiLineStream(input);\n    };\n    Scanner.prototype.finishToken = function (offset, type, text) {\n        return {\n            offset: offset,\n            len: this.stream.pos() - offset,\n            type: type,\n            text: text || this.stream.substring(offset)\n        };\n    };\n    Scanner.prototype.substring = function (offset, len) {\n        return this.stream.substring(offset, offset + len);\n    };\n    Scanner.prototype.pos = function () {\n        return this.stream.pos();\n    };\n    Scanner.prototype.goBackTo = function (pos) {\n        this.stream.goBackTo(pos);\n    };\n    Scanner.prototype.scanUnquotedString = function () {\n        var offset = this.stream.pos();\n        var content = [];\n        if (this._unquotedString(content)) {\n            return this.finishToken(offset, TokenType.UnquotedString, content.join(''));\n        }\n        return null;\n    };\n    Scanner.prototype.scan = function () {\n        // processes all whitespaces and comments\n        var triviaToken = this.trivia();\n        if (triviaToken !== null) {\n            return triviaToken;\n        }\n        var offset = this.stream.pos();\n        // End of file/input\n        if (this.stream.eos()) {\n            return this.finishToken(offset, TokenType.EOF);\n        }\n        return this.scanNext(offset);\n    };\n    Scanner.prototype.scanNext = function (offset) {\n        // CDO <!--\n        if (this.stream.advanceIfChars([_LAN, _BNG, _MIN, _MIN])) {\n            return this.finishToken(offset, TokenType.CDO);\n        }\n        // CDC -->\n        if (this.stream.advanceIfChars([_MIN, _MIN, _RAN])) {\n            return this.finishToken(offset, TokenType.CDC);\n        }\n        var content = [];\n        if (this.ident(content)) {\n            return this.finishToken(offset, TokenType.Ident, content.join(''));\n        }\n        // at-keyword\n        if (this.stream.advanceIfChar(_ATS)) {\n            content = ['@'];\n            if (this._name(content)) {\n                var keywordText = content.join('');\n                if (keywordText === '@charset') {\n                    return this.finishToken(offset, TokenType.Charset, keywordText);\n                }\n                return this.finishToken(offset, TokenType.AtKeyword, keywordText);\n            }\n            else {\n                return this.finishToken(offset, TokenType.Delim);\n            }\n        }\n        // hash\n        if (this.stream.advanceIfChar(_HSH)) {\n            content = ['#'];\n            if (this._name(content)) {\n                return this.finishToken(offset, TokenType.Hash, content.join(''));\n            }\n            else {\n                return this.finishToken(offset, TokenType.Delim);\n            }\n        }\n        // Important\n        if (this.stream.advanceIfChar(_BNG)) {\n            return this.finishToken(offset, TokenType.Exclamation);\n        }\n        // Numbers\n        if (this._number()) {\n            var pos = this.stream.pos();\n            content = [this.stream.substring(offset, pos)];\n            if (this.stream.advanceIfChar(_PRC)) {\n                // Percentage 43%\n                return this.finishToken(offset, TokenType.Percentage);\n            }\n            else if (this.ident(content)) {\n                var dim = this.stream.substring(pos).toLowerCase();\n                var tokenType_1 = staticUnitTable[dim];\n                if (typeof tokenType_1 !== 'undefined') {\n                    // Known dimension 43px\n                    return this.finishToken(offset, tokenType_1, content.join(''));\n                }\n                else {\n                    // Unknown dimension 43ft\n                    return this.finishToken(offset, TokenType.Dimension, content.join(''));\n                }\n            }\n            return this.finishToken(offset, TokenType.Num);\n        }\n        // String, BadString\n        content = [];\n        var tokenType = this._string(content);\n        if (tokenType !== null) {\n            return this.finishToken(offset, tokenType, content.join(''));\n        }\n        // single character tokens\n        tokenType = staticTokenTable[this.stream.peekChar()];\n        if (typeof tokenType !== 'undefined') {\n            this.stream.advance(1);\n            return this.finishToken(offset, tokenType);\n        }\n        // includes ~=\n        if (this.stream.peekChar(0) === _TLD && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.Includes);\n        }\n        // DashMatch |=\n        if (this.stream.peekChar(0) === _PIP && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.Dashmatch);\n        }\n        // Substring operator *=\n        if (this.stream.peekChar(0) === _MUL && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.SubstringOperator);\n        }\n        // Substring operator ^=\n        if (this.stream.peekChar(0) === _HAT && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.PrefixOperator);\n        }\n        // Substring operator $=\n        if (this.stream.peekChar(0) === _DLR && this.stream.peekChar(1) === _EQS) {\n            this.stream.advance(2);\n            return this.finishToken(offset, TokenType.SuffixOperator);\n        }\n        // Delim\n        this.stream.nextChar();\n        return this.finishToken(offset, TokenType.Delim);\n    };\n    Scanner.prototype.trivia = function () {\n        while (true) {\n            var offset = this.stream.pos();\n            if (this._whitespace()) {\n                if (!this.ignoreWhitespace) {\n                    return this.finishToken(offset, TokenType.Whitespace);\n                }\n            }\n            else if (this.comment()) {\n                if (!this.ignoreComment) {\n                    return this.finishToken(offset, TokenType.Comment);\n                }\n            }\n            else {\n                return null;\n            }\n        }\n    };\n    Scanner.prototype.comment = function () {\n        if (this.stream.advanceIfChars([_FSL, _MUL])) {\n            var success_1 = false, hot_1 = false;\n            this.stream.advanceWhileChar(function (ch) {\n                if (hot_1 && ch === _FSL) {\n                    success_1 = true;\n                    return false;\n                }\n                hot_1 = ch === _MUL;\n                return true;\n            });\n            if (success_1) {\n                this.stream.advance(1);\n            }\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._number = function () {\n        var npeek = 0, ch;\n        if (this.stream.peekChar() === _DOT) {\n            npeek = 1;\n        }\n        ch = this.stream.peekChar(npeek);\n        if (ch >= _0 && ch <= _9) {\n            this.stream.advance(npeek + 1);\n            this.stream.advanceWhileChar(function (ch) {\n                return ch >= _0 && ch <= _9 || npeek === 0 && ch === _DOT;\n            });\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._newline = function (result) {\n        var ch = this.stream.peekChar();\n        switch (ch) {\n            case _CAR:\n            case _LFD:\n            case _NWL:\n                this.stream.advance(1);\n                result.push(String.fromCharCode(ch));\n                if (ch === _CAR && this.stream.advanceIfChar(_NWL)) {\n                    result.push('\\n');\n                }\n                return true;\n        }\n        return false;\n    };\n    Scanner.prototype._escape = function (result, includeNewLines) {\n        var ch = this.stream.peekChar();\n        if (ch === _BSL) {\n            this.stream.advance(1);\n            ch = this.stream.peekChar();\n            var hexNumCount = 0;\n            while (hexNumCount < 6 && (ch >= _0 && ch <= _9 || ch >= _a && ch <= _f || ch >= _A && ch <= _F)) {\n                this.stream.advance(1);\n                ch = this.stream.peekChar();\n                hexNumCount++;\n            }\n            if (hexNumCount > 0) {\n                try {\n                    var hexVal = parseInt(this.stream.substring(this.stream.pos() - hexNumCount), 16);\n                    if (hexVal) {\n                        result.push(String.fromCharCode(hexVal));\n                    }\n                }\n                catch (e) {\n                    // ignore\n                }\n                // optional whitespace or new line, not part of result text\n                if (ch === _WSP || ch === _TAB) {\n                    this.stream.advance(1);\n                }\n                else {\n                    this._newline([]);\n                }\n                return true;\n            }\n            if (ch !== _CAR && ch !== _LFD && ch !== _NWL) {\n                this.stream.advance(1);\n                result.push(String.fromCharCode(ch));\n                return true;\n            }\n            else if (includeNewLines) {\n                return this._newline(result);\n            }\n        }\n        return false;\n    };\n    Scanner.prototype._stringChar = function (closeQuote, result) {\n        // not closeQuote, not backslash, not newline\n        var ch = this.stream.peekChar();\n        if (ch !== 0 && ch !== closeQuote && ch !== _BSL && ch !== _CAR && ch !== _LFD && ch !== _NWL) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._string = function (result) {\n        if (this.stream.peekChar() === _SQO || this.stream.peekChar() === _DQO) {\n            var closeQuote = this.stream.nextChar();\n            result.push(String.fromCharCode(closeQuote));\n            while (this._stringChar(closeQuote, result) || this._escape(result, true)) {\n                // loop\n            }\n            if (this.stream.peekChar() === closeQuote) {\n                this.stream.nextChar();\n                result.push(String.fromCharCode(closeQuote));\n                return TokenType.String;\n            }\n            else {\n                return TokenType.BadString;\n            }\n        }\n        return null;\n    };\n    Scanner.prototype._unquotedChar = function (result) {\n        // not closeQuote, not backslash, not newline\n        var ch = this.stream.peekChar();\n        if (ch !== 0 && ch !== _BSL && ch !== _SQO && ch !== _DQO && ch !== _LPA && ch !== _RPA && ch !== _WSP && ch !== _TAB && ch !== _NWL && ch !== _LFD && ch !== _CAR) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._unquotedString = function (result) {\n        var hasContent = false;\n        while (this._unquotedChar(result) || this._escape(result)) {\n            hasContent = true;\n        }\n        return hasContent;\n    };\n    Scanner.prototype._whitespace = function () {\n        var n = this.stream.advanceWhileChar(function (ch) {\n            return ch === _WSP || ch === _TAB || ch === _NWL || ch === _LFD || ch === _CAR;\n        });\n        return n > 0;\n    };\n    Scanner.prototype._name = function (result) {\n        var matched = false;\n        while (this._identChar(result) || this._escape(result)) {\n            matched = true;\n        }\n        return matched;\n    };\n    Scanner.prototype.ident = function (result) {\n        var pos = this.stream.pos();\n        var hasMinus = this._minus(result);\n        if (hasMinus && this._minus(result) /* -- */) {\n            if (this._identFirstChar(result) || this._escape(result)) {\n                while (this._identChar(result) || this._escape(result)) {\n                    // loop\n                }\n                return true;\n            }\n        }\n        else if (this._identFirstChar(result) || this._escape(result)) {\n            while (this._identChar(result) || this._escape(result)) {\n                // loop\n            }\n            return true;\n        }\n        this.stream.goBackTo(pos);\n        return false;\n    };\n    Scanner.prototype._identFirstChar = function (result) {\n        var ch = this.stream.peekChar();\n        if (ch === _USC || // _\n            ch >= _a && ch <= _z || // a-z\n            ch >= _A && ch <= _Z || // A-Z\n            ch >= 0x80 && ch <= 0xFFFF) { // nonascii\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._minus = function (result) {\n        var ch = this.stream.peekChar();\n        if (ch === _MIN) {\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    Scanner.prototype._identChar = function (result) {\n        var ch = this.stream.peekChar();\n        if (ch === _USC || // _\n            ch === _MIN || // -\n            ch >= _a && ch <= _z || // a-z\n            ch >= _A && ch <= _Z || // A-Z\n            ch >= _0 && ch <= _9 || // 0/9\n            ch >= 0x80 && ch <= 0xFFFF) { // nonascii\n            this.stream.advance(1);\n            result.push(String.fromCharCode(ch));\n            return true;\n        }\n        return false;\n    };\n    return Scanner;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scope\", function() { return Scope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GlobalScope\", function() { return GlobalScope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Symbol\", function() { return Symbol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScopeBuilder\", function() { return ScopeBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Symbols\", function() { return Symbols; });\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\nvar Scope = /** @class */ (function () {\n    function Scope(offset, length) {\n        this.offset = offset;\n        this.length = length;\n        this.symbols = [];\n        this.parent = null;\n        this.children = [];\n    }\n    Scope.prototype.addChild = function (scope) {\n        this.children.push(scope);\n        scope.setParent(this);\n    };\n    Scope.prototype.setParent = function (scope) {\n        this.parent = scope;\n    };\n    Scope.prototype.findScope = function (offset, length) {\n        if (length === void 0) { length = 0; }\n        if (this.offset <= offset && this.offset + this.length > offset + length || this.offset === offset && this.length === length) {\n            return this.findInScope(offset, length);\n        }\n        return null;\n    };\n    Scope.prototype.findInScope = function (offset, length) {\n        if (length === void 0) { length = 0; }\n        // find the first scope child that has an offset larger than offset + length\n        var end = offset + length;\n        var idx = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_1__[\"findFirst\"])(this.children, function (s) { return s.offset > end; });\n        if (idx === 0) {\n            // all scopes have offsets larger than our end\n            return this;\n        }\n        var res = this.children[idx - 1];\n        if (res.offset <= offset && res.offset + res.length >= offset + length) {\n            return res.findInScope(offset, length);\n        }\n        return this;\n    };\n    Scope.prototype.addSymbol = function (symbol) {\n        this.symbols.push(symbol);\n    };\n    Scope.prototype.getSymbol = function (name, type) {\n        for (var index = 0; index < this.symbols.length; index++) {\n            var symbol = this.symbols[index];\n            if (symbol.name === name && symbol.type === type) {\n                return symbol;\n            }\n        }\n        return null;\n    };\n    Scope.prototype.getSymbols = function () {\n        return this.symbols;\n    };\n    return Scope;\n}());\n\nvar GlobalScope = /** @class */ (function (_super) {\n    __extends(GlobalScope, _super);\n    function GlobalScope() {\n        return _super.call(this, 0, Number.MAX_VALUE) || this;\n    }\n    return GlobalScope;\n}(Scope));\n\nvar Symbol = /** @class */ (function () {\n    function Symbol(name, value, node, type) {\n        this.name = name;\n        this.value = value;\n        this.node = node;\n        this.type = type;\n    }\n    return Symbol;\n}());\n\nvar ScopeBuilder = /** @class */ (function () {\n    function ScopeBuilder(scope) {\n        this.scope = scope;\n    }\n    ScopeBuilder.prototype.addSymbol = function (node, name, value, type) {\n        if (node.offset !== -1) {\n            var current = this.scope.findScope(node.offset, node.length);\n            if (current) {\n                current.addSymbol(new Symbol(name, value, node, type));\n            }\n        }\n    };\n    ScopeBuilder.prototype.addScope = function (node) {\n        if (node.offset !== -1) {\n            var current = this.scope.findScope(node.offset, node.length);\n            if (current && (current.offset !== node.offset || current.length !== node.length)) { // scope already known?\n                var newScope = new Scope(node.offset, node.length);\n                current.addChild(newScope);\n                return newScope;\n            }\n            return current;\n        }\n        return null;\n    };\n    ScopeBuilder.prototype.addSymbolToChildScope = function (scopeNode, node, name, value, type) {\n        if (scopeNode && scopeNode.offset !== -1) {\n            var current = this.addScope(scopeNode); // create the scope or gets the existing one\n            if (current) {\n                current.addSymbol(new Symbol(name, value, node, type));\n            }\n        }\n    };\n    ScopeBuilder.prototype.visitNode = function (node) {\n        switch (node.type) {\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Keyframe:\n                this.addSymbol(node, node.getName(), void 0, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Keyframe);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].CustomPropertyDeclaration:\n                return this.visitCustomPropertyDeclarationNode(node);\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].VariableDeclaration:\n                return this.visitVariableDeclarationNode(node);\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Ruleset:\n                return this.visitRuleSet(node);\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration:\n                this.addSymbol(node, node.getName(), void 0, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Mixin);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionDeclaration:\n                this.addSymbol(node, node.getName(), void 0, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Function);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionParameter: {\n                return this.visitFunctionParameterNode(node);\n            }\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Declarations:\n                this.addScope(node);\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].For:\n                var forNode = node;\n                var scopeNode = forNode.getDeclarations();\n                if (scopeNode && forNode.variable) {\n                    this.addSymbolToChildScope(scopeNode, forNode.variable, forNode.variable.getName(), void 0, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n                }\n                return true;\n            case _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Each: {\n                var eachNode = node;\n                var scopeNode_1 = eachNode.getDeclarations();\n                if (scopeNode_1) {\n                    var variables = eachNode.getVariables().getChildren();\n                    for (var _i = 0, variables_1 = variables; _i < variables_1.length; _i++) {\n                        var variable = variables_1[_i];\n                        this.addSymbolToChildScope(scopeNode_1, variable, variable.getName(), void 0, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n                    }\n                }\n                return true;\n            }\n        }\n        return true;\n    };\n    ScopeBuilder.prototype.visitRuleSet = function (node) {\n        var current = this.scope.findScope(node.offset, node.length);\n        if (current) {\n            for (var _i = 0, _a = node.getSelectors().getChildren(); _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Selector\"]) {\n                    if (child.getChildren().length === 1) { // only selectors with a single element can be extended\n                        current.addSymbol(new Symbol(child.getChild(0).getText(), void 0, child, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Rule));\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    ScopeBuilder.prototype.visitVariableDeclarationNode = function (node) {\n        var value = node.getValue() ? node.getValue().getText() : void 0;\n        this.addSymbol(node, node.getName(), value, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        return true;\n    };\n    ScopeBuilder.prototype.visitFunctionParameterNode = function (node) {\n        // parameters are part of the body scope\n        var scopeNode = node.getParent().getDeclarations();\n        if (scopeNode) {\n            var valueNode = node.getDefaultValue();\n            var value = valueNode ? valueNode.getText() : void 0;\n            this.addSymbolToChildScope(scopeNode, node, node.getName(), value, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        }\n        return true;\n    };\n    ScopeBuilder.prototype.visitCustomPropertyDeclarationNode = function (node) {\n        var value = node.getValue() ? node.getValue().getText() : '';\n        this.addCSSVariable(node.getProperty(), node.getProperty().getName(), value, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        return true;\n    };\n    ScopeBuilder.prototype.addCSSVariable = function (node, name, value, type) {\n        if (node.offset !== -1) {\n            this.scope.addSymbol(new Symbol(name, value, node, type));\n        }\n    };\n    return ScopeBuilder;\n}());\n\nvar Symbols = /** @class */ (function () {\n    function Symbols(node) {\n        this.global = new GlobalScope();\n        node.acceptVisitor(new ScopeBuilder(this.global));\n    }\n    Symbols.prototype.findSymbolsAtOffset = function (offset, referenceType) {\n        var scope = this.global.findScope(offset, 0);\n        var result = [];\n        var names = {};\n        while (scope) {\n            var symbols = scope.getSymbols();\n            for (var i = 0; i < symbols.length; i++) {\n                var symbol = symbols[i];\n                if (symbol.type === referenceType && !names[symbol.name]) {\n                    result.push(symbol);\n                    names[symbol.name] = true;\n                }\n            }\n            scope = scope.parent;\n        }\n        return result;\n    };\n    Symbols.prototype.internalFindSymbol = function (node, referenceTypes) {\n        var scopeNode = node;\n        if (node.parent instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionParameter\"] && node.parent.getParent() instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"BodyDeclaration\"]) {\n            scopeNode = node.parent.getParent().getDeclarations();\n        }\n        if (node.parent instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgument\"] && node.parent.getParent() instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Function\"]) {\n            var funcId = node.parent.getParent().getIdentifier();\n            if (funcId) {\n                var functionSymbol = this.internalFindSymbol(funcId, [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Function]);\n                if (functionSymbol) {\n                    scopeNode = functionSymbol.node.getDeclarations();\n                }\n            }\n        }\n        if (!scopeNode) {\n            return null;\n        }\n        var name = node.getText();\n        var scope = this.global.findScope(scopeNode.offset, scopeNode.length);\n        while (scope) {\n            for (var index = 0; index < referenceTypes.length; index++) {\n                var type = referenceTypes[index];\n                var symbol = scope.getSymbol(name, type);\n                if (symbol) {\n                    return symbol;\n                }\n            }\n            scope = scope.parent;\n        }\n        return null;\n    };\n    Symbols.prototype.evaluateReferenceTypes = function (node) {\n        if (node instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Identifier\"]) {\n            var referenceTypes = node.referenceTypes;\n            if (referenceTypes) {\n                return referenceTypes;\n            }\n            else {\n                if (node.isCustomProperty) {\n                    return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable];\n                }\n                // are a reference to a keyframe?\n                var decl = _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getParentDeclaration\"](node);\n                if (decl) {\n                    var propertyName = decl.getNonPrefixedPropertyName();\n                    if ((propertyName === 'animation' || propertyName === 'animation-name')\n                        && decl.getValue() && decl.getValue().offset === node.offset) {\n                        return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Keyframe];\n                    }\n                }\n            }\n        }\n        else if (node instanceof _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Variable\"]) {\n            return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable];\n        }\n        var selector = node.findAParent(_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Selector, _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ExtendsReference);\n        if (selector) {\n            return [_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Rule];\n        }\n        return null;\n    };\n    Symbols.prototype.findSymbolFromNode = function (node) {\n        if (!node) {\n            return null;\n        }\n        while (node.type === _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Interpolation) {\n            node = node.getParent();\n        }\n        var referenceTypes = this.evaluateReferenceTypes(node);\n        if (referenceTypes) {\n            return this.internalFindSymbol(node, referenceTypes);\n        }\n        return null;\n    };\n    Symbols.prototype.matchesSymbol = function (node, symbol) {\n        if (!node) {\n            return false;\n        }\n        while (node.type === _cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Interpolation) {\n            node = node.getParent();\n        }\n        if (!node.matches(symbol.name)) {\n            return false;\n        }\n        var referenceTypes = this.evaluateReferenceTypes(node);\n        if (!referenceTypes || referenceTypes.indexOf(symbol.type) === -1) {\n            return false;\n        }\n        var nodeSymbol = this.internalFindSymbol(node, referenceTypes);\n        return nodeSymbol === symbol;\n    };\n    Symbols.prototype.findSymbol = function (name, type, offset) {\n        var scope = this.global.findScope(offset);\n        while (scope) {\n            var symbol = scope.getSymbol(name, type);\n            if (symbol) {\n                return symbol;\n            }\n            scope = scope.parent;\n        }\n        return null;\n    };\n    return Symbols;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9jc3NTeW1ib2xTY29wZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvX2RlcHMvdnNjb2RlLWNzcy1sYW5ndWFnZXNlcnZpY2UvcGFyc2VyL2Nzc1N5bWJvbFNjb3BlLmpzP2ZhMmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ndXNlIHN0cmljdCc7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbmltcG9ydCAqIGFzIG5vZGVzIGZyb20gJy4vY3NzTm9kZXMuanMnO1xuaW1wb3J0IHsgZmluZEZpcnN0IH0gZnJvbSAnLi4vdXRpbHMvYXJyYXlzLmpzJztcbnZhciBTY29wZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTY29wZShvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICB0aGlzLm9mZnNldCA9IG9mZnNldDtcbiAgICAgICAgdGhpcy5sZW5ndGggPSBsZW5ndGg7XG4gICAgICAgIHRoaXMuc3ltYm9scyA9IFtdO1xuICAgICAgICB0aGlzLnBhcmVudCA9IG51bGw7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4gPSBbXTtcbiAgICB9XG4gICAgU2NvcGUucHJvdG90eXBlLmFkZENoaWxkID0gZnVuY3Rpb24gKHNjb3BlKSB7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4ucHVzaChzY29wZSk7XG4gICAgICAgIHNjb3BlLnNldFBhcmVudCh0aGlzKTtcbiAgICB9O1xuICAgIFNjb3BlLnByb3RvdHlwZS5zZXRQYXJlbnQgPSBmdW5jdGlvbiAoc2NvcGUpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBzY29wZTtcbiAgICB9O1xuICAgIFNjb3BlLnByb3RvdHlwZS5maW5kU2NvcGUgPSBmdW5jdGlvbiAob2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgaWYgKGxlbmd0aCA9PT0gdm9pZCAwKSB7IGxlbmd0aCA9IDA7IH1cbiAgICAgICAgaWYgKHRoaXMub2Zmc2V0IDw9IG9mZnNldCAmJiB0aGlzLm9mZnNldCArIHRoaXMubGVuZ3RoID4gb2Zmc2V0ICsgbGVuZ3RoIHx8IHRoaXMub2Zmc2V0ID09PSBvZmZzZXQgJiYgdGhpcy5sZW5ndGggPT09IGxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluZEluU2NvcGUob2Zmc2V0LCBsZW5ndGgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgU2NvcGUucHJvdG90eXBlLmZpbmRJblNjb3BlID0gZnVuY3Rpb24gKG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgIGlmIChsZW5ndGggPT09IHZvaWQgMCkgeyBsZW5ndGggPSAwOyB9XG4gICAgICAgIC8vIGZpbmQgdGhlIGZpcnN0IHNjb3BlIGNoaWxkIHRoYXQgaGFzIGFuIG9mZnNldCBsYXJnZXIgdGhhbiBvZmZzZXQgKyBsZW5ndGhcbiAgICAgICAgdmFyIGVuZCA9IG9mZnNldCArIGxlbmd0aDtcbiAgICAgICAgdmFyIGlkeCA9IGZpbmRGaXJzdCh0aGlzLmNoaWxkcmVuLCBmdW5jdGlvbiAocykgeyByZXR1cm4gcy5vZmZzZXQgPiBlbmQ7IH0pO1xuICAgICAgICBpZiAoaWR4ID09PSAwKSB7XG4gICAgICAgICAgICAvLyBhbGwgc2NvcGVzIGhhdmUgb2Zmc2V0cyBsYXJnZXIgdGhhbiBvdXIgZW5kXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmVzID0gdGhpcy5jaGlsZHJlbltpZHggLSAxXTtcbiAgICAgICAgaWYgKHJlcy5vZmZzZXQgPD0gb2Zmc2V0ICYmIHJlcy5vZmZzZXQgKyByZXMubGVuZ3RoID49IG9mZnNldCArIGxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlcy5maW5kSW5TY29wZShvZmZzZXQsIGxlbmd0aCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfTtcbiAgICBTY29wZS5wcm90b3R5cGUuYWRkU3ltYm9sID0gZnVuY3Rpb24gKHN5bWJvbCkge1xuICAgICAgICB0aGlzLnN5bWJvbHMucHVzaChzeW1ib2wpO1xuICAgIH07XG4gICAgU2NvcGUucHJvdG90eXBlLmdldFN5bWJvbCA9IGZ1bmN0aW9uIChuYW1lLCB0eXBlKSB7XG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLnN5bWJvbHMubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgICAgICAgICB2YXIgc3ltYm9sID0gdGhpcy5zeW1ib2xzW2luZGV4XTtcbiAgICAgICAgICAgIGlmIChzeW1ib2wubmFtZSA9PT0gbmFtZSAmJiBzeW1ib2wudHlwZSA9PT0gdHlwZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzeW1ib2w7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICBTY29wZS5wcm90b3R5cGUuZ2V0U3ltYm9scyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3ltYm9scztcbiAgICB9O1xuICAgIHJldHVybiBTY29wZTtcbn0oKSk7XG5leHBvcnQgeyBTY29wZSB9O1xudmFyIEdsb2JhbFNjb3BlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhHbG9iYWxTY29wZSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBHbG9iYWxTY29wZSgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIDAsIE51bWJlci5NQVhfVkFMVUUpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBHbG9iYWxTY29wZTtcbn0oU2NvcGUpKTtcbmV4cG9ydCB7IEdsb2JhbFNjb3BlIH07XG52YXIgU3ltYm9sID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN5bWJvbChuYW1lLCB2YWx1ZSwgbm9kZSwgdHlwZSkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgICAgIHRoaXMubm9kZSA9IG5vZGU7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgfVxuICAgIHJldHVybiBTeW1ib2w7XG59KCkpO1xuZXhwb3J0IHsgU3ltYm9sIH07XG52YXIgU2NvcGVCdWlsZGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNjb3BlQnVpbGRlcihzY29wZSkge1xuICAgICAgICB0aGlzLnNjb3BlID0gc2NvcGU7XG4gICAgfVxuICAgIFNjb3BlQnVpbGRlci5wcm90b3R5cGUuYWRkU3ltYm9sID0gZnVuY3Rpb24gKG5vZGUsIG5hbWUsIHZhbHVlLCB0eXBlKSB7XG4gICAgICAgIGlmIChub2RlLm9mZnNldCAhPT0gLTEpIHtcbiAgICAgICAgICAgIHZhciBjdXJyZW50ID0gdGhpcy5zY29wZS5maW5kU2NvcGUobm9kZS5vZmZzZXQsIG5vZGUubGVuZ3RoKTtcbiAgICAgICAgICAgIGlmIChjdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgY3VycmVudC5hZGRTeW1ib2wobmV3IFN5bWJvbChuYW1lLCB2YWx1ZSwgbm9kZSwgdHlwZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBTY29wZUJ1aWxkZXIucHJvdG90eXBlLmFkZFNjb3BlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUub2Zmc2V0ICE9PSAtMSkge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSB0aGlzLnNjb3BlLmZpbmRTY29wZShub2RlLm9mZnNldCwgbm9kZS5sZW5ndGgpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnQgJiYgKGN1cnJlbnQub2Zmc2V0ICE9PSBub2RlLm9mZnNldCB8fCBjdXJyZW50Lmxlbmd0aCAhPT0gbm9kZS5sZW5ndGgpKSB7IC8vIHNjb3BlIGFscmVhZHkga25vd24/XG4gICAgICAgICAgICAgICAgdmFyIG5ld1Njb3BlID0gbmV3IFNjb3BlKG5vZGUub2Zmc2V0LCBub2RlLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgY3VycmVudC5hZGRDaGlsZChuZXdTY29wZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ld1Njb3BlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICBTY29wZUJ1aWxkZXIucHJvdG90eXBlLmFkZFN5bWJvbFRvQ2hpbGRTY29wZSA9IGZ1bmN0aW9uIChzY29wZU5vZGUsIG5vZGUsIG5hbWUsIHZhbHVlLCB0eXBlKSB7XG4gICAgICAgIGlmIChzY29wZU5vZGUgJiYgc2NvcGVOb2RlLm9mZnNldCAhPT0gLTEpIHtcbiAgICAgICAgICAgIHZhciBjdXJyZW50ID0gdGhpcy5hZGRTY29wZShzY29wZU5vZGUpOyAvLyBjcmVhdGUgdGhlIHNjb3BlIG9yIGdldHMgdGhlIGV4aXN0aW5nIG9uZVxuICAgICAgICAgICAgaWYgKGN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50LmFkZFN5bWJvbChuZXcgU3ltYm9sKG5hbWUsIHZhbHVlLCBub2RlLCB0eXBlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjb3BlQnVpbGRlci5wcm90b3R5cGUudmlzaXROb2RlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgc3dpdGNoIChub2RlLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2Ugbm9kZXMuTm9kZVR5cGUuS2V5ZnJhbWU6XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRTeW1ib2wobm9kZSwgbm9kZS5nZXROYW1lKCksIHZvaWQgMCwgbm9kZXMuUmVmZXJlbmNlVHlwZS5LZXlmcmFtZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBjYXNlIG5vZGVzLk5vZGVUeXBlLkN1c3RvbVByb3BlcnR5RGVjbGFyYXRpb246XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudmlzaXRDdXN0b21Qcm9wZXJ0eURlY2xhcmF0aW9uTm9kZShub2RlKTtcbiAgICAgICAgICAgIGNhc2Ugbm9kZXMuTm9kZVR5cGUuVmFyaWFibGVEZWNsYXJhdGlvbjpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdFZhcmlhYmxlRGVjbGFyYXRpb25Ob2RlKG5vZGUpO1xuICAgICAgICAgICAgY2FzZSBub2Rlcy5Ob2RlVHlwZS5SdWxlc2V0OlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnZpc2l0UnVsZVNldChub2RlKTtcbiAgICAgICAgICAgIGNhc2Ugbm9kZXMuTm9kZVR5cGUuTWl4aW5EZWNsYXJhdGlvbjpcbiAgICAgICAgICAgICAgICB0aGlzLmFkZFN5bWJvbChub2RlLCBub2RlLmdldE5hbWUoKSwgdm9pZCAwLCBub2Rlcy5SZWZlcmVuY2VUeXBlLk1peGluKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIGNhc2Ugbm9kZXMuTm9kZVR5cGUuRnVuY3Rpb25EZWNsYXJhdGlvbjpcbiAgICAgICAgICAgICAgICB0aGlzLmFkZFN5bWJvbChub2RlLCBub2RlLmdldE5hbWUoKSwgdm9pZCAwLCBub2Rlcy5SZWZlcmVuY2VUeXBlLkZ1bmN0aW9uKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIGNhc2Ugbm9kZXMuTm9kZVR5cGUuRnVuY3Rpb25QYXJhbWV0ZXI6IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy52aXNpdEZ1bmN0aW9uUGFyYW1ldGVyTm9kZShub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2Ugbm9kZXMuTm9kZVR5cGUuRGVjbGFyYXRpb25zOlxuICAgICAgICAgICAgICAgIHRoaXMuYWRkU2NvcGUobm9kZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBjYXNlIG5vZGVzLk5vZGVUeXBlLkZvcjpcbiAgICAgICAgICAgICAgICB2YXIgZm9yTm9kZSA9IG5vZGU7XG4gICAgICAgICAgICAgICAgdmFyIHNjb3BlTm9kZSA9IGZvck5vZGUuZ2V0RGVjbGFyYXRpb25zKCk7XG4gICAgICAgICAgICAgICAgaWYgKHNjb3BlTm9kZSAmJiBmb3JOb2RlLnZhcmlhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkU3ltYm9sVG9DaGlsZFNjb3BlKHNjb3BlTm9kZSwgZm9yTm9kZS52YXJpYWJsZSwgZm9yTm9kZS52YXJpYWJsZS5nZXROYW1lKCksIHZvaWQgMCwgbm9kZXMuUmVmZXJlbmNlVHlwZS5WYXJpYWJsZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgY2FzZSBub2Rlcy5Ob2RlVHlwZS5FYWNoOiB7XG4gICAgICAgICAgICAgICAgdmFyIGVhY2hOb2RlID0gbm9kZTtcbiAgICAgICAgICAgICAgICB2YXIgc2NvcGVOb2RlXzEgPSBlYWNoTm9kZS5nZXREZWNsYXJhdGlvbnMoKTtcbiAgICAgICAgICAgICAgICBpZiAoc2NvcGVOb2RlXzEpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHZhcmlhYmxlcyA9IGVhY2hOb2RlLmdldFZhcmlhYmxlcygpLmdldENoaWxkcmVuKCk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMCwgdmFyaWFibGVzXzEgPSB2YXJpYWJsZXM7IF9pIDwgdmFyaWFibGVzXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdmFyaWFibGUgPSB2YXJpYWJsZXNfMVtfaV07XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZFN5bWJvbFRvQ2hpbGRTY29wZShzY29wZU5vZGVfMSwgdmFyaWFibGUsIHZhcmlhYmxlLmdldE5hbWUoKSwgdm9pZCAwLCBub2Rlcy5SZWZlcmVuY2VUeXBlLlZhcmlhYmxlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuICAgIFNjb3BlQnVpbGRlci5wcm90b3R5cGUudmlzaXRSdWxlU2V0ID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgdmFyIGN1cnJlbnQgPSB0aGlzLnNjb3BlLmZpbmRTY29wZShub2RlLm9mZnNldCwgbm9kZS5sZW5ndGgpO1xuICAgICAgICBpZiAoY3VycmVudCkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IG5vZGUuZ2V0U2VsZWN0b3JzKCkuZ2V0Q2hpbGRyZW4oKTsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgY2hpbGQgPSBfYVtfaV07XG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2Ygbm9kZXMuU2VsZWN0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNoaWxkLmdldENoaWxkcmVuKCkubGVuZ3RoID09PSAxKSB7IC8vIG9ubHkgc2VsZWN0b3JzIHdpdGggYSBzaW5nbGUgZWxlbWVudCBjYW4gYmUgZXh0ZW5kZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnQuYWRkU3ltYm9sKG5ldyBTeW1ib2woY2hpbGQuZ2V0Q2hpbGQoMCkuZ2V0VGV4dCgpLCB2b2lkIDAsIGNoaWxkLCBub2Rlcy5SZWZlcmVuY2VUeXBlLlJ1bGUpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuICAgIFNjb3BlQnVpbGRlci5wcm90b3R5cGUudmlzaXRWYXJpYWJsZURlY2xhcmF0aW9uTm9kZSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IG5vZGUuZ2V0VmFsdWUoKSA/IG5vZGUuZ2V0VmFsdWUoKS5nZXRUZXh0KCkgOiB2b2lkIDA7XG4gICAgICAgIHRoaXMuYWRkU3ltYm9sKG5vZGUsIG5vZGUuZ2V0TmFtZSgpLCB2YWx1ZSwgbm9kZXMuUmVmZXJlbmNlVHlwZS5WYXJpYWJsZSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gICAgU2NvcGVCdWlsZGVyLnByb3RvdHlwZS52aXNpdEZ1bmN0aW9uUGFyYW1ldGVyTm9kZSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIC8vIHBhcmFtZXRlcnMgYXJlIHBhcnQgb2YgdGhlIGJvZHkgc2NvcGVcbiAgICAgICAgdmFyIHNjb3BlTm9kZSA9IG5vZGUuZ2V0UGFyZW50KCkuZ2V0RGVjbGFyYXRpb25zKCk7XG4gICAgICAgIGlmIChzY29wZU5vZGUpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZU5vZGUgPSBub2RlLmdldERlZmF1bHRWYWx1ZSgpO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gdmFsdWVOb2RlID8gdmFsdWVOb2RlLmdldFRleHQoKSA6IHZvaWQgMDtcbiAgICAgICAgICAgIHRoaXMuYWRkU3ltYm9sVG9DaGlsZFNjb3BlKHNjb3BlTm9kZSwgbm9kZSwgbm9kZS5nZXROYW1lKCksIHZhbHVlLCBub2Rlcy5SZWZlcmVuY2VUeXBlLlZhcmlhYmxlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuICAgIFNjb3BlQnVpbGRlci5wcm90b3R5cGUudmlzaXRDdXN0b21Qcm9wZXJ0eURlY2xhcmF0aW9uTm9kZSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IG5vZGUuZ2V0VmFsdWUoKSA/IG5vZGUuZ2V0VmFsdWUoKS5nZXRUZXh0KCkgOiAnJztcbiAgICAgICAgdGhpcy5hZGRDU1NWYXJpYWJsZShub2RlLmdldFByb3BlcnR5KCksIG5vZGUuZ2V0UHJvcGVydHkoKS5nZXROYW1lKCksIHZhbHVlLCBub2Rlcy5SZWZlcmVuY2VUeXBlLlZhcmlhYmxlKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbiAgICBTY29wZUJ1aWxkZXIucHJvdG90eXBlLmFkZENTU1ZhcmlhYmxlID0gZnVuY3Rpb24gKG5vZGUsIG5hbWUsIHZhbHVlLCB0eXBlKSB7XG4gICAgICAgIGlmIChub2RlLm9mZnNldCAhPT0gLTEpIHtcbiAgICAgICAgICAgIHRoaXMuc2NvcGUuYWRkU3ltYm9sKG5ldyBTeW1ib2wobmFtZSwgdmFsdWUsIG5vZGUsIHR5cGUpKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFNjb3BlQnVpbGRlcjtcbn0oKSk7XG5leHBvcnQgeyBTY29wZUJ1aWxkZXIgfTtcbnZhciBTeW1ib2xzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN5bWJvbHMobm9kZSkge1xuICAgICAgICB0aGlzLmdsb2JhbCA9IG5ldyBHbG9iYWxTY29wZSgpO1xuICAgICAgICBub2RlLmFjY2VwdFZpc2l0b3IobmV3IFNjb3BlQnVpbGRlcih0aGlzLmdsb2JhbCkpO1xuICAgIH1cbiAgICBTeW1ib2xzLnByb3RvdHlwZS5maW5kU3ltYm9sc0F0T2Zmc2V0ID0gZnVuY3Rpb24gKG9mZnNldCwgcmVmZXJlbmNlVHlwZSkge1xuICAgICAgICB2YXIgc2NvcGUgPSB0aGlzLmdsb2JhbC5maW5kU2NvcGUob2Zmc2V0LCAwKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgICB2YXIgbmFtZXMgPSB7fTtcbiAgICAgICAgd2hpbGUgKHNjb3BlKSB7XG4gICAgICAgICAgICB2YXIgc3ltYm9scyA9IHNjb3BlLmdldFN5bWJvbHMoKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBzeW1ib2wgPSBzeW1ib2xzW2ldO1xuICAgICAgICAgICAgICAgIGlmIChzeW1ib2wudHlwZSA9PT0gcmVmZXJlbmNlVHlwZSAmJiAhbmFtZXNbc3ltYm9sLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHN5bWJvbCk7XG4gICAgICAgICAgICAgICAgICAgIG5hbWVzW3N5bWJvbC5uYW1lXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2NvcGUgPSBzY29wZS5wYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIFN5bWJvbHMucHJvdG90eXBlLmludGVybmFsRmluZFN5bWJvbCA9IGZ1bmN0aW9uIChub2RlLCByZWZlcmVuY2VUeXBlcykge1xuICAgICAgICB2YXIgc2NvcGVOb2RlID0gbm9kZTtcbiAgICAgICAgaWYgKG5vZGUucGFyZW50IGluc3RhbmNlb2Ygbm9kZXMuRnVuY3Rpb25QYXJhbWV0ZXIgJiYgbm9kZS5wYXJlbnQuZ2V0UGFyZW50KCkgaW5zdGFuY2VvZiBub2Rlcy5Cb2R5RGVjbGFyYXRpb24pIHtcbiAgICAgICAgICAgIHNjb3BlTm9kZSA9IG5vZGUucGFyZW50LmdldFBhcmVudCgpLmdldERlY2xhcmF0aW9ucygpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChub2RlLnBhcmVudCBpbnN0YW5jZW9mIG5vZGVzLkZ1bmN0aW9uQXJndW1lbnQgJiYgbm9kZS5wYXJlbnQuZ2V0UGFyZW50KCkgaW5zdGFuY2VvZiBub2Rlcy5GdW5jdGlvbikge1xuICAgICAgICAgICAgdmFyIGZ1bmNJZCA9IG5vZGUucGFyZW50LmdldFBhcmVudCgpLmdldElkZW50aWZpZXIoKTtcbiAgICAgICAgICAgIGlmIChmdW5jSWQpIHtcbiAgICAgICAgICAgICAgICB2YXIgZnVuY3Rpb25TeW1ib2wgPSB0aGlzLmludGVybmFsRmluZFN5bWJvbChmdW5jSWQsIFtub2Rlcy5SZWZlcmVuY2VUeXBlLkZ1bmN0aW9uXSk7XG4gICAgICAgICAgICAgICAgaWYgKGZ1bmN0aW9uU3ltYm9sKSB7XG4gICAgICAgICAgICAgICAgICAgIHNjb3BlTm9kZSA9IGZ1bmN0aW9uU3ltYm9sLm5vZGUuZ2V0RGVjbGFyYXRpb25zKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghc2NvcGVOb2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbmFtZSA9IG5vZGUuZ2V0VGV4dCgpO1xuICAgICAgICB2YXIgc2NvcGUgPSB0aGlzLmdsb2JhbC5maW5kU2NvcGUoc2NvcGVOb2RlLm9mZnNldCwgc2NvcGVOb2RlLmxlbmd0aCk7XG4gICAgICAgIHdoaWxlIChzY29wZSkge1xuICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IHJlZmVyZW5jZVR5cGVzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgICAgIHZhciB0eXBlID0gcmVmZXJlbmNlVHlwZXNbaW5kZXhdO1xuICAgICAgICAgICAgICAgIHZhciBzeW1ib2wgPSBzY29wZS5nZXRTeW1ib2wobmFtZSwgdHlwZSk7XG4gICAgICAgICAgICAgICAgaWYgKHN5bWJvbCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc3ltYm9sO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNjb3BlID0gc2NvcGUucGFyZW50O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgU3ltYm9scy5wcm90b3R5cGUuZXZhbHVhdGVSZWZlcmVuY2VUeXBlcyA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIGlmIChub2RlIGluc3RhbmNlb2Ygbm9kZXMuSWRlbnRpZmllcikge1xuICAgICAgICAgICAgdmFyIHJlZmVyZW5jZVR5cGVzID0gbm9kZS5yZWZlcmVuY2VUeXBlcztcbiAgICAgICAgICAgIGlmIChyZWZlcmVuY2VUeXBlcykge1xuICAgICAgICAgICAgICAgIHJldHVybiByZWZlcmVuY2VUeXBlcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChub2RlLmlzQ3VzdG9tUHJvcGVydHkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtub2Rlcy5SZWZlcmVuY2VUeXBlLlZhcmlhYmxlXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gYXJlIGEgcmVmZXJlbmNlIHRvIGEga2V5ZnJhbWU/XG4gICAgICAgICAgICAgICAgdmFyIGRlY2wgPSBub2Rlcy5nZXRQYXJlbnREZWNsYXJhdGlvbihub2RlKTtcbiAgICAgICAgICAgICAgICBpZiAoZGVjbCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcHJvcGVydHlOYW1lID0gZGVjbC5nZXROb25QcmVmaXhlZFByb3BlcnR5TmFtZSgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoKHByb3BlcnR5TmFtZSA9PT0gJ2FuaW1hdGlvbicgfHwgcHJvcGVydHlOYW1lID09PSAnYW5pbWF0aW9uLW5hbWUnKVxuICAgICAgICAgICAgICAgICAgICAgICAgJiYgZGVjbC5nZXRWYWx1ZSgpICYmIGRlY2wuZ2V0VmFsdWUoKS5vZmZzZXQgPT09IG5vZGUub2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gW25vZGVzLlJlZmVyZW5jZVR5cGUuS2V5ZnJhbWVdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG5vZGUgaW5zdGFuY2VvZiBub2Rlcy5WYXJpYWJsZSkge1xuICAgICAgICAgICAgcmV0dXJuIFtub2Rlcy5SZWZlcmVuY2VUeXBlLlZhcmlhYmxlXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc2VsZWN0b3IgPSBub2RlLmZpbmRBUGFyZW50KG5vZGVzLk5vZGVUeXBlLlNlbGVjdG9yLCBub2Rlcy5Ob2RlVHlwZS5FeHRlbmRzUmVmZXJlbmNlKTtcbiAgICAgICAgaWYgKHNlbGVjdG9yKSB7XG4gICAgICAgICAgICByZXR1cm4gW25vZGVzLlJlZmVyZW5jZVR5cGUuUnVsZV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICBTeW1ib2xzLnByb3RvdHlwZS5maW5kU3ltYm9sRnJvbU5vZGUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICBpZiAoIW5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlIChub2RlLnR5cGUgPT09IG5vZGVzLk5vZGVUeXBlLkludGVycG9sYXRpb24pIHtcbiAgICAgICAgICAgIG5vZGUgPSBub2RlLmdldFBhcmVudCgpO1xuICAgICAgICB9XG4gICAgICAgIHZhciByZWZlcmVuY2VUeXBlcyA9IHRoaXMuZXZhbHVhdGVSZWZlcmVuY2VUeXBlcyhub2RlKTtcbiAgICAgICAgaWYgKHJlZmVyZW5jZVR5cGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5pbnRlcm5hbEZpbmRTeW1ib2wobm9kZSwgcmVmZXJlbmNlVHlwZXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgU3ltYm9scy5wcm90b3R5cGUubWF0Y2hlc1N5bWJvbCA9IGZ1bmN0aW9uIChub2RlLCBzeW1ib2wpIHtcbiAgICAgICAgaWYgKCFub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKG5vZGUudHlwZSA9PT0gbm9kZXMuTm9kZVR5cGUuSW50ZXJwb2xhdGlvbikge1xuICAgICAgICAgICAgbm9kZSA9IG5vZGUuZ2V0UGFyZW50KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFub2RlLm1hdGNoZXMoc3ltYm9sLm5hbWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlZmVyZW5jZVR5cGVzID0gdGhpcy5ldmFsdWF0ZVJlZmVyZW5jZVR5cGVzKG5vZGUpO1xuICAgICAgICBpZiAoIXJlZmVyZW5jZVR5cGVzIHx8IHJlZmVyZW5jZVR5cGVzLmluZGV4T2Yoc3ltYm9sLnR5cGUpID09PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHZhciBub2RlU3ltYm9sID0gdGhpcy5pbnRlcm5hbEZpbmRTeW1ib2wobm9kZSwgcmVmZXJlbmNlVHlwZXMpO1xuICAgICAgICByZXR1cm4gbm9kZVN5bWJvbCA9PT0gc3ltYm9sO1xuICAgIH07XG4gICAgU3ltYm9scy5wcm90b3R5cGUuZmluZFN5bWJvbCA9IGZ1bmN0aW9uIChuYW1lLCB0eXBlLCBvZmZzZXQpIHtcbiAgICAgICAgdmFyIHNjb3BlID0gdGhpcy5nbG9iYWwuZmluZFNjb3BlKG9mZnNldCk7XG4gICAgICAgIHdoaWxlIChzY29wZSkge1xuICAgICAgICAgICAgdmFyIHN5bWJvbCA9IHNjb3BlLmdldFN5bWJvbChuYW1lLCB0eXBlKTtcbiAgICAgICAgICAgIGlmIChzeW1ib2wpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3ltYm9sO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2NvcGUgPSBzY29wZS5wYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICByZXR1cm4gU3ltYm9scztcbn0oKSk7XG5leHBvcnQgeyBTeW1ib2xzIH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LESSParser\", function() { return LESSParser; });\n/* harmony import */ var _lessScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js\");\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _cssParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\");\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n/// <summary>\n/// A parser for LESS\n/// http://lesscss.org/\n/// </summary>\nvar LESSParser = /** @class */ (function (_super) {\n    __extends(LESSParser, _super);\n    function LESSParser() {\n        return _super.call(this, new _lessScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"LESSScanner\"]()) || this;\n    }\n    LESSParser.prototype._parseStylesheetStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseVariableDeclaration()\n                || this._parsePlugin()\n                || _super.prototype._parseStylesheetAtStatement.call(this, isNested);\n        }\n        return this._tryParseMixinDeclaration()\n            || this._tryParseMixinReference()\n            || this._parseFunction()\n            || this._parseRuleset(true);\n    };\n    LESSParser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import') && !this.peekKeyword('@import-once') /* deprecated in less 1.4.1 */) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Import\"]);\n        this.consumeToken();\n        // less 1.4.1: @import (css) \"lib\"\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon]);\n            }\n            do {\n                if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    break;\n                }\n            } while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident));\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon]);\n            }\n        }\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].URIOrStringExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon]);\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parsePlugin = function () {\n        if (!this.peekKeyword('@plugin')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Plugin);\n        this.consumeToken(); // @import\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].StringLiteralExpected);\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseMediaQuery = function (resyncStopToken) {\n        var node = _super.prototype._parseMediaQuery.call(this, resyncStopToken);\n        if (!node) {\n            var node_1 = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MediaQuery\"]);\n            if (node_1.addChild(this._parseVariable())) {\n                return this.finish(node_1);\n            }\n            return null;\n        }\n        return node;\n    };\n    LESSParser.prototype._parseMediaDeclaration = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        return this._tryParseRuleset(isNested)\n            || this._tryToParseDeclaration()\n            || this._tryParseMixinDeclaration()\n            || this._tryParseMixinReference()\n            || this._parseDetachedRuleSetMixin()\n            || this._parseStylesheetStatement(isNested);\n    };\n    LESSParser.prototype._parseMediaFeatureName = function () {\n        return this._parseIdent() || this._parseVariable();\n    };\n    LESSParser.prototype._parseVariableDeclaration = function (panic) {\n        if (panic === void 0) { panic = []; }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"VariableDeclaration\"]);\n        var mark = this.mark();\n        if (!node.setVariable(this._parseVariable(true))) {\n            return null;\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            if (this.prevToken) {\n                node.colonPosition = this.prevToken.offset;\n            }\n            if (node.setValue(this._parseDetachedRuleSet())) {\n                node.needsSemicolon = false;\n            }\n            else if (!node.setValue(this._parseExpr())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].VariableValueExpected, [], panic);\n            }\n            node.addChild(this._parsePrio());\n        }\n        else {\n            this.restoreAtMark(mark);\n            return null; // at keyword, but no ':', not a variable declaration but some at keyword\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseDetachedRuleSet = function () {\n        var mark = this.mark();\n        // \"Anonymous mixin\" used in each() and possibly a generic type in the future\n        if (this.peekDelim('#') || this.peekDelim('.')) {\n            this.consumeToken();\n            if (!this.hasWhitespace() && this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n                var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinDeclaration\"]);\n                if (node.getParameters().addChild(this._parseMixinParameter())) {\n                    while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n                        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                            break;\n                        }\n                        if (!node.getParameters().addChild(this._parseMixinParameter())) {\n                            this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].IdentifierExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n                        }\n                    }\n                }\n                if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                    this.restoreAtMark(mark);\n                    return null;\n                }\n            }\n            else {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            return null;\n        }\n        var content = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"BodyDeclaration\"]);\n        this._parseBody(content, this._parseDetachedRuleSetBody.bind(this));\n        return this.finish(content);\n    };\n    LESSParser.prototype._parseDetachedRuleSetBody = function () {\n        return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n    };\n    LESSParser.prototype._addLookupChildren = function (node) {\n        if (!node.addChild(this._parseLookupValue())) {\n            return false;\n        }\n        var expectsValue = false;\n        while (true) {\n            if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].BracketL)) {\n                expectsValue = true;\n            }\n            if (!node.addChild(this._parseLookupValue())) {\n                break;\n            }\n            expectsValue = false;\n        }\n        return !expectsValue;\n    };\n    LESSParser.prototype._parseLookupValue = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n        var mark = this.mark();\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].BracketL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (((node.addChild(this._parseVariable(false, true)) ||\n            node.addChild(this._parsePropertyIdentifier())) &&\n            this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].BracketR)) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].BracketR)) {\n            return node;\n        }\n        this.restoreAtMark(mark);\n        return null;\n    };\n    LESSParser.prototype._parseVariable = function (declaration, insideLookup) {\n        if (declaration === void 0) { declaration = false; }\n        if (insideLookup === void 0) { insideLookup = false; }\n        var isPropertyReference = !declaration && this.peekDelim('$');\n        if (!this.peekDelim('@') && !isPropertyReference && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Variable\"]);\n        var mark = this.mark();\n        while (this.acceptDelim('@') || (!declaration && this.acceptDelim('$'))) {\n            if (this.hasWhitespace()) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!insideLookup && this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].BracketL)) {\n            if (!this._addLookupChildren(node)) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n        }\n        return node;\n    };\n    LESSParser.prototype._parseTermExpression = function () {\n        return this._parseVariable() ||\n            this._parseEscaped() ||\n            _super.prototype._parseTermExpression.call(this) || // preference for colors before mixin references\n            this._tryParseMixinReference(false);\n    };\n    LESSParser.prototype._parseEscaped = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EscapedJavaScript) ||\n            this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].BadEscapedJavaScript)) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].EscapedValue);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        if (this.peekDelim('~')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].EscapedValue);\n            this.consumeToken();\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].String) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EscapedJavaScript)) {\n                return this.finish(node);\n            }\n            else {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].TermExpected);\n            }\n        }\n        return null;\n    };\n    LESSParser.prototype._parseOperator = function () {\n        var node = this._parseGuardOperator();\n        if (node) {\n            return node;\n        }\n        else {\n            return _super.prototype._parseOperator.call(this);\n        }\n    };\n    LESSParser.prototype._parseGuardOperator = function () {\n        if (this.peekDelim('>')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            this.acceptDelim('=');\n            return node;\n        }\n        else if (this.peekDelim('=')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            this.acceptDelim('<');\n            return node;\n        }\n        else if (this.peekDelim('<')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            this.acceptDelim('=');\n            return node;\n        }\n        return null;\n    };\n    LESSParser.prototype._parseRuleSetDeclaration = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseKeyframe()\n                || this._parseMedia(true)\n                || this._parseImport()\n                || this._parseSupports(true) // @supports\n                || this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n                || this._parseVariableDeclaration() // Variable declarations\n                || _super.prototype._parseRuleSetDeclarationAtStatement.call(this);\n        }\n        return this._tryParseMixinDeclaration()\n            || this._tryParseRuleset(true) // nested ruleset\n            || this._tryParseMixinReference() // less mixin reference\n            || this._parseFunction()\n            || this._parseExtend() // less extend declaration\n            || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as the last option\n    };\n    LESSParser.prototype._parseKeyframeIdent = function () {\n        return this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Keyframe]) || this._parseVariable();\n    };\n    LESSParser.prototype._parseKeyframeSelector = function () {\n        return this._parseDetachedRuleSetMixin() // less detached ruleset mixin\n            || _super.prototype._parseKeyframeSelector.call(this);\n    };\n    LESSParser.prototype._parseSimpleSelectorBody = function () {\n        return this._parseSelectorCombinator() || _super.prototype._parseSimpleSelectorBody.call(this);\n    };\n    LESSParser.prototype._parseSelector = function (isNested) {\n        // CSS Guards\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Selector\"]);\n        var hasContent = false;\n        if (isNested) {\n            // nested selectors can start with a combinator\n            hasContent = node.addChild(this._parseCombinator());\n        }\n        while (node.addChild(this._parseSimpleSelector())) {\n            hasContent = true;\n            var mark = this.mark();\n            if (node.addChild(this._parseGuard()) && this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n                break;\n            }\n            this.restoreAtMark(mark);\n            node.addChild(this._parseCombinator()); // optional\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype._parseSelectorCombinator = function () {\n        if (this.peekDelim('&')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorCombinator);\n            this.consumeToken();\n            while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Num) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n                //  support &-foo\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    LESSParser.prototype._parseSelectorIdent = function () {\n        if (!this.peekInterpolatedIdent()) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorInterpolation);\n        var hasContent = this._acceptInterpolatedIdent(node);\n        return hasContent ? this.finish(node) : null;\n    };\n    LESSParser.prototype._parsePropertyIdentifier = function (inLookup) {\n        if (inLookup === void 0) { inLookup = false; }\n        var propertyRegex = /^[\\w-]+/;\n        if (!this.peekInterpolatedIdent() && !this.peekRegExp(this.token.type, propertyRegex)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n        node.isCustomProperty = this.acceptDelim('-') && this.acceptDelim('-');\n        var childAdded = false;\n        if (!inLookup) {\n            if (node.isCustomProperty) {\n                childAdded = this._acceptInterpolatedIdent(node);\n            }\n            else {\n                childAdded = this._acceptInterpolatedIdent(node, propertyRegex);\n            }\n        }\n        else {\n            if (node.isCustomProperty) {\n                childAdded = node.addChild(this._parseIdent());\n            }\n            else {\n                childAdded = node.addChild(this._parseRegexp(propertyRegex));\n            }\n        }\n        if (!childAdded) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!inLookup && !this.hasWhitespace()) {\n            this.acceptDelim('+');\n            if (!this.hasWhitespace()) {\n                this.acceptIdent('_');\n            }\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype.peekInterpolatedIdent = function () {\n        return this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) ||\n            this.peekDelim('@') ||\n            this.peekDelim('$') ||\n            this.peekDelim('-');\n    };\n    LESSParser.prototype._acceptInterpolatedIdent = function (node, identRegex) {\n        var _this = this;\n        var hasContent = false;\n        var indentInterpolation = function () {\n            var pos = _this.mark();\n            if (_this.acceptDelim('-')) {\n                if (!_this.hasWhitespace()) {\n                    _this.acceptDelim('-');\n                }\n                if (_this.hasWhitespace()) {\n                    _this.restoreAtMark(pos);\n                    return null;\n                }\n            }\n            return _this._parseInterpolation();\n        };\n        var accept = identRegex ?\n            function () { return _this.acceptRegexp(identRegex); } :\n            function () { return _this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident); };\n        while (accept() ||\n            node.addChild(this._parseInterpolation() ||\n                this.try(indentInterpolation))) {\n            hasContent = true;\n            if (this.hasWhitespace()) {\n                break;\n            }\n        }\n        return hasContent;\n    };\n    LESSParser.prototype._parseInterpolation = function () {\n        // @{name} Variable or\n        // ${name} Property\n        var mark = this.mark();\n        if (this.peekDelim('@') || this.peekDelim('$')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Interpolation);\n            this.consumeToken();\n            if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n                this.restoreAtMark(mark);\n                return null;\n            }\n            if (!node.addChild(this._parseIdent())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].IdentifierExpected);\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightCurlyExpected);\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    LESSParser.prototype._tryParseMixinDeclaration = function () {\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinDeclaration\"]);\n        if (!node.setIdentifier(this._parseMixinDeclarationIdentifier()) || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (node.getParameters().addChild(this._parseMixinParameter())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                    break;\n                }\n                if (!node.getParameters().addChild(this._parseMixinParameter())) {\n                    this.markError(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].IdentifierExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        node.setGuard(this._parseGuard());\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this._parseBody(node, this._parseMixInBodyDeclaration.bind(this));\n    };\n    LESSParser.prototype._parseMixInBodyDeclaration = function () {\n        return this._parseFontFace() || this._parseRuleSetDeclaration();\n    };\n    LESSParser.prototype._parseMixinDeclarationIdentifier = function () {\n        var identifier;\n        if (this.peekDelim('#') || this.peekDelim('.')) {\n            identifier = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n            this.consumeToken(); // # or .\n            if (this.hasWhitespace() || !identifier.addChild(this._parseIdent())) {\n                return null;\n            }\n        }\n        else if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Hash)) {\n            identifier = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n            this.consumeToken(); // TokenType.Hash\n        }\n        else {\n            return null;\n        }\n        identifier.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin];\n        return this.finish(identifier);\n    };\n    LESSParser.prototype._parsePseudo = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ExtendsReference\"]);\n        this.consumeToken(); // :\n        if (this.acceptIdent('extend')) {\n            return this._completeExtends(node);\n        }\n        this.restoreAtMark(mark);\n        return _super.prototype._parsePseudo.call(this);\n    };\n    LESSParser.prototype._parseExtend = function () {\n        if (!this.peekDelim('&')) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ExtendsReference\"]);\n        this.consumeToken(); // &\n        if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon) || !this.acceptIdent('extend')) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this._completeExtends(node);\n    };\n    LESSParser.prototype._completeExtends = function (node) {\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].LeftParenthesisExpected);\n        }\n        var selectors = node.getSelectors();\n        if (!selectors.addChild(this._parseSelector(true))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].SelectorExpected);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!selectors.addChild(this._parseSelector(true))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].SelectorExpected);\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseDetachedRuleSetMixin = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinReference\"]);\n        if (node.addChild(this._parseVariable(true)) && (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL))) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._tryParseMixinReference = function (atRoot) {\n        if (atRoot === void 0) { atRoot = true; }\n        var mark = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinReference\"]);\n        var identifier = this._parseMixinDeclarationIdentifier();\n        while (identifier) {\n            this.acceptDelim('>');\n            var nextId = this._parseMixinDeclarationIdentifier();\n            if (nextId) {\n                node.getNamespaces().addChild(identifier);\n                identifier = nextId;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node.setIdentifier(identifier)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        var hasArguments = false;\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            hasArguments = true;\n            if (node.getArguments().addChild(this._parseMixinArgument())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n                    if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getArguments().addChild(this._parseMixinArgument())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n            }\n            identifier.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin];\n        }\n        else {\n            identifier.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin, _cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Rule];\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].BracketL)) {\n            if (!atRoot) {\n                this._addLookupChildren(node);\n            }\n        }\n        else {\n            node.addChild(this._parsePrio());\n        }\n        if (!hasArguments && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            this.restoreAtMark(mark);\n            return null;\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseMixinArgument = function () {\n        // [variableName ':'] expression | variableName '...'\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionArgument\"]);\n        var pos = this.mark();\n        var argument = this._parseVariable();\n        if (argument) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n                this.restoreAtMark(pos);\n            }\n            else {\n                node.setIdentifier(argument);\n            }\n        }\n        if (node.setValue(this._parseDetachedRuleSet() || this._parseExpr(true))) {\n            return this.finish(node);\n        }\n        this.restoreAtMark(pos);\n        return null;\n    };\n    LESSParser.prototype._parseMixinParameter = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionParameter\"]);\n        // special rest variable: @rest...\n        if (this.peekKeyword('@rest')) {\n            var restNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            this.consumeToken();\n            if (!this.accept(_lessScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].DotExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma, _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n            }\n            node.setIdentifier(this.finish(restNode));\n            return this.finish(node);\n        }\n        // special const args: ...\n        if (this.peek(_lessScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) {\n            var varargsNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            this.consumeToken();\n            node.setIdentifier(this.finish(varargsNode));\n            return this.finish(node);\n        }\n        var hasContent = false;\n        // default variable declaration: @param: 12 or @name\n        if (node.setIdentifier(this._parseVariable())) {\n            this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon);\n            hasContent = true;\n        }\n        if (!node.setDefaultValue(this._parseDetachedRuleSet() || this._parseExpr(true)) && !hasContent) {\n            return null;\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseGuard = function () {\n        if (!this.peekIdent('when')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"LessGuard\"]);\n        this.consumeToken(); // when\n        node.isNegated = this.acceptIdent('not');\n        if (!node.getConditions().addChild(this._parseGuardCondition())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ConditionExpected);\n        }\n        while (this.acceptIdent('and') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!node.getConditions().addChild(this._parseGuardCondition())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ConditionExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseGuardCondition = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"GuardCondition\"]);\n        this.consumeToken(); // ParenthesisL\n        if (!node.addChild(this._parseExpr())) {\n            // empty (?)\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseFunction = function () {\n        var pos = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Function\"]);\n        if (!node.setIdentifier(this._parseFunctionIdentifier())) {\n            return null;\n        }\n        if (this.hasWhitespace() || !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (node.getArguments().addChild(this._parseMixinArgument())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                    break;\n                }\n                if (!node.getArguments().addChild(this._parseMixinArgument())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].ExpressionExpected);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    LESSParser.prototype._parseFunctionIdentifier = function () {\n        if (this.peekDelim('%')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n            node.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Function];\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseFunctionIdentifier.call(this);\n    };\n    LESSParser.prototype._parseURLArgument = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseURLArgument.call(this);\n        if (!node || !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            this.restoreAtMark(pos);\n            var node_2 = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            node_2.addChild(this._parseBinaryExpr());\n            return this.finish(node_2);\n        }\n        return node;\n    };\n    return LESSParser;\n}(_cssParser_js__WEBPACK_IMPORTED_MODULE_2__[\"Parser\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessParser.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ellipsis\", function() { return Ellipsis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LESSScanner\", function() { return LESSScanner; });\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar _FSL = '/'.charCodeAt(0);\nvar _NWL = '\\n'.charCodeAt(0);\nvar _CAR = '\\r'.charCodeAt(0);\nvar _LFD = '\\f'.charCodeAt(0);\nvar _TIC = '`'.charCodeAt(0);\nvar _DOT = '.'.charCodeAt(0);\nvar customTokenValue = _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CustomToken;\nvar Ellipsis = customTokenValue++;\nvar LESSScanner = /** @class */ (function (_super) {\n    __extends(LESSScanner, _super);\n    function LESSScanner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LESSScanner.prototype.scanNext = function (offset) {\n        // LESS: escaped JavaScript code `const a = \"dddd\"`\n        var tokenType = this.escapedJavaScript();\n        if (tokenType !== null) {\n            return this.finishToken(offset, tokenType);\n        }\n        if (this.stream.advanceIfChars([_DOT, _DOT, _DOT])) {\n            return this.finishToken(offset, Ellipsis);\n        }\n        return _super.prototype.scanNext.call(this, offset);\n    };\n    LESSScanner.prototype.comment = function () {\n        if (_super.prototype.comment.call(this)) {\n            return true;\n        }\n        if (!this.inURL && this.stream.advanceIfChars([_FSL, _FSL])) {\n            this.stream.advanceWhileChar(function (ch) {\n                switch (ch) {\n                    case _NWL:\n                    case _CAR:\n                    case _LFD:\n                        return false;\n                    default:\n                        return true;\n                }\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    LESSScanner.prototype.escapedJavaScript = function () {\n        var ch = this.stream.peekChar();\n        if (ch === _TIC) {\n            this.stream.advance(1);\n            this.stream.advanceWhileChar(function (ch) { return ch !== _TIC; });\n            return this.stream.advanceIfChar(_TIC) ? _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EscapedJavaScript : _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].BadEscapedJavaScript;\n        }\n        return null;\n    };\n    return LESSScanner;\n}(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9sZXNzU2Nhbm5lci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvX2RlcHMvdnNjb2RlLWNzcy1sYW5ndWFnZXNlcnZpY2UvcGFyc2VyL2xlc3NTY2FubmVyLmpzPzczODIiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ndXNlIHN0cmljdCc7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbmltcG9ydCAqIGFzIHNjYW5uZXIgZnJvbSAnLi9jc3NTY2FubmVyLmpzJztcbnZhciBfRlNMID0gJy8nLmNoYXJDb2RlQXQoMCk7XG52YXIgX05XTCA9ICdcXG4nLmNoYXJDb2RlQXQoMCk7XG52YXIgX0NBUiA9ICdcXHInLmNoYXJDb2RlQXQoMCk7XG52YXIgX0xGRCA9ICdcXGYnLmNoYXJDb2RlQXQoMCk7XG52YXIgX1RJQyA9ICdgJy5jaGFyQ29kZUF0KDApO1xudmFyIF9ET1QgPSAnLicuY2hhckNvZGVBdCgwKTtcbnZhciBjdXN0b21Ub2tlblZhbHVlID0gc2Nhbm5lci5Ub2tlblR5cGUuQ3VzdG9tVG9rZW47XG5leHBvcnQgdmFyIEVsbGlwc2lzID0gY3VzdG9tVG9rZW5WYWx1ZSsrO1xudmFyIExFU1NTY2FubmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhMRVNTU2Nhbm5lciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBMRVNTU2Nhbm5lcigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBMRVNTU2Nhbm5lci5wcm90b3R5cGUuc2Nhbk5leHQgPSBmdW5jdGlvbiAob2Zmc2V0KSB7XG4gICAgICAgIC8vIExFU1M6IGVzY2FwZWQgSmF2YVNjcmlwdCBjb2RlIGBjb25zdCBhID0gXCJkZGRkXCJgXG4gICAgICAgIHZhciB0b2tlblR5cGUgPSB0aGlzLmVzY2FwZWRKYXZhU2NyaXB0KCk7XG4gICAgICAgIGlmICh0b2tlblR5cGUgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbmlzaFRva2VuKG9mZnNldCwgdG9rZW5UeXBlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zdHJlYW0uYWR2YW5jZUlmQ2hhcnMoW19ET1QsIF9ET1QsIF9ET1RdKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluaXNoVG9rZW4ob2Zmc2V0LCBFbGxpcHNpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9zdXBlci5wcm90b3R5cGUuc2Nhbk5leHQuY2FsbCh0aGlzLCBvZmZzZXQpO1xuICAgIH07XG4gICAgTEVTU1NjYW5uZXIucHJvdG90eXBlLmNvbW1lbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfc3VwZXIucHJvdG90eXBlLmNvbW1lbnQuY2FsbCh0aGlzKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmluVVJMICYmIHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXJzKFtfRlNMLCBfRlNMXSkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RyZWFtLmFkdmFuY2VXaGlsZUNoYXIoZnVuY3Rpb24gKGNoKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChjaCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIF9OV0w6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgX0NBUjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBfTEZEOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgTEVTU1NjYW5uZXIucHJvdG90eXBlLmVzY2FwZWRKYXZhU2NyaXB0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY2ggPSB0aGlzLnN0cmVhbS5wZWVrQ2hhcigpO1xuICAgICAgICBpZiAoY2ggPT09IF9USUMpIHtcbiAgICAgICAgICAgIHRoaXMuc3RyZWFtLmFkdmFuY2UoMSk7XG4gICAgICAgICAgICB0aGlzLnN0cmVhbS5hZHZhbmNlV2hpbGVDaGFyKGZ1bmN0aW9uIChjaCkgeyByZXR1cm4gY2ggIT09IF9USUM7IH0pO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXIoX1RJQykgPyBzY2FubmVyLlRva2VuVHlwZS5Fc2NhcGVkSmF2YVNjcmlwdCA6IHNjYW5uZXIuVG9rZW5UeXBlLkJhZEVzY2FwZWRKYXZhU2NyaXB0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgcmV0dXJuIExFU1NTY2FubmVyO1xufShzY2FubmVyLlNjYW5uZXIpKTtcbmV4cG9ydCB7IExFU1NTY2FubmVyIH07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSIssueType\", function() { return SCSSIssueType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSParseError\", function() { return SCSSParseError; });\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_0__[\"loadMessageBundle\"]();\nvar SCSSIssueType = /** @class */ (function () {\n    function SCSSIssueType(id, message) {\n        this.id = id;\n        this.message = message;\n    }\n    return SCSSIssueType;\n}());\n\nvar SCSSParseError = {\n    FromExpected: new SCSSIssueType('scss-fromexpected', localize('expected.from', \"'from' expected\")),\n    ThroughOrToExpected: new SCSSIssueType('scss-throughexpected', localize('expected.through', \"'through' or 'to' expected\")),\n    InExpected: new SCSSIssueType('scss-fromexpected', localize('expected.in', \"'in' expected\")),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9zY3NzRXJyb3JzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9wYXJzZXIvc2Nzc0Vycm9ycy5qcz83YTY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0ICogYXMgbmxzIGZyb20gJy4uLy4uLy4uL2ZpbGxlcnMvdnNjb2RlLW5scy5qcyc7XG52YXIgbG9jYWxpemUgPSBubHMubG9hZE1lc3NhZ2VCdW5kbGUoKTtcbnZhciBTQ1NTSXNzdWVUeXBlID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNDU1NJc3N1ZVR5cGUoaWQsIG1lc3NhZ2UpIHtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIH1cbiAgICByZXR1cm4gU0NTU0lzc3VlVHlwZTtcbn0oKSk7XG5leHBvcnQgeyBTQ1NTSXNzdWVUeXBlIH07XG5leHBvcnQgdmFyIFNDU1NQYXJzZUVycm9yID0ge1xuICAgIEZyb21FeHBlY3RlZDogbmV3IFNDU1NJc3N1ZVR5cGUoJ3Njc3MtZnJvbWV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLmZyb20nLCBcIidmcm9tJyBleHBlY3RlZFwiKSksXG4gICAgVGhyb3VnaE9yVG9FeHBlY3RlZDogbmV3IFNDU1NJc3N1ZVR5cGUoJ3Njc3MtdGhyb3VnaGV4cGVjdGVkJywgbG9jYWxpemUoJ2V4cGVjdGVkLnRocm91Z2gnLCBcIid0aHJvdWdoJyBvciAndG8nIGV4cGVjdGVkXCIpKSxcbiAgICBJbkV4cGVjdGVkOiBuZXcgU0NTU0lzc3VlVHlwZSgnc2Nzcy1mcm9tZXhwZWN0ZWQnLCBsb2NhbGl6ZSgnZXhwZWN0ZWQuaW4nLCBcIidpbicgZXhwZWN0ZWRcIikpLFxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSParser\", function() { return SCSSParser; });\n/* harmony import */ var _scssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js\");\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _cssParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssParser.js\");\n/* harmony import */ var _cssNodes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssErrors.js\");\n/* harmony import */ var _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssErrors.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n/// <summary>\n/// A parser for scss\n/// http://sass-lang.com/documentation/file.SASS_REFERENCE.html\n/// </summary>\nvar SCSSParser = /** @class */ (function (_super) {\n    __extends(SCSSParser, _super);\n    function SCSSParser() {\n        return _super.call(this, new _scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"SCSSScanner\"]()) || this;\n    }\n    SCSSParser.prototype._parseStylesheetStatement = function (isNested) {\n        if (isNested === void 0) { isNested = false; }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseWarnAndDebug() // @warn, @debug and @error statements\n                || this._parseControlStatement() // @if, @while, @for, @each\n                || this._parseMixinDeclaration() // @mixin\n                || this._parseMixinContent() // @content\n                || this._parseMixinReference() // @include\n                || this._parseFunctionDeclaration() // @function\n                || this._parseForward() // @forward\n                || this._parseUse() // @use\n                || this._parseRuleset(isNested) // @at-rule\n                || _super.prototype._parseStylesheetAtStatement.call(this, isNested);\n        }\n        return this._parseRuleset(true) || this._parseVariableDeclaration();\n    };\n    SCSSParser.prototype._parseImport = function () {\n        if (!this.peekKeyword('@import')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Import\"]);\n        this.consumeToken();\n        if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].URIOrStringExpected);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!node.addChild(this._parseURILiteral()) && !node.addChild(this._parseStringLiteral())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].URIOrStringExpected);\n            }\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            node.setMedialist(this._parseMediaQueryList());\n        }\n        return this.finish(node);\n    };\n    // scss variables: $font-size: 12px;\n    SCSSParser.prototype._parseVariableDeclaration = function (panic) {\n        if (panic === void 0) { panic = []; }\n        if (!this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableName\"])) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"VariableDeclaration\"]);\n        if (!node.setVariable(this._parseVariable())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ColonExpected);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        if (!node.setValue(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableValueExpected, [], panic);\n        }\n        while (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Exclamation)) {\n            if (node.addChild(this._tryParsePrio())) {\n                // !important\n            }\n            else {\n                this.consumeToken();\n                if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident, /^(default|global)$/)) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].UnknownKeyword);\n                }\n                this.consumeToken();\n            }\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMediaContentStart = function () {\n        return this._parseInterpolation();\n    };\n    SCSSParser.prototype._parseMediaFeatureName = function () {\n        return this._parseModuleMember()\n            || this._parseFunction() // function before ident\n            || this._parseIdent()\n            || this._parseVariable();\n    };\n    SCSSParser.prototype._parseKeyframeSelector = function () {\n        return this._tryParseKeyframeSelector()\n            || this._parseControlStatement(this._parseKeyframeSelector.bind(this))\n            || this._parseVariableDeclaration()\n            || this._parseMixinContent();\n    };\n    SCSSParser.prototype._parseVariable = function () {\n        if (!this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableName\"])) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Variable\"]);\n        this.consumeToken();\n        return node;\n    };\n    SCSSParser.prototype._parseModuleMember = function () {\n        var pos = this.mark();\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Module\"]);\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Module]))) {\n            return null;\n        }\n        if (this.hasWhitespace()\n            || !this.acceptDelim('.')\n            || this.hasWhitespace()) {\n            this.restoreAtMark(pos);\n            return null;\n        }\n        if (!node.addChild(this._parseVariable() || this._parseFunction())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierOrVariableExpected);\n        }\n        return node;\n    };\n    SCSSParser.prototype._parseIdent = function (referenceTypes) {\n        var _this = this;\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) && !this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"InterpolationFunction\"]) && !this.peekDelim('-')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Identifier\"]);\n        node.referenceTypes = referenceTypes;\n        node.isCustomProperty = this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident, /^--/);\n        var hasContent = false;\n        var indentInterpolation = function () {\n            var pos = _this.mark();\n            if (_this.acceptDelim('-')) {\n                if (!_this.hasWhitespace()) {\n                    _this.acceptDelim('-');\n                }\n                if (_this.hasWhitespace()) {\n                    _this.restoreAtMark(pos);\n                    return null;\n                }\n            }\n            return _this._parseInterpolation();\n        };\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident) || node.addChild(indentInterpolation()) || (hasContent && this.acceptRegexp(/[\\w-]/))) {\n            hasContent = true;\n            if (this.hasWhitespace()) {\n                break;\n            }\n        }\n        return hasContent ? this.finish(node) : null;\n    };\n    SCSSParser.prototype._parseTermExpression = function () {\n        return this._parseModuleMember() ||\n            this._parseVariable() ||\n            this._parseSelectorCombinator() ||\n            //this._tryParsePrio() ||\n            _super.prototype._parseTermExpression.call(this);\n    };\n    SCSSParser.prototype._parseInterpolation = function () {\n        if (this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"InterpolationFunction\"])) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Interpolation\"]);\n            this.consumeToken();\n            if (!node.addChild(this._parseExpr()) && !this._parseSelectorCombinator()) {\n                if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR)) {\n                    return this.finish(node);\n                }\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightCurlyExpected);\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseOperator = function () {\n        if (this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"EqualsOperator\"]) || this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"NotEqualsOperator\"])\n            || this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"GreaterEqualsOperator\"]) || this.peek(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"SmallerEqualsOperator\"])\n            || this.peekDelim('>') || this.peekDelim('<')\n            || this.peekIdent('and') || this.peekIdent('or')\n            || this.peekDelim('%')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Operator);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseOperator.call(this);\n    };\n    SCSSParser.prototype._parseUnaryOperator = function () {\n        if (this.peekIdent('not')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return _super.prototype._parseUnaryOperator.call(this);\n    };\n    SCSSParser.prototype._parseRuleSetDeclaration = function () {\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return this._parseKeyframe() // nested @keyframe\n                || this._parseImport() // nested @import\n                || this._parseMedia(true) // nested @media\n                || this._parseFontFace() // nested @font-face\n                || this._parseWarnAndDebug() // @warn, @debug and @error statements\n                || this._parseControlStatement() // @if, @while, @for, @each\n                || this._parseFunctionDeclaration() // @function\n                || this._parseExtends() // @extends\n                || this._parseMixinReference() // @include\n                || this._parseMixinContent() // @content\n                || this._parseMixinDeclaration() // nested @mixin\n                || this._parseRuleset(true) // @at-rule\n                || this._parseSupports(true) // @supports\n                || _super.prototype._parseRuleSetDeclarationAtStatement.call(this);\n        }\n        return this._parseVariableDeclaration() // variable declaration\n            || this._tryParseRuleset(true) // nested ruleset\n            || _super.prototype._parseRuleSetDeclaration.call(this); // try css ruleset declaration as last so in the error case, the ast will contain a declaration\n    };\n    SCSSParser.prototype._parseDeclaration = function (resyncStopTokens) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Declaration\"]);\n        if (!node.setProperty(this._parseProperty())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ColonExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon], resyncStopTokens);\n        }\n        if (this.prevToken) {\n            node.colonPosition = this.prevToken.offset;\n        }\n        var hasContent = false;\n        if (node.setValue(this._parseExpr())) {\n            hasContent = true;\n            node.addChild(this._parsePrio());\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            node.setNestedProperties(this._parseNestedProperties());\n        }\n        else {\n            if (!hasContent) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].PropertyValueExpected);\n            }\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon)) {\n            node.semicolonPosition = this.token.offset; // not part of the declaration, but useful information for code assist\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseNestedProperties = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NestedProperties\"]);\n        return this._parseBody(node, this._parseDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseExtends = function () {\n        if (this.peekKeyword('@extend')) {\n            var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ExtendsReference\"]);\n            this.consumeToken();\n            if (!node.getSelectors().addChild(this._parseSimpleSelector())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].SelectorExpected);\n            }\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                node.getSelectors().addChild(this._parseSimpleSelector());\n            }\n            if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Exclamation)) {\n                if (!this.acceptIdent('optional')) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].UnknownKeyword);\n                }\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseSimpleSelectorBody = function () {\n        return this._parseSelectorCombinator() || this._parseSelectorPlaceholder() || _super.prototype._parseSimpleSelectorBody.call(this);\n    };\n    SCSSParser.prototype._parseSelectorCombinator = function () {\n        if (this.peekDelim('&')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorCombinator);\n            this.consumeToken();\n            while (!this.hasWhitespace() && (this.acceptDelim('-') || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Num) || this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Dimension) || node.addChild(this._parseIdent()) || this.acceptDelim('&'))) {\n                //  support &-foo-1\n            }\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseSelectorPlaceholder = function () {\n        if (this.peekDelim('%')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorPlaceholder);\n            this.consumeToken();\n            this._parseIdent();\n            return this.finish(node);\n        }\n        else if (this.peekKeyword('@at-root')) {\n            var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].SelectorPlaceholder);\n            this.consumeToken();\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseElementName = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseElementName.call(this);\n        if (node && !this.hasWhitespace() && this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) { // for #49589\n            this.restoreAtMark(pos);\n            return null;\n        }\n        return node;\n    };\n    SCSSParser.prototype._tryParsePseudoIdentifier = function () {\n        return this._parseInterpolation() || _super.prototype._tryParsePseudoIdentifier.call(this); // for #49589\n    };\n    SCSSParser.prototype._parseWarnAndDebug = function () {\n        if (!this.peekKeyword('@debug')\n            && !this.peekKeyword('@warn')\n            && !this.peekKeyword('@error')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].Debug);\n        this.consumeToken(); // @debug, @warn or @error\n        node.addChild(this._parseExpr()); // optional\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseControlStatement = function (parseStatement) {\n        if (parseStatement === void 0) { parseStatement = this._parseRuleSetDeclaration.bind(this); }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].AtKeyword)) {\n            return null;\n        }\n        return this._parseIfStatement(parseStatement) || this._parseForStatement(parseStatement)\n            || this._parseEachStatement(parseStatement) || this._parseWhileStatement(parseStatement);\n    };\n    SCSSParser.prototype._parseIfStatement = function (parseStatement) {\n        if (!this.peekKeyword('@if')) {\n            return null;\n        }\n        return this._internalParseIfStatement(parseStatement);\n    };\n    SCSSParser.prototype._internalParseIfStatement = function (parseStatement) {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"IfStatement\"]);\n        this.consumeToken(); // @if or if\n        if (!node.setExpression(this._parseExpr(true))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n        }\n        this._parseBody(node, parseStatement);\n        if (this.acceptKeyword('@else')) {\n            if (this.peekIdent('if')) {\n                node.setElseClause(this._internalParseIfStatement(parseStatement));\n            }\n            else if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n                var elseNode = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ElseStatement\"]);\n                this._parseBody(elseNode, parseStatement);\n                node.setElseClause(elseNode);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForStatement = function (parseStatement) {\n        if (!this.peekKeyword('@for')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ForStatement\"]);\n        this.consumeToken(); // @for\n        if (!node.setVariable(this._parseVariable())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!this.acceptIdent('from')) {\n            return this.finish(node, _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"SCSSParseError\"].FromExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!this.acceptIdent('to') && !this.acceptIdent('through')) {\n            return this.finish(node, _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"SCSSParseError\"].ThroughOrToExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseEachStatement = function (parseStatement) {\n        if (!this.peekKeyword('@each')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"EachStatement\"]);\n        this.consumeToken(); // @each\n        var variables = node.getVariables();\n        if (!variables.addChild(this._parseVariable())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n            if (!variables.addChild(this._parseVariable())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n            }\n        }\n        this.finish(variables);\n        if (!this.acceptIdent('in')) {\n            return this.finish(node, _scssErrors_js__WEBPACK_IMPORTED_MODULE_4__[\"SCSSParseError\"].InExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!node.addChild(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseWhileStatement = function (parseStatement) {\n        if (!this.peekKeyword('@while')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"WhileStatement\"]);\n        this.consumeToken(); // @while\n        if (!node.addChild(this._parseBinaryExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, parseStatement);\n    };\n    SCSSParser.prototype._parseFunctionBodyDeclaration = function () {\n        return this._parseVariableDeclaration() || this._parseReturnStatement() || this._parseWarnAndDebug()\n            || this._parseControlStatement(this._parseFunctionBodyDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseFunctionDeclaration = function () {\n        if (!this.peekKeyword('@function')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionDeclaration\"]);\n        this.consumeToken(); // @function\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Function]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].LeftParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n            while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                    break;\n                }\n                if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        return this._parseBody(node, this._parseFunctionBodyDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseReturnStatement = function () {\n        if (!this.peekKeyword('@return')) {\n            return null;\n        }\n        var node = this.createNode(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"NodeType\"].ReturnStatement);\n        this.consumeToken(); // @function\n        if (!node.addChild(this._parseExpr())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinDeclaration = function () {\n        if (!this.peekKeyword('@mixin')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinDeclaration\"]);\n        this.consumeToken();\n        if (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin]))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n            }\n        }\n        return this._parseBody(node, this._parseRuleSetDeclaration.bind(this));\n    };\n    SCSSParser.prototype._parseParameterDeclaration = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionParameter\"]);\n        if (!node.setIdentifier(this._parseVariable())) {\n            return null;\n        }\n        if (this.accept(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) {\n            // ok\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            if (!node.setDefaultValue(this._parseExpr(true))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableValueExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma, _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinContent = function () {\n        if (!this.peekKeyword('@content')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinContentReference\"]);\n        this.consumeToken();\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            if (node.getArguments().addChild(this._parseFunctionArgument())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected);\n            }\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinReference = function () {\n        if (!this.peekKeyword('@include')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinReference\"]);\n        this.consumeToken();\n        // Could be module or mixin identifier, set as mixin as default.\n        var firstIdent = this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin]);\n        if (!node.setIdentifier(firstIdent)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n        }\n        // Is a module accessor.\n        if (!this.hasWhitespace() && this.acceptDelim('.') && !this.hasWhitespace()) {\n            var secondIdent = this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Mixin]);\n            if (!secondIdent) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyR]);\n            }\n            var moduleToken = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Module\"]);\n            // Re-purpose first matched ident as identifier for module token.\n            firstIdent.referenceTypes = [_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Module];\n            moduleToken.setIdentifier(firstIdent);\n            // Override identifier with second ident.\n            node.setIdentifier(secondIdent);\n            node.addChild(moduleToken);\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            if (node.getArguments().addChild(this._parseFunctionArgument())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getArguments().addChild(this._parseFunctionArgument())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected);\n            }\n        }\n        if (this.peekIdent('using') || this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            node.setContent(this._parseMixinContentDeclaration());\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinContentDeclaration = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"MixinContentDeclaration\"]);\n        if (this.acceptIdent('using')) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].LeftParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL]);\n            }\n            if (node.getParameters().addChild(this._parseParameterDeclaration())) {\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getParameters().addChild(this._parseParameterDeclaration())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected);\n                    }\n                }\n            }\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL]);\n            }\n        }\n        if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].CurlyL)) {\n            this._parseBody(node, this._parseMixinReferenceBodyStatement.bind(this));\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseMixinReferenceBodyStatement = function () {\n        return this._tryParseKeyframeSelector() || this._parseRuleSetDeclaration();\n    };\n    SCSSParser.prototype._parseFunctionArgument = function () {\n        // [variableName ':'] expression | variableName '...'\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"FunctionArgument\"]);\n        var pos = this.mark();\n        var argument = this._parseVariable();\n        if (argument) {\n            if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n                if (this.accept(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"])) { // optional\n                    node.setValue(argument);\n                    return this.finish(node);\n                }\n                else {\n                    this.restoreAtMark(pos);\n                }\n            }\n            else {\n                node.setIdentifier(argument);\n            }\n        }\n        if (node.setValue(this._parseExpr(true))) {\n            this.accept(_scssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Ellipsis\"]); // #43746\n            node.addChild(this._parsePrio()); // #9859\n            return this.finish(node);\n        }\n        else if (node.setValue(this._tryParsePrio())) {\n            return this.finish(node);\n        }\n        return null;\n    };\n    SCSSParser.prototype._parseURLArgument = function () {\n        var pos = this.mark();\n        var node = _super.prototype._parseURLArgument.call(this);\n        if (!node || !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            this.restoreAtMark(pos);\n            var node_1 = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n            node_1.addChild(this._parseBinaryExpr());\n            return this.finish(node_1);\n        }\n        return node;\n    };\n    SCSSParser.prototype._parseOperation = function () {\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Node\"]);\n        this.consumeToken();\n        while (node.addChild(this._parseListElement())) {\n            this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma); // optional\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseListElement = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ListEntry\"]);\n        var child = this._parseBinaryExpr();\n        if (!child) {\n            return null;\n        }\n        if (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon)) {\n            node.setKey(child);\n            if (!node.setValue(this._parseBinaryExpr())) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].ExpressionExpected);\n            }\n        }\n        else {\n            node.setValue(child);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseUse = function () {\n        if (!this.peekKeyword('@use')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Use\"]);\n        this.consumeToken(); // @use\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].StringLiteralExpected);\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident, /as|with/)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].UnknownKeyword);\n            }\n            if (this.acceptIdent('as') &&\n                (!node.setIdentifier(this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Module])) && !this.acceptDelim('*'))) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierOrWildcardExpected);\n            }\n            if (this.acceptIdent('with')) {\n                if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisL)) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].LeftParenthesisExpected, [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n                }\n                // First variable statement, no comma.\n                if (!node.getParameters().addChild(this._parseModuleConfigDeclaration())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected);\n                }\n                while (this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma)) {\n                    if (this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                        break;\n                    }\n                    if (!node.getParameters().addChild(this._parseModuleConfigDeclaration())) {\n                        return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableNameExpected);\n                    }\n                }\n                if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR)) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].RightParenthesisExpected);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseModuleConfigDeclaration = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ModuleConfiguration\"]);\n        if (!node.setIdentifier(this._parseVariable())) {\n            return null;\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Colon) || !node.setValue(this._parseExpr(true))) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].VariableValueExpected, [], [_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Comma, _cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].ParenthesisR]);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForward = function () {\n        if (!this.peekKeyword('@forward')) {\n            return null;\n        }\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"Forward\"]);\n        this.consumeToken();\n        if (!node.addChild(this._parseStringLiteral())) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].StringLiteralExpected);\n        }\n        if (!this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.peek(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            if (!this.peekRegExp(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].Ident, /as|hide|show/)) {\n                return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].UnknownKeyword);\n            }\n            if (this.acceptIdent('as')) {\n                var identifier = this._parseIdent([_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ReferenceType\"].Forward]);\n                if (!node.setIdentifier(identifier)) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierExpected);\n                }\n                // Wildcard must be the next character after the identifier string.\n                if (this.hasWhitespace() || !this.acceptDelim('*')) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].WildcardExpected);\n                }\n            }\n            if (this.peekIdent('hide') || this.peekIdent('show')) {\n                if (!node.addChild(this._parseForwardVisibility())) {\n                    return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].IdentifierOrVariableExpected);\n                }\n            }\n        }\n        if (!this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].SemiColon) && !this.accept(_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"TokenType\"].EOF)) {\n            return this.finish(node, _cssErrors_js__WEBPACK_IMPORTED_MODULE_5__[\"ParseError\"].SemiColonExpected);\n        }\n        return this.finish(node);\n    };\n    SCSSParser.prototype._parseForwardVisibility = function () {\n        var node = this.create(_cssNodes_js__WEBPACK_IMPORTED_MODULE_3__[\"ForwardVisibility\"]);\n        // Assume to be \"hide\" or \"show\".\n        node.setIdentifier(this._parseIdent());\n        while (node.addChild(this._parseVariable() || this._parseIdent())) {\n            // Consume all variables and idents ahead.\n        }\n        // More than just identifier \n        return node.getChildren().length > 1 ? node : null;\n    };\n    SCSSParser.prototype._parseSupportsCondition = function () {\n        return this._parseInterpolation() || _super.prototype._parseSupportsCondition.call(this);\n    };\n    return SCSSParser;\n}(_cssParser_js__WEBPACK_IMPORTED_MODULE_2__[\"Parser\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssParser.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VariableName\", function() { return VariableName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InterpolationFunction\", function() { return InterpolationFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Default\", function() { return Default; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EqualsOperator\", function() { return EqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"NotEqualsOperator\", function() { return NotEqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GreaterEqualsOperator\", function() { return GreaterEqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SmallerEqualsOperator\", function() { return SmallerEqualsOperator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Ellipsis\", function() { return Ellipsis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Module\", function() { return Module; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSScanner\", function() { return SCSSScanner; });\n/* harmony import */ var _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar _FSL = '/'.charCodeAt(0);\nvar _NWL = '\\n'.charCodeAt(0);\nvar _CAR = '\\r'.charCodeAt(0);\nvar _LFD = '\\f'.charCodeAt(0);\nvar _DLR = '$'.charCodeAt(0);\nvar _HSH = '#'.charCodeAt(0);\nvar _CUL = '{'.charCodeAt(0);\nvar _EQS = '='.charCodeAt(0);\nvar _BNG = '!'.charCodeAt(0);\nvar _LAN = '<'.charCodeAt(0);\nvar _RAN = '>'.charCodeAt(0);\nvar _DOT = '.'.charCodeAt(0);\nvar _ATS = '@'.charCodeAt(0);\nvar customTokenValue = _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CustomToken;\nvar VariableName = customTokenValue++;\nvar InterpolationFunction = customTokenValue++;\nvar Default = customTokenValue++;\nvar EqualsOperator = customTokenValue++;\nvar NotEqualsOperator = customTokenValue++;\nvar GreaterEqualsOperator = customTokenValue++;\nvar SmallerEqualsOperator = customTokenValue++;\nvar Ellipsis = customTokenValue++;\nvar Module = customTokenValue++;\nvar SCSSScanner = /** @class */ (function (_super) {\n    __extends(SCSSScanner, _super);\n    function SCSSScanner() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SCSSScanner.prototype.scanNext = function (offset) {\n        // scss variable\n        if (this.stream.advanceIfChar(_DLR)) {\n            var content = ['$'];\n            if (this.ident(content)) {\n                return this.finishToken(offset, VariableName, content.join(''));\n            }\n            else {\n                this.stream.goBackTo(offset);\n            }\n        }\n        // scss: interpolation function #{..})\n        if (this.stream.advanceIfChars([_HSH, _CUL])) {\n            return this.finishToken(offset, InterpolationFunction);\n        }\n        // operator ==\n        if (this.stream.advanceIfChars([_EQS, _EQS])) {\n            return this.finishToken(offset, EqualsOperator);\n        }\n        // operator !=\n        if (this.stream.advanceIfChars([_BNG, _EQS])) {\n            return this.finishToken(offset, NotEqualsOperator);\n        }\n        // operators <, <=\n        if (this.stream.advanceIfChar(_LAN)) {\n            if (this.stream.advanceIfChar(_EQS)) {\n                return this.finishToken(offset, SmallerEqualsOperator);\n            }\n            return this.finishToken(offset, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Delim);\n        }\n        // ooperators >, >=\n        if (this.stream.advanceIfChar(_RAN)) {\n            if (this.stream.advanceIfChar(_EQS)) {\n                return this.finishToken(offset, GreaterEqualsOperator);\n            }\n            return this.finishToken(offset, _cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Delim);\n        }\n        // ellipis\n        if (this.stream.advanceIfChars([_DOT, _DOT, _DOT])) {\n            return this.finishToken(offset, Ellipsis);\n        }\n        return _super.prototype.scanNext.call(this, offset);\n    };\n    SCSSScanner.prototype.comment = function () {\n        if (_super.prototype.comment.call(this)) {\n            return true;\n        }\n        if (!this.inURL && this.stream.advanceIfChars([_FSL, _FSL])) {\n            this.stream.advanceWhileChar(function (ch) {\n                switch (ch) {\n                    case _NWL:\n                    case _CAR:\n                    case _LFD:\n                        return false;\n                    default:\n                        return true;\n                }\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return SCSSScanner;\n}(_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3BhcnNlci9zY3NzU2Nhbm5lci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvX2RlcHMvdnNjb2RlLWNzcy1sYW5ndWFnZXNlcnZpY2UvcGFyc2VyL3Njc3NTY2FubmVyLmpzPzM4NWMiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ndXNlIHN0cmljdCc7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbmltcG9ydCB7IFRva2VuVHlwZSwgU2Nhbm5lciB9IGZyb20gJy4vY3NzU2Nhbm5lci5qcyc7XG52YXIgX0ZTTCA9ICcvJy5jaGFyQ29kZUF0KDApO1xudmFyIF9OV0wgPSAnXFxuJy5jaGFyQ29kZUF0KDApO1xudmFyIF9DQVIgPSAnXFxyJy5jaGFyQ29kZUF0KDApO1xudmFyIF9MRkQgPSAnXFxmJy5jaGFyQ29kZUF0KDApO1xudmFyIF9ETFIgPSAnJCcuY2hhckNvZGVBdCgwKTtcbnZhciBfSFNIID0gJyMnLmNoYXJDb2RlQXQoMCk7XG52YXIgX0NVTCA9ICd7Jy5jaGFyQ29kZUF0KDApO1xudmFyIF9FUVMgPSAnPScuY2hhckNvZGVBdCgwKTtcbnZhciBfQk5HID0gJyEnLmNoYXJDb2RlQXQoMCk7XG52YXIgX0xBTiA9ICc8Jy5jaGFyQ29kZUF0KDApO1xudmFyIF9SQU4gPSAnPicuY2hhckNvZGVBdCgwKTtcbnZhciBfRE9UID0gJy4nLmNoYXJDb2RlQXQoMCk7XG52YXIgX0FUUyA9ICdAJy5jaGFyQ29kZUF0KDApO1xudmFyIGN1c3RvbVRva2VuVmFsdWUgPSBUb2tlblR5cGUuQ3VzdG9tVG9rZW47XG5leHBvcnQgdmFyIFZhcmlhYmxlTmFtZSA9IGN1c3RvbVRva2VuVmFsdWUrKztcbmV4cG9ydCB2YXIgSW50ZXJwb2xhdGlvbkZ1bmN0aW9uID0gY3VzdG9tVG9rZW5WYWx1ZSsrO1xuZXhwb3J0IHZhciBEZWZhdWx0ID0gY3VzdG9tVG9rZW5WYWx1ZSsrO1xuZXhwb3J0IHZhciBFcXVhbHNPcGVyYXRvciA9IGN1c3RvbVRva2VuVmFsdWUrKztcbmV4cG9ydCB2YXIgTm90RXF1YWxzT3BlcmF0b3IgPSBjdXN0b21Ub2tlblZhbHVlKys7XG5leHBvcnQgdmFyIEdyZWF0ZXJFcXVhbHNPcGVyYXRvciA9IGN1c3RvbVRva2VuVmFsdWUrKztcbmV4cG9ydCB2YXIgU21hbGxlckVxdWFsc09wZXJhdG9yID0gY3VzdG9tVG9rZW5WYWx1ZSsrO1xuZXhwb3J0IHZhciBFbGxpcHNpcyA9IGN1c3RvbVRva2VuVmFsdWUrKztcbmV4cG9ydCB2YXIgTW9kdWxlID0gY3VzdG9tVG9rZW5WYWx1ZSsrO1xudmFyIFNDU1NTY2FubmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhTQ1NTU2Nhbm5lciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTQ1NTU2Nhbm5lcigpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBTQ1NTU2Nhbm5lci5wcm90b3R5cGUuc2Nhbk5leHQgPSBmdW5jdGlvbiAob2Zmc2V0KSB7XG4gICAgICAgIC8vIHNjc3MgdmFyaWFibGVcbiAgICAgICAgaWYgKHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXIoX0RMUikpIHtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gWyckJ107XG4gICAgICAgICAgICBpZiAodGhpcy5pZGVudChjb250ZW50KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbmlzaFRva2VuKG9mZnNldCwgVmFyaWFibGVOYW1lLCBjb250ZW50LmpvaW4oJycpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc3RyZWFtLmdvQmFja1RvKG9mZnNldCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gc2NzczogaW50ZXJwb2xhdGlvbiBmdW5jdGlvbiAjey4ufSlcbiAgICAgICAgaWYgKHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXJzKFtfSFNILCBfQ1VMXSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbmlzaFRva2VuKG9mZnNldCwgSW50ZXJwb2xhdGlvbkZ1bmN0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBvcGVyYXRvciA9PVxuICAgICAgICBpZiAodGhpcy5zdHJlYW0uYWR2YW5jZUlmQ2hhcnMoW19FUVMsIF9FUVNdKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluaXNoVG9rZW4ob2Zmc2V0LCBFcXVhbHNPcGVyYXRvcik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gb3BlcmF0b3IgIT1cbiAgICAgICAgaWYgKHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXJzKFtfQk5HLCBfRVFTXSkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbmlzaFRva2VuKG9mZnNldCwgTm90RXF1YWxzT3BlcmF0b3IpO1xuICAgICAgICB9XG4gICAgICAgIC8vIG9wZXJhdG9ycyA8LCA8PVxuICAgICAgICBpZiAodGhpcy5zdHJlYW0uYWR2YW5jZUlmQ2hhcihfTEFOKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXIoX0VRUykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maW5pc2hUb2tlbihvZmZzZXQsIFNtYWxsZXJFcXVhbHNPcGVyYXRvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5maW5pc2hUb2tlbihvZmZzZXQsIFRva2VuVHlwZS5EZWxpbSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gb29wZXJhdG9ycyA+LCA+PVxuICAgICAgICBpZiAodGhpcy5zdHJlYW0uYWR2YW5jZUlmQ2hhcihfUkFOKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXIoX0VRUykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maW5pc2hUb2tlbihvZmZzZXQsIEdyZWF0ZXJFcXVhbHNPcGVyYXRvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5maW5pc2hUb2tlbihvZmZzZXQsIFRva2VuVHlwZS5EZWxpbSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZWxsaXBpc1xuICAgICAgICBpZiAodGhpcy5zdHJlYW0uYWR2YW5jZUlmQ2hhcnMoW19ET1QsIF9ET1QsIF9ET1RdKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluaXNoVG9rZW4ob2Zmc2V0LCBFbGxpcHNpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9zdXBlci5wcm90b3R5cGUuc2Nhbk5leHQuY2FsbCh0aGlzLCBvZmZzZXQpO1xuICAgIH07XG4gICAgU0NTU1NjYW5uZXIucHJvdG90eXBlLmNvbW1lbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChfc3VwZXIucHJvdG90eXBlLmNvbW1lbnQuY2FsbCh0aGlzKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmluVVJMICYmIHRoaXMuc3RyZWFtLmFkdmFuY2VJZkNoYXJzKFtfRlNMLCBfRlNMXSkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RyZWFtLmFkdmFuY2VXaGlsZUNoYXIoZnVuY3Rpb24gKGNoKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChjaCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIF9OV0w6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgX0NBUjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBfTEZEOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFNDU1NTY2FubmVyO1xufShTY2FubmVyKSk7XG5leHBvcnQgeyBTQ1NTU2Nhbm5lciB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSCodeActions\", function() { return CSSCodeActions; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/* harmony import */ var _services_lintRules_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\");\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_4__[\"loadMessageBundle\"]();\nvar CSSCodeActions = /** @class */ (function () {\n    function CSSCodeActions(cssDataManager) {\n        this.cssDataManager = cssDataManager;\n    }\n    CSSCodeActions.prototype.doCodeActions = function (document, range, context, stylesheet) {\n        return this.doCodeActions2(document, range, context, stylesheet).map(function (ca) {\n            var textDocumentEdit = ca.edit && ca.edit.documentChanges && ca.edit.documentChanges[0];\n            return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__[\"Command\"].create(ca.title, '_css.applyCodeAction', document.uri, document.version, textDocumentEdit && textDocumentEdit.edits);\n        });\n    };\n    CSSCodeActions.prototype.doCodeActions2 = function (document, range, context, stylesheet) {\n        var result = [];\n        if (context.diagnostics) {\n            for (var _i = 0, _a = context.diagnostics; _i < _a.length; _i++) {\n                var diagnostic = _a[_i];\n                this.appendFixesForMarker(document, stylesheet, diagnostic, result);\n            }\n        }\n        return result;\n    };\n    CSSCodeActions.prototype.getFixesForUnknownProperty = function (document, property, marker, result) {\n        var propertyName = property.getName();\n        var candidates = [];\n        this.cssDataManager.getProperties().forEach(function (p) {\n            var score = Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_1__[\"difference\"])(propertyName, p.name);\n            if (score >= propertyName.length / 2 /*score_lim*/) {\n                candidates.push({ property: p.name, score: score });\n            }\n        });\n        // Sort in descending order.\n        candidates.sort(function (a, b) {\n            return b.score - a.score || a.property.localeCompare(b.property);\n        });\n        var maxActions = 3;\n        for (var _i = 0, candidates_1 = candidates; _i < candidates_1.length; _i++) {\n            var candidate = candidates_1[_i];\n            var propertyName_1 = candidate.property;\n            var title = localize('css.codeaction.rename', \"Rename to '{0}'\", propertyName_1);\n            var edit = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__[\"TextEdit\"].replace(marker.range, propertyName_1);\n            var documentIdentifier = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__[\"VersionedTextDocumentIdentifier\"].create(document.uri, document.version);\n            var workspaceEdit = { documentChanges: [_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__[\"TextDocumentEdit\"].create(documentIdentifier, [edit])] };\n            var codeAction = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__[\"CodeAction\"].create(title, workspaceEdit, _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__[\"CodeActionKind\"].QuickFix);\n            codeAction.diagnostics = [marker];\n            result.push(codeAction);\n            if (--maxActions <= 0) {\n                return;\n            }\n        }\n    };\n    CSSCodeActions.prototype.appendFixesForMarker = function (document, stylesheet, marker, result) {\n        if (marker.code !== _services_lintRules_js__WEBPACK_IMPORTED_MODULE_2__[\"Rules\"].UnknownProperty.id) {\n            return;\n        }\n        var offset = document.offsetAt(marker.range.start);\n        var end = document.offsetAt(marker.range.end);\n        var nodepath = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](stylesheet, offset);\n        for (var i = nodepath.length - 1; i >= 0; i--) {\n            var node = nodepath[i];\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                var property = node.getProperty();\n                if (property && property.offset === offset && property.end === end) {\n                    this.getFixesForUnknownProperty(document, property, marker, result);\n                    return;\n                }\n            }\n        }\n    };\n    return CSSCodeActions;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3NlcnZpY2VzL2Nzc0NvZGVBY3Rpb25zLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9zZXJ2aWNlcy9jc3NDb2RlQWN0aW9ucy5qcz8yMTZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0ICogYXMgbm9kZXMgZnJvbSAnLi4vcGFyc2VyL2Nzc05vZGVzLmpzJztcbmltcG9ydCB7IGRpZmZlcmVuY2UgfSBmcm9tICcuLi91dGlscy9zdHJpbmdzLmpzJztcbmltcG9ydCB7IFJ1bGVzIH0gZnJvbSAnLi4vc2VydmljZXMvbGludFJ1bGVzLmpzJztcbmltcG9ydCB7IENvbW1hbmQsIFRleHRFZGl0LCBDb2RlQWN0aW9uLCBDb2RlQWN0aW9uS2luZCwgVGV4dERvY3VtZW50RWRpdCwgVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllciB9IGZyb20gJy4uL2Nzc0xhbmd1YWdlVHlwZXMuanMnO1xuaW1wb3J0ICogYXMgbmxzIGZyb20gJy4uLy4uLy4uL2ZpbGxlcnMvdnNjb2RlLW5scy5qcyc7XG52YXIgbG9jYWxpemUgPSBubHMubG9hZE1lc3NhZ2VCdW5kbGUoKTtcbnZhciBDU1NDb2RlQWN0aW9ucyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDU1NDb2RlQWN0aW9ucyhjc3NEYXRhTWFuYWdlcikge1xuICAgICAgICB0aGlzLmNzc0RhdGFNYW5hZ2VyID0gY3NzRGF0YU1hbmFnZXI7XG4gICAgfVxuICAgIENTU0NvZGVBY3Rpb25zLnByb3RvdHlwZS5kb0NvZGVBY3Rpb25zID0gZnVuY3Rpb24gKGRvY3VtZW50LCByYW5nZSwgY29udGV4dCwgc3R5bGVzaGVldCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kb0NvZGVBY3Rpb25zMihkb2N1bWVudCwgcmFuZ2UsIGNvbnRleHQsIHN0eWxlc2hlZXQpLm1hcChmdW5jdGlvbiAoY2EpIHtcbiAgICAgICAgICAgIHZhciB0ZXh0RG9jdW1lbnRFZGl0ID0gY2EuZWRpdCAmJiBjYS5lZGl0LmRvY3VtZW50Q2hhbmdlcyAmJiBjYS5lZGl0LmRvY3VtZW50Q2hhbmdlc1swXTtcbiAgICAgICAgICAgIHJldHVybiBDb21tYW5kLmNyZWF0ZShjYS50aXRsZSwgJ19jc3MuYXBwbHlDb2RlQWN0aW9uJywgZG9jdW1lbnQudXJpLCBkb2N1bWVudC52ZXJzaW9uLCB0ZXh0RG9jdW1lbnRFZGl0ICYmIHRleHREb2N1bWVudEVkaXQuZWRpdHMpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIENTU0NvZGVBY3Rpb25zLnByb3RvdHlwZS5kb0NvZGVBY3Rpb25zMiA9IGZ1bmN0aW9uIChkb2N1bWVudCwgcmFuZ2UsIGNvbnRleHQsIHN0eWxlc2hlZXQpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgICBpZiAoY29udGV4dC5kaWFnbm9zdGljcykge1xuICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IGNvbnRleHQuZGlhZ25vc3RpY3M7IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRpYWdub3N0aWMgPSBfYVtfaV07XG4gICAgICAgICAgICAgICAgdGhpcy5hcHBlbmRGaXhlc0Zvck1hcmtlcihkb2N1bWVudCwgc3R5bGVzaGVldCwgZGlhZ25vc3RpYywgcmVzdWx0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgQ1NTQ29kZUFjdGlvbnMucHJvdG90eXBlLmdldEZpeGVzRm9yVW5rbm93blByb3BlcnR5ID0gZnVuY3Rpb24gKGRvY3VtZW50LCBwcm9wZXJ0eSwgbWFya2VyLCByZXN1bHQpIHtcbiAgICAgICAgdmFyIHByb3BlcnR5TmFtZSA9IHByb3BlcnR5LmdldE5hbWUoKTtcbiAgICAgICAgdmFyIGNhbmRpZGF0ZXMgPSBbXTtcbiAgICAgICAgdGhpcy5jc3NEYXRhTWFuYWdlci5nZXRQcm9wZXJ0aWVzKCkuZm9yRWFjaChmdW5jdGlvbiAocCkge1xuICAgICAgICAgICAgdmFyIHNjb3JlID0gZGlmZmVyZW5jZShwcm9wZXJ0eU5hbWUsIHAubmFtZSk7XG4gICAgICAgICAgICBpZiAoc2NvcmUgPj0gcHJvcGVydHlOYW1lLmxlbmd0aCAvIDIgLypzY29yZV9saW0qLykge1xuICAgICAgICAgICAgICAgIGNhbmRpZGF0ZXMucHVzaCh7IHByb3BlcnR5OiBwLm5hbWUsIHNjb3JlOiBzY29yZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIC8vIFNvcnQgaW4gZGVzY2VuZGluZyBvcmRlci5cbiAgICAgICAgY2FuZGlkYXRlcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gYi5zY29yZSAtIGEuc2NvcmUgfHwgYS5wcm9wZXJ0eS5sb2NhbGVDb21wYXJlKGIucHJvcGVydHkpO1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIG1heEFjdGlvbnMgPSAzO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIGNhbmRpZGF0ZXNfMSA9IGNhbmRpZGF0ZXM7IF9pIDwgY2FuZGlkYXRlc18xLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IGNhbmRpZGF0ZXNfMVtfaV07XG4gICAgICAgICAgICB2YXIgcHJvcGVydHlOYW1lXzEgPSBjYW5kaWRhdGUucHJvcGVydHk7XG4gICAgICAgICAgICB2YXIgdGl0bGUgPSBsb2NhbGl6ZSgnY3NzLmNvZGVhY3Rpb24ucmVuYW1lJywgXCJSZW5hbWUgdG8gJ3swfSdcIiwgcHJvcGVydHlOYW1lXzEpO1xuICAgICAgICAgICAgdmFyIGVkaXQgPSBUZXh0RWRpdC5yZXBsYWNlKG1hcmtlci5yYW5nZSwgcHJvcGVydHlOYW1lXzEpO1xuICAgICAgICAgICAgdmFyIGRvY3VtZW50SWRlbnRpZmllciA9IFZlcnNpb25lZFRleHREb2N1bWVudElkZW50aWZpZXIuY3JlYXRlKGRvY3VtZW50LnVyaSwgZG9jdW1lbnQudmVyc2lvbik7XG4gICAgICAgICAgICB2YXIgd29ya3NwYWNlRWRpdCA9IHsgZG9jdW1lbnRDaGFuZ2VzOiBbVGV4dERvY3VtZW50RWRpdC5jcmVhdGUoZG9jdW1lbnRJZGVudGlmaWVyLCBbZWRpdF0pXSB9O1xuICAgICAgICAgICAgdmFyIGNvZGVBY3Rpb24gPSBDb2RlQWN0aW9uLmNyZWF0ZSh0aXRsZSwgd29ya3NwYWNlRWRpdCwgQ29kZUFjdGlvbktpbmQuUXVpY2tGaXgpO1xuICAgICAgICAgICAgY29kZUFjdGlvbi5kaWFnbm9zdGljcyA9IFttYXJrZXJdO1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goY29kZUFjdGlvbik7XG4gICAgICAgICAgICBpZiAoLS1tYXhBY3Rpb25zIDw9IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENTU0NvZGVBY3Rpb25zLnByb3RvdHlwZS5hcHBlbmRGaXhlc0Zvck1hcmtlciA9IGZ1bmN0aW9uIChkb2N1bWVudCwgc3R5bGVzaGVldCwgbWFya2VyLCByZXN1bHQpIHtcbiAgICAgICAgaWYgKG1hcmtlci5jb2RlICE9PSBSdWxlcy5Vbmtub3duUHJvcGVydHkuaWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgb2Zmc2V0ID0gZG9jdW1lbnQub2Zmc2V0QXQobWFya2VyLnJhbmdlLnN0YXJ0KTtcbiAgICAgICAgdmFyIGVuZCA9IGRvY3VtZW50Lm9mZnNldEF0KG1hcmtlci5yYW5nZS5lbmQpO1xuICAgICAgICB2YXIgbm9kZXBhdGggPSBub2Rlcy5nZXROb2RlUGF0aChzdHlsZXNoZWV0LCBvZmZzZXQpO1xuICAgICAgICBmb3IgKHZhciBpID0gbm9kZXBhdGgubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICAgIHZhciBub2RlID0gbm9kZXBhdGhbaV07XG4gICAgICAgICAgICBpZiAobm9kZSBpbnN0YW5jZW9mIG5vZGVzLkRlY2xhcmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgdmFyIHByb3BlcnR5ID0gbm9kZS5nZXRQcm9wZXJ0eSgpO1xuICAgICAgICAgICAgICAgIGlmIChwcm9wZXJ0eSAmJiBwcm9wZXJ0eS5vZmZzZXQgPT09IG9mZnNldCAmJiBwcm9wZXJ0eS5lbmQgPT09IGVuZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdldEZpeGVzRm9yVW5rbm93blByb3BlcnR5KGRvY3VtZW50LCBwcm9wZXJ0eSwgbWFya2VyLCByZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gQ1NTQ29kZUFjdGlvbnM7XG59KCkpO1xuZXhwb3J0IHsgQ1NTQ29kZUFjdGlvbnMgfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCodeActions.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSCompletion\", function() { return CSSCompletion; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js\");\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/* harmony import */ var _utils_objects_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/objects.js\");\n/* harmony import */ var _pathCompletion_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/pathCompletion.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__[\"loadMessageBundle\"]();\nvar SnippetFormat = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet;\nvar SortTexts;\n(function (SortTexts) {\n    // char code 32, comes before everything\n    SortTexts[\"Enums\"] = \" \";\n    SortTexts[\"Normal\"] = \"d\";\n    SortTexts[\"VendorPrefixed\"] = \"x\";\n    SortTexts[\"Term\"] = \"y\";\n    SortTexts[\"Variable\"] = \"z\";\n})(SortTexts || (SortTexts = {}));\nvar CSSCompletion = /** @class */ (function () {\n    function CSSCompletion(variablePrefix, lsOptions, cssDataManager) {\n        if (variablePrefix === void 0) { variablePrefix = null; }\n        this.variablePrefix = variablePrefix;\n        this.lsOptions = lsOptions;\n        this.cssDataManager = cssDataManager;\n        this.completionParticipants = [];\n    }\n    CSSCompletion.prototype.configure = function (settings) {\n        this.settings = settings;\n    };\n    CSSCompletion.prototype.getSymbolContext = function () {\n        if (!this.symbolContext) {\n            this.symbolContext = new _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_1__[\"Symbols\"](this.styleSheet);\n        }\n        return this.symbolContext;\n    };\n    CSSCompletion.prototype.setCompletionParticipants = function (registeredCompletionParticipants) {\n        this.completionParticipants = registeredCompletionParticipants || [];\n    };\n    CSSCompletion.prototype.doComplete2 = function (document, position, styleSheet, documentContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var participant, contributedParticipants, result, pathCompletionResult;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.lsOptions.fileSystemProvider || !this.lsOptions.fileSystemProvider.readDirectory) {\n                            return [2 /*return*/, this.doComplete(document, position, styleSheet)];\n                        }\n                        participant = new _pathCompletion_js__WEBPACK_IMPORTED_MODULE_7__[\"PathCompletionParticipant\"](this.lsOptions.fileSystemProvider.readDirectory);\n                        contributedParticipants = this.completionParticipants;\n                        this.completionParticipants = [participant].concat(contributedParticipants);\n                        result = this.doComplete(document, position, styleSheet);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 4]);\n                        return [4 /*yield*/, participant.computeCompletions(document, documentContext)];\n                    case 2:\n                        pathCompletionResult = _a.sent();\n                        return [2 /*return*/, {\n                                isIncomplete: result.isIncomplete || pathCompletionResult.isIncomplete,\n                                items: pathCompletionResult.items.concat(result.items)\n                            }];\n                    case 3:\n                        this.completionParticipants = contributedParticipants;\n                        return [7 /*endfinally*/];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    CSSCompletion.prototype.doComplete = function (document, position, styleSheet) {\n        this.offset = document.offsetAt(position);\n        this.position = position;\n        this.currentWord = getCurrentWord(document, this.offset);\n        this.defaultReplaceRange = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"Position\"].create(this.position.line, this.position.character - this.currentWord.length), this.position);\n        this.textDocument = document;\n        this.styleSheet = styleSheet;\n        try {\n            var result = { isIncomplete: false, items: [] };\n            this.nodePath = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](this.styleSheet, this.offset);\n            for (var i = this.nodePath.length - 1; i >= 0; i--) {\n                var node = this.nodePath[i];\n                if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Property\"]) {\n                    this.getCompletionsForDeclarationProperty(node.getParent(), result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Expression\"]) {\n                    if (node.parent instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Interpolation\"]) {\n                        this.getVariableProposals(null, result);\n                    }\n                    else {\n                        this.getCompletionsForExpression(node, result);\n                    }\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                    var parentRef = node.findAParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ExtendsReference, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Ruleset);\n                    if (parentRef) {\n                        if (parentRef.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ExtendsReference) {\n                            this.getCompletionsForExtendsReference(parentRef, node, result);\n                        }\n                        else {\n                            var parentRuleSet = parentRef;\n                            this.getCompletionsForSelector(parentRuleSet, parentRuleSet && parentRuleSet.isNested(), result);\n                        }\n                    }\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgument\"]) {\n                    this.getCompletionsForFunctionArgument(node, node.getParent(), result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declarations\"]) {\n                    this.getCompletionsForDeclarations(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableDeclaration\"]) {\n                    this.getCompletionsForVariableDeclaration(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n                    this.getCompletionsForRuleSet(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Interpolation\"]) {\n                    this.getCompletionsForInterpolation(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionDeclaration\"]) {\n                    this.getCompletionsForFunctionDeclaration(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"MixinReference\"]) {\n                    this.getCompletionsForMixinReference(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Function\"]) {\n                    this.getCompletionsForFunctionArgument(null, node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Supports\"]) {\n                    this.getCompletionsForSupports(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SupportsCondition\"]) {\n                    this.getCompletionsForSupportsCondition(node, result);\n                }\n                else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ExtendsReference\"]) {\n                    this.getCompletionsForExtendsReference(node, null, result);\n                }\n                else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].URILiteral) {\n                    this.getCompletionForUriLiteralValue(node, result);\n                }\n                else if (node.parent === null) {\n                    this.getCompletionForTopLevel(result);\n                }\n                else if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].StringLiteral && this.isImportPathParent(node.parent.type)) {\n                    this.getCompletionForImportPath(node, result);\n                    // } else if (node instanceof nodes.Variable) {\n                    // this.getCompletionsForVariableDeclaration()\n                }\n                else {\n                    continue;\n                }\n                if (result.items.length > 0 || this.offset > node.offset) {\n                    return this.finalize(result);\n                }\n            }\n            this.getCompletionsForStylesheet(result);\n            if (result.items.length === 0) {\n                if (this.variablePrefix && this.currentWord.indexOf(this.variablePrefix) === 0) {\n                    this.getVariableProposals(null, result);\n                }\n            }\n            return this.finalize(result);\n        }\n        finally {\n            // don't hold on any state, clear symbolContext\n            this.position = null;\n            this.currentWord = null;\n            this.textDocument = null;\n            this.styleSheet = null;\n            this.symbolContext = null;\n            this.defaultReplaceRange = null;\n            this.nodePath = null;\n        }\n    };\n    CSSCompletion.prototype.isImportPathParent = function (type) {\n        return type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Import;\n    };\n    CSSCompletion.prototype.finalize = function (result) {\n        return result;\n    };\n    CSSCompletion.prototype.findInNodePath = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        for (var i = this.nodePath.length - 1; i >= 0; i--) {\n            var node = this.nodePath[i];\n            if (types.indexOf(node.type) !== -1) {\n                return node;\n            }\n        }\n        return null;\n    };\n    CSSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        return this.getPropertyProposals(declaration, result);\n    };\n    CSSCompletion.prototype.getPropertyProposals = function (declaration, result) {\n        var _this = this;\n        var triggerPropertyValueCompletion = this.isTriggerPropertyValueCompletionEnabled;\n        var completePropertyWithSemicolon = this.isCompletePropertyWithSemicolonEnabled;\n        var properties = this.cssDataManager.getProperties();\n        properties.forEach(function (entry) {\n            var range;\n            var insertText;\n            var retrigger = false;\n            if (declaration) {\n                range = _this.getCompletionRange(declaration.getProperty());\n                insertText = entry.name;\n                if (!Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__[\"isDefined\"])(declaration.colonPosition)) {\n                    insertText += ': ';\n                    retrigger = true;\n                }\n            }\n            else {\n                range = _this.getCompletionRange(null);\n                insertText = entry.name + ': ';\n                retrigger = true;\n            }\n            // Empty .selector { | } case\n            if (!declaration && completePropertyWithSemicolon) {\n                insertText += '$0;';\n            }\n            // Cases such as .selector { p; } or .selector { p:; }\n            if (declaration && !declaration.semicolonPosition) {\n                if (completePropertyWithSemicolon && _this.offset >= _this.textDocument.offsetAt(range.end)) {\n                    insertText += '$0;';\n                }\n            }\n            var item = {\n                label: entry.name,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry, _this.doesSupportMarkdown()),\n                tags: isDeprecated(entry) ? [_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemTag\"].Deprecated] : [],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(range, insertText),\n                insertTextFormat: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"InsertTextFormat\"].Snippet,\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Property\n            };\n            if (!entry.restrictions) {\n                retrigger = false;\n            }\n            if (triggerPropertyValueCompletion && retrigger) {\n                item.command = {\n                    title: 'Suggest',\n                    command: 'editor.action.triggerSuggest'\n                };\n            }\n            var relevance = typeof entry.relevance === 'number' ? Math.min(Math.max(entry.relevance, 0), 99) : 50;\n            var sortTextSuffix = (255 - relevance).toString(16);\n            var sortTextPrefix = _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](entry.name, '-') ? SortTexts.VendorPrefixed : SortTexts.Normal;\n            item.sortText = sortTextPrefix + '_' + sortTextSuffix;\n            result.items.push(item);\n        });\n        this.completionParticipants.forEach(function (participant) {\n            if (participant.onCssProperty) {\n                participant.onCssProperty({\n                    propertyName: _this.currentWord,\n                    range: _this.defaultReplaceRange\n                });\n            }\n        });\n        return result;\n    };\n    Object.defineProperty(CSSCompletion.prototype, \"isTriggerPropertyValueCompletionEnabled\", {\n        get: function () {\n            if (!this.settings ||\n                !this.settings.completion ||\n                this.settings.completion.triggerPropertyValueCompletion === undefined) {\n                return true;\n            }\n            return this.settings.completion.triggerPropertyValueCompletion;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CSSCompletion.prototype, \"isCompletePropertyWithSemicolonEnabled\", {\n        get: function () {\n            if (!this.settings ||\n                !this.settings.completion ||\n                this.settings.completion.completePropertyWithSemicolon === undefined) {\n                return true;\n            }\n            return this.settings.completion.completePropertyWithSemicolon;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CSSCompletion.prototype.getCompletionsForDeclarationValue = function (node, result) {\n        var _this = this;\n        var propertyName = node.getFullPropertyName();\n        var entry = this.cssDataManager.getProperty(propertyName);\n        var existingNode = node.getValue() || null;\n        while (existingNode && existingNode.hasChildren()) {\n            existingNode = existingNode.findChildAtOffset(this.offset, false);\n        }\n        this.completionParticipants.forEach(function (participant) {\n            if (participant.onCssPropertyValue) {\n                participant.onCssPropertyValue({\n                    propertyName: propertyName,\n                    propertyValue: _this.currentWord,\n                    range: _this.getCompletionRange(existingNode)\n                });\n            }\n        });\n        if (entry) {\n            if (entry.restrictions) {\n                for (var _i = 0, _a = entry.restrictions; _i < _a.length; _i++) {\n                    var restriction = _a[_i];\n                    switch (restriction) {\n                        case 'color':\n                            this.getColorProposals(entry, existingNode, result);\n                            break;\n                        case 'position':\n                            this.getPositionProposals(entry, existingNode, result);\n                            break;\n                        case 'repeat':\n                            this.getRepeatStyleProposals(entry, existingNode, result);\n                            break;\n                        case 'line-style':\n                            this.getLineStyleProposals(entry, existingNode, result);\n                            break;\n                        case 'line-width':\n                            this.getLineWidthProposals(entry, existingNode, result);\n                            break;\n                        case 'geometry-box':\n                            this.getGeometryBoxProposals(entry, existingNode, result);\n                            break;\n                        case 'box':\n                            this.getBoxProposals(entry, existingNode, result);\n                            break;\n                        case 'image':\n                            this.getImageProposals(entry, existingNode, result);\n                            break;\n                        case 'timing-function':\n                            this.getTimingFunctionProposals(entry, existingNode, result);\n                            break;\n                        case 'shape':\n                            this.getBasicShapeProposals(entry, existingNode, result);\n                            break;\n                    }\n                }\n            }\n            this.getValueEnumProposals(entry, existingNode, result);\n            this.getCSSWideKeywordProposals(entry, existingNode, result);\n            this.getUnitProposals(entry, existingNode, result);\n        }\n        else {\n            var existingValues = collectValues(this.styleSheet, node);\n            for (var _b = 0, _c = existingValues.getEntries(); _b < _c.length; _b++) {\n                var existingValue = _c[_b];\n                result.items.push({\n                    label: existingValue,\n                    textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), existingValue),\n                    kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n                });\n            }\n        }\n        this.getVariableProposals(existingNode, result);\n        this.getTermProposals(entry, existingNode, result);\n        return result;\n    };\n    CSSCompletion.prototype.getValueEnumProposals = function (entry, existingNode, result) {\n        if (entry.values) {\n            for (var _i = 0, _a = entry.values; _i < _a.length; _i++) {\n                var value = _a[_i];\n                var insertString = value.name;\n                var insertTextFormat = void 0;\n                if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"endsWith\"](insertString, ')')) {\n                    var from = insertString.lastIndexOf('(');\n                    if (from !== -1) {\n                        insertString = insertString.substr(0, from) + '($1)';\n                        insertTextFormat = SnippetFormat;\n                    }\n                }\n                var sortText = SortTexts.Enums;\n                if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](value.name, '-')) {\n                    sortText += SortTexts.VendorPrefixed;\n                }\n                var item = {\n                    label: value.name,\n                    documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](value, this.doesSupportMarkdown()),\n                    tags: isDeprecated(entry) ? [_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemTag\"].Deprecated] : [],\n                    textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertString),\n                    sortText: sortText,\n                    kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value,\n                    insertTextFormat: insertTextFormat\n                };\n                result.items.push(item);\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCSSWideKeywordProposals = function (entry, existingNode, result) {\n        for (var keywords in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssWideKeywords\"]) {\n            result.items.push({\n                label: keywords,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"cssWideKeywords\"][keywords],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), keywords),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForInterpolation = function (node, result) {\n        if (this.offset >= node.offset + 2) {\n            this.getVariableProposals(null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getVariableProposals = function (existingNode, result) {\n        var symbols = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n            var symbol = symbols_1[_i];\n            var insertText = _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](symbol.name, '--') ? \"var(\" + symbol.name + \")\" : symbol.name;\n            var completionItem = {\n                label: symbol.name,\n                documentation: symbol.value ? _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"getLimitedString\"](symbol.value) : symbol.value,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Variable,\n                sortText: SortTexts.Variable\n            };\n            if (typeof completionItem.documentation === 'string' && isColorString(completionItem.documentation)) {\n                completionItem.kind = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Color;\n            }\n            if (symbol.node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].FunctionParameter) {\n                var mixinNode = (symbol.node.getParent());\n                if (mixinNode.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration) {\n                    completionItem.detail = localize('completion.argument', 'argument from \\'{0}\\'', mixinNode.getName());\n                }\n            }\n            result.items.push(completionItem);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getVariableProposalsForCSSVarFunction = function (result) {\n        var symbols = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Variable);\n        symbols = symbols.filter(function (symbol) {\n            return _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](symbol.name, '--');\n        });\n        for (var _i = 0, symbols_2 = symbols; _i < symbols_2.length; _i++) {\n            var symbol = symbols_2[_i];\n            var completionItem = {\n                label: symbol.name,\n                documentation: symbol.value ? _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"getLimitedString\"](symbol.value) : symbol.value,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(null), symbol.name),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Variable\n            };\n            if (typeof completionItem.documentation === 'string' && isColorString(completionItem.documentation)) {\n                completionItem.kind = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Color;\n            }\n            result.items.push(completionItem);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getUnitProposals = function (entry, existingNode, result) {\n        var currentWord = '0';\n        if (this.currentWord.length > 0) {\n            var numMatch = this.currentWord.match(/^-?\\d[\\.\\d+]*/);\n            if (numMatch) {\n                currentWord = numMatch[0];\n                result.isIncomplete = currentWord.length === this.currentWord.length;\n            }\n        }\n        else if (this.currentWord.length === 0) {\n            result.isIncomplete = true;\n        }\n        if (existingNode && existingNode.parent && existingNode.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Term) {\n            existingNode = existingNode.getParent(); // include the unary operator\n        }\n        if (entry.restrictions) {\n            for (var _i = 0, _a = entry.restrictions; _i < _a.length; _i++) {\n                var restriction = _a[_i];\n                var units = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"units\"][restriction];\n                if (units) {\n                    for (var _b = 0, units_1 = units; _b < units_1.length; _b++) {\n                        var unit = units_1[_b];\n                        var insertText = currentWord + unit;\n                        result.items.push({\n                            label: insertText,\n                            textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Unit\n                        });\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionRange = function (existingNode) {\n        if (existingNode && existingNode.offset <= this.offset && this.offset <= existingNode.end) {\n            var end = existingNode.end !== -1 ? this.textDocument.positionAt(existingNode.end) : this.position;\n            var start = this.textDocument.positionAt(existingNode.offset);\n            if (start.line === end.line) {\n                return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(start, end); // multi line edits are not allowed\n            }\n        }\n        return this.defaultReplaceRange;\n    };\n    CSSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        for (var color in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colors\"]) {\n            result.items.push({\n                label: color,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colors\"][color],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), color),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Color\n            });\n        }\n        for (var color in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colorKeywords\"]) {\n            result.items.push({\n                label: color,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colorKeywords\"][color],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), color),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        var colorValues = new Set();\n        this.styleSheet.acceptVisitor(new ColorValueCollector(colorValues, this.offset));\n        for (var _i = 0, _a = colorValues.getEntries(); _i < _a.length; _i++) {\n            var color = _a[_i];\n            result.items.push({\n                label: color,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), color),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Color\n            });\n        }\n        var _loop_1 = function (p) {\n            var tabStop = 1;\n            var replaceFunction = function (_match, p1) { return '${' + tabStop++ + ':' + p1 + '}'; };\n            var insertText = p.func.replace(/\\[?\\$(\\w+)\\]?/g, replaceFunction);\n            result.items.push({\n                label: p.func.substr(0, p.func.indexOf('(')),\n                detail: p.func,\n                documentation: p.desc,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this_1.getCompletionRange(existingNode), insertText),\n                insertTextFormat: SnippetFormat,\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function\n            });\n        };\n        var this_1 = this;\n        for (var _b = 0, _c = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colorFunctions\"]; _b < _c.length; _b++) {\n            var p = _c[_b];\n            _loop_1(p);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getPositionProposals = function (entry, existingNode, result) {\n        for (var position in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"positionKeywords\"]) {\n            result.items.push({\n                label: position,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"positionKeywords\"][position],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), position),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getRepeatStyleProposals = function (entry, existingNode, result) {\n        for (var repeat in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"repeatStyleKeywords\"]) {\n            result.items.push({\n                label: repeat,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"repeatStyleKeywords\"][repeat],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), repeat),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getLineStyleProposals = function (entry, existingNode, result) {\n        for (var lineStyle in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"lineStyleKeywords\"]) {\n            result.items.push({\n                label: lineStyle,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"lineStyleKeywords\"][lineStyle],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), lineStyle),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getLineWidthProposals = function (entry, existingNode, result) {\n        for (var _i = 0, _a = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"lineWidthKeywords\"]; _i < _a.length; _i++) {\n            var lineWidth = _a[_i];\n            result.items.push({\n                label: lineWidth,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), lineWidth),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getGeometryBoxProposals = function (entry, existingNode, result) {\n        for (var box in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"geometryBoxKeywords\"]) {\n            result.items.push({\n                label: box,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"geometryBoxKeywords\"][box],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), box),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getBoxProposals = function (entry, existingNode, result) {\n        for (var box in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"boxKeywords\"]) {\n            result.items.push({\n                label: box,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"boxKeywords\"][box],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), box),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Value\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getImageProposals = function (entry, existingNode, result) {\n        for (var image in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"imageFunctions\"]) {\n            var insertText = moveCursorInsideParenthesis(image);\n            result.items.push({\n                label: image,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"imageFunctions\"][image],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: image !== insertText ? SnippetFormat : void 0\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getTimingFunctionProposals = function (entry, existingNode, result) {\n        for (var timing in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"transitionTimingFunctions\"]) {\n            var insertText = moveCursorInsideParenthesis(timing);\n            result.items.push({\n                label: timing,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"transitionTimingFunctions\"][timing],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: timing !== insertText ? SnippetFormat : void 0\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getBasicShapeProposals = function (entry, existingNode, result) {\n        for (var shape in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"basicShapeFunctions\"]) {\n            var insertText = moveCursorInsideParenthesis(shape);\n            result.items.push({\n                label: shape,\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"basicShapeFunctions\"][shape],\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: shape !== insertText ? SnippetFormat : void 0\n            });\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForStylesheet = function (result) {\n        var node = this.styleSheet.findFirstChildBeforeOffset(this.offset);\n        if (!node) {\n            return this.getCompletionForTopLevel(result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n            return this.getCompletionsForRuleSet(node, result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Supports\"]) {\n            return this.getCompletionsForSupports(node, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionForTopLevel = function (result) {\n        var _this = this;\n        this.cssDataManager.getAtDirectives().forEach(function (entry) {\n            result.items.push({\n                label: entry.name,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(_this.getCompletionRange(null), entry.name),\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry, _this.doesSupportMarkdown()),\n                tags: isDeprecated(entry) ? [_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemTag\"].Deprecated] : [],\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n            });\n        });\n        this.getCompletionsForSelector(null, false, result);\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForRuleSet = function (ruleSet, result) {\n        var declarations = ruleSet.getDeclarations();\n        var isAfter = declarations && declarations.endsWith('}') && this.offset >= declarations.end;\n        if (isAfter) {\n            return this.getCompletionForTopLevel(result);\n        }\n        var isInSelectors = !declarations || this.offset <= declarations.offset;\n        if (isInSelectors) {\n            return this.getCompletionsForSelector(ruleSet, ruleSet.isNested(), result);\n        }\n        return this.getCompletionsForDeclarations(ruleSet.getDeclarations(), result);\n    };\n    CSSCompletion.prototype.getCompletionsForSelector = function (ruleSet, isNested, result) {\n        var _this = this;\n        var existingNode = this.findInNodePath(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].PseudoSelector, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].IdentifierSelector, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ClassSelector, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ElementNameSelector);\n        if (!existingNode && this.offset - this.currentWord.length > 0 && this.textDocument.getText()[this.offset - this.currentWord.length - 1] === ':') {\n            // after the ':' of a pseudo selector, no node generated for just ':'\n            this.currentWord = ':' + this.currentWord;\n            this.defaultReplaceRange = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"Position\"].create(this.position.line, this.position.character - this.currentWord.length), this.position);\n        }\n        var pseudoClasses = this.cssDataManager.getPseudoClasses();\n        pseudoClasses.forEach(function (entry) {\n            var insertText = moveCursorInsideParenthesis(entry.name);\n            var item = {\n                label: entry.name,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(_this.getCompletionRange(existingNode), insertText),\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry, _this.doesSupportMarkdown()),\n                tags: isDeprecated(entry) ? [_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemTag\"].Deprecated] : [],\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: entry.name !== insertText ? SnippetFormat : void 0\n            };\n            if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](entry.name, ':-')) {\n                item.sortText = SortTexts.VendorPrefixed;\n            }\n            result.items.push(item);\n        });\n        var pseudoElements = this.cssDataManager.getPseudoElements();\n        pseudoElements.forEach(function (entry) {\n            var insertText = moveCursorInsideParenthesis(entry.name);\n            var item = {\n                label: entry.name,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(_this.getCompletionRange(existingNode), insertText),\n                documentation: _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"getEntryDescription\"](entry, _this.doesSupportMarkdown()),\n                tags: isDeprecated(entry) ? [_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemTag\"].Deprecated] : [],\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n                insertTextFormat: entry.name !== insertText ? SnippetFormat : void 0\n            };\n            if (_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"](entry.name, '::-')) {\n                item.sortText = SortTexts.VendorPrefixed;\n            }\n            result.items.push(item);\n        });\n        if (!isNested) { // show html tags only for top level\n            for (var _i = 0, _a = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"html5Tags\"]; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                result.items.push({\n                    label: entry,\n                    textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), entry),\n                    kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n                });\n            }\n            for (var _b = 0, _c = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"svgElements\"]; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                result.items.push({\n                    label: entry,\n                    textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), entry),\n                    kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n                });\n            }\n        }\n        var visited = {};\n        visited[this.currentWord] = true;\n        var docText = this.textDocument.getText();\n        this.styleSheet.accept(function (n) {\n            if (n.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SimpleSelector && n.length > 0) {\n                var selector = docText.substr(n.offset, n.length);\n                if (selector.charAt(0) === '.' && !visited[selector]) {\n                    visited[selector] = true;\n                    result.items.push({\n                        label: selector,\n                        textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(_this.getCompletionRange(existingNode), selector),\n                        kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Keyword\n                    });\n                }\n                return false;\n            }\n            return true;\n        });\n        if (ruleSet && ruleSet.isNested()) {\n            var selector = ruleSet.getSelectors().findFirstChildBeforeOffset(this.offset);\n            if (selector && ruleSet.getSelectors().getChildren().indexOf(selector) === 0) {\n                this.getPropertyProposals(null, result);\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForDeclarations = function (declarations, result) {\n        if (!declarations || this.offset === declarations.offset) { // incomplete nodes\n            return result;\n        }\n        var node = declarations.findFirstChildBeforeOffset(this.offset);\n        if (!node) {\n            return this.getCompletionsForDeclarationProperty(null, result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"AbstractDeclaration\"]) {\n            var declaration = node;\n            if (!Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__[\"isDefined\"])(declaration.colonPosition) || this.offset <= declaration.colonPosition) {\n                // complete property\n                return this.getCompletionsForDeclarationProperty(declaration, result);\n            }\n            else if ((Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__[\"isDefined\"])(declaration.semicolonPosition) && declaration.semicolonPosition < this.offset)) {\n                if (this.offset === declaration.semicolonPosition + 1) {\n                    return result; // don't show new properties right after semicolon (see Bug 15421:[intellisense] [css] Be less aggressive when manually typing CSS)\n                }\n                // complete next property\n                return this.getCompletionsForDeclarationProperty(null, result);\n            }\n            if (declaration instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                // complete value\n                return this.getCompletionsForDeclarationValue(declaration, result);\n            }\n        }\n        else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ExtendsReference\"]) {\n            this.getCompletionsForExtendsReference(node, null, result);\n        }\n        else if (this.currentWord && this.currentWord[0] === '@') {\n            this.getCompletionsForDeclarationProperty(null, result);\n        }\n        else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n            this.getCompletionsForDeclarationProperty(null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForVariableDeclaration = function (declaration, result) {\n        if (this.offset && Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__[\"isDefined\"])(declaration.colonPosition) && this.offset > declaration.colonPosition) {\n            this.getVariableProposals(declaration.getValue(), result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForExpression = function (expression, result) {\n        var parent = expression.getParent();\n        if (parent instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionArgument\"]) {\n            this.getCompletionsForFunctionArgument(parent, parent.getParent(), result);\n            return result;\n        }\n        var declaration = expression.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Declaration);\n        if (!declaration) {\n            this.getTermProposals(undefined, null, result);\n            return result;\n        }\n        var node = expression.findChildAtOffset(this.offset, true);\n        if (!node) {\n            return this.getCompletionsForDeclarationValue(declaration, result);\n        }\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NumericValue\"] || node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Identifier\"]) {\n            return this.getCompletionsForDeclarationValue(declaration, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForFunctionArgument = function (arg, func, result) {\n        var identifier = func.getIdentifier();\n        if (identifier && identifier.matches('var')) {\n            if (!func.getArguments().hasChildren() || func.getArguments().getChild(0) === arg) {\n                this.getVariableProposalsForCSSVarFunction(result);\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForFunctionDeclaration = function (decl, result) {\n        var declarations = decl.getDeclarations();\n        if (declarations && this.offset > declarations.offset && this.offset < declarations.end) {\n            this.getTermProposals(undefined, null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForMixinReference = function (ref, result) {\n        var _this = this;\n        var allMixins = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Mixin);\n        for (var _i = 0, allMixins_1 = allMixins; _i < allMixins_1.length; _i++) {\n            var mixinSymbol = allMixins_1[_i];\n            if (mixinSymbol.node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"MixinDeclaration\"]) {\n                result.items.push(this.makeTermProposal(mixinSymbol, mixinSymbol.node.getParameters(), null));\n            }\n        }\n        var identifierNode = ref.getIdentifier() || null;\n        this.completionParticipants.forEach(function (participant) {\n            if (participant.onCssMixinReference) {\n                participant.onCssMixinReference({\n                    mixinName: _this.currentWord,\n                    range: _this.getCompletionRange(identifierNode)\n                });\n            }\n        });\n        return result;\n    };\n    CSSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var allFunctions = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ReferenceType\"].Function);\n        for (var _i = 0, allFunctions_1 = allFunctions; _i < allFunctions_1.length; _i++) {\n            var functionSymbol = allFunctions_1[_i];\n            if (functionSymbol.node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionDeclaration\"]) {\n                result.items.push(this.makeTermProposal(functionSymbol, functionSymbol.node.getParameters(), existingNode));\n            }\n        }\n        return result;\n    };\n    CSSCompletion.prototype.makeTermProposal = function (symbol, parameters, existingNode) {\n        var decl = symbol.node;\n        var params = parameters.getChildren().map(function (c) {\n            return (c instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"FunctionParameter\"]) ? c.getName() : c.getText();\n        });\n        var insertText = symbol.name + '(' + params.map(function (p, index) { return '${' + (index + 1) + ':' + p + '}'; }).join(', ') + ')';\n        return {\n            label: symbol.name,\n            detail: symbol.name + '(' + params.join(', ') + ')',\n            textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n            insertTextFormat: SnippetFormat,\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"CompletionItemKind\"].Function,\n            sortText: SortTexts.Term\n        };\n    };\n    CSSCompletion.prototype.getCompletionsForSupportsCondition = function (supportsCondition, result) {\n        var child = supportsCondition.findFirstChildBeforeOffset(this.offset);\n        if (child) {\n            if (child instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                if (!Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__[\"isDefined\"])(child.colonPosition) || this.offset <= child.colonPosition) {\n                    return this.getCompletionsForDeclarationProperty(child, result);\n                }\n                else {\n                    return this.getCompletionsForDeclarationValue(child, result);\n                }\n            }\n            else if (child instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SupportsCondition\"]) {\n                return this.getCompletionsForSupportsCondition(child, result);\n            }\n        }\n        if (Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__[\"isDefined\"])(supportsCondition.lParent) && this.offset > supportsCondition.lParent && (!Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__[\"isDefined\"])(supportsCondition.rParent) || this.offset <= supportsCondition.rParent)) {\n            return this.getCompletionsForDeclarationProperty(null, result);\n        }\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionsForSupports = function (supports, result) {\n        var declarations = supports.getDeclarations();\n        var inInCondition = !declarations || this.offset <= declarations.offset;\n        if (inInCondition) {\n            var child = supports.findFirstChildBeforeOffset(this.offset);\n            if (child instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SupportsCondition\"]) {\n                return this.getCompletionsForSupportsCondition(child, result);\n            }\n            return result;\n        }\n        return this.getCompletionForTopLevel(result);\n    };\n    CSSCompletion.prototype.getCompletionsForExtendsReference = function (extendsRef, existingNode, result) {\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionForUriLiteralValue = function (uriLiteralNode, result) {\n        var uriValue;\n        var position;\n        var range;\n        // No children, empty value\n        if (!uriLiteralNode.hasChildren()) {\n            uriValue = '';\n            position = this.position;\n            var emptyURIValuePosition = this.textDocument.positionAt(uriLiteralNode.offset + 'url('.length);\n            range = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(emptyURIValuePosition, emptyURIValuePosition);\n        }\n        else {\n            var uriValueNode = uriLiteralNode.getChild(0);\n            uriValue = uriValueNode.getText();\n            position = this.position;\n            range = this.getCompletionRange(uriValueNode);\n        }\n        this.completionParticipants.forEach(function (participant) {\n            if (participant.onCssURILiteralValue) {\n                participant.onCssURILiteralValue({\n                    uriValue: uriValue,\n                    position: position,\n                    range: range\n                });\n            }\n        });\n        return result;\n    };\n    CSSCompletion.prototype.getCompletionForImportPath = function (importPathNode, result) {\n        var _this = this;\n        this.completionParticipants.forEach(function (participant) {\n            if (participant.onCssImportPath) {\n                participant.onCssImportPath({\n                    pathValue: importPathNode.getText(),\n                    position: _this.position,\n                    range: _this.getCompletionRange(importPathNode)\n                });\n            }\n        });\n        return result;\n    };\n    CSSCompletion.prototype.doesSupportMarkdown = function () {\n        var _a, _b, _c;\n        if (!Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__[\"isDefined\"])(this.supportsMarkdown)) {\n            if (!Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__[\"isDefined\"])(this.lsOptions.clientCapabilities)) {\n                this.supportsMarkdown = true;\n                return this.supportsMarkdown;\n            }\n            var documentationFormat = (_c = (_b = (_a = this.lsOptions.clientCapabilities.textDocument) === null || _a === void 0 ? void 0 : _a.completion) === null || _b === void 0 ? void 0 : _b.completionItem) === null || _c === void 0 ? void 0 : _c.documentationFormat;\n            this.supportsMarkdown = Array.isArray(documentationFormat) && documentationFormat.indexOf(_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"MarkupKind\"].Markdown) !== -1;\n        }\n        return this.supportsMarkdown;\n    };\n    return CSSCompletion;\n}());\n\nfunction isDeprecated(entry) {\n    if (entry.status && (entry.status === 'nonstandard' || entry.status === 'obsolete')) {\n        return true;\n    }\n    return false;\n}\n/**\n * Rank number should all be same length strings\n */\nfunction computeRankNumber(n) {\n    var nstr = n.toString();\n    switch (nstr.length) {\n        case 4:\n            return nstr;\n        case 3:\n            return '0' + nstr;\n        case 2:\n            return '00' + nstr;\n        case 1:\n            return '000' + nstr;\n        default:\n            return '0000';\n    }\n}\nvar Set = /** @class */ (function () {\n    function Set() {\n        this.entries = {};\n    }\n    Set.prototype.add = function (entry) {\n        this.entries[entry] = true;\n    };\n    Set.prototype.getEntries = function () {\n        return Object.keys(this.entries);\n    };\n    return Set;\n}());\nfunction moveCursorInsideParenthesis(text) {\n    return text.replace(/\\(\\)$/, \"($1)\");\n}\nfunction collectValues(styleSheet, declaration) {\n    var fullPropertyName = declaration.getFullPropertyName();\n    var entries = new Set();\n    function visitValue(node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Identifier\"] || node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NumericValue\"] || node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"HexColorValue\"]) {\n            entries.add(node.getText());\n        }\n        return true;\n    }\n    function matchesProperty(decl) {\n        var propertyName = decl.getFullPropertyName();\n        return fullPropertyName === propertyName;\n    }\n    function vistNode(node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"] && node !== declaration) {\n            if (matchesProperty(node)) {\n                var value = node.getValue();\n                if (value) {\n                    value.accept(visitValue);\n                }\n            }\n        }\n        return true;\n    }\n    styleSheet.accept(vistNode);\n    return entries;\n}\nvar ColorValueCollector = /** @class */ (function () {\n    function ColorValueCollector(entries, currentOffset) {\n        this.entries = entries;\n        this.currentOffset = currentOffset;\n        // nothing to do\n    }\n    ColorValueCollector.prototype.visitNode = function (node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"HexColorValue\"] || (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Function\"] && _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"isColorConstructor\"](node))) {\n            if (this.currentOffset < node.offset || node.end < this.currentOffset) {\n                this.entries.add(node.getText());\n            }\n        }\n        return true;\n    };\n    return ColorValueCollector;\n}());\nfunction getCurrentWord(document, offset) {\n    var i = offset - 1;\n    var text = document.getText();\n    while (i >= 0 && ' \\t\\n\\r\":{[()]},*>+'.indexOf(text.charAt(i)) === -1) {\n        i--;\n    }\n    return text.substring(i + 1, offset);\n}\nfunction isColorString(s) {\n    // From https://stackoverflow.com/questions/8027423/how-to-check-if-a-string-is-a-valid-hex-color-representation/8027444\n    return (s.toLowerCase() in _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_2__[\"colors\"]) || /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(s);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssFolding.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFoldingRanges\", function() { return getFoldingRanges; });\n/* harmony import */ var _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _parser_scssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/scssScanner.js\");\n/* harmony import */ var _parser_lessScanner_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/lessScanner.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nfunction getFoldingRanges(document, context) {\n    var ranges = computeFoldingRanges(document);\n    return limitFoldingRanges(ranges, context);\n}\nfunction computeFoldingRanges(document) {\n    function getStartLine(t) {\n        return document.positionAt(t.offset).line;\n    }\n    function getEndLine(t) {\n        return document.positionAt(t.offset + t.len).line;\n    }\n    function getScanner() {\n        switch (document.languageId) {\n            case 'scss':\n                return new _parser_scssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"SCSSScanner\"]();\n            case 'less':\n                return new _parser_lessScanner_js__WEBPACK_IMPORTED_MODULE_2__[\"LESSScanner\"]();\n            default:\n                return new _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"Scanner\"]();\n        }\n    }\n    function tokenToRange(t, kind) {\n        var startLine = getStartLine(t);\n        var endLine = getEndLine(t);\n        if (startLine !== endLine) {\n            return {\n                startLine: startLine,\n                endLine: endLine,\n                kind: kind\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    var ranges = [];\n    var delimiterStack = [];\n    var scanner = getScanner();\n    scanner.ignoreComment = false;\n    scanner.setSource(document.getText());\n    var token = scanner.scan();\n    var prevToken = null;\n    var _loop_1 = function () {\n        switch (token.type) {\n            case _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyL:\n            case _parser_scssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"InterpolationFunction\"]:\n                {\n                    delimiterStack.push({ line: getStartLine(token), type: 'brace', isStart: true });\n                    break;\n                }\n            case _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].CurlyR: {\n                if (delimiterStack.length !== 0) {\n                    var prevDelimiter = popPrevStartDelimiterOfType(delimiterStack, 'brace');\n                    if (!prevDelimiter) {\n                        break;\n                    }\n                    var endLine = getEndLine(token);\n                    if (prevDelimiter.type === 'brace') {\n                        /**\n                         * Other than the case when curly brace is not on a new line by itself, for example\n                         * .foo {\n                         *   color: red; }\n                         * Use endLine minus one to show ending curly brace\n                         */\n                        if (prevToken && getEndLine(prevToken) !== endLine) {\n                            endLine--;\n                        }\n                        if (prevDelimiter.line !== endLine) {\n                            ranges.push({\n                                startLine: prevDelimiter.line,\n                                endLine: endLine,\n                                kind: undefined\n                            });\n                        }\n                    }\n                }\n                break;\n            }\n            /**\n             * In CSS, there is no single line comment prefixed with //\n             * All comments are marked as `Comment`\n             */\n            case _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].Comment: {\n                var commentRegionMarkerToDelimiter_1 = function (marker) {\n                    if (marker === '#region') {\n                        return { line: getStartLine(token), type: 'comment', isStart: true };\n                    }\n                    else {\n                        return { line: getEndLine(token), type: 'comment', isStart: false };\n                    }\n                };\n                var getCurrDelimiter = function (token) {\n                    var matches = token.text.match(/^\\s*\\/\\*\\s*(#region|#endregion)\\b\\s*(.*?)\\s*\\*\\//);\n                    if (matches) {\n                        return commentRegionMarkerToDelimiter_1(matches[1]);\n                    }\n                    else if (document.languageId === 'scss' || document.languageId === 'less') {\n                        var matches_1 = token.text.match(/^\\s*\\/\\/\\s*(#region|#endregion)\\b\\s*(.*?)\\s*/);\n                        if (matches_1) {\n                            return commentRegionMarkerToDelimiter_1(matches_1[1]);\n                        }\n                    }\n                    return null;\n                };\n                var currDelimiter = getCurrDelimiter(token);\n                // /* */ comment region folding\n                // All #region and #endregion cases\n                if (currDelimiter) {\n                    if (currDelimiter.isStart) {\n                        delimiterStack.push(currDelimiter);\n                    }\n                    else {\n                        var prevDelimiter = popPrevStartDelimiterOfType(delimiterStack, 'comment');\n                        if (!prevDelimiter) {\n                            break;\n                        }\n                        if (prevDelimiter.type === 'comment') {\n                            if (prevDelimiter.line !== currDelimiter.line) {\n                                ranges.push({\n                                    startLine: prevDelimiter.line,\n                                    endLine: currDelimiter.line,\n                                    kind: 'region'\n                                });\n                            }\n                        }\n                    }\n                }\n                // Multiline comment case\n                else {\n                    var range = tokenToRange(token, 'comment');\n                    if (range) {\n                        ranges.push(range);\n                    }\n                }\n                break;\n            }\n        }\n        prevToken = token;\n        token = scanner.scan();\n    };\n    while (token.type !== _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_0__[\"TokenType\"].EOF) {\n        _loop_1();\n    }\n    return ranges;\n}\nfunction popPrevStartDelimiterOfType(stack, type) {\n    if (stack.length === 0) {\n        return null;\n    }\n    for (var i = stack.length - 1; i >= 0; i--) {\n        if (stack[i].type === type && stack[i].isStart) {\n            return stack.splice(i, 1)[0];\n        }\n    }\n    return null;\n}\n/**\n * - Sort regions\n * - Remove invalid regions (intersections)\n * - If limit exceeds, only return `rangeLimit` amount of ranges\n */\nfunction limitFoldingRanges(ranges, context) {\n    var maxRanges = context && context.rangeLimit || Number.MAX_VALUE;\n    var sortedRanges = ranges.sort(function (r1, r2) {\n        var diff = r1.startLine - r2.startLine;\n        if (diff === 0) {\n            diff = r1.endLine - r2.endLine;\n        }\n        return diff;\n    });\n    var validRanges = [];\n    var prevEndLine = -1;\n    sortedRanges.forEach(function (r) {\n        if (!(r.startLine < prevEndLine && prevEndLine < r.endLine)) {\n            validRanges.push(r);\n            prevEndLine = r.endLine;\n        }\n    });\n    if (validRanges.length < maxRanges) {\n        return validRanges;\n    }\n    else {\n        return validRanges.slice(0, maxRanges);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssFolding.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSHover\", function() { return CSSHover; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _selectorPrinting_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/* harmony import */ var _utils_objects_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/objects.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\nvar CSSHover = /** @class */ (function () {\n    function CSSHover(clientCapabilities, cssDataManager) {\n        this.clientCapabilities = clientCapabilities;\n        this.cssDataManager = cssDataManager;\n        this.selectorPrinting = new _selectorPrinting_js__WEBPACK_IMPORTED_MODULE_2__[\"SelectorPrinting\"](cssDataManager);\n    }\n    CSSHover.prototype.doHover = function (document, position, stylesheet) {\n        function getRange(node) {\n            return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"Range\"].create(document.positionAt(node.offset), document.positionAt(node.end));\n        }\n        var offset = document.offsetAt(position);\n        var nodepath = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"getNodePath\"](stylesheet, offset);\n        /**\n         * nodepath is top-down\n         * Build up the hover by appending inner node's information\n         */\n        var hover = null;\n        for (var i = 0; i < nodepath.length; i++) {\n            var node = nodepath[i];\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Selector\"]) {\n                hover = {\n                    contents: this.selectorPrinting.selectorToMarkedString(node),\n                    range: getRange(node)\n                };\n                break;\n            }\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                /**\n                 * Some sass specific at rules such as `@at-root` are parsed as `SimpleSelector`\n                 */\n                if (!Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"])(node.getText(), '@')) {\n                    hover = {\n                        contents: this.selectorPrinting.simpleSelectorToMarkedString(node),\n                        range: getRange(node)\n                    };\n                }\n                break;\n            }\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Declaration\"]) {\n                var propertyName = node.getFullPropertyName();\n                var entry = this.cssDataManager.getProperty(propertyName);\n                if (entry) {\n                    var contents = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_1__[\"getEntryDescription\"](entry, this.doesSupportMarkdown());\n                    if (contents) {\n                        hover = {\n                            contents: contents,\n                            range: getRange(node)\n                        };\n                    }\n                    else {\n                        hover = null;\n                    }\n                }\n                continue;\n            }\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"UnknownAtRule\"]) {\n                var atRuleName = node.getText();\n                var entry = this.cssDataManager.getAtDirective(atRuleName);\n                if (entry) {\n                    var contents = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_1__[\"getEntryDescription\"](entry, this.doesSupportMarkdown());\n                    if (contents) {\n                        hover = {\n                            contents: contents,\n                            range: getRange(node)\n                        };\n                    }\n                    else {\n                        hover = null;\n                    }\n                }\n                continue;\n            }\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Node\"] && node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].PseudoSelector) {\n                var selectorName = node.getText();\n                var entry = selectorName.slice(0, 2) === '::'\n                    ? this.cssDataManager.getPseudoElement(selectorName)\n                    : this.cssDataManager.getPseudoClass(selectorName);\n                if (entry) {\n                    var contents = _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_1__[\"getEntryDescription\"](entry, this.doesSupportMarkdown());\n                    if (contents) {\n                        hover = {\n                            contents: contents,\n                            range: getRange(node)\n                        };\n                    }\n                    else {\n                        hover = null;\n                    }\n                }\n                continue;\n            }\n        }\n        if (hover) {\n            hover.contents = this.convertContents(hover.contents);\n        }\n        return hover;\n    };\n    CSSHover.prototype.convertContents = function (contents) {\n        if (!this.doesSupportMarkdown()) {\n            if (typeof contents === 'string') {\n                return contents;\n            }\n            // MarkupContent\n            else if ('kind' in contents) {\n                return {\n                    kind: 'plaintext',\n                    value: contents.value\n                };\n            }\n            // MarkedString[]\n            else if (Array.isArray(contents)) {\n                return contents.map(function (c) {\n                    return typeof c === 'string' ? c : c.value;\n                });\n            }\n            // MarkedString\n            else {\n                return contents.value;\n            }\n        }\n        return contents;\n    };\n    CSSHover.prototype.doesSupportMarkdown = function () {\n        if (!Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_5__[\"isDefined\"])(this.supportsMarkdown)) {\n            if (!Object(_utils_objects_js__WEBPACK_IMPORTED_MODULE_5__[\"isDefined\"])(this.clientCapabilities)) {\n                this.supportsMarkdown = true;\n                return this.supportsMarkdown;\n            }\n            var hover = this.clientCapabilities.textDocument && this.clientCapabilities.textDocument.hover;\n            this.supportsMarkdown = hover && hover.contentFormat && Array.isArray(hover.contentFormat) && hover.contentFormat.indexOf(_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_4__[\"MarkupKind\"].Markdown) !== -1;\n        }\n        return this.supportsMarkdown;\n    };\n    return CSSHover;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssHover.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSNavigation\", function() { return CSSNavigation; });\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssSymbolScope.js\");\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/* harmony import */ var _utils_resources_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/resources.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__[\"loadMessageBundle\"]();\nvar CSSNavigation = /** @class */ (function () {\n    function CSSNavigation(fileSystemProvider) {\n        this.fileSystemProvider = fileSystemProvider;\n    }\n    CSSNavigation.prototype.findDefinition = function (document, position, stylesheet) {\n        var symbols = new _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_3__[\"Symbols\"](stylesheet);\n        var offset = document.offsetAt(position);\n        var node = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"getNodeAtOffset\"](stylesheet, offset);\n        if (!node) {\n            return null;\n        }\n        var symbol = symbols.findSymbolFromNode(node);\n        if (!symbol) {\n            return null;\n        }\n        return {\n            uri: document.uri,\n            range: getRange(symbol.node, document)\n        };\n    };\n    CSSNavigation.prototype.findReferences = function (document, position, stylesheet) {\n        var highlights = this.findDocumentHighlights(document, position, stylesheet);\n        return highlights.map(function (h) {\n            return {\n                uri: document.uri,\n                range: h.range\n            };\n        });\n    };\n    CSSNavigation.prototype.findDocumentHighlights = function (document, position, stylesheet) {\n        var result = [];\n        var offset = document.offsetAt(position);\n        var node = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"getNodeAtOffset\"](stylesheet, offset);\n        if (!node || node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Stylesheet || node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Declarations) {\n            return result;\n        }\n        if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Identifier && node.parent && node.parent.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].ClassSelector) {\n            node = node.parent;\n        }\n        var symbols = new _parser_cssSymbolScope_js__WEBPACK_IMPORTED_MODULE_3__[\"Symbols\"](stylesheet);\n        var symbol = symbols.findSymbolFromNode(node);\n        var name = node.getText();\n        stylesheet.accept(function (candidate) {\n            if (symbol) {\n                if (symbols.matchesSymbol(candidate, symbol)) {\n                    result.push({\n                        kind: getHighlightKind(candidate),\n                        range: getRange(candidate, document)\n                    });\n                    return false;\n                }\n            }\n            else if (node && node.type === candidate.type && candidate.matches(name)) {\n                // Same node type and data\n                result.push({\n                    kind: getHighlightKind(candidate),\n                    range: getRange(candidate, document)\n                });\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.isRawStringDocumentLinkNode = function (node) {\n        return node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Import;\n    };\n    CSSNavigation.prototype.findDocumentLinks = function (document, stylesheet, documentContext) {\n        var links = this.findUnresolvedLinks(document, stylesheet);\n        for (var i = 0; i < links.length; i++) {\n            var target = links[i].target;\n            if (target && !(/^\\w+:\\/\\//g.test(target))) {\n                var resolved = documentContext.resolveReference(target, document.uri);\n                if (resolved) {\n                    links[i].target = resolved;\n                }\n            }\n        }\n        return links;\n    };\n    CSSNavigation.prototype.findDocumentLinks2 = function (document, stylesheet, documentContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var links, resolvedLinks, _i, links_1, link, target, resolvedTarget;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        links = this.findUnresolvedLinks(document, stylesheet);\n                        resolvedLinks = [];\n                        _i = 0, links_1 = links;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < links_1.length)) return [3 /*break*/, 5];\n                        link = links_1[_i];\n                        target = link.target;\n                        if (!(target && !(/^\\w+:\\/\\//g.test(target)))) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.resolveRelativeReference(target, document.uri, documentContext)];\n                    case 2:\n                        resolvedTarget = _a.sent();\n                        if (resolvedTarget !== undefined) {\n                            link.target = resolvedTarget;\n                            resolvedLinks.push(link);\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        resolvedLinks.push(link);\n                        _a.label = 4;\n                    case 4:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 5: return [2 /*return*/, resolvedLinks];\n                }\n            });\n        });\n    };\n    CSSNavigation.prototype.findUnresolvedLinks = function (document, stylesheet) {\n        var _this = this;\n        var result = [];\n        var collect = function (uriStringNode) {\n            var rawUri = uriStringNode.getText();\n            var range = getRange(uriStringNode, document);\n            // Make sure the range is not empty\n            if (range.start.line === range.end.line && range.start.character === range.end.character) {\n                return;\n            }\n            if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawUri, \"'\") || Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawUri, \"\\\"\")) {\n                rawUri = rawUri.slice(1, -1);\n            }\n            result.push({ target: rawUri, range: range });\n        };\n        stylesheet.accept(function (candidate) {\n            if (candidate.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].URILiteral) {\n                var first = candidate.getChild(0);\n                if (first) {\n                    collect(first);\n                }\n                return false;\n            }\n            /**\n             * In @import, it is possible to include links that do not use `url()`\n             * For example, `@import 'foo.css';`\n             */\n            if (candidate.parent && _this.isRawStringDocumentLinkNode(candidate.parent)) {\n                var rawText = candidate.getText();\n                if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawText, \"'\") || Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(rawText, \"\\\"\")) {\n                    collect(candidate);\n                }\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.findDocumentSymbols = function (document, stylesheet) {\n        var result = [];\n        stylesheet.accept(function (node) {\n            var entry = {\n                name: null,\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Class,\n                location: null\n            };\n            var locationNode = node;\n            if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Selector\"]) {\n                entry.name = node.getText();\n                locationNode = node.findAParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Ruleset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].ExtendsReference);\n                if (locationNode) {\n                    entry.location = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"Location\"].create(document.uri, getRange(locationNode, document));\n                    result.push(entry);\n                }\n                return false;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"VariableDeclaration\"]) {\n                entry.name = node.getName();\n                entry.kind = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Variable;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"MixinDeclaration\"]) {\n                entry.name = node.getName();\n                entry.kind = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Method;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"FunctionDeclaration\"]) {\n                entry.name = node.getName();\n                entry.kind = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Function;\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Keyframe\"]) {\n                entry.name = localize('literal.keyframes', \"@keyframes {0}\", node.getName());\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"FontFace\"]) {\n                entry.name = localize('literal.fontface', \"@font-face\");\n            }\n            else if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Media\"]) {\n                var mediaList = node.getChild(0);\n                if (mediaList instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Medialist\"]) {\n                    entry.name = '@media ' + mediaList.getText();\n                    entry.kind = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Module;\n                }\n            }\n            if (entry.name) {\n                entry.location = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"Location\"].create(document.uri, getRange(locationNode, document));\n                result.push(entry);\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.findDocumentColors = function (document, stylesheet) {\n        var result = [];\n        stylesheet.accept(function (node) {\n            var colorInfo = getColorInformation(node, document);\n            if (colorInfo) {\n                result.push(colorInfo);\n            }\n            return true;\n        });\n        return result;\n    };\n    CSSNavigation.prototype.getColorPresentations = function (document, stylesheet, color, range) {\n        var result = [];\n        var red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n        var label;\n        if (color.alpha === 1) {\n            label = \"rgb(\" + red256 + \", \" + green256 + \", \" + blue256 + \")\";\n        }\n        else {\n            label = \"rgba(\" + red256 + \", \" + green256 + \", \" + blue256 + \", \" + color.alpha + \")\";\n        }\n        result.push({ label: label, textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, label) });\n        if (color.alpha === 1) {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256);\n        }\n        else {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256) + toTwoDigitHex(Math.round(color.alpha * 255));\n        }\n        result.push({ label: label, textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, label) });\n        var hsl = Object(_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_4__[\"hslFromColor\"])(color);\n        if (hsl.a === 1) {\n            label = \"hsl(\" + hsl.h + \", \" + Math.round(hsl.s * 100) + \"%, \" + Math.round(hsl.l * 100) + \"%)\";\n        }\n        else {\n            label = \"hsla(\" + hsl.h + \", \" + Math.round(hsl.s * 100) + \"%, \" + Math.round(hsl.l * 100) + \"%, \" + hsl.a + \")\";\n        }\n        result.push({ label: label, textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(range, label) });\n        return result;\n    };\n    CSSNavigation.prototype.doRename = function (document, position, newName, stylesheet) {\n        var _a;\n        var highlights = this.findDocumentHighlights(document, position, stylesheet);\n        var edits = highlights.map(function (h) { return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(h.range, newName); });\n        return {\n            changes: (_a = {}, _a[document.uri] = edits, _a)\n        };\n    };\n    CSSNavigation.prototype.resolveRelativeReference = function (ref, documentUri, documentContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var moduleName, rootFolderUri, documentFolderUri, modulePath, pathWithinModule;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(ref[0] === '~' && ref[1] !== '/' && this.fileSystemProvider)) return [3 /*break*/, 3];\n                        ref = ref.substring(1);\n                        if (!Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_5__[\"startsWith\"])(documentUri, 'file://')) return [3 /*break*/, 2];\n                        moduleName = getModuleNameFromPath(ref);\n                        rootFolderUri = documentContext.resolveReference('/', documentUri);\n                        documentFolderUri = Object(_utils_resources_js__WEBPACK_IMPORTED_MODULE_6__[\"dirname\"])(documentUri);\n                        return [4 /*yield*/, this.resolvePathToModule(moduleName, documentFolderUri, rootFolderUri)];\n                    case 1:\n                        modulePath = _a.sent();\n                        if (modulePath) {\n                            pathWithinModule = ref.substring(moduleName.length + 1);\n                            return [2 /*return*/, Object(_utils_resources_js__WEBPACK_IMPORTED_MODULE_6__[\"joinPath\"])(modulePath, pathWithinModule)];\n                        }\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, documentContext.resolveReference(ref, documentUri)];\n                    case 3: return [2 /*return*/, documentContext.resolveReference(ref, documentUri)];\n                }\n            });\n        });\n    };\n    CSSNavigation.prototype.resolvePathToModule = function (_moduleName, documentFolderUri, rootFolderUri) {\n        return __awaiter(this, void 0, void 0, function () {\n            var packPath;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        packPath = Object(_utils_resources_js__WEBPACK_IMPORTED_MODULE_6__[\"joinPath\"])(documentFolderUri, 'node_modules', _moduleName, 'package.json');\n                        return [4 /*yield*/, this.fileExists(packPath)];\n                    case 1:\n                        if (_a.sent()) {\n                            return [2 /*return*/, Object(_utils_resources_js__WEBPACK_IMPORTED_MODULE_6__[\"dirname\"])(packPath)];\n                        }\n                        else if (rootFolderUri && documentFolderUri.startsWith(rootFolderUri) && (documentFolderUri.length !== rootFolderUri.length)) {\n                            return [2 /*return*/, this.resolvePathToModule(_moduleName, Object(_utils_resources_js__WEBPACK_IMPORTED_MODULE_6__[\"dirname\"])(documentFolderUri), rootFolderUri)];\n                        }\n                        return [2 /*return*/, undefined];\n                }\n            });\n        });\n    };\n    CSSNavigation.prototype.fileExists = function (uri) {\n        return __awaiter(this, void 0, void 0, function () {\n            var stat, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.fileSystemProvider) {\n                            return [2 /*return*/, false];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.fileSystemProvider.stat(uri)];\n                    case 2:\n                        stat = _a.sent();\n                        if (stat.type === _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"FileType\"].Unknown && stat.size === -1) {\n                            return [2 /*return*/, false];\n                        }\n                        return [2 /*return*/, true];\n                    case 3:\n                        err_1 = _a.sent();\n                        return [2 /*return*/, false];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return CSSNavigation;\n}());\n\nfunction getColorInformation(node, document) {\n    var color = Object(_languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_4__[\"getColorValue\"])(node);\n    if (color) {\n        var range = getRange(node, document);\n        return { color: color, range: range };\n    }\n    return null;\n}\nfunction getRange(node, document) {\n    return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(document.positionAt(node.offset), document.positionAt(node.end));\n}\nfunction getHighlightKind(node) {\n    if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Selector) {\n        return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Write;\n    }\n    if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Identifier\"]) {\n        if (node.parent && node.parent instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Property\"]) {\n            if (node.isCustomProperty) {\n                return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Write;\n            }\n        }\n    }\n    if (node.parent) {\n        switch (node.parent.type) {\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].FunctionDeclaration:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].MixinDeclaration:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Keyframe:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].VariableDeclaration:\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].FunctionParameter:\n                return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Write;\n        }\n    }\n    return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Read;\n}\nfunction toTwoDigitHex(n) {\n    var r = n.toString(16);\n    return r.length !== 2 ? '0' + r : r;\n}\nfunction getModuleNameFromPath(path) {\n    // If a scoped module (starts with @) then get up until second instance of '/', otherwise get until first instance of '/'\n    if (path[0] === '@') {\n        return path.substring(0, path.indexOf('/', path.indexOf('/') + 1));\n    }\n    return path.substring(0, path.indexOf('/'));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssSelectionRange.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSelectionRanges\", function() { return getSelectionRanges; });\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nfunction getSelectionRanges(document, positions, stylesheet) {\n    function getSelectionRange(position) {\n        var applicableRanges = getApplicableRanges(position);\n        var current = undefined;\n        for (var index = applicableRanges.length - 1; index >= 0; index--) {\n            current = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"SelectionRange\"].create(_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(document.positionAt(applicableRanges[index][0]), document.positionAt(applicableRanges[index][1])), current);\n        }\n        if (!current) {\n            current = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"SelectionRange\"].create(_cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(position, position));\n        }\n        return current;\n    }\n    return positions.map(getSelectionRange);\n    function getApplicableRanges(position) {\n        var offset = document.offsetAt(position);\n        var currNode = stylesheet.findChildAtOffset(offset, true);\n        if (!currNode) {\n            return [];\n        }\n        var result = [];\n        while (currNode) {\n            if (currNode.parent &&\n                currNode.offset === currNode.parent.offset &&\n                currNode.end === currNode.parent.end) {\n                currNode = currNode.parent;\n                continue;\n            }\n            // The `{ }` part of `.a { }`\n            if (currNode.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Declarations) {\n                if (offset > currNode.offset && offset < currNode.end) {\n                    // Return `{ }` and the range inside `{` and `}`\n                    result.push([currNode.offset + 1, currNode.end - 1]);\n                }\n            }\n            result.push([currNode.offset, currNode.end]);\n            currNode = currNode.parent;\n        }\n        return result;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3NlcnZpY2VzL2Nzc1NlbGVjdGlvblJhbmdlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9zZXJ2aWNlcy9jc3NTZWxlY3Rpb25SYW5nZS5qcz9jOTgwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgUmFuZ2UsIFNlbGVjdGlvblJhbmdlIH0gZnJvbSAnLi4vY3NzTGFuZ3VhZ2VUeXBlcy5qcyc7XG5pbXBvcnQgeyBOb2RlVHlwZSB9IGZyb20gJy4uL3BhcnNlci9jc3NOb2Rlcy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VsZWN0aW9uUmFuZ2VzKGRvY3VtZW50LCBwb3NpdGlvbnMsIHN0eWxlc2hlZXQpIHtcbiAgICBmdW5jdGlvbiBnZXRTZWxlY3Rpb25SYW5nZShwb3NpdGlvbikge1xuICAgICAgICB2YXIgYXBwbGljYWJsZVJhbmdlcyA9IGdldEFwcGxpY2FibGVSYW5nZXMocG9zaXRpb24pO1xuICAgICAgICB2YXIgY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSBhcHBsaWNhYmxlUmFuZ2VzLmxlbmd0aCAtIDE7IGluZGV4ID49IDA7IGluZGV4LS0pIHtcbiAgICAgICAgICAgIGN1cnJlbnQgPSBTZWxlY3Rpb25SYW5nZS5jcmVhdGUoUmFuZ2UuY3JlYXRlKGRvY3VtZW50LnBvc2l0aW9uQXQoYXBwbGljYWJsZVJhbmdlc1tpbmRleF1bMF0pLCBkb2N1bWVudC5wb3NpdGlvbkF0KGFwcGxpY2FibGVSYW5nZXNbaW5kZXhdWzFdKSksIGN1cnJlbnQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghY3VycmVudCkge1xuICAgICAgICAgICAgY3VycmVudCA9IFNlbGVjdGlvblJhbmdlLmNyZWF0ZShSYW5nZS5jcmVhdGUocG9zaXRpb24sIHBvc2l0aW9uKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGN1cnJlbnQ7XG4gICAgfVxuICAgIHJldHVybiBwb3NpdGlvbnMubWFwKGdldFNlbGVjdGlvblJhbmdlKTtcbiAgICBmdW5jdGlvbiBnZXRBcHBsaWNhYmxlUmFuZ2VzKHBvc2l0aW9uKSB7XG4gICAgICAgIHZhciBvZmZzZXQgPSBkb2N1bWVudC5vZmZzZXRBdChwb3NpdGlvbik7XG4gICAgICAgIHZhciBjdXJyTm9kZSA9IHN0eWxlc2hlZXQuZmluZENoaWxkQXRPZmZzZXQob2Zmc2V0LCB0cnVlKTtcbiAgICAgICAgaWYgKCFjdXJyTm9kZSkge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgICAgd2hpbGUgKGN1cnJOb2RlKSB7XG4gICAgICAgICAgICBpZiAoY3Vyck5vZGUucGFyZW50ICYmXG4gICAgICAgICAgICAgICAgY3Vyck5vZGUub2Zmc2V0ID09PSBjdXJyTm9kZS5wYXJlbnQub2Zmc2V0ICYmXG4gICAgICAgICAgICAgICAgY3Vyck5vZGUuZW5kID09PSBjdXJyTm9kZS5wYXJlbnQuZW5kKSB7XG4gICAgICAgICAgICAgICAgY3Vyck5vZGUgPSBjdXJyTm9kZS5wYXJlbnQ7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBUaGUgYHsgfWAgcGFydCBvZiBgLmEgeyB9YFxuICAgICAgICAgICAgaWYgKGN1cnJOb2RlLnR5cGUgPT09IE5vZGVUeXBlLkRlY2xhcmF0aW9ucykge1xuICAgICAgICAgICAgICAgIGlmIChvZmZzZXQgPiBjdXJyTm9kZS5vZmZzZXQgJiYgb2Zmc2V0IDwgY3Vyck5vZGUuZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFJldHVybiBgeyB9YCBhbmQgdGhlIHJhbmdlIGluc2lkZSBge2AgYW5kIGB9YFxuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChbY3Vyck5vZGUub2Zmc2V0ICsgMSwgY3Vyck5vZGUuZW5kIC0gMV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKFtjdXJyTm9kZS5vZmZzZXQsIGN1cnJOb2RlLmVuZF0pO1xuICAgICAgICAgICAgY3Vyck5vZGUgPSBjdXJyTm9kZS5wYXJlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssSelectionRange.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CSSValidation\", function() { return CSSValidation; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _lintRules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\");\n/* harmony import */ var _lint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js\");\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\nvar CSSValidation = /** @class */ (function () {\n    function CSSValidation(cssDataManager) {\n        this.cssDataManager = cssDataManager;\n    }\n    CSSValidation.prototype.configure = function (settings) {\n        this.settings = settings;\n    };\n    CSSValidation.prototype.doValidation = function (document, stylesheet, settings) {\n        if (settings === void 0) { settings = this.settings; }\n        if (settings && settings.validate === false) {\n            return [];\n        }\n        var entries = [];\n        entries.push.apply(entries, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"ParseErrorCollector\"].entries(stylesheet));\n        entries.push.apply(entries, _lint_js__WEBPACK_IMPORTED_MODULE_2__[\"LintVisitor\"].entries(stylesheet, document, new _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"LintConfigurationSettings\"](settings && settings.lint), this.cssDataManager));\n        var ruleIds = [];\n        for (var r in _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"]) {\n            ruleIds.push(_lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"][r].id);\n        }\n        function toDiagnostic(marker) {\n            var range = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__[\"Range\"].create(document.positionAt(marker.getOffset()), document.positionAt(marker.getOffset() + marker.getLength()));\n            var source = document.languageId;\n            return {\n                code: marker.getRule().id,\n                source: source,\n                message: marker.getMessage(),\n                severity: marker.getLevel() === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Warning ? _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__[\"DiagnosticSeverity\"].Warning : _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_3__[\"DiagnosticSeverity\"].Error,\n                range: range\n            };\n        }\n        return entries.filter(function (entry) { return entry.getLevel() !== _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Ignore; }).map(toDiagnostic);\n    };\n    return CSSValidation;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3NlcnZpY2VzL2Nzc1ZhbGlkYXRpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3NlcnZpY2VzL2Nzc1ZhbGlkYXRpb24uanM/ODNiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCAqIGFzIG5vZGVzIGZyb20gJy4uL3BhcnNlci9jc3NOb2Rlcy5qcyc7XG5pbXBvcnQgeyBMaW50Q29uZmlndXJhdGlvblNldHRpbmdzLCBSdWxlcyB9IGZyb20gJy4vbGludFJ1bGVzLmpzJztcbmltcG9ydCB7IExpbnRWaXNpdG9yIH0gZnJvbSAnLi9saW50LmpzJztcbmltcG9ydCB7IFJhbmdlLCBEaWFnbm9zdGljU2V2ZXJpdHkgfSBmcm9tICcuLi9jc3NMYW5ndWFnZVR5cGVzLmpzJztcbnZhciBDU1NWYWxpZGF0aW9uID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENTU1ZhbGlkYXRpb24oY3NzRGF0YU1hbmFnZXIpIHtcbiAgICAgICAgdGhpcy5jc3NEYXRhTWFuYWdlciA9IGNzc0RhdGFNYW5hZ2VyO1xuICAgIH1cbiAgICBDU1NWYWxpZGF0aW9uLnByb3RvdHlwZS5jb25maWd1cmUgPSBmdW5jdGlvbiAoc2V0dGluZ3MpIHtcbiAgICAgICAgdGhpcy5zZXR0aW5ncyA9IHNldHRpbmdzO1xuICAgIH07XG4gICAgQ1NTVmFsaWRhdGlvbi5wcm90b3R5cGUuZG9WYWxpZGF0aW9uID0gZnVuY3Rpb24gKGRvY3VtZW50LCBzdHlsZXNoZWV0LCBzZXR0aW5ncykge1xuICAgICAgICBpZiAoc2V0dGluZ3MgPT09IHZvaWQgMCkgeyBzZXR0aW5ncyA9IHRoaXMuc2V0dGluZ3M7IH1cbiAgICAgICAgaWYgKHNldHRpbmdzICYmIHNldHRpbmdzLnZhbGlkYXRlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBlbnRyaWVzID0gW107XG4gICAgICAgIGVudHJpZXMucHVzaC5hcHBseShlbnRyaWVzLCBub2Rlcy5QYXJzZUVycm9yQ29sbGVjdG9yLmVudHJpZXMoc3R5bGVzaGVldCkpO1xuICAgICAgICBlbnRyaWVzLnB1c2guYXBwbHkoZW50cmllcywgTGludFZpc2l0b3IuZW50cmllcyhzdHlsZXNoZWV0LCBkb2N1bWVudCwgbmV3IExpbnRDb25maWd1cmF0aW9uU2V0dGluZ3Moc2V0dGluZ3MgJiYgc2V0dGluZ3MubGludCksIHRoaXMuY3NzRGF0YU1hbmFnZXIpKTtcbiAgICAgICAgdmFyIHJ1bGVJZHMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgciBpbiBSdWxlcykge1xuICAgICAgICAgICAgcnVsZUlkcy5wdXNoKFJ1bGVzW3JdLmlkKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB0b0RpYWdub3N0aWMobWFya2VyKSB7XG4gICAgICAgICAgICB2YXIgcmFuZ2UgPSBSYW5nZS5jcmVhdGUoZG9jdW1lbnQucG9zaXRpb25BdChtYXJrZXIuZ2V0T2Zmc2V0KCkpLCBkb2N1bWVudC5wb3NpdGlvbkF0KG1hcmtlci5nZXRPZmZzZXQoKSArIG1hcmtlci5nZXRMZW5ndGgoKSkpO1xuICAgICAgICAgICAgdmFyIHNvdXJjZSA9IGRvY3VtZW50Lmxhbmd1YWdlSWQ7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGNvZGU6IG1hcmtlci5nZXRSdWxlKCkuaWQsXG4gICAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogbWFya2VyLmdldE1lc3NhZ2UoKSxcbiAgICAgICAgICAgICAgICBzZXZlcml0eTogbWFya2VyLmdldExldmVsKCkgPT09IG5vZGVzLkxldmVsLldhcm5pbmcgPyBEaWFnbm9zdGljU2V2ZXJpdHkuV2FybmluZyA6IERpYWdub3N0aWNTZXZlcml0eS5FcnJvcixcbiAgICAgICAgICAgICAgICByYW5nZTogcmFuZ2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVudHJpZXMuZmlsdGVyKGZ1bmN0aW9uIChlbnRyeSkgeyByZXR1cm4gZW50cnkuZ2V0TGV2ZWwoKSAhPT0gbm9kZXMuTGV2ZWwuSWdub3JlOyB9KS5tYXAodG9EaWFnbm9zdGljKTtcbiAgICB9O1xuICAgIHJldHVybiBDU1NWYWxpZGF0aW9uO1xufSgpKTtcbmV4cG9ydCB7IENTU1ZhbGlkYXRpb24gfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssValidation.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LESSCompletion\", function() { return LESSCompletion; });\n/* harmony import */ var _cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\");\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__[\"loadMessageBundle\"]();\nvar LESSCompletion = /** @class */ (function (_super) {\n    __extends(LESSCompletion, _super);\n    function LESSCompletion(lsOptions, cssDataManager) {\n        return _super.call(this, '@', lsOptions, cssDataManager) || this;\n    }\n    LESSCompletion.prototype.createFunctionProposals = function (proposals, existingNode, sortToEnd, result) {\n        for (var _i = 0, proposals_1 = proposals; _i < proposals_1.length; _i++) {\n            var p = proposals_1[_i];\n            var item = {\n                label: p.name,\n                detail: p.example,\n                documentation: p.description,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_1__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), p.name + '($0)'),\n                insertTextFormat: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_1__[\"InsertTextFormat\"].Snippet,\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_1__[\"CompletionItemKind\"].Function\n            };\n            if (sortToEnd) {\n                item.sortText = 'z';\n            }\n            result.items.push(item);\n        }\n        return result;\n    };\n    LESSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var functions = LESSCompletion.builtInProposals;\n        if (entry) {\n            functions = functions.filter(function (f) { return !f.type || !entry.restrictions || entry.restrictions.indexOf(f.type) !== -1; });\n        }\n        this.createFunctionProposals(functions, existingNode, true, result);\n        return _super.prototype.getTermProposals.call(this, entry, existingNode, result);\n    };\n    LESSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        this.createFunctionProposals(LESSCompletion.colorProposals, existingNode, false, result);\n        return _super.prototype.getColorProposals.call(this, entry, existingNode, result);\n    };\n    LESSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        this.getCompletionsForSelector(null, true, result);\n        return _super.prototype.getCompletionsForDeclarationProperty.call(this, declaration, result);\n    };\n    LESSCompletion.builtInProposals = [\n        // Boolean functions\n        {\n            'name': 'if',\n            'example': 'if(condition, trueValue [, falseValue]);',\n            'description': localize('less.builtin.if', 'returns one of two values depending on a condition.')\n        },\n        {\n            'name': 'boolean',\n            'example': 'boolean(condition);',\n            'description': localize('less.builtin.boolean', '\"store\" a boolean test for later evaluation in a guard or if().')\n        },\n        // List functions\n        {\n            'name': 'length',\n            'example': 'length(@list);',\n            'description': localize('less.builtin.length', 'returns the number of elements in a value list')\n        },\n        {\n            'name': 'extract',\n            'example': 'extract(@list, index);',\n            'description': localize('less.builtin.extract', 'returns a value at the specified position in the list')\n        },\n        {\n            'name': 'range',\n            'example': 'range([start, ] end [, step]);',\n            'description': localize('less.builtin.range', 'generate a list spanning a range of values')\n        },\n        {\n            'name': 'each',\n            'example': 'each(@list, ruleset);',\n            'description': localize('less.builtin.each', 'bind the evaluation of a ruleset to each member of a list.')\n        },\n        // Other built-ins\n        {\n            'name': 'escape',\n            'example': 'escape(@string);',\n            'description': localize('less.builtin.escape', 'URL encodes a string')\n        },\n        {\n            'name': 'e',\n            'example': 'e(@string);',\n            'description': localize('less.builtin.e', 'escape string content')\n        },\n        {\n            'name': 'replace',\n            'example': 'replace(@string, @pattern, @replacement[, @flags]);',\n            'description': localize('less.builtin.replace', 'string replace')\n        },\n        {\n            'name': 'unit',\n            'example': 'unit(@dimension, [@unit: \\'\\']);',\n            'description': localize('less.builtin.unit', 'remove or change the unit of a dimension')\n        },\n        {\n            'name': 'color',\n            'example': 'color(@string);',\n            'description': localize('less.builtin.color', 'parses a string to a color'),\n            'type': 'color'\n        },\n        {\n            'name': 'convert',\n            'example': 'convert(@value, unit);',\n            'description': localize('less.builtin.convert', 'converts numbers from one type into another')\n        },\n        {\n            'name': 'data-uri',\n            'example': 'data-uri([mimetype,] url);',\n            'description': localize('less.builtin.data-uri', 'inlines a resource and falls back to `url()`'),\n            'type': 'url'\n        },\n        {\n            'name': 'abs',\n            'description': localize('less.builtin.abs', 'absolute value of a number'),\n            'example': 'abs(number);'\n        },\n        {\n            'name': 'acos',\n            'description': localize('less.builtin.acos', 'arccosine - inverse of cosine function'),\n            'example': 'acos(number);'\n        },\n        {\n            'name': 'asin',\n            'description': localize('less.builtin.asin', 'arcsine - inverse of sine function'),\n            'example': 'asin(number);'\n        },\n        {\n            'name': 'ceil',\n            'example': 'ceil(@number);',\n            'description': localize('less.builtin.ceil', 'rounds up to an integer')\n        },\n        {\n            'name': 'cos',\n            'description': localize('less.builtin.cos', 'cosine function'),\n            'example': 'cos(number);'\n        },\n        {\n            'name': 'floor',\n            'description': localize('less.builtin.floor', 'rounds down to an integer'),\n            'example': 'floor(@number);'\n        },\n        {\n            'name': 'percentage',\n            'description': localize('less.builtin.percentage', 'converts to a %, e.g. 0.5 > 50%'),\n            'example': 'percentage(@number);',\n            'type': 'percentage'\n        },\n        {\n            'name': 'round',\n            'description': localize('less.builtin.round', 'rounds a number to a number of places'),\n            'example': 'round(number, [places: 0]);'\n        },\n        {\n            'name': 'sqrt',\n            'description': localize('less.builtin.sqrt', 'calculates square root of a number'),\n            'example': 'sqrt(number);'\n        },\n        {\n            'name': 'sin',\n            'description': localize('less.builtin.sin', 'sine function'),\n            'example': 'sin(number);'\n        },\n        {\n            'name': 'tan',\n            'description': localize('less.builtin.tan', 'tangent function'),\n            'example': 'tan(number);'\n        },\n        {\n            'name': 'atan',\n            'description': localize('less.builtin.atan', 'arctangent - inverse of tangent function'),\n            'example': 'atan(number);'\n        },\n        {\n            'name': 'pi',\n            'description': localize('less.builtin.pi', 'returns pi'),\n            'example': 'pi();'\n        },\n        {\n            'name': 'pow',\n            'description': localize('less.builtin.pow', 'first argument raised to the power of the second argument'),\n            'example': 'pow(@base, @exponent);'\n        },\n        {\n            'name': 'mod',\n            'description': localize('less.builtin.mod', 'first argument modulus second argument'),\n            'example': 'mod(number, number);'\n        },\n        {\n            'name': 'min',\n            'description': localize('less.builtin.min', 'returns the lowest of one or more values'),\n            'example': 'min(@x, @y);'\n        },\n        {\n            'name': 'max',\n            'description': localize('less.builtin.max', 'returns the lowest of one or more values'),\n            'example': 'max(@x, @y);'\n        }\n    ];\n    LESSCompletion.colorProposals = [\n        {\n            'name': 'argb',\n            'example': 'argb(@color);',\n            'description': localize('less.builtin.argb', 'creates a #AARRGGBB')\n        },\n        {\n            'name': 'hsl',\n            'example': 'hsl(@hue, @saturation, @lightness);',\n            'description': localize('less.builtin.hsl', 'creates a color')\n        },\n        {\n            'name': 'hsla',\n            'example': 'hsla(@hue, @saturation, @lightness, @alpha);',\n            'description': localize('less.builtin.hsla', 'creates a color')\n        },\n        {\n            'name': 'hsv',\n            'example': 'hsv(@hue, @saturation, @value);',\n            'description': localize('less.builtin.hsv', 'creates a color')\n        },\n        {\n            'name': 'hsva',\n            'example': 'hsva(@hue, @saturation, @value, @alpha);',\n            'description': localize('less.builtin.hsva', 'creates a color')\n        },\n        {\n            'name': 'hue',\n            'example': 'hue(@color);',\n            'description': localize('less.builtin.hue', 'returns the `hue` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'saturation',\n            'example': 'saturation(@color);',\n            'description': localize('less.builtin.saturation', 'returns the `saturation` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'lightness',\n            'example': 'lightness(@color);',\n            'description': localize('less.builtin.lightness', 'returns the `lightness` channel of `@color` in the HSL space')\n        },\n        {\n            'name': 'hsvhue',\n            'example': 'hsvhue(@color);',\n            'description': localize('less.builtin.hsvhue', 'returns the `hue` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'hsvsaturation',\n            'example': 'hsvsaturation(@color);',\n            'description': localize('less.builtin.hsvsaturation', 'returns the `saturation` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'hsvvalue',\n            'example': 'hsvvalue(@color);',\n            'description': localize('less.builtin.hsvvalue', 'returns the `value` channel of `@color` in the HSV space')\n        },\n        {\n            'name': 'red',\n            'example': 'red(@color);',\n            'description': localize('less.builtin.red', 'returns the `red` channel of `@color`')\n        },\n        {\n            'name': 'green',\n            'example': 'green(@color);',\n            'description': localize('less.builtin.green', 'returns the `green` channel of `@color`')\n        },\n        {\n            'name': 'blue',\n            'example': 'blue(@color);',\n            'description': localize('less.builtin.blue', 'returns the `blue` channel of `@color`')\n        },\n        {\n            'name': 'alpha',\n            'example': 'alpha(@color);',\n            'description': localize('less.builtin.alpha', 'returns the `alpha` channel of `@color`')\n        },\n        {\n            'name': 'luma',\n            'example': 'luma(@color);',\n            'description': localize('less.builtin.luma', 'returns the `luma` value (perceptual brightness) of `@color`')\n        },\n        {\n            'name': 'saturate',\n            'example': 'saturate(@color, 10%);',\n            'description': localize('less.builtin.saturate', 'return `@color` 10% points more saturated')\n        },\n        {\n            'name': 'desaturate',\n            'example': 'desaturate(@color, 10%);',\n            'description': localize('less.builtin.desaturate', 'return `@color` 10% points less saturated')\n        },\n        {\n            'name': 'lighten',\n            'example': 'lighten(@color, 10%);',\n            'description': localize('less.builtin.lighten', 'return `@color` 10% points lighter')\n        },\n        {\n            'name': 'darken',\n            'example': 'darken(@color, 10%);',\n            'description': localize('less.builtin.darken', 'return `@color` 10% points darker')\n        },\n        {\n            'name': 'fadein',\n            'example': 'fadein(@color, 10%);',\n            'description': localize('less.builtin.fadein', 'return `@color` 10% points less transparent')\n        },\n        {\n            'name': 'fadeout',\n            'example': 'fadeout(@color, 10%);',\n            'description': localize('less.builtin.fadeout', 'return `@color` 10% points more transparent')\n        },\n        {\n            'name': 'fade',\n            'example': 'fade(@color, 50%);',\n            'description': localize('less.builtin.fade', 'return `@color` with 50% transparency')\n        },\n        {\n            'name': 'spin',\n            'example': 'spin(@color, 10);',\n            'description': localize('less.builtin.spin', 'return `@color` with a 10 degree larger in hue')\n        },\n        {\n            'name': 'mix',\n            'example': 'mix(@color1, @color2, [@weight: 50%]);',\n            'description': localize('less.builtin.mix', 'return a mix of `@color1` and `@color2`')\n        },\n        {\n            'name': 'greyscale',\n            'example': 'greyscale(@color);',\n            'description': localize('less.builtin.greyscale', 'returns a grey, 100% desaturated color'),\n        },\n        {\n            'name': 'contrast',\n            'example': 'contrast(@color1, [@darkcolor: black], [@lightcolor: white], [@threshold: 43%]);',\n            'description': localize('less.builtin.contrast', 'return `@darkcolor` if `@color1 is> 43% luma` otherwise return `@lightcolor`, see notes')\n        },\n        {\n            'name': 'multiply',\n            'example': 'multiply(@color1, @color2);'\n        },\n        {\n            'name': 'screen',\n            'example': 'screen(@color1, @color2);'\n        },\n        {\n            'name': 'overlay',\n            'example': 'overlay(@color1, @color2);'\n        },\n        {\n            'name': 'softlight',\n            'example': 'softlight(@color1, @color2);'\n        },\n        {\n            'name': 'hardlight',\n            'example': 'hardlight(@color1, @color2);'\n        },\n        {\n            'name': 'difference',\n            'example': 'difference(@color1, @color2);'\n        },\n        {\n            'name': 'exclusion',\n            'example': 'exclusion(@color1, @color2);'\n        },\n        {\n            'name': 'average',\n            'example': 'average(@color1, @color2);'\n        },\n        {\n            'name': 'negation',\n            'example': 'negation(@color1, @color2);'\n        }\n    ];\n    return LESSCompletion;\n}(_cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__[\"CSSCompletion\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lessCompletion.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LintVisitor\", function() { return LintVisitor; });\n/* harmony import */ var _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/languageFacts/facts.js\");\n/* harmony import */ var _lintRules_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _lintUtil_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintUtil.js\");\n/* harmony import */ var _utils_arrays_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_5__[\"loadMessageBundle\"]();\nvar NodesByRootMap = /** @class */ (function () {\n    function NodesByRootMap() {\n        this.data = {};\n    }\n    NodesByRootMap.prototype.add = function (root, name, node) {\n        var entry = this.data[root];\n        if (!entry) {\n            entry = { nodes: [], names: [] };\n            this.data[root] = entry;\n        }\n        entry.names.push(name);\n        if (node) {\n            entry.nodes.push(node);\n        }\n    };\n    return NodesByRootMap;\n}());\nvar LintVisitor = /** @class */ (function () {\n    function LintVisitor(document, settings, cssDataManager) {\n        var _this = this;\n        this.cssDataManager = cssDataManager;\n        this.warnings = [];\n        this.settings = settings;\n        this.documentText = document.getText();\n        this.keyframes = new NodesByRootMap();\n        this.validProperties = {};\n        var properties = settings.getSetting(_lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Settings\"].ValidProperties);\n        if (Array.isArray(properties)) {\n            properties.forEach(function (p) {\n                if (typeof p === 'string') {\n                    var name = p.trim().toLowerCase();\n                    if (name.length) {\n                        _this.validProperties[name] = true;\n                    }\n                }\n            });\n        }\n    }\n    LintVisitor.entries = function (node, document, settings, cssDataManager, entryFilter) {\n        var visitor = new LintVisitor(document, settings, cssDataManager);\n        node.acceptVisitor(visitor);\n        visitor.completeValidations();\n        return visitor.getEntries(entryFilter);\n    };\n    LintVisitor.prototype.isValidPropertyDeclaration = function (element) {\n        var propertyName = element.fullPropertyName;\n        return this.validProperties[propertyName];\n    };\n    LintVisitor.prototype.fetch = function (input, s) {\n        var elements = [];\n        for (var _i = 0, input_1 = input; _i < input_1.length; _i++) {\n            var curr = input_1[_i];\n            if (curr.fullPropertyName === s) {\n                elements.push(curr);\n            }\n        }\n        return elements;\n    };\n    LintVisitor.prototype.fetchWithValue = function (input, s, v) {\n        var elements = [];\n        for (var _i = 0, input_2 = input; _i < input_2.length; _i++) {\n            var inputElement = input_2[_i];\n            if (inputElement.fullPropertyName === s) {\n                var expression = inputElement.node.getValue();\n                if (expression && this.findValueInExpression(expression, v)) {\n                    elements.push(inputElement);\n                }\n            }\n        }\n        return elements;\n    };\n    LintVisitor.prototype.findValueInExpression = function (expression, v) {\n        var found = false;\n        expression.accept(function (node) {\n            if (node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Identifier && node.matches(v)) {\n                found = true;\n            }\n            return !found;\n        });\n        return found;\n    };\n    LintVisitor.prototype.getEntries = function (filter) {\n        if (filter === void 0) { filter = (_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Level\"].Warning | _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Level\"].Error); }\n        return this.warnings.filter(function (entry) {\n            return (entry.getLevel() & filter) !== 0;\n        });\n    };\n    LintVisitor.prototype.addEntry = function (node, rule, details) {\n        var entry = new _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Marker\"](node, rule, this.settings.getRule(rule), details);\n        this.warnings.push(entry);\n    };\n    LintVisitor.prototype.getMissingNames = function (expected, actual) {\n        var expectedClone = expected.slice(0); // clone\n        for (var i = 0; i < actual.length; i++) {\n            var k = expectedClone.indexOf(actual[i]);\n            if (k !== -1) {\n                expectedClone[k] = null;\n            }\n        }\n        var result = null;\n        for (var i = 0; i < expectedClone.length; i++) {\n            var curr = expectedClone[i];\n            if (curr) {\n                if (result === null) {\n                    result = localize('namelist.single', \"'{0}'\", curr);\n                }\n                else {\n                    result = localize('namelist.concatenated', \"{0}, '{1}'\", result, curr);\n                }\n            }\n        }\n        return result;\n    };\n    LintVisitor.prototype.visitNode = function (node) {\n        switch (node.type) {\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].UnknownAtRule:\n                return this.visitUnknownAtRule(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Keyframe:\n                return this.visitKeyframe(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].FontFace:\n                return this.visitFontFace(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Ruleset:\n                return this.visitRuleSet(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].SimpleSelector:\n                return this.visitSimpleSelector(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Function:\n                return this.visitFunction(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].NumericValue:\n                return this.visitNumericValue(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Import:\n                return this.visitImport(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].HexColorValue:\n                return this.visitHexColorValue(node);\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Prio:\n                return this.visitPrio(node);\n        }\n        return true;\n    };\n    LintVisitor.prototype.completeValidations = function () {\n        this.validateKeyframes();\n    };\n    LintVisitor.prototype.visitUnknownAtRule = function (node) {\n        var atRuleName = node.getChild(0);\n        if (!atRuleName) {\n            return false;\n        }\n        var atDirective = this.cssDataManager.getAtDirective(atRuleName.getText());\n        if (atDirective) {\n            return false;\n        }\n        this.addEntry(atRuleName, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UnknownAtRules, \"Unknown at rule \" + atRuleName.getText());\n        return true;\n    };\n    LintVisitor.prototype.visitKeyframe = function (node) {\n        var keyword = node.getKeyword();\n        if (!keyword) {\n            return false;\n        }\n        var text = keyword.getText();\n        this.keyframes.add(node.getName(), text, (text !== '@keyframes') ? keyword : null);\n        return true;\n    };\n    LintVisitor.prototype.validateKeyframes = function () {\n        // @keyframe and it's vendor specific alternatives\n        // @keyframe should be included\n        var expected = ['@-webkit-keyframes', '@-moz-keyframes', '@-o-keyframes'];\n        for (var name in this.keyframes.data) {\n            var actual = this.keyframes.data[name].names;\n            var needsStandard = (actual.indexOf('@keyframes') === -1);\n            if (!needsStandard && actual.length === 1) {\n                continue; // only the non-vendor specific keyword is used, that's fine, no warning\n            }\n            var missingVendorSpecific = this.getMissingNames(expected, actual);\n            if (missingVendorSpecific || needsStandard) {\n                for (var _i = 0, _a = this.keyframes.data[name].nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    if (needsStandard) {\n                        var message = localize('keyframes.standardrule.missing', \"Always define standard rule '@keyframes' when defining keyframes.\");\n                        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].IncludeStandardPropertyWhenUsingVendorPrefix, message);\n                    }\n                    if (missingVendorSpecific) {\n                        var message = localize('keyframes.vendorspecific.missing', \"Always include all vendor specific rules: Missing: {0}\", missingVendorSpecific);\n                        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AllVendorPrefixes, message);\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitSimpleSelector = function (node) {\n        var firstChar = this.documentText.charAt(node.offset);\n        /////////////////////////////////////////////////////////////\n        //\tLint - The universal selector (*) is known to be slow.\n        /////////////////////////////////////////////////////////////\n        if (node.length === 1 && firstChar === '*') {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UniversalSelector);\n        }\n        /////////////////////////////////////////////////////////////\n        //\tLint - Avoid id selectors\n        /////////////////////////////////////////////////////////////\n        if (firstChar === '#') {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AvoidIdSelector);\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitImport = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tLint - Import statements shouldn't be used, because they aren't offering parallel downloads.\n        /////////////////////////////////////////////////////////////\n        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].ImportStatemement);\n        return true;\n    };\n    LintVisitor.prototype.visitRuleSet = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tLint - Don't use empty rulesets.\n        /////////////////////////////////////////////////////////////\n        var declarations = node.getDeclarations();\n        if (!declarations) {\n            // syntax error\n            return false;\n        }\n        if (!declarations.hasChildren()) {\n            this.addEntry(node.getSelectors(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].EmptyRuleSet);\n        }\n        var propertyTable = [];\n        for (var _i = 0, _a = declarations.getChildren(); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (element instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Declaration\"]) {\n                propertyTable.push(new _lintUtil_js__WEBPACK_IMPORTED_MODULE_3__[\"Element\"](element));\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        // the rule warns when it finds:\n        // width being used with border, border-left, border-right, padding, padding-left, or padding-right\n        // height being used with border, border-top, border-bottom, padding, padding-top, or padding-bottom\n        // No error when box-sizing property is specified, as it assumes the user knows what he's doing.\n        // see https://github.com/CSSLint/csslint/wiki/Beware-of-box-model-size\n        /////////////////////////////////////////////////////////////\n        var boxModel = Object(_lintUtil_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(propertyTable);\n        if (boxModel.width) {\n            var properties = [];\n            if (boxModel.right.value) {\n                properties = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_4__[\"union\"])(properties, boxModel.right.properties);\n            }\n            if (boxModel.left.value) {\n                properties = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_4__[\"union\"])(properties, boxModel.left.properties);\n            }\n            if (properties.length !== 0) {\n                for (var _b = 0, properties_1 = properties; _b < properties_1.length; _b++) {\n                    var item = properties_1[_b];\n                    this.addEntry(item.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n                }\n                this.addEntry(boxModel.width.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n            }\n        }\n        if (boxModel.height) {\n            var properties = [];\n            if (boxModel.top.value) {\n                properties = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_4__[\"union\"])(properties, boxModel.top.properties);\n            }\n            if (boxModel.bottom.value) {\n                properties = Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_4__[\"union\"])(properties, boxModel.bottom.properties);\n            }\n            if (properties.length !== 0) {\n                for (var _c = 0, properties_2 = properties; _c < properties_2.length; _c++) {\n                    var item = properties_2[_c];\n                    this.addEntry(item.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n                }\n                this.addEntry(boxModel.height.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].BewareOfBoxModelSize);\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tProperties ignored due to display\n        /////////////////////////////////////////////////////////////\n        // With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect\n        var displayElems = this.fetchWithValue(propertyTable, 'display', 'inline');\n        if (displayElems.length > 0) {\n            for (var _d = 0, _e = ['width', 'height', 'margin-top', 'margin-bottom', 'float']; _d < _e.length; _d++) {\n                var prop = _e[_d];\n                var elem = this.fetch(propertyTable, prop);\n                for (var index = 0; index < elem.length; index++) {\n                    var node_1 = elem[index].node;\n                    var value = node_1.getValue();\n                    if (prop === 'float' && (!value || value.matches('none'))) {\n                        continue;\n                    }\n                    this.addEntry(node_1, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayInline', \"Property is ignored due to the display. With 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect.\"));\n                }\n            }\n        }\n        // With 'display: inline-block', 'float' has no effect\n        displayElems = this.fetchWithValue(propertyTable, 'display', 'inline-block');\n        if (displayElems.length > 0) {\n            var elem = this.fetch(propertyTable, 'float');\n            for (var index = 0; index < elem.length; index++) {\n                var node_2 = elem[index].node;\n                var value = node_2.getValue();\n                if (value && !value.matches('none')) {\n                    this.addEntry(node_2, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayInlineBlock', \"inline-block is ignored due to the float. If 'float' has a value other than 'none', the box is floated and 'display' is treated as 'block'\"));\n                }\n            }\n        }\n        // With 'display: block', 'vertical-align' has no effect\n        displayElems = this.fetchWithValue(propertyTable, 'display', 'block');\n        if (displayElems.length > 0) {\n            var elem = this.fetch(propertyTable, 'vertical-align');\n            for (var index = 0; index < elem.length; index++) {\n                this.addEntry(elem[index].node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].PropertyIgnoredDueToDisplay, localize('rule.propertyIgnoredDueToDisplayBlock', \"Property is ignored due to the display. With 'display: block', vertical-align should not be used.\"));\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tAvoid 'float'\n        /////////////////////////////////////////////////////////////\n        var elements = this.fetch(propertyTable, 'float');\n        for (var index = 0; index < elements.length; index++) {\n            var element = elements[index];\n            if (!this.isValidPropertyDeclaration(element)) {\n                this.addEntry(element.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AvoidFloat);\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tDon't use duplicate declarations.\n        /////////////////////////////////////////////////////////////\n        for (var i = 0; i < propertyTable.length; i++) {\n            var element = propertyTable[i];\n            if (element.fullPropertyName !== 'background' && !this.validProperties[element.fullPropertyName]) {\n                var value = element.node.getValue();\n                if (value && this.documentText.charAt(value.offset) !== '-') {\n                    var elements_1 = this.fetch(propertyTable, element.fullPropertyName);\n                    if (elements_1.length > 1) {\n                        for (var k = 0; k < elements_1.length; k++) {\n                            var value_1 = elements_1[k].node.getValue();\n                            if (value_1 && this.documentText.charAt(value_1.offset) !== '-' && elements_1[k] !== element) {\n                                this.addEntry(element.node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].DuplicateDeclarations);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /////////////////////////////////////////////////////////////\n        //\tUnknown propery & When using a vendor-prefixed gradient, make sure to use them all.\n        /////////////////////////////////////////////////////////////\n        var isExportBlock = node.getSelectors().matches(\":export\");\n        if (!isExportBlock) {\n            var propertiesBySuffix = new NodesByRootMap();\n            var containsUnknowns = false;\n            for (var _f = 0, propertyTable_1 = propertyTable; _f < propertyTable_1.length; _f++) {\n                var element = propertyTable_1[_f];\n                var decl = element.node;\n                if (this.isCSSDeclaration(decl)) {\n                    var name = element.fullPropertyName;\n                    var firstChar = name.charAt(0);\n                    if (firstChar === '-') {\n                        if (name.charAt(1) !== '-') { // avoid css variables\n                            if (!this.cssDataManager.isKnownProperty(name) && !this.validProperties[name]) {\n                                this.addEntry(decl.getProperty(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UnknownVendorSpecificProperty);\n                            }\n                            var nonPrefixedName = decl.getNonPrefixedPropertyName();\n                            propertiesBySuffix.add(nonPrefixedName, name, decl.getProperty());\n                        }\n                    }\n                    else {\n                        var fullName = name;\n                        if (firstChar === '*' || firstChar === '_') {\n                            this.addEntry(decl.getProperty(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].IEStarHack);\n                            name = name.substr(1);\n                        }\n                        // _property and *property might be contributed via custom data\n                        if (!this.cssDataManager.isKnownProperty(fullName) && !this.cssDataManager.isKnownProperty(name)) {\n                            if (!this.validProperties[name]) {\n                                this.addEntry(decl.getProperty(), _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].UnknownProperty, localize('property.unknownproperty.detailed', \"Unknown property: '{0}'\", decl.getFullPropertyName()));\n                            }\n                        }\n                        propertiesBySuffix.add(name, name, null); // don't pass the node as we don't show errors on the standard\n                    }\n                }\n                else {\n                    containsUnknowns = true;\n                }\n            }\n            if (!containsUnknowns) { // don't perform this test if there are\n                for (var suffix in propertiesBySuffix.data) {\n                    var entry = propertiesBySuffix.data[suffix];\n                    var actual = entry.names;\n                    var needsStandard = this.cssDataManager.isStandardProperty(suffix) && (actual.indexOf(suffix) === -1);\n                    if (!needsStandard && actual.length === 1) {\n                        continue; // only the non-vendor specific rule is used, that's fine, no warning\n                    }\n                    var expected = [];\n                    for (var i = 0, len = LintVisitor.prefixes.length; i < len; i++) {\n                        var prefix = LintVisitor.prefixes[i];\n                        if (this.cssDataManager.isStandardProperty(prefix + suffix)) {\n                            expected.push(prefix + suffix);\n                        }\n                    }\n                    var missingVendorSpecific = this.getMissingNames(expected, actual);\n                    if (missingVendorSpecific || needsStandard) {\n                        for (var _g = 0, _h = entry.nodes; _g < _h.length; _g++) {\n                            var node_3 = _h[_g];\n                            if (needsStandard) {\n                                var message = localize('property.standard.missing', \"Also define the standard property '{0}' for compatibility\", suffix);\n                                this.addEntry(node_3, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].IncludeStandardPropertyWhenUsingVendorPrefix, message);\n                            }\n                            if (missingVendorSpecific) {\n                                var message = localize('property.vendorspecific.missing', \"Always include all vendor specific properties: Missing: {0}\", missingVendorSpecific);\n                                this.addEntry(node_3, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AllVendorPrefixes, message);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitPrio = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\tDon't use !important\n        /////////////////////////////////////////////////////////////\n        this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].AvoidImportant);\n        return true;\n    };\n    LintVisitor.prototype.visitNumericValue = function (node) {\n        /////////////////////////////////////////////////////////////\n        //\t0 has no following unit\n        /////////////////////////////////////////////////////////////\n        var funcDecl = node.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Function);\n        if (funcDecl && funcDecl.getName() === 'calc') {\n            return true;\n        }\n        var decl = node.findParent(_parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"NodeType\"].Declaration);\n        if (decl) {\n            var declValue = decl.getValue();\n            if (declValue) {\n                var value = node.getValue();\n                if (!value.unit || _languageFacts_facts_js__WEBPACK_IMPORTED_MODULE_0__[\"units\"].length.indexOf(value.unit.toLowerCase()) === -1) {\n                    return true;\n                }\n                if (parseFloat(value.value) === 0.0 && !!value.unit && !this.validProperties[decl.getFullPropertyName()]) {\n                    this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].ZeroWithUnit);\n                }\n            }\n        }\n        return true;\n    };\n    LintVisitor.prototype.visitFontFace = function (node) {\n        var declarations = node.getDeclarations();\n        if (!declarations) {\n            // syntax error\n            return false;\n        }\n        var definesSrc = false, definesFontFamily = false;\n        var containsUnknowns = false;\n        for (var _i = 0, _a = declarations.getChildren(); _i < _a.length; _i++) {\n            var node_4 = _a[_i];\n            if (this.isCSSDeclaration(node_4)) {\n                var name = node_4.getProperty().getName().toLowerCase();\n                if (name === 'src') {\n                    definesSrc = true;\n                }\n                if (name === 'font-family') {\n                    definesFontFamily = true;\n                }\n            }\n            else {\n                containsUnknowns = true;\n            }\n        }\n        if (!containsUnknowns && (!definesSrc || !definesFontFamily)) {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].RequiredPropertiesForFontFace);\n        }\n        return true;\n    };\n    LintVisitor.prototype.isCSSDeclaration = function (node) {\n        if (node instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"Declaration\"]) {\n            if (!node.getValue()) {\n                return false;\n            }\n            var property = node.getProperty();\n            if (!property) {\n                return false;\n            }\n            var identifier = property.getIdentifier();\n            if (!identifier || identifier.containsInterpolation()) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    LintVisitor.prototype.visitHexColorValue = function (node) {\n        // Rule: #eeff0011 or #eeff00 or #ef01 or #ef0\n        var length = node.length;\n        if (length !== 9 && length !== 7 && length !== 5 && length !== 4) {\n            this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].HexColorLength);\n        }\n        return false;\n    };\n    LintVisitor.prototype.visitFunction = function (node) {\n        var fnName = node.getName().toLowerCase();\n        var expectedAttrCount = -1;\n        var actualAttrCount = 0;\n        switch (fnName) {\n            case 'rgb(':\n            case 'hsl(':\n                expectedAttrCount = 3;\n                break;\n            case 'rgba(':\n            case 'hsla(':\n                expectedAttrCount = 4;\n                break;\n        }\n        if (expectedAttrCount !== -1) {\n            node.getArguments().accept(function (n) {\n                if (n instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_2__[\"BinaryExpression\"]) {\n                    actualAttrCount += 1;\n                    return false;\n                }\n                return true;\n            });\n            if (actualAttrCount !== expectedAttrCount) {\n                this.addEntry(node, _lintRules_js__WEBPACK_IMPORTED_MODULE_1__[\"Rules\"].ArgsInColorFunction);\n            }\n        }\n        return true;\n    };\n    LintVisitor.prefixes = [\n        '-ms-', '-moz-', '-o-', '-webkit-',\n    ];\n    return LintVisitor;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lint.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rule\", function() { return Rule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Setting\", function() { return Setting; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Rules\", function() { return Rules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Settings\", function() { return Settings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LintConfigurationSettings\", function() { return LintConfigurationSettings; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_1__[\"loadMessageBundle\"]();\nvar Warning = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Warning;\nvar Error = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Error;\nvar Ignore = _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Ignore;\nvar Rule = /** @class */ (function () {\n    function Rule(id, message, defaultValue) {\n        this.id = id;\n        this.message = message;\n        this.defaultValue = defaultValue;\n        // nothing to do\n    }\n    return Rule;\n}());\n\nvar Setting = /** @class */ (function () {\n    function Setting(id, message, defaultValue) {\n        this.id = id;\n        this.message = message;\n        this.defaultValue = defaultValue;\n        // nothing to do\n    }\n    return Setting;\n}());\n\nvar Rules = {\n    AllVendorPrefixes: new Rule('compatibleVendorPrefixes', localize('rule.vendorprefixes.all', \"When using a vendor-specific prefix make sure to also include all other vendor-specific properties\"), Ignore),\n    IncludeStandardPropertyWhenUsingVendorPrefix: new Rule('vendorPrefix', localize('rule.standardvendorprefix.all', \"When using a vendor-specific prefix also include the standard property\"), Warning),\n    DuplicateDeclarations: new Rule('duplicateProperties', localize('rule.duplicateDeclarations', \"Do not use duplicate style definitions\"), Ignore),\n    EmptyRuleSet: new Rule('emptyRules', localize('rule.emptyRuleSets', \"Do not use empty rulesets\"), Warning),\n    ImportStatemement: new Rule('importStatement', localize('rule.importDirective', \"Import statements do not load in parallel\"), Ignore),\n    BewareOfBoxModelSize: new Rule('boxModel', localize('rule.bewareOfBoxModelSize', \"Do not use width or height when using padding or border\"), Ignore),\n    UniversalSelector: new Rule('universalSelector', localize('rule.universalSelector', \"The universal selector (*) is known to be slow\"), Ignore),\n    ZeroWithUnit: new Rule('zeroUnits', localize('rule.zeroWidthUnit', \"No unit for zero needed\"), Ignore),\n    RequiredPropertiesForFontFace: new Rule('fontFaceProperties', localize('rule.fontFaceProperties', \"@font-face rule must define 'src' and 'font-family' properties\"), Warning),\n    HexColorLength: new Rule('hexColorLength', localize('rule.hexColor', \"Hex colors must consist of three, four, six or eight hex numbers\"), Error),\n    ArgsInColorFunction: new Rule('argumentsInColorFunction', localize('rule.colorFunction', \"Invalid number of parameters\"), Error),\n    UnknownProperty: new Rule('unknownProperties', localize('rule.unknownProperty', \"Unknown property.\"), Warning),\n    UnknownAtRules: new Rule('unknownAtRules', localize('rule.unknownAtRules', \"Unknown at-rule.\"), Warning),\n    IEStarHack: new Rule('ieHack', localize('rule.ieHack', \"IE hacks are only necessary when supporting IE7 and older\"), Ignore),\n    UnknownVendorSpecificProperty: new Rule('unknownVendorSpecificProperties', localize('rule.unknownVendorSpecificProperty', \"Unknown vendor specific property.\"), Ignore),\n    PropertyIgnoredDueToDisplay: new Rule('propertyIgnoredDueToDisplay', localize('rule.propertyIgnoredDueToDisplay', \"Property is ignored due to the display.\"), Warning),\n    AvoidImportant: new Rule('important', localize('rule.avoidImportant', \"Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.\"), Ignore),\n    AvoidFloat: new Rule('float', localize('rule.avoidFloat', \"Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.\"), Ignore),\n    AvoidIdSelector: new Rule('idSelector', localize('rule.avoidIdSelector', \"Selectors should not contain IDs because these rules are too tightly coupled with the HTML.\"), Ignore),\n};\nvar Settings = {\n    ValidProperties: new Setting('validProperties', localize('rule.validProperties', \"A list of properties that are not validated against the `unknownProperties` rule.\"), [])\n};\nvar LintConfigurationSettings = /** @class */ (function () {\n    function LintConfigurationSettings(conf) {\n        if (conf === void 0) { conf = {}; }\n        this.conf = conf;\n    }\n    LintConfigurationSettings.prototype.getRule = function (rule) {\n        if (this.conf.hasOwnProperty(rule.id)) {\n            var level = toLevel(this.conf[rule.id]);\n            if (level) {\n                return level;\n            }\n        }\n        return rule.defaultValue;\n    };\n    LintConfigurationSettings.prototype.getSetting = function (setting) {\n        return this.conf[setting.id];\n    };\n    return LintConfigurationSettings;\n}());\n\nfunction toLevel(level) {\n    switch (level) {\n        case 'ignore': return _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Ignore;\n        case 'warning': return _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Warning;\n        case 'error': return _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"Level\"].Error;\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintRules.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintUtil.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Element\", function() { return Element; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return calculateBoxModel; });\n/* harmony import */ var _utils_arrays_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar Element = /** @class */ (function () {\n    function Element(decl) {\n        this.fullPropertyName = decl.getFullPropertyName().toLowerCase();\n        this.node = decl;\n    }\n    return Element;\n}());\n\nfunction setSide(model, side, value, property) {\n    var state = model[side];\n    state.value = value;\n    if (value) {\n        if (!Object(_utils_arrays_js__WEBPACK_IMPORTED_MODULE_0__[\"includes\"])(state.properties, property)) {\n            state.properties.push(property);\n        }\n    }\n}\nfunction setAllSides(model, value, property) {\n    setSide(model, 'top', value, property);\n    setSide(model, 'right', value, property);\n    setSide(model, 'bottom', value, property);\n    setSide(model, 'left', value, property);\n}\nfunction updateModelWithValue(model, side, value, property) {\n    if (side === 'top' || side === 'right' ||\n        side === 'bottom' || side === 'left') {\n        setSide(model, side, value, property);\n    }\n    else {\n        setAllSides(model, value, property);\n    }\n}\nfunction updateModelWithList(model, values, property) {\n    switch (values.length) {\n        case 1:\n            updateModelWithValue(model, undefined, values[0], property);\n            break;\n        case 2:\n            updateModelWithValue(model, 'top', values[0], property);\n            updateModelWithValue(model, 'bottom', values[0], property);\n            updateModelWithValue(model, 'right', values[1], property);\n            updateModelWithValue(model, 'left', values[1], property);\n            break;\n        case 3:\n            updateModelWithValue(model, 'top', values[0], property);\n            updateModelWithValue(model, 'right', values[1], property);\n            updateModelWithValue(model, 'left', values[1], property);\n            updateModelWithValue(model, 'bottom', values[2], property);\n            break;\n        case 4:\n            updateModelWithValue(model, 'top', values[0], property);\n            updateModelWithValue(model, 'right', values[1], property);\n            updateModelWithValue(model, 'bottom', values[2], property);\n            updateModelWithValue(model, 'left', values[3], property);\n            break;\n    }\n}\nfunction matches(value, candidates) {\n    for (var _i = 0, candidates_1 = candidates; _i < candidates_1.length; _i++) {\n        var candidate = candidates_1[_i];\n        if (value.matches(candidate)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param allowsKeywords whether the initial value of property is zero, so keywords `initial` and `unset` count as zero\n * @return `true` if this node represents a non-zero border; otherwise, `false`\n */\nfunction checkLineWidth(value, allowsKeywords) {\n    if (allowsKeywords === void 0) { allowsKeywords = true; }\n    if (allowsKeywords && matches(value, ['initial', 'unset'])) {\n        return false;\n    }\n    // a <length> is a value and a unit\n    // so use `parseFloat` to strip the unit\n    return parseFloat(value.getText()) !== 0;\n}\nfunction checkLineWidthList(nodes, allowsKeywords) {\n    if (allowsKeywords === void 0) { allowsKeywords = true; }\n    return nodes.map(function (node) { return checkLineWidth(node, allowsKeywords); });\n}\n/**\n * @param allowsKeywords whether keywords `initial` and `unset` count as zero\n * @return `true` if this node represents a non-zero border; otherwise, `false`\n */\nfunction checkLineStyle(valueNode, allowsKeywords) {\n    if (allowsKeywords === void 0) { allowsKeywords = true; }\n    if (matches(valueNode, ['none', 'hidden'])) {\n        return false;\n    }\n    if (allowsKeywords && matches(valueNode, ['initial', 'unset'])) {\n        return false;\n    }\n    return true;\n}\nfunction checkLineStyleList(nodes, allowsKeywords) {\n    if (allowsKeywords === void 0) { allowsKeywords = true; }\n    return nodes.map(function (node) { return checkLineStyle(node, allowsKeywords); });\n}\nfunction checkBorderShorthand(node) {\n    var children = node.getChildren();\n    // the only child can be a keyword, a <line-width>, or a <line-style>\n    // if either check returns false, the result is no border\n    if (children.length === 1) {\n        var value = children[0];\n        return checkLineWidth(value) && checkLineStyle(value);\n    }\n    // multiple children can't contain keywords\n    // if any child means no border, the result is no border\n    for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n        var child = children_1[_i];\n        var value = child;\n        if (!checkLineWidth(value, /* allowsKeywords: */ false) ||\n            !checkLineStyle(value, /* allowsKeywords: */ false)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction calculateBoxModel(propertyTable) {\n    var model = {\n        top: { value: false, properties: [] },\n        right: { value: false, properties: [] },\n        bottom: { value: false, properties: [] },\n        left: { value: false, properties: [] },\n    };\n    for (var _i = 0, propertyTable_1 = propertyTable; _i < propertyTable_1.length; _i++) {\n        var property = propertyTable_1[_i];\n        var value = property.node.value;\n        if (typeof value === 'undefined') {\n            continue;\n        }\n        switch (property.fullPropertyName) {\n            case 'box-sizing':\n                // has `box-sizing`, bail out\n                return {\n                    top: { value: false, properties: [] },\n                    right: { value: false, properties: [] },\n                    bottom: { value: false, properties: [] },\n                    left: { value: false, properties: [] },\n                };\n            case 'width':\n                model.width = property;\n                break;\n            case 'height':\n                model.height = property;\n                break;\n            default:\n                var segments = property.fullPropertyName.split('-');\n                switch (segments[0]) {\n                    case 'border':\n                        switch (segments[1]) {\n                            case undefined:\n                            case 'top':\n                            case 'right':\n                            case 'bottom':\n                            case 'left':\n                                switch (segments[2]) {\n                                    case undefined:\n                                        updateModelWithValue(model, segments[1], checkBorderShorthand(value), property);\n                                        break;\n                                    case 'width':\n                                        // the initial value of `border-width` is `medium`, not zero\n                                        updateModelWithValue(model, segments[1], checkLineWidth(value, false), property);\n                                        break;\n                                    case 'style':\n                                        // the initial value of `border-style` is `none`\n                                        updateModelWithValue(model, segments[1], checkLineStyle(value, true), property);\n                                        break;\n                                }\n                                break;\n                            case 'width':\n                                // the initial value of `border-width` is `medium`, not zero\n                                updateModelWithList(model, checkLineWidthList(value.getChildren(), false), property);\n                                break;\n                            case 'style':\n                                // the initial value of `border-style` is `none`\n                                updateModelWithList(model, checkLineStyleList(value.getChildren(), true), property);\n                                break;\n                        }\n                        break;\n                    case 'padding':\n                        if (segments.length === 1) {\n                            // the initial value of `padding` is zero\n                            updateModelWithList(model, checkLineWidthList(value.getChildren(), true), property);\n                        }\n                        else {\n                            // the initial value of `padding` is zero\n                            updateModelWithValue(model, segments[1], checkLineWidth(value, true), property);\n                        }\n                        break;\n                }\n                break;\n        }\n    }\n    return model;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3NlcnZpY2VzL2xpbnRVdGlsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2Nzcy9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9zZXJ2aWNlcy9saW50VXRpbC5qcz82NjUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgaW5jbHVkZXMgfSBmcm9tICcuLi91dGlscy9hcnJheXMuanMnO1xudmFyIEVsZW1lbnQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRWxlbWVudChkZWNsKSB7XG4gICAgICAgIHRoaXMuZnVsbFByb3BlcnR5TmFtZSA9IGRlY2wuZ2V0RnVsbFByb3BlcnR5TmFtZSgpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHRoaXMubm9kZSA9IGRlY2w7XG4gICAgfVxuICAgIHJldHVybiBFbGVtZW50O1xufSgpKTtcbmV4cG9ydCB7IEVsZW1lbnQgfTtcbmZ1bmN0aW9uIHNldFNpZGUobW9kZWwsIHNpZGUsIHZhbHVlLCBwcm9wZXJ0eSkge1xuICAgIHZhciBzdGF0ZSA9IG1vZGVsW3NpZGVdO1xuICAgIHN0YXRlLnZhbHVlID0gdmFsdWU7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIGlmICghaW5jbHVkZXMoc3RhdGUucHJvcGVydGllcywgcHJvcGVydHkpKSB7XG4gICAgICAgICAgICBzdGF0ZS5wcm9wZXJ0aWVzLnB1c2gocHJvcGVydHkpO1xuICAgICAgICB9XG4gICAgfVxufVxuZnVuY3Rpb24gc2V0QWxsU2lkZXMobW9kZWwsIHZhbHVlLCBwcm9wZXJ0eSkge1xuICAgIHNldFNpZGUobW9kZWwsICd0b3AnLCB2YWx1ZSwgcHJvcGVydHkpO1xuICAgIHNldFNpZGUobW9kZWwsICdyaWdodCcsIHZhbHVlLCBwcm9wZXJ0eSk7XG4gICAgc2V0U2lkZShtb2RlbCwgJ2JvdHRvbScsIHZhbHVlLCBwcm9wZXJ0eSk7XG4gICAgc2V0U2lkZShtb2RlbCwgJ2xlZnQnLCB2YWx1ZSwgcHJvcGVydHkpO1xufVxuZnVuY3Rpb24gdXBkYXRlTW9kZWxXaXRoVmFsdWUobW9kZWwsIHNpZGUsIHZhbHVlLCBwcm9wZXJ0eSkge1xuICAgIGlmIChzaWRlID09PSAndG9wJyB8fCBzaWRlID09PSAncmlnaHQnIHx8XG4gICAgICAgIHNpZGUgPT09ICdib3R0b20nIHx8IHNpZGUgPT09ICdsZWZ0Jykge1xuICAgICAgICBzZXRTaWRlKG1vZGVsLCBzaWRlLCB2YWx1ZSwgcHJvcGVydHkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgc2V0QWxsU2lkZXMobW9kZWwsIHZhbHVlLCBwcm9wZXJ0eSk7XG4gICAgfVxufVxuZnVuY3Rpb24gdXBkYXRlTW9kZWxXaXRoTGlzdChtb2RlbCwgdmFsdWVzLCBwcm9wZXJ0eSkge1xuICAgIHN3aXRjaCAodmFsdWVzLmxlbmd0aCkge1xuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICB1cGRhdGVNb2RlbFdpdGhWYWx1ZShtb2RlbCwgdW5kZWZpbmVkLCB2YWx1ZXNbMF0sIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICB1cGRhdGVNb2RlbFdpdGhWYWx1ZShtb2RlbCwgJ3RvcCcsIHZhbHVlc1swXSwgcHJvcGVydHkpO1xuICAgICAgICAgICAgdXBkYXRlTW9kZWxXaXRoVmFsdWUobW9kZWwsICdib3R0b20nLCB2YWx1ZXNbMF0sIHByb3BlcnR5KTtcbiAgICAgICAgICAgIHVwZGF0ZU1vZGVsV2l0aFZhbHVlKG1vZGVsLCAncmlnaHQnLCB2YWx1ZXNbMV0sIHByb3BlcnR5KTtcbiAgICAgICAgICAgIHVwZGF0ZU1vZGVsV2l0aFZhbHVlKG1vZGVsLCAnbGVmdCcsIHZhbHVlc1sxXSwgcHJvcGVydHkpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIHVwZGF0ZU1vZGVsV2l0aFZhbHVlKG1vZGVsLCAndG9wJywgdmFsdWVzWzBdLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICB1cGRhdGVNb2RlbFdpdGhWYWx1ZShtb2RlbCwgJ3JpZ2h0JywgdmFsdWVzWzFdLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICB1cGRhdGVNb2RlbFdpdGhWYWx1ZShtb2RlbCwgJ2xlZnQnLCB2YWx1ZXNbMV0sIHByb3BlcnR5KTtcbiAgICAgICAgICAgIHVwZGF0ZU1vZGVsV2l0aFZhbHVlKG1vZGVsLCAnYm90dG9tJywgdmFsdWVzWzJdLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgdXBkYXRlTW9kZWxXaXRoVmFsdWUobW9kZWwsICd0b3AnLCB2YWx1ZXNbMF0sIHByb3BlcnR5KTtcbiAgICAgICAgICAgIHVwZGF0ZU1vZGVsV2l0aFZhbHVlKG1vZGVsLCAncmlnaHQnLCB2YWx1ZXNbMV0sIHByb3BlcnR5KTtcbiAgICAgICAgICAgIHVwZGF0ZU1vZGVsV2l0aFZhbHVlKG1vZGVsLCAnYm90dG9tJywgdmFsdWVzWzJdLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICB1cGRhdGVNb2RlbFdpdGhWYWx1ZShtb2RlbCwgJ2xlZnQnLCB2YWx1ZXNbM10sIHByb3BlcnR5KTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cbn1cbmZ1bmN0aW9uIG1hdGNoZXModmFsdWUsIGNhbmRpZGF0ZXMpIHtcbiAgICBmb3IgKHZhciBfaSA9IDAsIGNhbmRpZGF0ZXNfMSA9IGNhbmRpZGF0ZXM7IF9pIDwgY2FuZGlkYXRlc18xLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIgY2FuZGlkYXRlID0gY2FuZGlkYXRlc18xW19pXTtcbiAgICAgICAgaWYgKHZhbHVlLm1hdGNoZXMoY2FuZGlkYXRlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKiBAcGFyYW0gYWxsb3dzS2V5d29yZHMgd2hldGhlciB0aGUgaW5pdGlhbCB2YWx1ZSBvZiBwcm9wZXJ0eSBpcyB6ZXJvLCBzbyBrZXl3b3JkcyBgaW5pdGlhbGAgYW5kIGB1bnNldGAgY291bnQgYXMgemVyb1xuICogQHJldHVybiBgdHJ1ZWAgaWYgdGhpcyBub2RlIHJlcHJlc2VudHMgYSBub24temVybyBib3JkZXI7IG90aGVyd2lzZSwgYGZhbHNlYFxuICovXG5mdW5jdGlvbiBjaGVja0xpbmVXaWR0aCh2YWx1ZSwgYWxsb3dzS2V5d29yZHMpIHtcbiAgICBpZiAoYWxsb3dzS2V5d29yZHMgPT09IHZvaWQgMCkgeyBhbGxvd3NLZXl3b3JkcyA9IHRydWU7IH1cbiAgICBpZiAoYWxsb3dzS2V5d29yZHMgJiYgbWF0Y2hlcyh2YWx1ZSwgWydpbml0aWFsJywgJ3Vuc2V0J10pKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gYSA8bGVuZ3RoPiBpcyBhIHZhbHVlIGFuZCBhIHVuaXRcbiAgICAvLyBzbyB1c2UgYHBhcnNlRmxvYXRgIHRvIHN0cmlwIHRoZSB1bml0XG4gICAgcmV0dXJuIHBhcnNlRmxvYXQodmFsdWUuZ2V0VGV4dCgpKSAhPT0gMDtcbn1cbmZ1bmN0aW9uIGNoZWNrTGluZVdpZHRoTGlzdChub2RlcywgYWxsb3dzS2V5d29yZHMpIHtcbiAgICBpZiAoYWxsb3dzS2V5d29yZHMgPT09IHZvaWQgMCkgeyBhbGxvd3NLZXl3b3JkcyA9IHRydWU7IH1cbiAgICByZXR1cm4gbm9kZXMubWFwKGZ1bmN0aW9uIChub2RlKSB7IHJldHVybiBjaGVja0xpbmVXaWR0aChub2RlLCBhbGxvd3NLZXl3b3Jkcyk7IH0pO1xufVxuLyoqXG4gKiBAcGFyYW0gYWxsb3dzS2V5d29yZHMgd2hldGhlciBrZXl3b3JkcyBgaW5pdGlhbGAgYW5kIGB1bnNldGAgY291bnQgYXMgemVyb1xuICogQHJldHVybiBgdHJ1ZWAgaWYgdGhpcyBub2RlIHJlcHJlc2VudHMgYSBub24temVybyBib3JkZXI7IG90aGVyd2lzZSwgYGZhbHNlYFxuICovXG5mdW5jdGlvbiBjaGVja0xpbmVTdHlsZSh2YWx1ZU5vZGUsIGFsbG93c0tleXdvcmRzKSB7XG4gICAgaWYgKGFsbG93c0tleXdvcmRzID09PSB2b2lkIDApIHsgYWxsb3dzS2V5d29yZHMgPSB0cnVlOyB9XG4gICAgaWYgKG1hdGNoZXModmFsdWVOb2RlLCBbJ25vbmUnLCAnaGlkZGVuJ10pKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGFsbG93c0tleXdvcmRzICYmIG1hdGNoZXModmFsdWVOb2RlLCBbJ2luaXRpYWwnLCAndW5zZXQnXSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIGNoZWNrTGluZVN0eWxlTGlzdChub2RlcywgYWxsb3dzS2V5d29yZHMpIHtcbiAgICBpZiAoYWxsb3dzS2V5d29yZHMgPT09IHZvaWQgMCkgeyBhbGxvd3NLZXl3b3JkcyA9IHRydWU7IH1cbiAgICByZXR1cm4gbm9kZXMubWFwKGZ1bmN0aW9uIChub2RlKSB7IHJldHVybiBjaGVja0xpbmVTdHlsZShub2RlLCBhbGxvd3NLZXl3b3Jkcyk7IH0pO1xufVxuZnVuY3Rpb24gY2hlY2tCb3JkZXJTaG9ydGhhbmQobm9kZSkge1xuICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuZ2V0Q2hpbGRyZW4oKTtcbiAgICAvLyB0aGUgb25seSBjaGlsZCBjYW4gYmUgYSBrZXl3b3JkLCBhIDxsaW5lLXdpZHRoPiwgb3IgYSA8bGluZS1zdHlsZT5cbiAgICAvLyBpZiBlaXRoZXIgY2hlY2sgcmV0dXJucyBmYWxzZSwgdGhlIHJlc3VsdCBpcyBubyBib3JkZXJcbiAgICBpZiAoY2hpbGRyZW4ubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IGNoaWxkcmVuWzBdO1xuICAgICAgICByZXR1cm4gY2hlY2tMaW5lV2lkdGgodmFsdWUpICYmIGNoZWNrTGluZVN0eWxlKHZhbHVlKTtcbiAgICB9XG4gICAgLy8gbXVsdGlwbGUgY2hpbGRyZW4gY2FuJ3QgY29udGFpbiBrZXl3b3Jkc1xuICAgIC8vIGlmIGFueSBjaGlsZCBtZWFucyBubyBib3JkZXIsIHRoZSByZXN1bHQgaXMgbm8gYm9yZGVyXG4gICAgZm9yICh2YXIgX2kgPSAwLCBjaGlsZHJlbl8xID0gY2hpbGRyZW47IF9pIDwgY2hpbGRyZW5fMS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgdmFyIGNoaWxkID0gY2hpbGRyZW5fMVtfaV07XG4gICAgICAgIHZhciB2YWx1ZSA9IGNoaWxkO1xuICAgICAgICBpZiAoIWNoZWNrTGluZVdpZHRoKHZhbHVlLCAvKiBhbGxvd3NLZXl3b3JkczogKi8gZmFsc2UpIHx8XG4gICAgICAgICAgICAhY2hlY2tMaW5lU3R5bGUodmFsdWUsIC8qIGFsbG93c0tleXdvcmRzOiAqLyBmYWxzZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNhbGN1bGF0ZUJveE1vZGVsKHByb3BlcnR5VGFibGUpIHtcbiAgICB2YXIgbW9kZWwgPSB7XG4gICAgICAgIHRvcDogeyB2YWx1ZTogZmFsc2UsIHByb3BlcnRpZXM6IFtdIH0sXG4gICAgICAgIHJpZ2h0OiB7IHZhbHVlOiBmYWxzZSwgcHJvcGVydGllczogW10gfSxcbiAgICAgICAgYm90dG9tOiB7IHZhbHVlOiBmYWxzZSwgcHJvcGVydGllczogW10gfSxcbiAgICAgICAgbGVmdDogeyB2YWx1ZTogZmFsc2UsIHByb3BlcnRpZXM6IFtdIH0sXG4gICAgfTtcbiAgICBmb3IgKHZhciBfaSA9IDAsIHByb3BlcnR5VGFibGVfMSA9IHByb3BlcnR5VGFibGU7IF9pIDwgcHJvcGVydHlUYWJsZV8xLmxlbmd0aDsgX2krKykge1xuICAgICAgICB2YXIgcHJvcGVydHkgPSBwcm9wZXJ0eVRhYmxlXzFbX2ldO1xuICAgICAgICB2YXIgdmFsdWUgPSBwcm9wZXJ0eS5ub2RlLnZhbHVlO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgc3dpdGNoIChwcm9wZXJ0eS5mdWxsUHJvcGVydHlOYW1lKSB7XG4gICAgICAgICAgICBjYXNlICdib3gtc2l6aW5nJzpcbiAgICAgICAgICAgICAgICAvLyBoYXMgYGJveC1zaXppbmdgLCBiYWlsIG91dFxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDogeyB2YWx1ZTogZmFsc2UsIHByb3BlcnRpZXM6IFtdIH0sXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiB7IHZhbHVlOiBmYWxzZSwgcHJvcGVydGllczogW10gfSxcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiB7IHZhbHVlOiBmYWxzZSwgcHJvcGVydGllczogW10gfSxcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogeyB2YWx1ZTogZmFsc2UsIHByb3BlcnRpZXM6IFtdIH0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNhc2UgJ3dpZHRoJzpcbiAgICAgICAgICAgICAgICBtb2RlbC53aWR0aCA9IHByb3BlcnR5O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnaGVpZ2h0JzpcbiAgICAgICAgICAgICAgICBtb2RlbC5oZWlnaHQgPSBwcm9wZXJ0eTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdmFyIHNlZ21lbnRzID0gcHJvcGVydHkuZnVsbFByb3BlcnR5TmFtZS5zcGxpdCgnLScpO1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoc2VnbWVudHNbMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnYm9yZGVyJzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoc2VnbWVudHNbMV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIHVuZGVmaW5lZDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICd0b3AnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3JpZ2h0JzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdib3R0b20nOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2xlZnQnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKHNlZ21lbnRzWzJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIHVuZGVmaW5lZDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVNb2RlbFdpdGhWYWx1ZShtb2RlbCwgc2VnbWVudHNbMV0sIGNoZWNrQm9yZGVyU2hvcnRoYW5kKHZhbHVlKSwgcHJvcGVydHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnd2lkdGgnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBpbml0aWFsIHZhbHVlIG9mIGBib3JkZXItd2lkdGhgIGlzIGBtZWRpdW1gLCBub3QgemVyb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZU1vZGVsV2l0aFZhbHVlKG1vZGVsLCBzZWdtZW50c1sxXSwgY2hlY2tMaW5lV2lkdGgodmFsdWUsIGZhbHNlKSwgcHJvcGVydHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnc3R5bGUnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBpbml0aWFsIHZhbHVlIG9mIGBib3JkZXItc3R5bGVgIGlzIGBub25lYFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZU1vZGVsV2l0aFZhbHVlKG1vZGVsLCBzZWdtZW50c1sxXSwgY2hlY2tMaW5lU3R5bGUodmFsdWUsIHRydWUpLCBwcm9wZXJ0eSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnd2lkdGgnOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB0aGUgaW5pdGlhbCB2YWx1ZSBvZiBgYm9yZGVyLXdpZHRoYCBpcyBgbWVkaXVtYCwgbm90IHplcm9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlTW9kZWxXaXRoTGlzdChtb2RlbCwgY2hlY2tMaW5lV2lkdGhMaXN0KHZhbHVlLmdldENoaWxkcmVuKCksIGZhbHNlKSwgcHJvcGVydHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlICdzdHlsZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBpbml0aWFsIHZhbHVlIG9mIGBib3JkZXItc3R5bGVgIGlzIGBub25lYFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVNb2RlbFdpdGhMaXN0KG1vZGVsLCBjaGVja0xpbmVTdHlsZUxpc3QodmFsdWUuZ2V0Q2hpbGRyZW4oKSwgdHJ1ZSksIHByb3BlcnR5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAncGFkZGluZyc6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VnbWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhlIGluaXRpYWwgdmFsdWUgb2YgYHBhZGRpbmdgIGlzIHplcm9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVNb2RlbFdpdGhMaXN0KG1vZGVsLCBjaGVja0xpbmVXaWR0aExpc3QodmFsdWUuZ2V0Q2hpbGRyZW4oKSwgdHJ1ZSksIHByb3BlcnR5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBpbml0aWFsIHZhbHVlIG9mIGBwYWRkaW5nYCBpcyB6ZXJvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlTW9kZWxXaXRoVmFsdWUobW9kZWwsIHNlZ21lbnRzWzFdLCBjaGVja0xpbmVXaWR0aCh2YWx1ZSwgdHJ1ZSksIHByb3BlcnR5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbW9kZWw7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/lintUtil.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/pathCompletion.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PathCompletionParticipant\", function() { return PathCompletionParticipant; });\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/* harmony import */ var _utils_resources_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/resources.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\nvar PathCompletionParticipant = /** @class */ (function () {\n    function PathCompletionParticipant(readDirectory) {\n        this.readDirectory = readDirectory;\n        this.literalCompletions = [];\n        this.importCompletions = [];\n    }\n    PathCompletionParticipant.prototype.onCssURILiteralValue = function (context) {\n        this.literalCompletions.push(context);\n    };\n    PathCompletionParticipant.prototype.onCssImportPath = function (context) {\n        this.importCompletions.push(context);\n    };\n    PathCompletionParticipant.prototype.computeCompletions = function (document, documentContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result, _i, _a, literalCompletion, uriValue, fullValue, items, _b, items_1, item, _c, _d, importCompletion, pathValue, fullValue, suggestions, _e, suggestions_1, item;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        result = { items: [], isIncomplete: false };\n                        _i = 0, _a = this.literalCompletions;\n                        _f.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3 /*break*/, 5];\n                        literalCompletion = _a[_i];\n                        uriValue = literalCompletion.uriValue;\n                        fullValue = stripQuotes(uriValue);\n                        if (!(fullValue === '.' || fullValue === '..')) return [3 /*break*/, 2];\n                        result.isIncomplete = true;\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.providePathSuggestions(uriValue, literalCompletion.position, literalCompletion.range, document, documentContext)];\n                    case 3:\n                        items = _f.sent();\n                        for (_b = 0, items_1 = items; _b < items_1.length; _b++) {\n                            item = items_1[_b];\n                            result.items.push(item);\n                        }\n                        _f.label = 4;\n                    case 4:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 5:\n                        _c = 0, _d = this.importCompletions;\n                        _f.label = 6;\n                    case 6:\n                        if (!(_c < _d.length)) return [3 /*break*/, 10];\n                        importCompletion = _d[_c];\n                        pathValue = importCompletion.pathValue;\n                        fullValue = stripQuotes(pathValue);\n                        if (!(fullValue === '.' || fullValue === '..')) return [3 /*break*/, 7];\n                        result.isIncomplete = true;\n                        return [3 /*break*/, 9];\n                    case 7: return [4 /*yield*/, this.providePathSuggestions(pathValue, importCompletion.position, importCompletion.range, document, documentContext)];\n                    case 8:\n                        suggestions = _f.sent();\n                        if (document.languageId === 'scss') {\n                            suggestions.forEach(function (s) {\n                                if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_1__[\"startsWith\"])(s.label, '_') && Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_1__[\"endsWith\"])(s.label, '.scss')) {\n                                    if (s.textEdit) {\n                                        s.textEdit.newText = s.label.slice(1, -5);\n                                    }\n                                    else {\n                                        s.label = s.label.slice(1, -5);\n                                    }\n                                }\n                            });\n                        }\n                        for (_e = 0, suggestions_1 = suggestions; _e < suggestions_1.length; _e++) {\n                            item = suggestions_1[_e];\n                            result.items.push(item);\n                        }\n                        _f.label = 9;\n                    case 9:\n                        _c++;\n                        return [3 /*break*/, 6];\n                    case 10: return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    PathCompletionParticipant.prototype.providePathSuggestions = function (pathValue, position, range, document, documentContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fullValue, isValueQuoted, valueBeforeCursor, currentDocUri, fullValueRange, replaceRange, valueBeforeLastSlash, parentDir, result, infos, _i, infos_1, _a, name, type, e_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        fullValue = stripQuotes(pathValue);\n                        isValueQuoted = Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_1__[\"startsWith\"])(pathValue, \"'\") || Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_1__[\"startsWith\"])(pathValue, \"\\\"\");\n                        valueBeforeCursor = isValueQuoted\n                            ? fullValue.slice(0, position.character - (range.start.character + 1))\n                            : fullValue.slice(0, position.character - range.start.character);\n                        currentDocUri = document.uri;\n                        fullValueRange = isValueQuoted ? shiftRange(range, 1, -1) : range;\n                        replaceRange = pathToReplaceRange(valueBeforeCursor, fullValue, fullValueRange);\n                        valueBeforeLastSlash = valueBeforeCursor.substring(0, valueBeforeCursor.lastIndexOf('/') + 1);\n                        parentDir = documentContext.resolveReference(valueBeforeLastSlash || '.', currentDocUri);\n                        if (!parentDir) return [3 /*break*/, 4];\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        result = [];\n                        return [4 /*yield*/, this.readDirectory(parentDir)];\n                    case 2:\n                        infos = _b.sent();\n                        for (_i = 0, infos_1 = infos; _i < infos_1.length; _i++) {\n                            _a = infos_1[_i], name = _a[0], type = _a[1];\n                            // Exclude paths that start with `.`\n                            if (name.charCodeAt(0) !== CharCode_dot && (type === _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"FileType\"].Directory || Object(_utils_resources_js__WEBPACK_IMPORTED_MODULE_2__[\"joinPath\"])(parentDir, name) !== currentDocUri)) {\n                                result.push(createCompletionItem(name, type === _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"FileType\"].Directory, replaceRange));\n                            }\n                        }\n                        return [2 /*return*/, result];\n                    case 3:\n                        e_1 = _b.sent();\n                        return [3 /*break*/, 4];\n                    case 4: return [2 /*return*/, []];\n                }\n            });\n        });\n    };\n    return PathCompletionParticipant;\n}());\n\nvar CharCode_dot = '.'.charCodeAt(0);\nfunction stripQuotes(fullValue) {\n    if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_1__[\"startsWith\"])(fullValue, \"'\") || Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_1__[\"startsWith\"])(fullValue, \"\\\"\")) {\n        return fullValue.slice(1, -1);\n    }\n    else {\n        return fullValue;\n    }\n}\nfunction pathToReplaceRange(valueBeforeCursor, fullValue, fullValueRange) {\n    var replaceRange;\n    var lastIndexOfSlash = valueBeforeCursor.lastIndexOf('/');\n    if (lastIndexOfSlash === -1) {\n        replaceRange = fullValueRange;\n    }\n    else {\n        // For cases where cursor is in the middle of attribute value, like <script src=\"./s|rc/test.js\">\n        // Find the last slash before cursor, and calculate the start of replace range from there\n        var valueAfterLastSlash = fullValue.slice(lastIndexOfSlash + 1);\n        var startPos = shiftPosition(fullValueRange.end, -valueAfterLastSlash.length);\n        // If whitespace exists, replace until it\n        var whitespaceIndex = valueAfterLastSlash.indexOf(' ');\n        var endPos = void 0;\n        if (whitespaceIndex !== -1) {\n            endPos = shiftPosition(startPos, whitespaceIndex);\n        }\n        else {\n            endPos = fullValueRange.end;\n        }\n        replaceRange = _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(startPos, endPos);\n    }\n    return replaceRange;\n}\nfunction createCompletionItem(name, isDir, replaceRange) {\n    if (isDir) {\n        name = name + '/';\n        return {\n            label: escapePath(name),\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Folder,\n            textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(replaceRange, escapePath(name)),\n            command: {\n                title: 'Suggest',\n                command: 'editor.action.triggerSuggest'\n            }\n        };\n    }\n    else {\n        return {\n            label: escapePath(name),\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].File,\n            textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"TextEdit\"].replace(replaceRange, escapePath(name))\n        };\n    }\n}\n// Escape https://www.w3.org/TR/CSS1/#url\nfunction escapePath(p) {\n    return p.replace(/(\\s|\\(|\\)|,|\"|')/g, '\\\\$1');\n}\nfunction shiftPosition(pos, offset) {\n    return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"Position\"].create(pos.line, pos.character + offset);\n}\nfunction shiftRange(range, startOffset, endOffset) {\n    var start = shiftPosition(range.start, startOffset);\n    var end = shiftPosition(range.end, endOffset);\n    return _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_0__[\"Range\"].create(start, end);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/pathCompletion.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSCompletion\", function() { return SCSSCompletion; });\n/* harmony import */ var _cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssCompletion.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageTypes.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_3__[\"loadMessageBundle\"]();\nvar SCSSCompletion = /** @class */ (function (_super) {\n    __extends(SCSSCompletion, _super);\n    function SCSSCompletion(lsServiceOptions, cssDataManager) {\n        var _this = _super.call(this, '$', lsServiceOptions, cssDataManager) || this;\n        addReferencesToDocumentation(SCSSCompletion.scssModuleLoaders);\n        addReferencesToDocumentation(SCSSCompletion.scssModuleBuiltIns);\n        return _this;\n    }\n    SCSSCompletion.prototype.isImportPathParent = function (type) {\n        return type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Forward\n            || type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Use\n            || _super.prototype.isImportPathParent.call(this, type);\n    };\n    SCSSCompletion.prototype.getCompletionForImportPath = function (importPathNode, result) {\n        var parentType = importPathNode.getParent().type;\n        if (parentType === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Forward || parentType === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Use) {\n            for (var _i = 0, _a = SCSSCompletion.scssModuleBuiltIns; _i < _a.length; _i++) {\n                var p = _a[_i];\n                var item = {\n                    label: p.label,\n                    documentation: p.documentation,\n                    textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"TextEdit\"].replace(this.getCompletionRange(importPathNode), \"'\" + p.label + \"'\"),\n                    kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Module\n                };\n                result.items.push(item);\n            }\n        }\n        return _super.prototype.getCompletionForImportPath.call(this, importPathNode, result);\n    };\n    SCSSCompletion.prototype.createReplaceFunction = function () {\n        var tabStopCounter = 1;\n        return function (_match, p1) {\n            return '\\\\' + p1 + ': ${' + tabStopCounter++ + ':' + (SCSSCompletion.variableDefaults[p1] || '') + '}';\n        };\n    };\n    SCSSCompletion.prototype.createFunctionProposals = function (proposals, existingNode, sortToEnd, result) {\n        for (var _i = 0, proposals_1 = proposals; _i < proposals_1.length; _i++) {\n            var p = proposals_1[_i];\n            var insertText = p.func.replace(/\\[?(\\$\\w+)\\]?/g, this.createReplaceFunction());\n            var label = p.func.substr(0, p.func.indexOf('('));\n            var item = {\n                label: label,\n                detail: p.func,\n                documentation: p.desc,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), insertText),\n                insertTextFormat: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Function\n            };\n            if (sortToEnd) {\n                item.sortText = 'z';\n            }\n            result.items.push(item);\n        }\n        return result;\n    };\n    SCSSCompletion.prototype.getCompletionsForSelector = function (ruleSet, isNested, result) {\n        this.createFunctionProposals(SCSSCompletion.selectorFuncs, null, true, result);\n        return _super.prototype.getCompletionsForSelector.call(this, ruleSet, isNested, result);\n    };\n    SCSSCompletion.prototype.getTermProposals = function (entry, existingNode, result) {\n        var functions = SCSSCompletion.builtInFuncs;\n        if (entry) {\n            functions = functions.filter(function (f) { return !f.type || !entry.restrictions || entry.restrictions.indexOf(f.type) !== -1; });\n        }\n        this.createFunctionProposals(functions, existingNode, true, result);\n        return _super.prototype.getTermProposals.call(this, entry, existingNode, result);\n    };\n    SCSSCompletion.prototype.getColorProposals = function (entry, existingNode, result) {\n        this.createFunctionProposals(SCSSCompletion.colorProposals, existingNode, false, result);\n        return _super.prototype.getColorProposals.call(this, entry, existingNode, result);\n    };\n    SCSSCompletion.prototype.getCompletionsForDeclarationProperty = function (declaration, result) {\n        this.getCompletionForAtDirectives(result);\n        this.getCompletionsForSelector(null, true, result);\n        return _super.prototype.getCompletionsForDeclarationProperty.call(this, declaration, result);\n    };\n    SCSSCompletion.prototype.getCompletionsForExtendsReference = function (_extendsRef, existingNode, result) {\n        var symbols = this.getSymbolContext().findSymbolsAtOffset(this.offset, _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"].Rule);\n        for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n            var symbol = symbols_1[_i];\n            var suggest = {\n                label: symbol.name,\n                textEdit: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"TextEdit\"].replace(this.getCompletionRange(existingNode), symbol.name),\n                kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Function,\n            };\n            result.items.push(suggest);\n        }\n        return result;\n    };\n    SCSSCompletion.prototype.getCompletionForAtDirectives = function (result) {\n        var _a;\n        (_a = result.items).push.apply(_a, SCSSCompletion.scssAtDirectives);\n        return result;\n    };\n    SCSSCompletion.prototype.getCompletionForTopLevel = function (result) {\n        this.getCompletionForAtDirectives(result);\n        this.getCompletionForModuleLoaders(result);\n        _super.prototype.getCompletionForTopLevel.call(this, result);\n        return result;\n    };\n    SCSSCompletion.prototype.getCompletionForModuleLoaders = function (result) {\n        var _a;\n        (_a = result.items).push.apply(_a, SCSSCompletion.scssModuleLoaders);\n        return result;\n    };\n    SCSSCompletion.variableDefaults = {\n        '$red': '1',\n        '$green': '2',\n        '$blue': '3',\n        '$alpha': '1.0',\n        '$color': '#000000',\n        '$weight': '0.5',\n        '$hue': '0',\n        '$saturation': '0%',\n        '$lightness': '0%',\n        '$degrees': '0',\n        '$amount': '0',\n        '$string': '\"\"',\n        '$substring': '\"s\"',\n        '$number': '0',\n        '$limit': '1'\n    };\n    SCSSCompletion.colorProposals = [\n        { func: 'red($color)', desc: localize('scss.builtin.red', 'Gets the red component of a color.') },\n        { func: 'green($color)', desc: localize('scss.builtin.green', 'Gets the green component of a color.') },\n        { func: 'blue($color)', desc: localize('scss.builtin.blue', 'Gets the blue component of a color.') },\n        { func: 'mix($color, $color, [$weight])', desc: localize('scss.builtin.mix', 'Mixes two colors together.') },\n        { func: 'hue($color)', desc: localize('scss.builtin.hue', 'Gets the hue component of a color.') },\n        { func: 'saturation($color)', desc: localize('scss.builtin.saturation', 'Gets the saturation component of a color.') },\n        { func: 'lightness($color)', desc: localize('scss.builtin.lightness', 'Gets the lightness component of a color.') },\n        { func: 'adjust-hue($color, $degrees)', desc: localize('scss.builtin.adjust-hue', 'Changes the hue of a color.') },\n        { func: 'lighten($color, $amount)', desc: localize('scss.builtin.lighten', 'Makes a color lighter.') },\n        { func: 'darken($color, $amount)', desc: localize('scss.builtin.darken', 'Makes a color darker.') },\n        { func: 'saturate($color, $amount)', desc: localize('scss.builtin.saturate', 'Makes a color more saturated.') },\n        { func: 'desaturate($color, $amount)', desc: localize('scss.builtin.desaturate', 'Makes a color less saturated.') },\n        { func: 'grayscale($color)', desc: localize('scss.builtin.grayscale', 'Converts a color to grayscale.') },\n        { func: 'complement($color)', desc: localize('scss.builtin.complement', 'Returns the complement of a color.') },\n        { func: 'invert($color)', desc: localize('scss.builtin.invert', 'Returns the inverse of a color.') },\n        { func: 'alpha($color)', desc: localize('scss.builtin.alpha', 'Gets the opacity component of a color.') },\n        { func: 'opacity($color)', desc: 'Gets the alpha component (opacity) of a color.' },\n        { func: 'rgba($color, $alpha)', desc: localize('scss.builtin.rgba', 'Changes the alpha component for a color.') },\n        { func: 'opacify($color, $amount)', desc: localize('scss.builtin.opacify', 'Makes a color more opaque.') },\n        { func: 'fade-in($color, $amount)', desc: localize('scss.builtin.fade-in', 'Makes a color more opaque.') },\n        { func: 'transparentize($color, $amount)', desc: localize('scss.builtin.transparentize', 'Makes a color more transparent.') },\n        { func: 'fade-out($color, $amount)', desc: localize('scss.builtin.fade-out', 'Makes a color more transparent.') },\n        { func: 'adjust-color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])', desc: localize('scss.builtin.adjust-color', 'Increases or decreases one or more components of a color.') },\n        { func: 'scale-color($color, [$red], [$green], [$blue], [$saturation], [$lightness], [$alpha])', desc: localize('scss.builtin.scale-color', 'Fluidly scales one or more properties of a color.') },\n        { func: 'change-color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])', desc: localize('scss.builtin.change-color', 'Changes one or more properties of a color.') },\n        { func: 'ie-hex-str($color)', desc: localize('scss.builtin.ie-hex-str', 'Converts a color into the format understood by IE filters.') }\n    ];\n    SCSSCompletion.selectorFuncs = [\n        { func: 'selector-nest($selectors…)', desc: localize('scss.builtin.selector-nest', 'Nests selector beneath one another like they would be nested in the stylesheet.') },\n        { func: 'selector-append($selectors…)', desc: localize('scss.builtin.selector-append', 'Appends selectors to one another without spaces in between.') },\n        { func: 'selector-extend($selector, $extendee, $extender)', desc: localize('scss.builtin.selector-extend', 'Extends $extendee with $extender within $selector.') },\n        { func: 'selector-replace($selector, $original, $replacement)', desc: localize('scss.builtin.selector-replace', 'Replaces $original with $replacement within $selector.') },\n        { func: 'selector-unify($selector1, $selector2)', desc: localize('scss.builtin.selector-unify', 'Unifies two selectors to produce a selector that matches elements matched by both.') },\n        { func: 'is-superselector($super, $sub)', desc: localize('scss.builtin.is-superselector', 'Returns whether $super matches all the elements $sub does, and possibly more.') },\n        { func: 'simple-selectors($selector)', desc: localize('scss.builtin.simple-selectors', 'Returns the simple selectors that comprise a compound selector.') },\n        { func: 'selector-parse($selector)', desc: localize('scss.builtin.selector-parse', 'Parses a selector into the format returned by &.') }\n    ];\n    SCSSCompletion.builtInFuncs = [\n        { func: 'unquote($string)', desc: localize('scss.builtin.unquote', 'Removes quotes from a string.') },\n        { func: 'quote($string)', desc: localize('scss.builtin.quote', 'Adds quotes to a string.') },\n        { func: 'str-length($string)', desc: localize('scss.builtin.str-length', 'Returns the number of characters in a string.') },\n        { func: 'str-insert($string, $insert, $index)', desc: localize('scss.builtin.str-insert', 'Inserts $insert into $string at $index.') },\n        { func: 'str-index($string, $substring)', desc: localize('scss.builtin.str-index', 'Returns the index of the first occurance of $substring in $string.') },\n        { func: 'str-slice($string, $start-at, [$end-at])', desc: localize('scss.builtin.str-slice', 'Extracts a substring from $string.') },\n        { func: 'to-upper-case($string)', desc: localize('scss.builtin.to-upper-case', 'Converts a string to upper case.') },\n        { func: 'to-lower-case($string)', desc: localize('scss.builtin.to-lower-case', 'Converts a string to lower case.') },\n        { func: 'percentage($number)', desc: localize('scss.builtin.percentage', 'Converts a unitless number to a percentage.'), type: 'percentage' },\n        { func: 'round($number)', desc: localize('scss.builtin.round', 'Rounds a number to the nearest whole number.') },\n        { func: 'ceil($number)', desc: localize('scss.builtin.ceil', 'Rounds a number up to the next whole number.') },\n        { func: 'floor($number)', desc: localize('scss.builtin.floor', 'Rounds a number down to the previous whole number.') },\n        { func: 'abs($number)', desc: localize('scss.builtin.abs', 'Returns the absolute value of a number.') },\n        { func: 'min($numbers)', desc: localize('scss.builtin.min', 'Finds the minimum of several numbers.') },\n        { func: 'max($numbers)', desc: localize('scss.builtin.max', 'Finds the maximum of several numbers.') },\n        { func: 'random([$limit])', desc: localize('scss.builtin.random', 'Returns a random number.') },\n        { func: 'length($list)', desc: localize('scss.builtin.length', 'Returns the length of a list.') },\n        { func: 'nth($list, $n)', desc: localize('scss.builtin.nth', 'Returns a specific item in a list.') },\n        { func: 'set-nth($list, $n, $value)', desc: localize('scss.builtin.set-nth', 'Replaces the nth item in a list.') },\n        { func: 'join($list1, $list2, [$separator])', desc: localize('scss.builtin.join', 'Joins together two lists into one.') },\n        { func: 'append($list1, $val, [$separator])', desc: localize('scss.builtin.append', 'Appends a single value onto the end of a list.') },\n        { func: 'zip($lists)', desc: localize('scss.builtin.zip', 'Combines several lists into a single multidimensional list.') },\n        { func: 'index($list, $value)', desc: localize('scss.builtin.index', 'Returns the position of a value within a list.') },\n        { func: 'list-separator(#list)', desc: localize('scss.builtin.list-separator', 'Returns the separator of a list.') },\n        { func: 'map-get($map, $key)', desc: localize('scss.builtin.map-get', 'Returns the value in a map associated with a given key.') },\n        { func: 'map-merge($map1, $map2)', desc: localize('scss.builtin.map-merge', 'Merges two maps together into a new map.') },\n        { func: 'map-remove($map, $keys)', desc: localize('scss.builtin.map-remove', 'Returns a new map with keys removed.') },\n        { func: 'map-keys($map)', desc: localize('scss.builtin.map-keys', 'Returns a list of all keys in a map.') },\n        { func: 'map-values($map)', desc: localize('scss.builtin.map-values', 'Returns a list of all values in a map.') },\n        { func: 'map-has-key($map, $key)', desc: localize('scss.builtin.map-has-key', 'Returns whether a map has a value associated with a given key.') },\n        { func: 'keywords($args)', desc: localize('scss.builtin.keywords', 'Returns the keywords passed to a function that takes variable arguments.') },\n        { func: 'feature-exists($feature)', desc: localize('scss.builtin.feature-exists', 'Returns whether a feature exists in the current Sass runtime.') },\n        { func: 'variable-exists($name)', desc: localize('scss.builtin.variable-exists', 'Returns whether a variable with the given name exists in the current scope.') },\n        { func: 'global-variable-exists($name)', desc: localize('scss.builtin.global-variable-exists', 'Returns whether a variable with the given name exists in the global scope.') },\n        { func: 'function-exists($name)', desc: localize('scss.builtin.function-exists', 'Returns whether a function with the given name exists.') },\n        { func: 'mixin-exists($name)', desc: localize('scss.builtin.mixin-exists', 'Returns whether a mixin with the given name exists.') },\n        { func: 'inspect($value)', desc: localize('scss.builtin.inspect', 'Returns the string representation of a value as it would be represented in Sass.') },\n        { func: 'type-of($value)', desc: localize('scss.builtin.type-of', 'Returns the type of a value.') },\n        { func: 'unit($number)', desc: localize('scss.builtin.unit', 'Returns the unit(s) associated with a number.') },\n        { func: 'unitless($number)', desc: localize('scss.builtin.unitless', 'Returns whether a number has units.') },\n        { func: 'comparable($number1, $number2)', desc: localize('scss.builtin.comparable', 'Returns whether two numbers can be added, subtracted, or compared.') },\n        { func: 'call($name, $args…)', desc: localize('scss.builtin.call', 'Dynamically calls a Sass function.') }\n    ];\n    SCSSCompletion.scssAtDirectives = [\n        {\n            label: \"@extend\",\n            documentation: localize(\"scss.builtin.@extend\", \"Inherits the styles of another selector.\"),\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@at-root\",\n            documentation: localize(\"scss.builtin.@at-root\", \"Causes one or more rules to be emitted at the root of the document.\"),\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@debug\",\n            documentation: localize(\"scss.builtin.@debug\", \"Prints the value of an expression to the standard error output stream. Useful for debugging complicated Sass files.\"),\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@warn\",\n            documentation: localize(\"scss.builtin.@warn\", \"Prints the value of an expression to the standard error output stream. Useful for libraries that need to warn users of deprecations or recovering from minor mixin usage mistakes. Warnings can be turned off with the `--quiet` command-line option or the `:quiet` Sass option.\"),\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@error\",\n            documentation: localize(\"scss.builtin.@error\", \"Throws the value of an expression as a fatal error with stack trace. Useful for validating arguments to mixins and functions.\"),\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@if\",\n            documentation: localize(\"scss.builtin.@if\", \"Includes the body if the expression does not evaluate to `false` or `null`.\"),\n            insertText: \"@if ${1:expr} {\\n\\t$0\\n}\",\n            insertTextFormat: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@for\",\n            documentation: localize(\"scss.builtin.@for\", \"For loop that repeatedly outputs a set of styles for each `$var` in the `from/through` or `from/to` clause.\"),\n            insertText: \"@for \\\\$${1:var} from ${2:start} ${3|to,through|} ${4:end} {\\n\\t$0\\n}\",\n            insertTextFormat: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@each\",\n            documentation: localize(\"scss.builtin.@each\", \"Each loop that sets `$var` to each item in the list or map, then outputs the styles it contains using that value of `$var`.\"),\n            insertText: \"@each \\\\$${1:var} in ${2:list} {\\n\\t$0\\n}\",\n            insertTextFormat: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@while\",\n            documentation: localize(\"scss.builtin.@while\", \"While loop that takes an expression and repeatedly outputs the nested styles until the statement evaluates to `false`.\"),\n            insertText: \"@while ${1:condition} {\\n\\t$0\\n}\",\n            insertTextFormat: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@mixin\",\n            documentation: localize(\"scss.builtin.@mixin\", \"Defines styles that can be re-used throughout the stylesheet with `@include`.\"),\n            insertText: \"@mixin ${1:name} {\\n\\t$0\\n}\",\n            insertTextFormat: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@include\",\n            documentation: localize(\"scss.builtin.@include\", \"Includes the styles defined by another mixin into the current rule.\"),\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@function\",\n            documentation: localize(\"scss.builtin.@function\", \"Defines complex operations that can be re-used throughout stylesheets.\"),\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        }\n    ];\n    SCSSCompletion.scssModuleLoaders = [\n        {\n            label: \"@use\",\n            documentation: localize(\"scss.builtin.@use\", \"Loads mixins, functions, and variables from other Sass stylesheets as 'modules', and combines CSS from multiple stylesheets together.\"),\n            references: [{ name: 'Sass documentation', url: 'https://sass-lang.com/documentation/at-rules/use' }],\n            insertText: \"@use '$0';\",\n            insertTextFormat: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n        {\n            label: \"@forward\",\n            documentation: localize(\"scss.builtin.@forward\", \"Loads a Sass stylesheet and makes its mixins, functions, and variables available when this stylesheet is loaded with the @use rule.\"),\n            references: [{ name: 'Sass documentation', url: 'https://sass-lang.com/documentation/at-rules/forward' }],\n            insertText: \"@forward '$0';\",\n            insertTextFormat: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"InsertTextFormat\"].Snippet,\n            kind: _cssLanguageTypes_js__WEBPACK_IMPORTED_MODULE_2__[\"CompletionItemKind\"].Keyword\n        },\n    ];\n    SCSSCompletion.scssModuleBuiltIns = [\n        {\n            label: 'sass:math',\n            documentation: localize('scss.builtin.sass:math', 'Provides functions that operate on numbers.'),\n            references: [{ name: 'Sass documentation', url: 'https://sass-lang.com/documentation/modules/math' }]\n        },\n        {\n            label: 'sass:string',\n            documentation: localize('scss.builtin.sass:string', 'Makes it easy to combine, search, or split apart strings.'),\n            references: [{ name: 'Sass documentation', url: 'https://sass-lang.com/documentation/modules/string' }]\n        },\n        {\n            label: 'sass:color',\n            documentation: localize('scss.builtin.sass:color', 'Generates new colors based on existing ones, making it easy to build color themes.'),\n            references: [{ name: 'Sass documentation', url: 'https://sass-lang.com/documentation/modules/color' }]\n        },\n        {\n            label: 'sass:list',\n            documentation: localize('scss.builtin.sass:list', 'Lets you access and modify values in lists.'),\n            references: [{ name: 'Sass documentation', url: 'https://sass-lang.com/documentation/modules/list' }]\n        },\n        {\n            label: 'sass:map',\n            documentation: localize('scss.builtin.sass:map', 'Makes it possible to look up the value associated with a key in a map, and much more.'),\n            references: [{ name: 'Sass documentation', url: 'https://sass-lang.com/documentation/modules/map' }]\n        },\n        {\n            label: 'sass:selector',\n            documentation: localize('scss.builtin.sass:selector', 'Provides access to Sass’s powerful selector engine.'),\n            references: [{ name: 'Sass documentation', url: 'https://sass-lang.com/documentation/modules/selector' }]\n        },\n        {\n            label: 'sass:meta',\n            documentation: localize('scss.builtin.sass:meta', 'Exposes the details of Sass’s inner workings.'),\n            references: [{ name: 'Sass documentation', url: 'https://sass-lang.com/documentation/modules/meta' }]\n        },\n    ];\n    return SCSSCompletion;\n}(_cssCompletion_js__WEBPACK_IMPORTED_MODULE_0__[\"CSSCompletion\"]));\n\n/**\n * Todo @Pine: Remove this and do it through custom data\n */\nfunction addReferencesToDocumentation(items) {\n    items.forEach(function (i) {\n        if (i.documentation && i.references && i.references.length > 0) {\n            var markdownDoc = typeof i.documentation === 'string'\n                ? { kind: 'markdown', value: i.documentation }\n                : { kind: 'markdown', value: i.documentation.value };\n            markdownDoc.value += '\\n\\n';\n            markdownDoc.value += i.references\n                .map(function (r) {\n                return \"[\" + r.name + \"](\" + r.url + \")\";\n            })\n                .join(' | ');\n            i.documentation = markdownDoc;\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssCompletion.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssNavigation.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SCSSNavigation\", function() { return SCSSNavigation; });\n/* harmony import */ var _cssNavigation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/cssNavigation.js\");\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-uri/index.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\");\n/* harmony import */ var _utils_resources_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/resources.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\nvar SCSSNavigation = /** @class */ (function (_super) {\n    __extends(SCSSNavigation, _super);\n    function SCSSNavigation(fileSystemProvider) {\n        return _super.call(this, fileSystemProvider) || this;\n    }\n    SCSSNavigation.prototype.isRawStringDocumentLinkNode = function (node) {\n        return (_super.prototype.isRawStringDocumentLinkNode.call(this, node) ||\n            node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Use ||\n            node.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_1__[\"NodeType\"].Forward);\n    };\n    SCSSNavigation.prototype.resolveRelativeReference = function (ref, documentUri, documentContext) {\n        return __awaiter(this, void 0, void 0, function () {\n            function toPathVariations(uri) {\n                // No valid path\n                if (uri.path === '') {\n                    return undefined;\n                }\n                // No variation for links that ends with suffix\n                if (uri.path.endsWith('.scss') || uri.path.endsWith('.css')) {\n                    return undefined;\n                }\n                // If a link is like a/, try resolving a/index.scss and a/_index.scss\n                if (uri.path.endsWith('/')) {\n                    return [\n                        uri.with({ path: uri.path + 'index.scss' }).toString(),\n                        uri.with({ path: uri.path + '_index.scss' }).toString()\n                    ];\n                }\n                // Use `uri.path` since it's normalized to use `/` in all platforms\n                var pathFragments = uri.path.split('/');\n                var basename = pathFragments[pathFragments.length - 1];\n                var pathWithoutBasename = uri.path.slice(0, -basename.length);\n                // No variation for links such as _a\n                if (basename.startsWith('_')) {\n                    if (uri.path.endsWith('.scss')) {\n                        return undefined;\n                    }\n                    else {\n                        return [uri.with({ path: uri.path + '.scss' }).toString()];\n                    }\n                }\n                var normalizedBasename = basename + '.scss';\n                var documentUriWithBasename = function (newBasename) {\n                    return uri.with({ path: pathWithoutBasename + newBasename }).toString();\n                };\n                var normalizedPath = documentUriWithBasename(normalizedBasename);\n                var underScorePath = documentUriWithBasename('_' + normalizedBasename);\n                var indexPath = documentUriWithBasename(normalizedBasename.slice(0, -5) + '/index.scss');\n                var indexUnderscoreUri = documentUriWithBasename(normalizedBasename.slice(0, -5) + '/_index.scss');\n                var cssPath = documentUriWithBasename(normalizedBasename.slice(0, -5) + '.css');\n                return [normalizedPath, underScorePath, indexPath, indexUnderscoreUri, cssPath];\n            }\n            var target, parsedUri, pathVariations, j, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (Object(_utils_strings_js__WEBPACK_IMPORTED_MODULE_3__[\"startsWith\"])(ref, 'sass:')) {\n                            return [2 /*return*/, undefined]; // sass library\n                        }\n                        return [4 /*yield*/, _super.prototype.resolveRelativeReference.call(this, ref, documentUri, documentContext)];\n                    case 1:\n                        target = _a.sent();\n                        if (!(this.fileSystemProvider && target && Object(_utils_resources_js__WEBPACK_IMPORTED_MODULE_4__[\"extname\"])(target).length === 0)) return [3 /*break*/, 8];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 7, , 8]);\n                        parsedUri = _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_2__[\"URI\"].parse(target);\n                        pathVariations = toPathVariations(parsedUri);\n                        if (!pathVariations) return [3 /*break*/, 6];\n                        j = 0;\n                        _a.label = 3;\n                    case 3:\n                        if (!(j < pathVariations.length)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.fileExists(pathVariations[j])];\n                    case 4:\n                        if (_a.sent()) {\n                            return [2 /*return*/, pathVariations[j]];\n                        }\n                        _a.label = 5;\n                    case 5:\n                        j++;\n                        return [3 /*break*/, 3];\n                    case 6: return [2 /*return*/, undefined];\n                    case 7:\n                        e_1 = _a.sent();\n                        return [3 /*break*/, 8];\n                    case 8: return [2 /*return*/, target];\n                }\n            });\n        });\n    };\n    return SCSSNavigation;\n}(_cssNavigation_js__WEBPACK_IMPORTED_MODULE_0__[\"CSSNavigation\"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/scssNavigation.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Element\", function() { return Element; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RootElement\", function() { return RootElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LabelElement\", function() { return LabelElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toElement\", function() { return toElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectorPrinting\", function() { return SelectorPrinting; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"selectorToElement\", function() { return selectorToElement; });\n/* harmony import */ var _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssNodes.js\");\n/* harmony import */ var _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/parser/cssScanner.js\");\n/* harmony import */ var _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\nvar localize = _fillers_vscode_nls_js__WEBPACK_IMPORTED_MODULE_2__[\"loadMessageBundle\"]();\nvar Element = /** @class */ (function () {\n    function Element() {\n        this.parent = null;\n        this.children = null;\n        this.attributes = null;\n    }\n    Element.prototype.findAttribute = function (name) {\n        if (this.attributes) {\n            for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n                var attribute = _a[_i];\n                if (attribute.name === name) {\n                    return attribute.value;\n                }\n            }\n        }\n        return null;\n    };\n    Element.prototype.addChild = function (child) {\n        if (child instanceof Element) {\n            child.parent = this;\n        }\n        if (!this.children) {\n            this.children = [];\n        }\n        this.children.push(child);\n    };\n    Element.prototype.append = function (text) {\n        if (this.attributes) {\n            var last = this.attributes[this.attributes.length - 1];\n            last.value = last.value + text;\n        }\n    };\n    Element.prototype.prepend = function (text) {\n        if (this.attributes) {\n            var first = this.attributes[0];\n            first.value = text + first.value;\n        }\n    };\n    Element.prototype.findRoot = function () {\n        var curr = this;\n        while (curr.parent && !(curr.parent instanceof RootElement)) {\n            curr = curr.parent;\n        }\n        return curr;\n    };\n    Element.prototype.removeChild = function (child) {\n        if (this.children) {\n            var index = this.children.indexOf(child);\n            if (index !== -1) {\n                this.children.splice(index, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    Element.prototype.addAttr = function (name, value) {\n        if (!this.attributes) {\n            this.attributes = [];\n        }\n        for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n            var attribute = _a[_i];\n            if (attribute.name === name) {\n                attribute.value += ' ' + value;\n                return;\n            }\n        }\n        this.attributes.push({ name: name, value: value });\n    };\n    Element.prototype.clone = function (cloneChildren) {\n        if (cloneChildren === void 0) { cloneChildren = true; }\n        var elem = new Element();\n        if (this.attributes) {\n            elem.attributes = [];\n            for (var _i = 0, _a = this.attributes; _i < _a.length; _i++) {\n                var attribute = _a[_i];\n                elem.addAttr(attribute.name, attribute.value);\n            }\n        }\n        if (cloneChildren && this.children) {\n            elem.children = [];\n            for (var index = 0; index < this.children.length; index++) {\n                elem.addChild(this.children[index].clone());\n            }\n        }\n        return elem;\n    };\n    Element.prototype.cloneWithParent = function () {\n        var clone = this.clone(false);\n        if (this.parent && !(this.parent instanceof RootElement)) {\n            var parentClone = this.parent.cloneWithParent();\n            parentClone.addChild(clone);\n        }\n        return clone;\n    };\n    return Element;\n}());\n\nvar RootElement = /** @class */ (function (_super) {\n    __extends(RootElement, _super);\n    function RootElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return RootElement;\n}(Element));\n\nvar LabelElement = /** @class */ (function (_super) {\n    __extends(LabelElement, _super);\n    function LabelElement(label) {\n        var _this = _super.call(this) || this;\n        _this.addAttr('name', label);\n        return _this;\n    }\n    return LabelElement;\n}(Element));\n\nvar MarkedStringPrinter = /** @class */ (function () {\n    function MarkedStringPrinter(quote) {\n        this.quote = quote;\n        this.result = [];\n        // empty\n    }\n    MarkedStringPrinter.prototype.print = function (element) {\n        this.result = [];\n        if (element instanceof RootElement) {\n            if (element.children) {\n                this.doPrint(element.children, 0);\n            }\n        }\n        else {\n            this.doPrint([element], 0);\n        }\n        var value = this.result.join('\\n');\n        return [{ language: 'html', value: value }];\n    };\n    MarkedStringPrinter.prototype.doPrint = function (elements, indent) {\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            this.doPrintElement(element, indent);\n            if (element.children) {\n                this.doPrint(element.children, indent + 1);\n            }\n        }\n    };\n    MarkedStringPrinter.prototype.writeLine = function (level, content) {\n        var indent = new Array(level + 1).join('  ');\n        this.result.push(indent + content);\n    };\n    MarkedStringPrinter.prototype.doPrintElement = function (element, indent) {\n        var name = element.findAttribute('name');\n        // special case: a simple label\n        if (element instanceof LabelElement || name === '\\u2026') {\n            this.writeLine(indent, name);\n            return;\n        }\n        // the real deal\n        var content = ['<'];\n        // element name\n        if (name) {\n            content.push(name);\n        }\n        else {\n            content.push('element');\n        }\n        // attributes\n        if (element.attributes) {\n            for (var _i = 0, _a = element.attributes; _i < _a.length; _i++) {\n                var attr = _a[_i];\n                if (attr.name !== 'name') {\n                    content.push(' ');\n                    content.push(attr.name);\n                    var value = attr.value;\n                    if (value) {\n                        content.push('=');\n                        content.push(quotes.ensure(value, this.quote));\n                    }\n                }\n            }\n        }\n        content.push('>');\n        this.writeLine(indent, content.join(''));\n    };\n    return MarkedStringPrinter;\n}());\nvar quotes;\n(function (quotes) {\n    function ensure(value, which) {\n        return which + remove(value) + which;\n    }\n    quotes.ensure = ensure;\n    function remove(value) {\n        var match = value.match(/^['\"](.*)[\"']$/);\n        if (match) {\n            return match[1];\n        }\n        return value;\n    }\n    quotes.remove = remove;\n})(quotes || (quotes = {}));\nvar Specificity = /** @class */ (function () {\n    function Specificity() {\n        /** Count of identifiers (e.g., `#app`) */\n        this.id = 0;\n        /** Count of attributes (`[type=\"number\"]`), classes (`.container-fluid`), and pseudo-classes (`:hover`) */\n        this.attr = 0;\n        /** Count of tag names (`div`), and pseudo-elements (`::before`) */\n        this.tag = 0;\n    }\n    return Specificity;\n}());\nfunction toElement(node, parentElement) {\n    var result = new Element();\n    for (var _i = 0, _a = node.getChildren(); _i < _a.length; _i++) {\n        var child = _a[_i];\n        switch (child.type) {\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinator:\n                if (parentElement) {\n                    var segments = child.getText().split('&');\n                    if (segments.length === 1) {\n                        // should not happen\n                        result.addAttr('name', segments[0]);\n                        break;\n                    }\n                    result = parentElement.cloneWithParent();\n                    if (segments[0]) {\n                        var root = result.findRoot();\n                        root.prepend(segments[0]);\n                    }\n                    for (var i = 1; i < segments.length; i++) {\n                        if (i > 1) {\n                            var clone = parentElement.cloneWithParent();\n                            result.addChild(clone.findRoot());\n                            result = clone;\n                        }\n                        result.append(segments[i]);\n                    }\n                }\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorPlaceholder:\n                if (child.matches('@at-root')) {\n                    return result;\n                }\n            // fall through\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ElementNameSelector:\n                var text = child.getText();\n                result.addAttr('name', text === '*' ? 'element' : unescape(text));\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ClassSelector:\n                result.addAttr('class', unescape(child.getText().substring(1)));\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].IdentifierSelector:\n                result.addAttr('id', unescape(child.getText().substring(1)));\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration:\n                result.addAttr('class', child.getName());\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].PseudoSelector:\n                result.addAttr(unescape(child.getText()), '');\n                break;\n            case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].AttributeSelector:\n                var selector = child;\n                var identifier = selector.getIdentifier();\n                if (identifier) {\n                    var expression = selector.getValue();\n                    var operator = selector.getOperator();\n                    var value = void 0;\n                    if (expression && operator) {\n                        switch (unescape(operator.getText())) {\n                            case '|=':\n                                // excatly or followed by -words\n                                value = quotes.remove(unescape(expression.getText())) + \"-\\u2026\";\n                                break;\n                            case '^=':\n                                // prefix\n                                value = quotes.remove(unescape(expression.getText())) + \"\\u2026\";\n                                break;\n                            case '$=':\n                                // suffix\n                                value = \"\\u2026\" + quotes.remove(unescape(expression.getText()));\n                                break;\n                            case '~=':\n                                // one of a list of words\n                                value = \" \\u2026 \" + quotes.remove(unescape(expression.getText())) + \" \\u2026 \";\n                                break;\n                            case '*=':\n                                // substring\n                                value = \"\\u2026\" + quotes.remove(unescape(expression.getText())) + \"\\u2026\";\n                                break;\n                            default:\n                                value = quotes.remove(unescape(expression.getText()));\n                                break;\n                        }\n                    }\n                    result.addAttr(unescape(identifier.getText()), value);\n                }\n                break;\n        }\n    }\n    return result;\n}\nfunction unescape(content) {\n    var scanner = new _parser_cssScanner_js__WEBPACK_IMPORTED_MODULE_1__[\"Scanner\"]();\n    scanner.setSource(content);\n    var token = scanner.scanUnquotedString();\n    if (token) {\n        return token.text;\n    }\n    return content;\n}\nvar SelectorPrinting = /** @class */ (function () {\n    function SelectorPrinting(cssDataManager) {\n        this.cssDataManager = cssDataManager;\n    }\n    SelectorPrinting.prototype.selectorToMarkedString = function (node) {\n        var root = selectorToElement(node);\n        if (root) {\n            var markedStrings = new MarkedStringPrinter('\"').print(root);\n            markedStrings.push(this.selectorToSpecificityMarkedString(node));\n            return markedStrings;\n        }\n        else {\n            return [];\n        }\n    };\n    SelectorPrinting.prototype.simpleSelectorToMarkedString = function (node) {\n        var element = toElement(node);\n        var markedStrings = new MarkedStringPrinter('\"').print(element);\n        markedStrings.push(this.selectorToSpecificityMarkedString(node));\n        return markedStrings;\n    };\n    SelectorPrinting.prototype.isPseudoElementIdentifier = function (text) {\n        var match = text.match(/^::?([\\w-]+)/);\n        if (!match) {\n            return false;\n        }\n        return !!this.cssDataManager.getPseudoElement(\"::\" + match[1]);\n    };\n    SelectorPrinting.prototype.selectorToSpecificityMarkedString = function (node) {\n        var _this = this;\n        //https://www.w3.org/TR/selectors-3/#specificity\n        var calculateScore = function (node) {\n            for (var _i = 0, _a = node.getChildren(); _i < _a.length; _i++) {\n                var element = _a[_i];\n                switch (element.type) {\n                    case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].IdentifierSelector:\n                        specificity.id++;\n                        break;\n                    case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ClassSelector:\n                    case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].AttributeSelector:\n                        specificity.attr++;\n                        break;\n                    case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].ElementNameSelector:\n                        //ignore universal selector\n                        if (element.matches(\"*\")) {\n                            break;\n                        }\n                        specificity.tag++;\n                        break;\n                    case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].PseudoSelector:\n                        var text = element.getText();\n                        if (_this.isPseudoElementIdentifier(text)) {\n                            specificity.tag++; // pseudo element\n                        }\n                        else {\n                            //ignore psuedo class NOT\n                            if (text.match(/^:not/i)) {\n                                break;\n                            }\n                            specificity.attr++; //pseudo class\n                        }\n                        break;\n                }\n                if (element.getChildren().length > 0) {\n                    calculateScore(element);\n                }\n            }\n        };\n        var specificity = new Specificity();\n        calculateScore(node);\n        return localize('specificity', \"[Selector Specificity](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity): ({0}, {1}, {2})\", specificity.id, specificity.attr, specificity.tag);\n    };\n    return SelectorPrinting;\n}());\n\nvar SelectorElementBuilder = /** @class */ (function () {\n    function SelectorElementBuilder(element) {\n        this.prev = null;\n        this.element = element;\n    }\n    SelectorElementBuilder.prototype.processSelector = function (selector) {\n        var parentElement = null;\n        if (!(this.element instanceof RootElement)) {\n            if (selector.getChildren().some(function (c) { return c.hasChildren() && c.getChild(0).type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinator; })) {\n                var curr = this.element.findRoot();\n                if (curr.parent instanceof RootElement) {\n                    parentElement = this.element;\n                    this.element = curr.parent;\n                    this.element.removeChild(curr);\n                    this.prev = null;\n                }\n            }\n        }\n        for (var _i = 0, _a = selector.getChildren(); _i < _a.length; _i++) {\n            var selectorChild = _a[_i];\n            if (selectorChild instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                if (this.prev instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"]) {\n                    var labelElement = new LabelElement('\\u2026');\n                    this.element.addChild(labelElement);\n                    this.element = labelElement;\n                }\n                else if (this.prev && (this.prev.matches('+') || this.prev.matches('~')) && this.element.parent) {\n                    this.element = this.element.parent;\n                }\n                if (this.prev && this.prev.matches('~')) {\n                    this.element.addChild(toElement(selectorChild));\n                    this.element.addChild(new LabelElement('\\u22EE'));\n                }\n                var thisElement = toElement(selectorChild, parentElement);\n                var root = thisElement.findRoot();\n                this.element.addChild(root);\n                this.element = thisElement;\n            }\n            if (selectorChild instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"SimpleSelector\"] ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorParent ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorShadowPiercingDescendant ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorSibling ||\n                selectorChild.type === _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].SelectorCombinatorAllSiblings) {\n                this.prev = selectorChild;\n            }\n        }\n    };\n    return SelectorElementBuilder;\n}());\nfunction isNewSelectorContext(node) {\n    switch (node.type) {\n        case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].MixinDeclaration:\n        case _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"NodeType\"].Stylesheet:\n            return true;\n    }\n    return false;\n}\nfunction selectorToElement(node) {\n    if (node.matches('@at-root')) {\n        return null;\n    }\n    var root = new RootElement();\n    var parentRuleSets = [];\n    var ruleSet = node.getParent();\n    if (ruleSet instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n        var parent = ruleSet.getParent(); // parent of the selector's ruleset\n        while (parent && !isNewSelectorContext(parent)) {\n            if (parent instanceof _parser_cssNodes_js__WEBPACK_IMPORTED_MODULE_0__[\"RuleSet\"]) {\n                if (parent.getSelectors().matches('@at-root')) {\n                    break;\n                }\n                parentRuleSets.push(parent);\n            }\n            parent = parent.getParent();\n        }\n    }\n    var builder = new SelectorElementBuilder(root);\n    for (var i = parentRuleSets.length - 1; i >= 0; i--) {\n        var selector = parentRuleSets[i].getSelectors().getChild(0);\n        if (selector) {\n            builder.processSelector(selector);\n        }\n    }\n    builder.processSelector(node);\n    return root;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/services/selectorPrinting.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findFirst\", function() { return findFirst; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"includes\", function() { return includes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"union\", function() { return union; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nfunction findFirst(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\nfunction includes(array, item) {\n    return array.indexOf(item) !== -1;\n}\nfunction union() {\n    var arrays = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        arrays[_i] = arguments[_i];\n    }\n    var result = [];\n    for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n        var array = arrays_1[_a];\n        for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n            var item = array_1[_b];\n            if (!includes(result, item)) {\n                result.push(item);\n            }\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL2FycmF5cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvX2RlcHMvdnNjb2RlLWNzcy1sYW5ndWFnZXNlcnZpY2UvdXRpbHMvYXJyYXlzLmpzP2M4YzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ndXNlIHN0cmljdCc7XG4vKipcbiAqIFRha2VzIGEgc29ydGVkIGFycmF5IGFuZCBhIGZ1bmN0aW9uIHAuIFRoZSBhcnJheSBpcyBzb3J0ZWQgaW4gc3VjaCBhIHdheSB0aGF0IGFsbCBlbGVtZW50cyB3aGVyZSBwKHgpIGlzIGZhbHNlXG4gKiBhcmUgbG9jYXRlZCBiZWZvcmUgYWxsIGVsZW1lbnRzIHdoZXJlIHAoeCkgaXMgdHJ1ZS5cbiAqIEByZXR1cm5zIHRoZSBsZWFzdCB4IGZvciB3aGljaCBwKHgpIGlzIHRydWUgb3IgYXJyYXkubGVuZ3RoIGlmIG5vIGVsZW1lbnQgZnVsbGZpbGxzIHRoZSBnaXZlbiBmdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbmRGaXJzdChhcnJheSwgcCkge1xuICAgIHZhciBsb3cgPSAwLCBoaWdoID0gYXJyYXkubGVuZ3RoO1xuICAgIGlmIChoaWdoID09PSAwKSB7XG4gICAgICAgIHJldHVybiAwOyAvLyBubyBjaGlsZHJlblxuICAgIH1cbiAgICB3aGlsZSAobG93IDwgaGlnaCkge1xuICAgICAgICB2YXIgbWlkID0gTWF0aC5mbG9vcigobG93ICsgaGlnaCkgLyAyKTtcbiAgICAgICAgaWYgKHAoYXJyYXlbbWlkXSkpIHtcbiAgICAgICAgICAgIGhpZ2ggPSBtaWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsb3cgPSBtaWQgKyAxO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBsb3c7XG59XG5leHBvcnQgZnVuY3Rpb24gaW5jbHVkZXMoYXJyYXksIGl0ZW0pIHtcbiAgICByZXR1cm4gYXJyYXkuaW5kZXhPZihpdGVtKSAhPT0gLTE7XG59XG5leHBvcnQgZnVuY3Rpb24gdW5pb24oKSB7XG4gICAgdmFyIGFycmF5cyA9IFtdO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIGFycmF5c1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgZm9yICh2YXIgX2EgPSAwLCBhcnJheXNfMSA9IGFycmF5czsgX2EgPCBhcnJheXNfMS5sZW5ndGg7IF9hKyspIHtcbiAgICAgICAgdmFyIGFycmF5ID0gYXJyYXlzXzFbX2FdO1xuICAgICAgICBmb3IgKHZhciBfYiA9IDAsIGFycmF5XzEgPSBhcnJheTsgX2IgPCBhcnJheV8xLmxlbmd0aDsgX2IrKykge1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSBhcnJheV8xW19iXTtcbiAgICAgICAgICAgIGlmICghaW5jbHVkZXMocmVzdWx0LCBpdGVtKSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/arrays.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/objects.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"values\", function() { return values; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return isDefined; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction values(obj) {\n    return Object.keys(obj).map(function (key) { return obj[key]; });\n}\nfunction isDefined(obj) {\n    return typeof obj !== 'undefined';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL29iamVjdHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL29iamVjdHMuanM/MTIxNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCBmdW5jdGlvbiB2YWx1ZXMob2JqKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikubWFwKGZ1bmN0aW9uIChrZXkpIHsgcmV0dXJuIG9ialtrZXldOyB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0RlZmluZWQob2JqKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmogIT09ICd1bmRlZmluZWQnO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/objects.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/resources.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAbsolutePath\", function() { return isAbsolutePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dirname\", function() { return dirname; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"basename\", function() { return basename; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"extname\", function() { return extname; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resolvePath\", function() { return resolvePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalizePath\", function() { return normalizePath; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"joinPath\", function() { return joinPath; });\n/* harmony import */ var _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-uri/index.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Slash = '/'.charCodeAt(0);\nvar Dot = '.'.charCodeAt(0);\nfunction isAbsolutePath(path) {\n    return path.charCodeAt(0) === Slash;\n}\nfunction dirname(uri) {\n    var lastIndexOfSlash = uri.lastIndexOf('/');\n    return lastIndexOfSlash !== -1 ? uri.substr(0, lastIndexOfSlash) : '';\n}\nfunction basename(uri) {\n    var lastIndexOfSlash = uri.lastIndexOf('/');\n    return uri.substr(lastIndexOfSlash + 1);\n}\nfunction extname(uri) {\n    for (var i = uri.length - 1; i >= 0; i--) {\n        var ch = uri.charCodeAt(i);\n        if (ch === Dot) {\n            if (i > 0 && uri.charCodeAt(i - 1) !== Slash) {\n                return uri.substr(i);\n            }\n            else {\n                break;\n            }\n        }\n        else if (ch === Slash) {\n            break;\n        }\n    }\n    return '';\n}\nfunction resolvePath(uriString, path) {\n    if (isAbsolutePath(path)) {\n        var uri = _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_0__[\"URI\"].parse(uriString);\n        var parts = path.split('/');\n        return uri.with({ path: normalizePath(parts) }).toString();\n    }\n    return joinPath(uriString, path);\n}\nfunction normalizePath(parts) {\n    var newParts = [];\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        if (part.length === 0 || part.length === 1 && part.charCodeAt(0) === Dot) {\n            // ignore\n        }\n        else if (part.length === 2 && part.charCodeAt(0) === Dot && part.charCodeAt(1) === Dot) {\n            newParts.pop();\n        }\n        else {\n            newParts.push(part);\n        }\n    }\n    if (parts.length > 1 && parts[parts.length - 1].length === 0) {\n        newParts.push('');\n    }\n    var res = newParts.join('/');\n    if (parts[0].length === 0) {\n        res = '/' + res;\n    }\n    return res;\n}\nfunction joinPath(uriString) {\n    var paths = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        paths[_i - 1] = arguments[_i];\n    }\n    var uri = _vscode_uri_index_js__WEBPACK_IMPORTED_MODULE_0__[\"URI\"].parse(uriString);\n    var parts = uri.path.split('/');\n    for (var _a = 0, paths_1 = paths; _a < paths_1.length; _a++) {\n        var path = paths_1[_a];\n        parts.push.apply(parts, path.split('/'));\n    }\n    return uri.with({ path: normalizePath(parts) }).toString();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL3Jlc291cmNlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvX2RlcHMvdnNjb2RlLWNzcy1sYW5ndWFnZXNlcnZpY2UvdXRpbHMvcmVzb3VyY2VzLmpzP2VlMzAiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBVUkkgfSBmcm9tIFwiLi4vLi4vdnNjb2RlLXVyaS9pbmRleC5qc1wiO1xudmFyIFNsYXNoID0gJy8nLmNoYXJDb2RlQXQoMCk7XG52YXIgRG90ID0gJy4nLmNoYXJDb2RlQXQoMCk7XG5leHBvcnQgZnVuY3Rpb24gaXNBYnNvbHV0ZVBhdGgocGF0aCkge1xuICAgIHJldHVybiBwYXRoLmNoYXJDb2RlQXQoMCkgPT09IFNsYXNoO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRpcm5hbWUodXJpKSB7XG4gICAgdmFyIGxhc3RJbmRleE9mU2xhc2ggPSB1cmkubGFzdEluZGV4T2YoJy8nKTtcbiAgICByZXR1cm4gbGFzdEluZGV4T2ZTbGFzaCAhPT0gLTEgPyB1cmkuc3Vic3RyKDAsIGxhc3RJbmRleE9mU2xhc2gpIDogJyc7XG59XG5leHBvcnQgZnVuY3Rpb24gYmFzZW5hbWUodXJpKSB7XG4gICAgdmFyIGxhc3RJbmRleE9mU2xhc2ggPSB1cmkubGFzdEluZGV4T2YoJy8nKTtcbiAgICByZXR1cm4gdXJpLnN1YnN0cihsYXN0SW5kZXhPZlNsYXNoICsgMSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZXh0bmFtZSh1cmkpIHtcbiAgICBmb3IgKHZhciBpID0gdXJpLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIHZhciBjaCA9IHVyaS5jaGFyQ29kZUF0KGkpO1xuICAgICAgICBpZiAoY2ggPT09IERvdCkge1xuICAgICAgICAgICAgaWYgKGkgPiAwICYmIHVyaS5jaGFyQ29kZUF0KGkgLSAxKSAhPT0gU2xhc2gpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdXJpLnN1YnN0cihpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGNoID09PSBTbGFzaCkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuICcnO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVQYXRoKHVyaVN0cmluZywgcGF0aCkge1xuICAgIGlmIChpc0Fic29sdXRlUGF0aChwYXRoKSkge1xuICAgICAgICB2YXIgdXJpID0gVVJJLnBhcnNlKHVyaVN0cmluZyk7XG4gICAgICAgIHZhciBwYXJ0cyA9IHBhdGguc3BsaXQoJy8nKTtcbiAgICAgICAgcmV0dXJuIHVyaS53aXRoKHsgcGF0aDogbm9ybWFsaXplUGF0aChwYXJ0cykgfSkudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgcmV0dXJuIGpvaW5QYXRoKHVyaVN0cmluZywgcGF0aCk7XG59XG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplUGF0aChwYXJ0cykge1xuICAgIHZhciBuZXdQYXJ0cyA9IFtdO1xuICAgIGZvciAodmFyIF9pID0gMCwgcGFydHNfMSA9IHBhcnRzOyBfaSA8IHBhcnRzXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIHZhciBwYXJ0ID0gcGFydHNfMVtfaV07XG4gICAgICAgIGlmIChwYXJ0Lmxlbmd0aCA9PT0gMCB8fCBwYXJ0Lmxlbmd0aCA9PT0gMSAmJiBwYXJ0LmNoYXJDb2RlQXQoMCkgPT09IERvdCkge1xuICAgICAgICAgICAgLy8gaWdub3JlXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGFydC5sZW5ndGggPT09IDIgJiYgcGFydC5jaGFyQ29kZUF0KDApID09PSBEb3QgJiYgcGFydC5jaGFyQ29kZUF0KDEpID09PSBEb3QpIHtcbiAgICAgICAgICAgIG5ld1BhcnRzLnBvcCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbmV3UGFydHMucHVzaChwYXJ0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAocGFydHMubGVuZ3RoID4gMSAmJiBwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgbmV3UGFydHMucHVzaCgnJyk7XG4gICAgfVxuICAgIHZhciByZXMgPSBuZXdQYXJ0cy5qb2luKCcvJyk7XG4gICAgaWYgKHBhcnRzWzBdLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXMgPSAnLycgKyByZXM7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG5leHBvcnQgZnVuY3Rpb24gam9pblBhdGgodXJpU3RyaW5nKSB7XG4gICAgdmFyIHBhdGhzID0gW107XG4gICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgcGF0aHNbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgfVxuICAgIHZhciB1cmkgPSBVUkkucGFyc2UodXJpU3RyaW5nKTtcbiAgICB2YXIgcGFydHMgPSB1cmkucGF0aC5zcGxpdCgnLycpO1xuICAgIGZvciAodmFyIF9hID0gMCwgcGF0aHNfMSA9IHBhdGhzOyBfYSA8IHBhdGhzXzEubGVuZ3RoOyBfYSsrKSB7XG4gICAgICAgIHZhciBwYXRoID0gcGF0aHNfMVtfYV07XG4gICAgICAgIHBhcnRzLnB1c2guYXBwbHkocGFydHMsIHBhdGguc3BsaXQoJy8nKSk7XG4gICAgfVxuICAgIHJldHVybiB1cmkud2l0aCh7IHBhdGg6IG5vcm1hbGl6ZVBhdGgocGFydHMpIH0pLnRvU3RyaW5nKCk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/resources.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWith\", function() { return startsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"endsWith\", function() { return endsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"difference\", function() { return difference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLimitedString\", function() { return getLimitedString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trim\", function() { return trim; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nfunction endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Computes the difference score for two strings. More similar strings have a higher score.\n * We use largest common subsequence dynamic programming approach but penalize in the end for length differences.\n * Strings that have a large length difference will get a bad default score 0.\n * Complexity - both time and space O(first.length * second.length)\n * Dynamic programming LCS computation http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n *\n * @param first a string\n * @param second a string\n */\nfunction difference(first, second, maxLenDelta) {\n    if (maxLenDelta === void 0) { maxLenDelta = 4; }\n    var lengthDifference = Math.abs(first.length - second.length);\n    // We only compute score if length of the currentWord and length of entry.name are similar.\n    if (lengthDifference > maxLenDelta) {\n        return 0;\n    }\n    // Initialize LCS (largest common subsequence) matrix.\n    var LCS = [];\n    var zeroArray = [];\n    var i, j;\n    for (i = 0; i < second.length + 1; ++i) {\n        zeroArray.push(0);\n    }\n    for (i = 0; i < first.length + 1; ++i) {\n        LCS.push(zeroArray);\n    }\n    for (i = 1; i < first.length + 1; ++i) {\n        for (j = 1; j < second.length + 1; ++j) {\n            if (first[i - 1] === second[j - 1]) {\n                LCS[i][j] = LCS[i - 1][j - 1] + 1;\n            }\n            else {\n                LCS[i][j] = Math.max(LCS[i - 1][j], LCS[i][j - 1]);\n            }\n        }\n    }\n    return LCS[first.length][second.length] - Math.sqrt(lengthDifference);\n}\n/**\n * Limit of string length.\n */\nfunction getLimitedString(str, ellipsis) {\n    if (ellipsis === void 0) { ellipsis = true; }\n    if (!str) {\n        return '';\n    }\n    if (str.length < 140) {\n        return str;\n    }\n    return str.slice(0, 140) + (ellipsis ? '\\u2026' : '');\n}\n/**\n * Limit of string length.\n */\nfunction trim(str, regexp) {\n    var m = regexp.exec(str);\n    if (m && m[0].length) {\n        return str.substr(0, str.length - m[0].length);\n    }\n    return str;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL3N0cmluZ3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL19kZXBzL3ZzY29kZS1jc3MtbGFuZ3VhZ2VzZXJ2aWNlL3V0aWxzL3N0cmluZ3MuanM/NDFhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbid1c2Ugc3RyaWN0JztcbmV4cG9ydCBmdW5jdGlvbiBzdGFydHNXaXRoKGhheXN0YWNrLCBuZWVkbGUpIHtcbiAgICBpZiAoaGF5c3RhY2subGVuZ3RoIDwgbmVlZGxlLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmVlZGxlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChoYXlzdGFja1tpXSAhPT0gbmVlZGxlW2ldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vKipcbiAqIERldGVybWluZXMgaWYgaGF5c3RhY2sgZW5kcyB3aXRoIG5lZWRsZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuZHNXaXRoKGhheXN0YWNrLCBuZWVkbGUpIHtcbiAgICB2YXIgZGlmZiA9IGhheXN0YWNrLmxlbmd0aCAtIG5lZWRsZS5sZW5ndGg7XG4gICAgaWYgKGRpZmYgPiAwKSB7XG4gICAgICAgIHJldHVybiBoYXlzdGFjay5sYXN0SW5kZXhPZihuZWVkbGUpID09PSBkaWZmO1xuICAgIH1cbiAgICBlbHNlIGlmIChkaWZmID09PSAwKSB7XG4gICAgICAgIHJldHVybiBoYXlzdGFjayA9PT0gbmVlZGxlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbi8qKlxuICogQ29tcHV0ZXMgdGhlIGRpZmZlcmVuY2Ugc2NvcmUgZm9yIHR3byBzdHJpbmdzLiBNb3JlIHNpbWlsYXIgc3RyaW5ncyBoYXZlIGEgaGlnaGVyIHNjb3JlLlxuICogV2UgdXNlIGxhcmdlc3QgY29tbW9uIHN1YnNlcXVlbmNlIGR5bmFtaWMgcHJvZ3JhbW1pbmcgYXBwcm9hY2ggYnV0IHBlbmFsaXplIGluIHRoZSBlbmQgZm9yIGxlbmd0aCBkaWZmZXJlbmNlcy5cbiAqIFN0cmluZ3MgdGhhdCBoYXZlIGEgbGFyZ2UgbGVuZ3RoIGRpZmZlcmVuY2Ugd2lsbCBnZXQgYSBiYWQgZGVmYXVsdCBzY29yZSAwLlxuICogQ29tcGxleGl0eSAtIGJvdGggdGltZSBhbmQgc3BhY2UgTyhmaXJzdC5sZW5ndGggKiBzZWNvbmQubGVuZ3RoKVxuICogRHluYW1pYyBwcm9ncmFtbWluZyBMQ1MgY29tcHV0YXRpb24gaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Mb25nZXN0X2NvbW1vbl9zdWJzZXF1ZW5jZV9wcm9ibGVtXG4gKlxuICogQHBhcmFtIGZpcnN0IGEgc3RyaW5nXG4gKiBAcGFyYW0gc2Vjb25kIGEgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkaWZmZXJlbmNlKGZpcnN0LCBzZWNvbmQsIG1heExlbkRlbHRhKSB7XG4gICAgaWYgKG1heExlbkRlbHRhID09PSB2b2lkIDApIHsgbWF4TGVuRGVsdGEgPSA0OyB9XG4gICAgdmFyIGxlbmd0aERpZmZlcmVuY2UgPSBNYXRoLmFicyhmaXJzdC5sZW5ndGggLSBzZWNvbmQubGVuZ3RoKTtcbiAgICAvLyBXZSBvbmx5IGNvbXB1dGUgc2NvcmUgaWYgbGVuZ3RoIG9mIHRoZSBjdXJyZW50V29yZCBhbmQgbGVuZ3RoIG9mIGVudHJ5Lm5hbWUgYXJlIHNpbWlsYXIuXG4gICAgaWYgKGxlbmd0aERpZmZlcmVuY2UgPiBtYXhMZW5EZWx0YSkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG4gICAgLy8gSW5pdGlhbGl6ZSBMQ1MgKGxhcmdlc3QgY29tbW9uIHN1YnNlcXVlbmNlKSBtYXRyaXguXG4gICAgdmFyIExDUyA9IFtdO1xuICAgIHZhciB6ZXJvQXJyYXkgPSBbXTtcbiAgICB2YXIgaSwgajtcbiAgICBmb3IgKGkgPSAwOyBpIDwgc2Vjb25kLmxlbmd0aCArIDE7ICsraSkge1xuICAgICAgICB6ZXJvQXJyYXkucHVzaCgwKTtcbiAgICB9XG4gICAgZm9yIChpID0gMDsgaSA8IGZpcnN0Lmxlbmd0aCArIDE7ICsraSkge1xuICAgICAgICBMQ1MucHVzaCh6ZXJvQXJyYXkpO1xuICAgIH1cbiAgICBmb3IgKGkgPSAxOyBpIDwgZmlyc3QubGVuZ3RoICsgMTsgKytpKSB7XG4gICAgICAgIGZvciAoaiA9IDE7IGogPCBzZWNvbmQubGVuZ3RoICsgMTsgKytqKSB7XG4gICAgICAgICAgICBpZiAoZmlyc3RbaSAtIDFdID09PSBzZWNvbmRbaiAtIDFdKSB7XG4gICAgICAgICAgICAgICAgTENTW2ldW2pdID0gTENTW2kgLSAxXVtqIC0gMV0gKyAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgTENTW2ldW2pdID0gTWF0aC5tYXgoTENTW2kgLSAxXVtqXSwgTENTW2ldW2ogLSAxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIExDU1tmaXJzdC5sZW5ndGhdW3NlY29uZC5sZW5ndGhdIC0gTWF0aC5zcXJ0KGxlbmd0aERpZmZlcmVuY2UpO1xufVxuLyoqXG4gKiBMaW1pdCBvZiBzdHJpbmcgbGVuZ3RoLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0TGltaXRlZFN0cmluZyhzdHIsIGVsbGlwc2lzKSB7XG4gICAgaWYgKGVsbGlwc2lzID09PSB2b2lkIDApIHsgZWxsaXBzaXMgPSB0cnVlOyB9XG4gICAgaWYgKCFzdHIpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICBpZiAoc3RyLmxlbmd0aCA8IDE0MCkge1xuICAgICAgICByZXR1cm4gc3RyO1xuICAgIH1cbiAgICByZXR1cm4gc3RyLnNsaWNlKDAsIDE0MCkgKyAoZWxsaXBzaXMgPyAnXFx1MjAyNicgOiAnJyk7XG59XG4vKipcbiAqIExpbWl0IG9mIHN0cmluZyBsZW5ndGguXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cmltKHN0ciwgcmVnZXhwKSB7XG4gICAgdmFyIG0gPSByZWdleHAuZXhlYyhzdHIpO1xuICAgIGlmIChtICYmIG1bMF0ubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBzdHIuc3Vic3RyKDAsIHN0ci5sZW5ndGggLSBtWzBdLmxlbmd0aCk7XG4gICAgfVxuICAgIHJldHVybiBzdHI7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/utils/strings.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-textdocument/lib/esm/main.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocument\", function() { return TextDocument; });\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (changes, version) {\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                var range = getWellformedRange(change.range);\n                // update content\n                var startOffset = this.offsetAt(range.start);\n                var endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                var startLine = Math.max(range.start.line, 0);\n                var endLine = Math.max(range.end.line, 0);\n                var lineOffsets = this._lineOffsets;\n                var addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (var i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice.apply(lineOffsets, [startLine + 1, endLine - startLine].concat(addedLineOffsets));\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                var diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (var i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return { line: line, character: offset - lineOffsets[line] };\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.isIncremental = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    };\n    FullTextDocument.isFull = function (event) {\n        var candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    };\n    return FullTextDocument;\n}());\nvar TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifing its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits.map(getWellformedEdit), function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = 0;\n        var spans = [];\n        for (var _i = 0, sortedEdits_1 = sortedEdits; _i < sortedEdits_1.length; _i++) {\n            var e = sortedEdits_1[_i];\n            var startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    var p = (data.length / 2) | 0;\n    var left = data.slice(0, p);\n    var right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    var leftIdx = 0;\n    var rightIdx = 0;\n    var i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        var ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset) {\n    if (textOffset === void 0) { textOffset = 0; }\n    var result = isAtLineStart ? [textOffset] : [];\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charCodeAt(i);\n        if (ch === 13 /* CarriageReturn */ || ch === 10 /* LineFeed */) {\n            if (ch === 13 /* CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction getWellformedRange(range) {\n    var start = range.start;\n    var end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    var range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range: range };\n    }\n    return textEdit;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-languageserver-textdocument/lib/esm/main.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-uri/index.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"URI\", function() { return URI; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"uriToFsPath\", function() { return uriToFsPath; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nvar isWindows;\nif (typeof process === 'object') {\n    isWindows = process.platform === 'win32';\n}\nelse if (typeof navigator === 'object') {\n    var userAgent = navigator.userAgent;\n    isWindows = userAgent.indexOf('Windows') >= 0;\n}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\nfunction isLowerAsciiHex(code) {\n    return code >= 97 /* a */ && code <= 102 /* f */;\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n//#endregion\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return uriToFsPath(this, false);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // /**\n    //  * Join a URI path with path fragments and normalizes the resulting path.\n    //  *\n    //  * @param uri The input URI.\n    //  * @param pathFragment The path fragment to add to the URI path.\n    //  * @returns The resulting URI.\n    //  */\n    // static joinPath(uri: URI, ...pathFragment: string[]): URI {\n    // \tif (!uri.path) {\n    // \t\tthrow new Error(`[UriError]: cannot call joinPaths on URI without path`);\n    // \t}\n    // \tlet newPath: string;\n    // \tif (isWindows && uri.scheme === 'file') {\n    // \t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n    // \t} else {\n    // \t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n    // \t}\n    // \treturn uri.with({ path: newPath });\n    // }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    };\n    return URI;\n}());\n\nvar _pathSepMarker = isWindows ? 1 : undefined;\n// eslint-disable-next-line @typescript-eslint/class-name-casing\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = uriToFsPath(this, false);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction uriToFsPath(uri, keepDriveLetterCasing) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nvar _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, function (match) { return decodeURIComponentGraceful(match); });\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(\"./node_modules/process/browser.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-uri/index.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/cssMode.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupMode\", function() { return setupMode; });\n/* harmony import */ var _workerManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/workerManager.js\");\n/* harmony import */ var _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js\");\n/* harmony import */ var _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/monaco-editor-core.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\nfunction setupMode(defaults) {\n    var disposables = [];\n    var providers = [];\n    var client = new _workerManager_js__WEBPACK_IMPORTED_MODULE_0__[\"WorkerManager\"](defaults);\n    disposables.push(client);\n    var worker = function () {\n        var uris = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            uris[_i] = arguments[_i];\n        }\n        return client.getLanguageServiceWorker.apply(client, uris);\n    };\n    function registerProviders() {\n        var languageId = defaults.languageId, modeConfiguration = defaults.modeConfiguration;\n        disposeAll(providers);\n        if (modeConfiguration.completionItems) {\n            providers.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__[\"languages\"].registerCompletionItemProvider(languageId, new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"CompletionAdapter\"](worker)));\n        }\n        if (modeConfiguration.hovers) {\n            providers.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__[\"languages\"].registerHoverProvider(languageId, new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"HoverAdapter\"](worker)));\n        }\n        if (modeConfiguration.documentHighlights) {\n            providers.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__[\"languages\"].registerDocumentHighlightProvider(languageId, new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"DocumentHighlightAdapter\"](worker)));\n        }\n        if (modeConfiguration.definitions) {\n            providers.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__[\"languages\"].registerDefinitionProvider(languageId, new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"DefinitionAdapter\"](worker)));\n        }\n        if (modeConfiguration.references) {\n            providers.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__[\"languages\"].registerReferenceProvider(languageId, new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceAdapter\"](worker)));\n        }\n        if (modeConfiguration.documentSymbols) {\n            providers.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__[\"languages\"].registerDocumentSymbolProvider(languageId, new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"DocumentSymbolAdapter\"](worker)));\n        }\n        if (modeConfiguration.rename) {\n            providers.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__[\"languages\"].registerRenameProvider(languageId, new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"RenameAdapter\"](worker)));\n        }\n        if (modeConfiguration.colors) {\n            providers.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__[\"languages\"].registerColorProvider(languageId, new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"DocumentColorAdapter\"](worker)));\n        }\n        if (modeConfiguration.foldingRanges) {\n            providers.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__[\"languages\"].registerFoldingRangeProvider(languageId, new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"FoldingRangeAdapter\"](worker)));\n        }\n        if (modeConfiguration.diagnostics) {\n            providers.push(new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"DiagnosticsAdapter\"](languageId, worker, defaults));\n        }\n        if (modeConfiguration.selectionRanges) {\n            providers.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_2__[\"languages\"].registerSelectionRangeProvider(languageId, new _languageFeatures_js__WEBPACK_IMPORTED_MODULE_1__[\"SelectionRangeAdapter\"](worker)));\n        }\n    }\n    registerProviders();\n    disposables.push(asDisposable(providers));\n    return asDisposable(disposables);\n}\nfunction asDisposable(disposables) {\n    return { dispose: function () { return disposeAll(disposables); } };\n}\nfunction disposeAll(disposables) {\n    while (disposables.length) {\n        disposables.pop().dispose();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL2Nzc01vZGUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL2Nzc01vZGUuanM/ZGI0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IFdvcmtlck1hbmFnZXIgfSBmcm9tICcuL3dvcmtlck1hbmFnZXIuanMnO1xuaW1wb3J0ICogYXMgbGFuZ3VhZ2VGZWF0dXJlcyBmcm9tICcuL2xhbmd1YWdlRmVhdHVyZXMuanMnO1xuaW1wb3J0IHsgbGFuZ3VhZ2VzIH0gZnJvbSAnLi9maWxsZXJzL21vbmFjby1lZGl0b3ItY29yZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gc2V0dXBNb2RlKGRlZmF1bHRzKSB7XG4gICAgdmFyIGRpc3Bvc2FibGVzID0gW107XG4gICAgdmFyIHByb3ZpZGVycyA9IFtdO1xuICAgIHZhciBjbGllbnQgPSBuZXcgV29ya2VyTWFuYWdlcihkZWZhdWx0cyk7XG4gICAgZGlzcG9zYWJsZXMucHVzaChjbGllbnQpO1xuICAgIHZhciB3b3JrZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB1cmlzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB1cmlzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNsaWVudC5nZXRMYW5ndWFnZVNlcnZpY2VXb3JrZXIuYXBwbHkoY2xpZW50LCB1cmlzKTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHJlZ2lzdGVyUHJvdmlkZXJzKCkge1xuICAgICAgICB2YXIgbGFuZ3VhZ2VJZCA9IGRlZmF1bHRzLmxhbmd1YWdlSWQsIG1vZGVDb25maWd1cmF0aW9uID0gZGVmYXVsdHMubW9kZUNvbmZpZ3VyYXRpb247XG4gICAgICAgIGRpc3Bvc2VBbGwocHJvdmlkZXJzKTtcbiAgICAgICAgaWYgKG1vZGVDb25maWd1cmF0aW9uLmNvbXBsZXRpb25JdGVtcykge1xuICAgICAgICAgICAgcHJvdmlkZXJzLnB1c2gobGFuZ3VhZ2VzLnJlZ2lzdGVyQ29tcGxldGlvbkl0ZW1Qcm92aWRlcihsYW5ndWFnZUlkLCBuZXcgbGFuZ3VhZ2VGZWF0dXJlcy5Db21wbGV0aW9uQWRhcHRlcih3b3JrZXIpKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1vZGVDb25maWd1cmF0aW9uLmhvdmVycykge1xuICAgICAgICAgICAgcHJvdmlkZXJzLnB1c2gobGFuZ3VhZ2VzLnJlZ2lzdGVySG92ZXJQcm92aWRlcihsYW5ndWFnZUlkLCBuZXcgbGFuZ3VhZ2VGZWF0dXJlcy5Ib3ZlckFkYXB0ZXIod29ya2VyKSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb2RlQ29uZmlndXJhdGlvbi5kb2N1bWVudEhpZ2hsaWdodHMpIHtcbiAgICAgICAgICAgIHByb3ZpZGVycy5wdXNoKGxhbmd1YWdlcy5yZWdpc3RlckRvY3VtZW50SGlnaGxpZ2h0UHJvdmlkZXIobGFuZ3VhZ2VJZCwgbmV3IGxhbmd1YWdlRmVhdHVyZXMuRG9jdW1lbnRIaWdobGlnaHRBZGFwdGVyKHdvcmtlcikpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobW9kZUNvbmZpZ3VyYXRpb24uZGVmaW5pdGlvbnMpIHtcbiAgICAgICAgICAgIHByb3ZpZGVycy5wdXNoKGxhbmd1YWdlcy5yZWdpc3RlckRlZmluaXRpb25Qcm92aWRlcihsYW5ndWFnZUlkLCBuZXcgbGFuZ3VhZ2VGZWF0dXJlcy5EZWZpbml0aW9uQWRhcHRlcih3b3JrZXIpKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1vZGVDb25maWd1cmF0aW9uLnJlZmVyZW5jZXMpIHtcbiAgICAgICAgICAgIHByb3ZpZGVycy5wdXNoKGxhbmd1YWdlcy5yZWdpc3RlclJlZmVyZW5jZVByb3ZpZGVyKGxhbmd1YWdlSWQsIG5ldyBsYW5ndWFnZUZlYXR1cmVzLlJlZmVyZW5jZUFkYXB0ZXIod29ya2VyKSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb2RlQ29uZmlndXJhdGlvbi5kb2N1bWVudFN5bWJvbHMpIHtcbiAgICAgICAgICAgIHByb3ZpZGVycy5wdXNoKGxhbmd1YWdlcy5yZWdpc3RlckRvY3VtZW50U3ltYm9sUHJvdmlkZXIobGFuZ3VhZ2VJZCwgbmV3IGxhbmd1YWdlRmVhdHVyZXMuRG9jdW1lbnRTeW1ib2xBZGFwdGVyKHdvcmtlcikpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobW9kZUNvbmZpZ3VyYXRpb24ucmVuYW1lKSB7XG4gICAgICAgICAgICBwcm92aWRlcnMucHVzaChsYW5ndWFnZXMucmVnaXN0ZXJSZW5hbWVQcm92aWRlcihsYW5ndWFnZUlkLCBuZXcgbGFuZ3VhZ2VGZWF0dXJlcy5SZW5hbWVBZGFwdGVyKHdvcmtlcikpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobW9kZUNvbmZpZ3VyYXRpb24uY29sb3JzKSB7XG4gICAgICAgICAgICBwcm92aWRlcnMucHVzaChsYW5ndWFnZXMucmVnaXN0ZXJDb2xvclByb3ZpZGVyKGxhbmd1YWdlSWQsIG5ldyBsYW5ndWFnZUZlYXR1cmVzLkRvY3VtZW50Q29sb3JBZGFwdGVyKHdvcmtlcikpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobW9kZUNvbmZpZ3VyYXRpb24uZm9sZGluZ1Jhbmdlcykge1xuICAgICAgICAgICAgcHJvdmlkZXJzLnB1c2gobGFuZ3VhZ2VzLnJlZ2lzdGVyRm9sZGluZ1JhbmdlUHJvdmlkZXIobGFuZ3VhZ2VJZCwgbmV3IGxhbmd1YWdlRmVhdHVyZXMuRm9sZGluZ1JhbmdlQWRhcHRlcih3b3JrZXIpKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1vZGVDb25maWd1cmF0aW9uLmRpYWdub3N0aWNzKSB7XG4gICAgICAgICAgICBwcm92aWRlcnMucHVzaChuZXcgbGFuZ3VhZ2VGZWF0dXJlcy5EaWFnbm9zdGljc0FkYXB0ZXIobGFuZ3VhZ2VJZCwgd29ya2VyLCBkZWZhdWx0cykpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb2RlQ29uZmlndXJhdGlvbi5zZWxlY3Rpb25SYW5nZXMpIHtcbiAgICAgICAgICAgIHByb3ZpZGVycy5wdXNoKGxhbmd1YWdlcy5yZWdpc3RlclNlbGVjdGlvblJhbmdlUHJvdmlkZXIobGFuZ3VhZ2VJZCwgbmV3IGxhbmd1YWdlRmVhdHVyZXMuU2VsZWN0aW9uUmFuZ2VBZGFwdGVyKHdvcmtlcikpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZWdpc3RlclByb3ZpZGVycygpO1xuICAgIGRpc3Bvc2FibGVzLnB1c2goYXNEaXNwb3NhYmxlKHByb3ZpZGVycykpO1xuICAgIHJldHVybiBhc0Rpc3Bvc2FibGUoZGlzcG9zYWJsZXMpO1xufVxuZnVuY3Rpb24gYXNEaXNwb3NhYmxlKGRpc3Bvc2FibGVzKSB7XG4gICAgcmV0dXJuIHsgZGlzcG9zZTogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlzcG9zZUFsbChkaXNwb3NhYmxlcyk7IH0gfTtcbn1cbmZ1bmN0aW9uIGRpc3Bvc2VBbGwoZGlzcG9zYWJsZXMpIHtcbiAgICB3aGlsZSAoZGlzcG9zYWJsZXMubGVuZ3RoKSB7XG4gICAgICAgIGRpc3Bvc2FibGVzLnBvcCgpLmRpc3Bvc2UoKTtcbiAgICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/cssMode.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadMessageBundle\", function() { return loadMessageBundle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"config\", function() { return config; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction format(message, args) {\n    var result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, function (match, rest) {\n            var index = rest[0];\n            return typeof args[index] !== 'undefined' ? args[index] : match;\n        });\n    }\n    return result;\n}\nfunction localize(key, message) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    return format(message, args);\n}\nfunction loadMessageBundle(file) {\n    return localize;\n}\nfunction config(opt) {\n    return loadMessageBundle;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL2ZpbGxlcnMvdnNjb2RlLW5scy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9sYW5ndWFnZS9jc3MvZmlsbGVycy92c2NvZGUtbmxzLmpzPzMyNGYiXSwic291cmNlc0NvbnRlbnQiOlsiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5mdW5jdGlvbiBmb3JtYXQobWVzc2FnZSwgYXJncykge1xuICAgIHZhciByZXN1bHQ7XG4gICAgaWYgKGFyZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJlc3VsdCA9IG1lc3NhZ2U7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXN1bHQgPSBtZXNzYWdlLnJlcGxhY2UoL1xceyhcXGQrKVxcfS9nLCBmdW5jdGlvbiAobWF0Y2gsIHJlc3QpIHtcbiAgICAgICAgICAgIHZhciBpbmRleCA9IHJlc3RbMF07XG4gICAgICAgICAgICByZXR1cm4gdHlwZW9mIGFyZ3NbaW5kZXhdICE9PSAndW5kZWZpbmVkJyA/IGFyZ3NbaW5kZXhdIDogbWF0Y2g7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbG9jYWxpemUoa2V5LCBtZXNzYWdlKSB7XG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICBmb3IgKHZhciBfaSA9IDI7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICBhcmdzW19pIC0gMl0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICByZXR1cm4gZm9ybWF0KG1lc3NhZ2UsIGFyZ3MpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGxvYWRNZXNzYWdlQnVuZGxlKGZpbGUpIHtcbiAgICByZXR1cm4gbG9jYWxpemU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29uZmlnKG9wdCkge1xuICAgIHJldHVybiBsb2FkTWVzc2FnZUJ1bmRsZTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/fillers/vscode-nls.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticsAdapter\", function() { return DiagnosticsAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionAdapter\", function() { return CompletionAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HoverAdapter\", function() { return HoverAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlightAdapter\", function() { return DocumentHighlightAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefinitionAdapter\", function() { return DefinitionAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReferenceAdapter\", function() { return ReferenceAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenameAdapter\", function() { return RenameAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentSymbolAdapter\", function() { return DocumentSymbolAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentColorAdapter\", function() { return DocumentColorAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FoldingRangeAdapter\", function() { return FoldingRangeAdapter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectionRangeAdapter\", function() { return SelectionRangeAdapter; });\n/* harmony import */ var _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/_deps/vscode-css-languageservice/cssLanguageService.js\");\n/* harmony import */ var _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/monaco-editor-core.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n// --- diagnostics --- ---\nvar DiagnosticsAdapter = /** @class */ (function () {\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\n        var _this = this;\n        this._languageId = _languageId;\n        this._worker = _worker;\n        this._disposables = [];\n        this._listener = Object.create(null);\n        var onModelAdd = function (model) {\n            var modeId = model.getModeId();\n            if (modeId !== _this._languageId) {\n                return;\n            }\n            var handle;\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\n                window.clearTimeout(handle);\n                handle = window.setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\n            });\n            _this._doValidate(model.uri, modeId);\n        };\n        var onModelRemoved = function (model) {\n            _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"editor\"].setModelMarkers(model, _this._languageId, []);\n            var uriStr = model.uri.toString();\n            var listener = _this._listener[uriStr];\n            if (listener) {\n                listener.dispose();\n                delete _this._listener[uriStr];\n            }\n        };\n        this._disposables.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"editor\"].onDidCreateModel(onModelAdd));\n        this._disposables.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"editor\"].onWillDisposeModel(onModelRemoved));\n        this._disposables.push(_fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"editor\"].onDidChangeModelLanguage(function (event) {\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        defaults.onDidChange(function (_) {\n            _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"editor\"].getModels().forEach(function (model) {\n                if (model.getModeId() === _this._languageId) {\n                    onModelRemoved(model);\n                    onModelAdd(model);\n                }\n            });\n        });\n        this._disposables.push({\n            dispose: function () {\n                for (var key in _this._listener) {\n                    _this._listener[key].dispose();\n                }\n            }\n        });\n        _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"editor\"].getModels().forEach(onModelAdd);\n    }\n    DiagnosticsAdapter.prototype.dispose = function () {\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\n        this._disposables = [];\n    };\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\n        this._worker(resource)\n            .then(function (worker) {\n            return worker.doValidation(resource.toString());\n        })\n            .then(function (diagnostics) {\n            var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\n            var model = _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"editor\"].getModel(resource);\n            if (model.getModeId() === languageId) {\n                _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"editor\"].setModelMarkers(model, languageId, markers);\n            }\n        })\n            .then(undefined, function (err) {\n            console.error(err);\n        });\n    };\n    return DiagnosticsAdapter;\n}());\n\nfunction toSeverity(lsSeverity) {\n    switch (lsSeverity) {\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"DiagnosticSeverity\"].Error:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"MarkerSeverity\"].Error;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"DiagnosticSeverity\"].Warning:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"MarkerSeverity\"].Warning;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"DiagnosticSeverity\"].Information:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"MarkerSeverity\"].Info;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"DiagnosticSeverity\"].Hint:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"MarkerSeverity\"].Hint;\n        default:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"MarkerSeverity\"].Info;\n    }\n}\nfunction toDiagnostics(resource, diag) {\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\n    return {\n        severity: toSeverity(diag.severity),\n        startLineNumber: diag.range.start.line + 1,\n        startColumn: diag.range.start.character + 1,\n        endLineNumber: diag.range.end.line + 1,\n        endColumn: diag.range.end.character + 1,\n        message: diag.message,\n        code: code,\n        source: diag.source\n    };\n}\n// --- completion ------\nfunction fromPosition(position) {\n    if (!position) {\n        return void 0;\n    }\n    return { character: position.column - 1, line: position.lineNumber - 1 };\n}\nfunction fromRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return {\n        start: {\n            line: range.startLineNumber - 1,\n            character: range.startColumn - 1\n        },\n        end: { line: range.endLineNumber - 1, character: range.endColumn - 1 }\n    };\n}\nfunction toRange(range) {\n    if (!range) {\n        return void 0;\n    }\n    return new _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"Range\"](range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\n}\nfunction isInsertReplaceEdit(edit) {\n    return (typeof edit.insert !== 'undefined' &&\n        typeof edit.replace !== 'undefined');\n}\nfunction toCompletionItemKind(kind) {\n    var mItemKind = _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"languages\"].CompletionItemKind;\n    switch (kind) {\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Text:\n            return mItemKind.Text;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Method:\n            return mItemKind.Method;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Function:\n            return mItemKind.Function;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Constructor:\n            return mItemKind.Constructor;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Field:\n            return mItemKind.Field;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Variable:\n            return mItemKind.Variable;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Class:\n            return mItemKind.Class;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Interface:\n            return mItemKind.Interface;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Module:\n            return mItemKind.Module;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Property:\n            return mItemKind.Property;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Unit:\n            return mItemKind.Unit;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Value:\n            return mItemKind.Value;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Enum:\n            return mItemKind.Enum;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Keyword:\n            return mItemKind.Keyword;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Snippet:\n            return mItemKind.Snippet;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Color:\n            return mItemKind.Color;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].File:\n            return mItemKind.File;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"CompletionItemKind\"].Reference:\n            return mItemKind.Reference;\n    }\n    return mItemKind.Property;\n}\nfunction toTextEdit(textEdit) {\n    if (!textEdit) {\n        return void 0;\n    }\n    return {\n        range: toRange(textEdit.range),\n        text: textEdit.newText\n    };\n}\nvar CompletionAdapter = /** @class */ (function () {\n    function CompletionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\n        get: function () {\n            return [' ', ':'];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) {\n            return worker.doComplete(resource.toString(), fromPosition(position));\n        })\n            .then(function (info) {\n            if (!info) {\n                return;\n            }\n            var wordInfo = model.getWordUntilPosition(position);\n            var wordRange = new _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"Range\"](position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n            var items = info.items.map(function (entry) {\n                var item = {\n                    label: entry.label,\n                    insertText: entry.insertText || entry.label,\n                    sortText: entry.sortText,\n                    filterText: entry.filterText,\n                    documentation: entry.documentation,\n                    detail: entry.detail,\n                    range: wordRange,\n                    kind: toCompletionItemKind(entry.kind)\n                };\n                if (entry.textEdit) {\n                    if (isInsertReplaceEdit(entry.textEdit)) {\n                        item.range = {\n                            insert: toRange(entry.textEdit.insert),\n                            replace: toRange(entry.textEdit.replace)\n                        };\n                    }\n                    else {\n                        item.range = toRange(entry.textEdit.range);\n                    }\n                    item.insertText = entry.textEdit.newText;\n                }\n                if (entry.additionalTextEdits) {\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\n                }\n                if (entry.insertTextFormat === _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"InsertTextFormat\"].Snippet) {\n                    item.insertTextRules = _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"languages\"].CompletionItemInsertTextRule.InsertAsSnippet;\n                }\n                return item;\n            });\n            return {\n                isIncomplete: info.isIncomplete,\n                suggestions: items\n            };\n        });\n    };\n    return CompletionAdapter;\n}());\n\nfunction isMarkupContent(thing) {\n    return (thing && typeof thing === 'object' && typeof thing.kind === 'string');\n}\nfunction toMarkdownString(entry) {\n    if (typeof entry === 'string') {\n        return {\n            value: entry\n        };\n    }\n    if (isMarkupContent(entry)) {\n        if (entry.kind === 'plaintext') {\n            return {\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\n            };\n        }\n        return {\n            value: entry.value\n        };\n    }\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\n}\nfunction toMarkedStringArray(contents) {\n    if (!contents) {\n        return void 0;\n    }\n    if (Array.isArray(contents)) {\n        return contents.map(toMarkdownString);\n    }\n    return [toMarkdownString(contents)];\n}\n// --- hover ------\nvar HoverAdapter = /** @class */ (function () {\n    function HoverAdapter(_worker) {\n        this._worker = _worker;\n    }\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) {\n            return worker.doHover(resource.toString(), fromPosition(position));\n        })\n            .then(function (info) {\n            if (!info) {\n                return;\n            }\n            return {\n                range: toRange(info.range),\n                contents: toMarkedStringArray(info.contents)\n            };\n        });\n    };\n    return HoverAdapter;\n}());\n\n// --- document highlights ------\nfunction toDocumentHighlightKind(kind) {\n    switch (kind) {\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Read:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"languages\"].DocumentHighlightKind.Read;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Write:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"languages\"].DocumentHighlightKind.Write;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"DocumentHighlightKind\"].Text:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"languages\"].DocumentHighlightKind.Text;\n    }\n    return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"languages\"].DocumentHighlightKind.Text;\n}\nvar DocumentHighlightAdapter = /** @class */ (function () {\n    function DocumentHighlightAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentHighlightAdapter.prototype.provideDocumentHighlights = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) {\n            return worker.findDocumentHighlights(resource.toString(), fromPosition(position));\n        })\n            .then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(function (entry) {\n                return {\n                    range: toRange(entry.range),\n                    kind: toDocumentHighlightKind(entry.kind)\n                };\n            });\n        });\n    };\n    return DocumentHighlightAdapter;\n}());\n\n// --- definition ------\nfunction toLocation(location) {\n    return {\n        uri: _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"Uri\"].parse(location.uri),\n        range: toRange(location.range)\n    };\n}\nvar DefinitionAdapter = /** @class */ (function () {\n    function DefinitionAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DefinitionAdapter.prototype.provideDefinition = function (model, position, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) {\n            return worker.findDefinition(resource.toString(), fromPosition(position));\n        })\n            .then(function (definition) {\n            if (!definition) {\n                return;\n            }\n            return [toLocation(definition)];\n        });\n    };\n    return DefinitionAdapter;\n}());\n\n// --- references ------\nvar ReferenceAdapter = /** @class */ (function () {\n    function ReferenceAdapter(_worker) {\n        this._worker = _worker;\n    }\n    ReferenceAdapter.prototype.provideReferences = function (model, position, context, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) {\n            return worker.findReferences(resource.toString(), fromPosition(position));\n        })\n            .then(function (entries) {\n            if (!entries) {\n                return;\n            }\n            return entries.map(toLocation);\n        });\n    };\n    return ReferenceAdapter;\n}());\n\n// --- rename ------\nfunction toWorkspaceEdit(edit) {\n    if (!edit || !edit.changes) {\n        return void 0;\n    }\n    var resourceEdits = [];\n    for (var uri in edit.changes) {\n        var _uri = _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"Uri\"].parse(uri);\n        // let edits: languages.TextEdit[] = [];\n        for (var _i = 0, _a = edit.changes[uri]; _i < _a.length; _i++) {\n            var e = _a[_i];\n            resourceEdits.push({\n                resource: _uri,\n                edit: {\n                    range: toRange(e.range),\n                    text: e.newText\n                }\n            });\n        }\n    }\n    return {\n        edits: resourceEdits\n    };\n}\nvar RenameAdapter = /** @class */ (function () {\n    function RenameAdapter(_worker) {\n        this._worker = _worker;\n    }\n    RenameAdapter.prototype.provideRenameEdits = function (model, position, newName, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) {\n            return worker.doRename(resource.toString(), fromPosition(position), newName);\n        })\n            .then(function (edit) {\n            return toWorkspaceEdit(edit);\n        });\n    };\n    return RenameAdapter;\n}());\n\n// --- document symbols ------\nfunction toSymbolKind(kind) {\n    var mKind = _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"languages\"].SymbolKind;\n    switch (kind) {\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].File:\n            return mKind.Array;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Module:\n            return mKind.Module;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Namespace:\n            return mKind.Namespace;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Package:\n            return mKind.Package;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Class:\n            return mKind.Class;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Method:\n            return mKind.Method;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Property:\n            return mKind.Property;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Field:\n            return mKind.Field;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Constructor:\n            return mKind.Constructor;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Enum:\n            return mKind.Enum;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Interface:\n            return mKind.Interface;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Function:\n            return mKind.Function;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Variable:\n            return mKind.Variable;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Constant:\n            return mKind.Constant;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].String:\n            return mKind.String;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Number:\n            return mKind.Number;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Boolean:\n            return mKind.Boolean;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"SymbolKind\"].Array:\n            return mKind.Array;\n    }\n    return mKind.Function;\n}\nvar DocumentSymbolAdapter = /** @class */ (function () {\n    function DocumentSymbolAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) { return worker.findDocumentSymbols(resource.toString()); })\n            .then(function (items) {\n            if (!items) {\n                return;\n            }\n            return items.map(function (item) { return ({\n                name: item.name,\n                detail: '',\n                containerName: item.containerName,\n                kind: toSymbolKind(item.kind),\n                tags: [],\n                range: toRange(item.location.range),\n                selectionRange: toRange(item.location.range)\n            }); });\n        });\n    };\n    return DocumentSymbolAdapter;\n}());\n\nvar DocumentColorAdapter = /** @class */ (function () {\n    function DocumentColorAdapter(_worker) {\n        this._worker = _worker;\n    }\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) { return worker.findDocumentColors(resource.toString()); })\n            .then(function (infos) {\n            if (!infos) {\n                return;\n            }\n            return infos.map(function (item) { return ({\n                color: item.color,\n                range: toRange(item.range)\n            }); });\n        });\n    };\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) {\n            return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range));\n        })\n            .then(function (presentations) {\n            if (!presentations) {\n                return;\n            }\n            return presentations.map(function (presentation) {\n                var item = {\n                    label: presentation.label\n                };\n                if (presentation.textEdit) {\n                    item.textEdit = toTextEdit(presentation.textEdit);\n                }\n                if (presentation.additionalTextEdits) {\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\n                }\n                return item;\n            });\n        });\n    };\n    return DocumentColorAdapter;\n}());\n\nvar FoldingRangeAdapter = /** @class */ (function () {\n    function FoldingRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) { return worker.getFoldingRanges(resource.toString(), context); })\n            .then(function (ranges) {\n            if (!ranges) {\n                return;\n            }\n            return ranges.map(function (range) {\n                var result = {\n                    start: range.startLine + 1,\n                    end: range.endLine + 1\n                };\n                if (typeof range.kind !== 'undefined') {\n                    result.kind = toFoldingRangeKind(range.kind);\n                }\n                return result;\n            });\n        });\n    };\n    return FoldingRangeAdapter;\n}());\n\nfunction toFoldingRangeKind(kind) {\n    switch (kind) {\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"FoldingRangeKind\"].Comment:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"languages\"].FoldingRangeKind.Comment;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"FoldingRangeKind\"].Imports:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"languages\"].FoldingRangeKind.Imports;\n        case _deps_vscode_css_languageservice_cssLanguageService_js__WEBPACK_IMPORTED_MODULE_0__[\"FoldingRangeKind\"].Region:\n            return _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_1__[\"languages\"].FoldingRangeKind.Region;\n    }\n}\nvar SelectionRangeAdapter = /** @class */ (function () {\n    function SelectionRangeAdapter(_worker) {\n        this._worker = _worker;\n    }\n    SelectionRangeAdapter.prototype.provideSelectionRanges = function (model, positions, token) {\n        var resource = model.uri;\n        return this._worker(resource)\n            .then(function (worker) { return worker.getSelectionRanges(resource.toString(), positions.map(fromPosition)); })\n            .then(function (selectionRanges) {\n            if (!selectionRanges) {\n                return;\n            }\n            return selectionRanges.map(function (selectionRange) {\n                var result = [];\n                while (selectionRange) {\n                    result.push({ range: toRange(selectionRange.range) });\n                    selectionRange = selectionRange.parent;\n                }\n                return result;\n            });\n        });\n    };\n    return SelectionRangeAdapter;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL2xhbmd1YWdlRmVhdHVyZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL2xhbmd1YWdlRmVhdHVyZXMuanM/MjhkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCAqIGFzIGNzc1NlcnZpY2UgZnJvbSAnLi9fZGVwcy92c2NvZGUtY3NzLWxhbmd1YWdlc2VydmljZS9jc3NMYW5ndWFnZVNlcnZpY2UuanMnO1xuaW1wb3J0IHsgbGFuZ3VhZ2VzLCBlZGl0b3IsIFVyaSwgUmFuZ2UsIE1hcmtlclNldmVyaXR5IH0gZnJvbSAnLi9maWxsZXJzL21vbmFjby1lZGl0b3ItY29yZS5qcyc7XG4vLyAtLS0gZGlhZ25vc3RpY3MgLS0tIC0tLVxudmFyIERpYWdub3N0aWNzQWRhcHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEaWFnbm9zdGljc0FkYXB0ZXIoX2xhbmd1YWdlSWQsIF93b3JrZXIsIGRlZmF1bHRzKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuX2xhbmd1YWdlSWQgPSBfbGFuZ3VhZ2VJZDtcbiAgICAgICAgdGhpcy5fd29ya2VyID0gX3dvcmtlcjtcbiAgICAgICAgdGhpcy5fZGlzcG9zYWJsZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fbGlzdGVuZXIgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICB2YXIgb25Nb2RlbEFkZCA9IGZ1bmN0aW9uIChtb2RlbCkge1xuICAgICAgICAgICAgdmFyIG1vZGVJZCA9IG1vZGVsLmdldE1vZGVJZCgpO1xuICAgICAgICAgICAgaWYgKG1vZGVJZCAhPT0gX3RoaXMuX2xhbmd1YWdlSWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgaGFuZGxlO1xuICAgICAgICAgICAgX3RoaXMuX2xpc3RlbmVyW21vZGVsLnVyaS50b1N0cmluZygpXSA9IG1vZGVsLm9uRGlkQ2hhbmdlQ29udGVudChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmNsZWFyVGltZW91dChoYW5kbGUpO1xuICAgICAgICAgICAgICAgIGhhbmRsZSA9IHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLl9kb1ZhbGlkYXRlKG1vZGVsLnVyaSwgbW9kZUlkKTsgfSwgNTAwKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgX3RoaXMuX2RvVmFsaWRhdGUobW9kZWwudXJpLCBtb2RlSWQpO1xuICAgICAgICB9O1xuICAgICAgICB2YXIgb25Nb2RlbFJlbW92ZWQgPSBmdW5jdGlvbiAobW9kZWwpIHtcbiAgICAgICAgICAgIGVkaXRvci5zZXRNb2RlbE1hcmtlcnMobW9kZWwsIF90aGlzLl9sYW5ndWFnZUlkLCBbXSk7XG4gICAgICAgICAgICB2YXIgdXJpU3RyID0gbW9kZWwudXJpLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB2YXIgbGlzdGVuZXIgPSBfdGhpcy5fbGlzdGVuZXJbdXJpU3RyXTtcbiAgICAgICAgICAgIGlmIChsaXN0ZW5lcikge1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgICAgICBkZWxldGUgX3RoaXMuX2xpc3RlbmVyW3VyaVN0cl07XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2Rpc3Bvc2FibGVzLnB1c2goZWRpdG9yLm9uRGlkQ3JlYXRlTW9kZWwob25Nb2RlbEFkZCkpO1xuICAgICAgICB0aGlzLl9kaXNwb3NhYmxlcy5wdXNoKGVkaXRvci5vbldpbGxEaXNwb3NlTW9kZWwob25Nb2RlbFJlbW92ZWQpKTtcbiAgICAgICAgdGhpcy5fZGlzcG9zYWJsZXMucHVzaChlZGl0b3Iub25EaWRDaGFuZ2VNb2RlbExhbmd1YWdlKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICAgICAgb25Nb2RlbFJlbW92ZWQoZXZlbnQubW9kZWwpO1xuICAgICAgICAgICAgb25Nb2RlbEFkZChldmVudC5tb2RlbCk7XG4gICAgICAgIH0pKTtcbiAgICAgICAgZGVmYXVsdHMub25EaWRDaGFuZ2UoZnVuY3Rpb24gKF8pIHtcbiAgICAgICAgICAgIGVkaXRvci5nZXRNb2RlbHMoKS5mb3JFYWNoKGZ1bmN0aW9uIChtb2RlbCkge1xuICAgICAgICAgICAgICAgIGlmIChtb2RlbC5nZXRNb2RlSWQoKSA9PT0gX3RoaXMuX2xhbmd1YWdlSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgb25Nb2RlbFJlbW92ZWQobW9kZWwpO1xuICAgICAgICAgICAgICAgICAgICBvbk1vZGVsQWRkKG1vZGVsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX2Rpc3Bvc2FibGVzLnB1c2goe1xuICAgICAgICAgICAgZGlzcG9zZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBfdGhpcy5fbGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuX2xpc3RlbmVyW2tleV0uZGlzcG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGVkaXRvci5nZXRNb2RlbHMoKS5mb3JFYWNoKG9uTW9kZWxBZGQpO1xuICAgIH1cbiAgICBEaWFnbm9zdGljc0FkYXB0ZXIucHJvdG90eXBlLmRpc3Bvc2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuX2Rpc3Bvc2FibGVzLmZvckVhY2goZnVuY3Rpb24gKGQpIHsgcmV0dXJuIGQgJiYgZC5kaXNwb3NlKCk7IH0pO1xuICAgICAgICB0aGlzLl9kaXNwb3NhYmxlcyA9IFtdO1xuICAgIH07XG4gICAgRGlhZ25vc3RpY3NBZGFwdGVyLnByb3RvdHlwZS5fZG9WYWxpZGF0ZSA9IGZ1bmN0aW9uIChyZXNvdXJjZSwgbGFuZ3VhZ2VJZCkge1xuICAgICAgICB0aGlzLl93b3JrZXIocmVzb3VyY2UpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAod29ya2VyKSB7XG4gICAgICAgICAgICByZXR1cm4gd29ya2VyLmRvVmFsaWRhdGlvbihyZXNvdXJjZS50b1N0cmluZygpKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChkaWFnbm9zdGljcykge1xuICAgICAgICAgICAgdmFyIG1hcmtlcnMgPSBkaWFnbm9zdGljcy5tYXAoZnVuY3Rpb24gKGQpIHsgcmV0dXJuIHRvRGlhZ25vc3RpY3MocmVzb3VyY2UsIGQpOyB9KTtcbiAgICAgICAgICAgIHZhciBtb2RlbCA9IGVkaXRvci5nZXRNb2RlbChyZXNvdXJjZSk7XG4gICAgICAgICAgICBpZiAobW9kZWwuZ2V0TW9kZUlkKCkgPT09IGxhbmd1YWdlSWQpIHtcbiAgICAgICAgICAgICAgICBlZGl0b3Iuc2V0TW9kZWxNYXJrZXJzKG1vZGVsLCBsYW5ndWFnZUlkLCBtYXJrZXJzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKHVuZGVmaW5lZCwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBEaWFnbm9zdGljc0FkYXB0ZXI7XG59KCkpO1xuZXhwb3J0IHsgRGlhZ25vc3RpY3NBZGFwdGVyIH07XG5mdW5jdGlvbiB0b1NldmVyaXR5KGxzU2V2ZXJpdHkpIHtcbiAgICBzd2l0Y2ggKGxzU2V2ZXJpdHkpIHtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkRpYWdub3N0aWNTZXZlcml0eS5FcnJvcjpcbiAgICAgICAgICAgIHJldHVybiBNYXJrZXJTZXZlcml0eS5FcnJvcjtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkRpYWdub3N0aWNTZXZlcml0eS5XYXJuaW5nOlxuICAgICAgICAgICAgcmV0dXJuIE1hcmtlclNldmVyaXR5Lldhcm5pbmc7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5EaWFnbm9zdGljU2V2ZXJpdHkuSW5mb3JtYXRpb246XG4gICAgICAgICAgICByZXR1cm4gTWFya2VyU2V2ZXJpdHkuSW5mbztcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkRpYWdub3N0aWNTZXZlcml0eS5IaW50OlxuICAgICAgICAgICAgcmV0dXJuIE1hcmtlclNldmVyaXR5LkhpbnQ7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gTWFya2VyU2V2ZXJpdHkuSW5mbztcbiAgICB9XG59XG5mdW5jdGlvbiB0b0RpYWdub3N0aWNzKHJlc291cmNlLCBkaWFnKSB7XG4gICAgdmFyIGNvZGUgPSB0eXBlb2YgZGlhZy5jb2RlID09PSAnbnVtYmVyJyA/IFN0cmluZyhkaWFnLmNvZGUpIDogZGlhZy5jb2RlO1xuICAgIHJldHVybiB7XG4gICAgICAgIHNldmVyaXR5OiB0b1NldmVyaXR5KGRpYWcuc2V2ZXJpdHkpLFxuICAgICAgICBzdGFydExpbmVOdW1iZXI6IGRpYWcucmFuZ2Uuc3RhcnQubGluZSArIDEsXG4gICAgICAgIHN0YXJ0Q29sdW1uOiBkaWFnLnJhbmdlLnN0YXJ0LmNoYXJhY3RlciArIDEsXG4gICAgICAgIGVuZExpbmVOdW1iZXI6IGRpYWcucmFuZ2UuZW5kLmxpbmUgKyAxLFxuICAgICAgICBlbmRDb2x1bW46IGRpYWcucmFuZ2UuZW5kLmNoYXJhY3RlciArIDEsXG4gICAgICAgIG1lc3NhZ2U6IGRpYWcubWVzc2FnZSxcbiAgICAgICAgY29kZTogY29kZSxcbiAgICAgICAgc291cmNlOiBkaWFnLnNvdXJjZVxuICAgIH07XG59XG4vLyAtLS0gY29tcGxldGlvbiAtLS0tLS1cbmZ1bmN0aW9uIGZyb21Qb3NpdGlvbihwb3NpdGlvbikge1xuICAgIGlmICghcG9zaXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgcmV0dXJuIHsgY2hhcmFjdGVyOiBwb3NpdGlvbi5jb2x1bW4gLSAxLCBsaW5lOiBwb3NpdGlvbi5saW5lTnVtYmVyIC0gMSB9O1xufVxuZnVuY3Rpb24gZnJvbVJhbmdlKHJhbmdlKSB7XG4gICAgaWYgKCFyYW5nZSkge1xuICAgICAgICByZXR1cm4gdm9pZCAwO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBzdGFydDoge1xuICAgICAgICAgICAgbGluZTogcmFuZ2Uuc3RhcnRMaW5lTnVtYmVyIC0gMSxcbiAgICAgICAgICAgIGNoYXJhY3RlcjogcmFuZ2Uuc3RhcnRDb2x1bW4gLSAxXG4gICAgICAgIH0sXG4gICAgICAgIGVuZDogeyBsaW5lOiByYW5nZS5lbmRMaW5lTnVtYmVyIC0gMSwgY2hhcmFjdGVyOiByYW5nZS5lbmRDb2x1bW4gLSAxIH1cbiAgICB9O1xufVxuZnVuY3Rpb24gdG9SYW5nZShyYW5nZSkge1xuICAgIGlmICghcmFuZ2UpIHtcbiAgICAgICAgcmV0dXJuIHZvaWQgMDtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSYW5nZShyYW5nZS5zdGFydC5saW5lICsgMSwgcmFuZ2Uuc3RhcnQuY2hhcmFjdGVyICsgMSwgcmFuZ2UuZW5kLmxpbmUgKyAxLCByYW5nZS5lbmQuY2hhcmFjdGVyICsgMSk7XG59XG5mdW5jdGlvbiBpc0luc2VydFJlcGxhY2VFZGl0KGVkaXQpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBlZGl0Lmluc2VydCAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgICAgdHlwZW9mIGVkaXQucmVwbGFjZSAhPT0gJ3VuZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gdG9Db21wbGV0aW9uSXRlbUtpbmQoa2luZCkge1xuICAgIHZhciBtSXRlbUtpbmQgPSBsYW5ndWFnZXMuQ29tcGxldGlvbkl0ZW1LaW5kO1xuICAgIHN3aXRjaCAoa2luZCkge1xuICAgICAgICBjYXNlIGNzc1NlcnZpY2UuQ29tcGxldGlvbkl0ZW1LaW5kLlRleHQ6XG4gICAgICAgICAgICByZXR1cm4gbUl0ZW1LaW5kLlRleHQ7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5Db21wbGV0aW9uSXRlbUtpbmQuTWV0aG9kOlxuICAgICAgICAgICAgcmV0dXJuIG1JdGVtS2luZC5NZXRob2Q7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5Db21wbGV0aW9uSXRlbUtpbmQuRnVuY3Rpb246XG4gICAgICAgICAgICByZXR1cm4gbUl0ZW1LaW5kLkZ1bmN0aW9uO1xuICAgICAgICBjYXNlIGNzc1NlcnZpY2UuQ29tcGxldGlvbkl0ZW1LaW5kLkNvbnN0cnVjdG9yOlxuICAgICAgICAgICAgcmV0dXJuIG1JdGVtS2luZC5Db25zdHJ1Y3RvcjtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkNvbXBsZXRpb25JdGVtS2luZC5GaWVsZDpcbiAgICAgICAgICAgIHJldHVybiBtSXRlbUtpbmQuRmllbGQ7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5Db21wbGV0aW9uSXRlbUtpbmQuVmFyaWFibGU6XG4gICAgICAgICAgICByZXR1cm4gbUl0ZW1LaW5kLlZhcmlhYmxlO1xuICAgICAgICBjYXNlIGNzc1NlcnZpY2UuQ29tcGxldGlvbkl0ZW1LaW5kLkNsYXNzOlxuICAgICAgICAgICAgcmV0dXJuIG1JdGVtS2luZC5DbGFzcztcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkNvbXBsZXRpb25JdGVtS2luZC5JbnRlcmZhY2U6XG4gICAgICAgICAgICByZXR1cm4gbUl0ZW1LaW5kLkludGVyZmFjZTtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkNvbXBsZXRpb25JdGVtS2luZC5Nb2R1bGU6XG4gICAgICAgICAgICByZXR1cm4gbUl0ZW1LaW5kLk1vZHVsZTtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkNvbXBsZXRpb25JdGVtS2luZC5Qcm9wZXJ0eTpcbiAgICAgICAgICAgIHJldHVybiBtSXRlbUtpbmQuUHJvcGVydHk7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5Db21wbGV0aW9uSXRlbUtpbmQuVW5pdDpcbiAgICAgICAgICAgIHJldHVybiBtSXRlbUtpbmQuVW5pdDtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkNvbXBsZXRpb25JdGVtS2luZC5WYWx1ZTpcbiAgICAgICAgICAgIHJldHVybiBtSXRlbUtpbmQuVmFsdWU7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5Db21wbGV0aW9uSXRlbUtpbmQuRW51bTpcbiAgICAgICAgICAgIHJldHVybiBtSXRlbUtpbmQuRW51bTtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkNvbXBsZXRpb25JdGVtS2luZC5LZXl3b3JkOlxuICAgICAgICAgICAgcmV0dXJuIG1JdGVtS2luZC5LZXl3b3JkO1xuICAgICAgICBjYXNlIGNzc1NlcnZpY2UuQ29tcGxldGlvbkl0ZW1LaW5kLlNuaXBwZXQ6XG4gICAgICAgICAgICByZXR1cm4gbUl0ZW1LaW5kLlNuaXBwZXQ7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5Db21wbGV0aW9uSXRlbUtpbmQuQ29sb3I6XG4gICAgICAgICAgICByZXR1cm4gbUl0ZW1LaW5kLkNvbG9yO1xuICAgICAgICBjYXNlIGNzc1NlcnZpY2UuQ29tcGxldGlvbkl0ZW1LaW5kLkZpbGU6XG4gICAgICAgICAgICByZXR1cm4gbUl0ZW1LaW5kLkZpbGU7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5Db21wbGV0aW9uSXRlbUtpbmQuUmVmZXJlbmNlOlxuICAgICAgICAgICAgcmV0dXJuIG1JdGVtS2luZC5SZWZlcmVuY2U7XG4gICAgfVxuICAgIHJldHVybiBtSXRlbUtpbmQuUHJvcGVydHk7XG59XG5mdW5jdGlvbiB0b1RleHRFZGl0KHRleHRFZGl0KSB7XG4gICAgaWYgKCF0ZXh0RWRpdCkge1xuICAgICAgICByZXR1cm4gdm9pZCAwO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICByYW5nZTogdG9SYW5nZSh0ZXh0RWRpdC5yYW5nZSksXG4gICAgICAgIHRleHQ6IHRleHRFZGl0Lm5ld1RleHRcbiAgICB9O1xufVxudmFyIENvbXBsZXRpb25BZGFwdGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENvbXBsZXRpb25BZGFwdGVyKF93b3JrZXIpIHtcbiAgICAgICAgdGhpcy5fd29ya2VyID0gX3dvcmtlcjtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbXBsZXRpb25BZGFwdGVyLnByb3RvdHlwZSwgXCJ0cmlnZ2VyQ2hhcmFjdGVyc1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIFsnICcsICc6J107XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBDb21wbGV0aW9uQWRhcHRlci5wcm90b3R5cGUucHJvdmlkZUNvbXBsZXRpb25JdGVtcyA9IGZ1bmN0aW9uIChtb2RlbCwgcG9zaXRpb24sIGNvbnRleHQsIHRva2VuKSB7XG4gICAgICAgIHZhciByZXNvdXJjZSA9IG1vZGVsLnVyaTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dvcmtlcihyZXNvdXJjZSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICh3b3JrZXIpIHtcbiAgICAgICAgICAgIHJldHVybiB3b3JrZXIuZG9Db21wbGV0ZShyZXNvdXJjZS50b1N0cmluZygpLCBmcm9tUG9zaXRpb24ocG9zaXRpb24pKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChpbmZvKSB7XG4gICAgICAgICAgICBpZiAoIWluZm8pIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgd29yZEluZm8gPSBtb2RlbC5nZXRXb3JkVW50aWxQb3NpdGlvbihwb3NpdGlvbik7XG4gICAgICAgICAgICB2YXIgd29yZFJhbmdlID0gbmV3IFJhbmdlKHBvc2l0aW9uLmxpbmVOdW1iZXIsIHdvcmRJbmZvLnN0YXJ0Q29sdW1uLCBwb3NpdGlvbi5saW5lTnVtYmVyLCB3b3JkSW5mby5lbmRDb2x1bW4pO1xuICAgICAgICAgICAgdmFyIGl0ZW1zID0gaW5mby5pdGVtcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgICAgIGxhYmVsOiBlbnRyeS5sYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgaW5zZXJ0VGV4dDogZW50cnkuaW5zZXJ0VGV4dCB8fCBlbnRyeS5sYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgc29ydFRleHQ6IGVudHJ5LnNvcnRUZXh0LFxuICAgICAgICAgICAgICAgICAgICBmaWx0ZXJUZXh0OiBlbnRyeS5maWx0ZXJUZXh0LFxuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudGF0aW9uOiBlbnRyeS5kb2N1bWVudGF0aW9uLFxuICAgICAgICAgICAgICAgICAgICBkZXRhaWw6IGVudHJ5LmRldGFpbCxcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2U6IHdvcmRSYW5nZSxcbiAgICAgICAgICAgICAgICAgICAga2luZDogdG9Db21wbGV0aW9uSXRlbUtpbmQoZW50cnkua2luZClcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGlmIChlbnRyeS50ZXh0RWRpdCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNJbnNlcnRSZXBsYWNlRWRpdChlbnRyeS50ZXh0RWRpdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ucmFuZ2UgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5zZXJ0OiB0b1JhbmdlKGVudHJ5LnRleHRFZGl0Lmluc2VydCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVwbGFjZTogdG9SYW5nZShlbnRyeS50ZXh0RWRpdC5yZXBsYWNlKVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ucmFuZ2UgPSB0b1JhbmdlKGVudHJ5LnRleHRFZGl0LnJhbmdlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpdGVtLmluc2VydFRleHQgPSBlbnRyeS50ZXh0RWRpdC5uZXdUZXh0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZW50cnkuYWRkaXRpb25hbFRleHRFZGl0cykge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLmFkZGl0aW9uYWxUZXh0RWRpdHMgPSBlbnRyeS5hZGRpdGlvbmFsVGV4dEVkaXRzLm1hcCh0b1RleHRFZGl0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGVudHJ5Lmluc2VydFRleHRGb3JtYXQgPT09IGNzc1NlcnZpY2UuSW5zZXJ0VGV4dEZvcm1hdC5TbmlwcGV0KSB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uaW5zZXJ0VGV4dFJ1bGVzID0gbGFuZ3VhZ2VzLkNvbXBsZXRpb25JdGVtSW5zZXJ0VGV4dFJ1bGUuSW5zZXJ0QXNTbmlwcGV0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBpc0luY29tcGxldGU6IGluZm8uaXNJbmNvbXBsZXRlLFxuICAgICAgICAgICAgICAgIHN1Z2dlc3Rpb25zOiBpdGVtc1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gQ29tcGxldGlvbkFkYXB0ZXI7XG59KCkpO1xuZXhwb3J0IHsgQ29tcGxldGlvbkFkYXB0ZXIgfTtcbmZ1bmN0aW9uIGlzTWFya3VwQ29udGVudCh0aGluZykge1xuICAgIHJldHVybiAodGhpbmcgJiYgdHlwZW9mIHRoaW5nID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgdGhpbmcua2luZCA9PT0gJ3N0cmluZycpO1xufVxuZnVuY3Rpb24gdG9NYXJrZG93blN0cmluZyhlbnRyeSkge1xuICAgIGlmICh0eXBlb2YgZW50cnkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogZW50cnlcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGlzTWFya3VwQ29udGVudChlbnRyeSkpIHtcbiAgICAgICAgaWYgKGVudHJ5LmtpbmQgPT09ICdwbGFpbnRleHQnKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHZhbHVlOiBlbnRyeS52YWx1ZS5yZXBsYWNlKC9bXFxcXGAqX3t9W1xcXSgpIytcXC0uIV0vZywgJ1xcXFwkJicpXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogZW50cnkudmFsdWVcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHsgdmFsdWU6ICdgYGAnICsgZW50cnkubGFuZ3VhZ2UgKyAnXFxuJyArIGVudHJ5LnZhbHVlICsgJ1xcbmBgYFxcbicgfTtcbn1cbmZ1bmN0aW9uIHRvTWFya2VkU3RyaW5nQXJyYXkoY29udGVudHMpIHtcbiAgICBpZiAoIWNvbnRlbnRzKSB7XG4gICAgICAgIHJldHVybiB2b2lkIDA7XG4gICAgfVxuICAgIGlmIChBcnJheS5pc0FycmF5KGNvbnRlbnRzKSkge1xuICAgICAgICByZXR1cm4gY29udGVudHMubWFwKHRvTWFya2Rvd25TdHJpbmcpO1xuICAgIH1cbiAgICByZXR1cm4gW3RvTWFya2Rvd25TdHJpbmcoY29udGVudHMpXTtcbn1cbi8vIC0tLSBob3ZlciAtLS0tLS1cbnZhciBIb3ZlckFkYXB0ZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gSG92ZXJBZGFwdGVyKF93b3JrZXIpIHtcbiAgICAgICAgdGhpcy5fd29ya2VyID0gX3dvcmtlcjtcbiAgICB9XG4gICAgSG92ZXJBZGFwdGVyLnByb3RvdHlwZS5wcm92aWRlSG92ZXIgPSBmdW5jdGlvbiAobW9kZWwsIHBvc2l0aW9uLCB0b2tlbikge1xuICAgICAgICB2YXIgcmVzb3VyY2UgPSBtb2RlbC51cmk7XG4gICAgICAgIHJldHVybiB0aGlzLl93b3JrZXIocmVzb3VyY2UpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAod29ya2VyKSB7XG4gICAgICAgICAgICByZXR1cm4gd29ya2VyLmRvSG92ZXIocmVzb3VyY2UudG9TdHJpbmcoKSwgZnJvbVBvc2l0aW9uKHBvc2l0aW9uKSk7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoaW5mbykge1xuICAgICAgICAgICAgaWYgKCFpbmZvKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICByYW5nZTogdG9SYW5nZShpbmZvLnJhbmdlKSxcbiAgICAgICAgICAgICAgICBjb250ZW50czogdG9NYXJrZWRTdHJpbmdBcnJheShpbmZvLmNvbnRlbnRzKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gSG92ZXJBZGFwdGVyO1xufSgpKTtcbmV4cG9ydCB7IEhvdmVyQWRhcHRlciB9O1xuLy8gLS0tIGRvY3VtZW50IGhpZ2hsaWdodHMgLS0tLS0tXG5mdW5jdGlvbiB0b0RvY3VtZW50SGlnaGxpZ2h0S2luZChraW5kKSB7XG4gICAgc3dpdGNoIChraW5kKSB7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5Eb2N1bWVudEhpZ2hsaWdodEtpbmQuUmVhZDpcbiAgICAgICAgICAgIHJldHVybiBsYW5ndWFnZXMuRG9jdW1lbnRIaWdobGlnaHRLaW5kLlJlYWQ7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5Eb2N1bWVudEhpZ2hsaWdodEtpbmQuV3JpdGU6XG4gICAgICAgICAgICByZXR1cm4gbGFuZ3VhZ2VzLkRvY3VtZW50SGlnaGxpZ2h0S2luZC5Xcml0ZTtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkRvY3VtZW50SGlnaGxpZ2h0S2luZC5UZXh0OlxuICAgICAgICAgICAgcmV0dXJuIGxhbmd1YWdlcy5Eb2N1bWVudEhpZ2hsaWdodEtpbmQuVGV4dDtcbiAgICB9XG4gICAgcmV0dXJuIGxhbmd1YWdlcy5Eb2N1bWVudEhpZ2hsaWdodEtpbmQuVGV4dDtcbn1cbnZhciBEb2N1bWVudEhpZ2hsaWdodEFkYXB0ZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRG9jdW1lbnRIaWdobGlnaHRBZGFwdGVyKF93b3JrZXIpIHtcbiAgICAgICAgdGhpcy5fd29ya2VyID0gX3dvcmtlcjtcbiAgICB9XG4gICAgRG9jdW1lbnRIaWdobGlnaHRBZGFwdGVyLnByb3RvdHlwZS5wcm92aWRlRG9jdW1lbnRIaWdobGlnaHRzID0gZnVuY3Rpb24gKG1vZGVsLCBwb3NpdGlvbiwgdG9rZW4pIHtcbiAgICAgICAgdmFyIHJlc291cmNlID0gbW9kZWwudXJpO1xuICAgICAgICByZXR1cm4gdGhpcy5fd29ya2VyKHJlc291cmNlKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHdvcmtlcikge1xuICAgICAgICAgICAgcmV0dXJuIHdvcmtlci5maW5kRG9jdW1lbnRIaWdobGlnaHRzKHJlc291cmNlLnRvU3RyaW5nKCksIGZyb21Qb3NpdGlvbihwb3NpdGlvbikpO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKGVudHJpZXMpIHtcbiAgICAgICAgICAgIGlmICghZW50cmllcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBlbnRyaWVzLm1hcChmdW5jdGlvbiAoZW50cnkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICByYW5nZTogdG9SYW5nZShlbnRyeS5yYW5nZSksXG4gICAgICAgICAgICAgICAgICAgIGtpbmQ6IHRvRG9jdW1lbnRIaWdobGlnaHRLaW5kKGVudHJ5LmtpbmQpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBEb2N1bWVudEhpZ2hsaWdodEFkYXB0ZXI7XG59KCkpO1xuZXhwb3J0IHsgRG9jdW1lbnRIaWdobGlnaHRBZGFwdGVyIH07XG4vLyAtLS0gZGVmaW5pdGlvbiAtLS0tLS1cbmZ1bmN0aW9uIHRvTG9jYXRpb24obG9jYXRpb24pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB1cmk6IFVyaS5wYXJzZShsb2NhdGlvbi51cmkpLFxuICAgICAgICByYW5nZTogdG9SYW5nZShsb2NhdGlvbi5yYW5nZSlcbiAgICB9O1xufVxudmFyIERlZmluaXRpb25BZGFwdGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERlZmluaXRpb25BZGFwdGVyKF93b3JrZXIpIHtcbiAgICAgICAgdGhpcy5fd29ya2VyID0gX3dvcmtlcjtcbiAgICB9XG4gICAgRGVmaW5pdGlvbkFkYXB0ZXIucHJvdG90eXBlLnByb3ZpZGVEZWZpbml0aW9uID0gZnVuY3Rpb24gKG1vZGVsLCBwb3NpdGlvbiwgdG9rZW4pIHtcbiAgICAgICAgdmFyIHJlc291cmNlID0gbW9kZWwudXJpO1xuICAgICAgICByZXR1cm4gdGhpcy5fd29ya2VyKHJlc291cmNlKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHdvcmtlcikge1xuICAgICAgICAgICAgcmV0dXJuIHdvcmtlci5maW5kRGVmaW5pdGlvbihyZXNvdXJjZS50b1N0cmluZygpLCBmcm9tUG9zaXRpb24ocG9zaXRpb24pKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChkZWZpbml0aW9uKSB7XG4gICAgICAgICAgICBpZiAoIWRlZmluaXRpb24pIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gW3RvTG9jYXRpb24oZGVmaW5pdGlvbildO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBEZWZpbml0aW9uQWRhcHRlcjtcbn0oKSk7XG5leHBvcnQgeyBEZWZpbml0aW9uQWRhcHRlciB9O1xuLy8gLS0tIHJlZmVyZW5jZXMgLS0tLS0tXG52YXIgUmVmZXJlbmNlQWRhcHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZWZlcmVuY2VBZGFwdGVyKF93b3JrZXIpIHtcbiAgICAgICAgdGhpcy5fd29ya2VyID0gX3dvcmtlcjtcbiAgICB9XG4gICAgUmVmZXJlbmNlQWRhcHRlci5wcm90b3R5cGUucHJvdmlkZVJlZmVyZW5jZXMgPSBmdW5jdGlvbiAobW9kZWwsIHBvc2l0aW9uLCBjb250ZXh0LCB0b2tlbikge1xuICAgICAgICB2YXIgcmVzb3VyY2UgPSBtb2RlbC51cmk7XG4gICAgICAgIHJldHVybiB0aGlzLl93b3JrZXIocmVzb3VyY2UpXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAod29ya2VyKSB7XG4gICAgICAgICAgICByZXR1cm4gd29ya2VyLmZpbmRSZWZlcmVuY2VzKHJlc291cmNlLnRvU3RyaW5nKCksIGZyb21Qb3NpdGlvbihwb3NpdGlvbikpO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKGVudHJpZXMpIHtcbiAgICAgICAgICAgIGlmICghZW50cmllcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBlbnRyaWVzLm1hcCh0b0xvY2F0aW9uKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gUmVmZXJlbmNlQWRhcHRlcjtcbn0oKSk7XG5leHBvcnQgeyBSZWZlcmVuY2VBZGFwdGVyIH07XG4vLyAtLS0gcmVuYW1lIC0tLS0tLVxuZnVuY3Rpb24gdG9Xb3Jrc3BhY2VFZGl0KGVkaXQpIHtcbiAgICBpZiAoIWVkaXQgfHwgIWVkaXQuY2hhbmdlcykge1xuICAgICAgICByZXR1cm4gdm9pZCAwO1xuICAgIH1cbiAgICB2YXIgcmVzb3VyY2VFZGl0cyA9IFtdO1xuICAgIGZvciAodmFyIHVyaSBpbiBlZGl0LmNoYW5nZXMpIHtcbiAgICAgICAgdmFyIF91cmkgPSBVcmkucGFyc2UodXJpKTtcbiAgICAgICAgLy8gbGV0IGVkaXRzOiBsYW5ndWFnZXMuVGV4dEVkaXRbXSA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIF9hID0gZWRpdC5jaGFuZ2VzW3VyaV07IF9pIDwgX2EubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgZSA9IF9hW19pXTtcbiAgICAgICAgICAgIHJlc291cmNlRWRpdHMucHVzaCh7XG4gICAgICAgICAgICAgICAgcmVzb3VyY2U6IF91cmksXG4gICAgICAgICAgICAgICAgZWRpdDoge1xuICAgICAgICAgICAgICAgICAgICByYW5nZTogdG9SYW5nZShlLnJhbmdlKSxcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogZS5uZXdUZXh0XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZWRpdHM6IHJlc291cmNlRWRpdHNcbiAgICB9O1xufVxudmFyIFJlbmFtZUFkYXB0ZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVuYW1lQWRhcHRlcihfd29ya2VyKSB7XG4gICAgICAgIHRoaXMuX3dvcmtlciA9IF93b3JrZXI7XG4gICAgfVxuICAgIFJlbmFtZUFkYXB0ZXIucHJvdG90eXBlLnByb3ZpZGVSZW5hbWVFZGl0cyA9IGZ1bmN0aW9uIChtb2RlbCwgcG9zaXRpb24sIG5ld05hbWUsIHRva2VuKSB7XG4gICAgICAgIHZhciByZXNvdXJjZSA9IG1vZGVsLnVyaTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dvcmtlcihyZXNvdXJjZSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICh3b3JrZXIpIHtcbiAgICAgICAgICAgIHJldHVybiB3b3JrZXIuZG9SZW5hbWUocmVzb3VyY2UudG9TdHJpbmcoKSwgZnJvbVBvc2l0aW9uKHBvc2l0aW9uKSwgbmV3TmFtZSk7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoZWRpdCkge1xuICAgICAgICAgICAgcmV0dXJuIHRvV29ya3NwYWNlRWRpdChlZGl0KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gUmVuYW1lQWRhcHRlcjtcbn0oKSk7XG5leHBvcnQgeyBSZW5hbWVBZGFwdGVyIH07XG4vLyAtLS0gZG9jdW1lbnQgc3ltYm9scyAtLS0tLS1cbmZ1bmN0aW9uIHRvU3ltYm9sS2luZChraW5kKSB7XG4gICAgdmFyIG1LaW5kID0gbGFuZ3VhZ2VzLlN5bWJvbEtpbmQ7XG4gICAgc3dpdGNoIChraW5kKSB7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5TeW1ib2xLaW5kLkZpbGU6XG4gICAgICAgICAgICByZXR1cm4gbUtpbmQuQXJyYXk7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5TeW1ib2xLaW5kLk1vZHVsZTpcbiAgICAgICAgICAgIHJldHVybiBtS2luZC5Nb2R1bGU7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5TeW1ib2xLaW5kLk5hbWVzcGFjZTpcbiAgICAgICAgICAgIHJldHVybiBtS2luZC5OYW1lc3BhY2U7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5TeW1ib2xLaW5kLlBhY2thZ2U6XG4gICAgICAgICAgICByZXR1cm4gbUtpbmQuUGFja2FnZTtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLlN5bWJvbEtpbmQuQ2xhc3M6XG4gICAgICAgICAgICByZXR1cm4gbUtpbmQuQ2xhc3M7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5TeW1ib2xLaW5kLk1ldGhvZDpcbiAgICAgICAgICAgIHJldHVybiBtS2luZC5NZXRob2Q7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5TeW1ib2xLaW5kLlByb3BlcnR5OlxuICAgICAgICAgICAgcmV0dXJuIG1LaW5kLlByb3BlcnR5O1xuICAgICAgICBjYXNlIGNzc1NlcnZpY2UuU3ltYm9sS2luZC5GaWVsZDpcbiAgICAgICAgICAgIHJldHVybiBtS2luZC5GaWVsZDtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLlN5bWJvbEtpbmQuQ29uc3RydWN0b3I6XG4gICAgICAgICAgICByZXR1cm4gbUtpbmQuQ29uc3RydWN0b3I7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5TeW1ib2xLaW5kLkVudW06XG4gICAgICAgICAgICByZXR1cm4gbUtpbmQuRW51bTtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLlN5bWJvbEtpbmQuSW50ZXJmYWNlOlxuICAgICAgICAgICAgcmV0dXJuIG1LaW5kLkludGVyZmFjZTtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLlN5bWJvbEtpbmQuRnVuY3Rpb246XG4gICAgICAgICAgICByZXR1cm4gbUtpbmQuRnVuY3Rpb247XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5TeW1ib2xLaW5kLlZhcmlhYmxlOlxuICAgICAgICAgICAgcmV0dXJuIG1LaW5kLlZhcmlhYmxlO1xuICAgICAgICBjYXNlIGNzc1NlcnZpY2UuU3ltYm9sS2luZC5Db25zdGFudDpcbiAgICAgICAgICAgIHJldHVybiBtS2luZC5Db25zdGFudDtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLlN5bWJvbEtpbmQuU3RyaW5nOlxuICAgICAgICAgICAgcmV0dXJuIG1LaW5kLlN0cmluZztcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLlN5bWJvbEtpbmQuTnVtYmVyOlxuICAgICAgICAgICAgcmV0dXJuIG1LaW5kLk51bWJlcjtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLlN5bWJvbEtpbmQuQm9vbGVhbjpcbiAgICAgICAgICAgIHJldHVybiBtS2luZC5Cb29sZWFuO1xuICAgICAgICBjYXNlIGNzc1NlcnZpY2UuU3ltYm9sS2luZC5BcnJheTpcbiAgICAgICAgICAgIHJldHVybiBtS2luZC5BcnJheTtcbiAgICB9XG4gICAgcmV0dXJuIG1LaW5kLkZ1bmN0aW9uO1xufVxudmFyIERvY3VtZW50U3ltYm9sQWRhcHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBEb2N1bWVudFN5bWJvbEFkYXB0ZXIoX3dvcmtlcikge1xuICAgICAgICB0aGlzLl93b3JrZXIgPSBfd29ya2VyO1xuICAgIH1cbiAgICBEb2N1bWVudFN5bWJvbEFkYXB0ZXIucHJvdG90eXBlLnByb3ZpZGVEb2N1bWVudFN5bWJvbHMgPSBmdW5jdGlvbiAobW9kZWwsIHRva2VuKSB7XG4gICAgICAgIHZhciByZXNvdXJjZSA9IG1vZGVsLnVyaTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dvcmtlcihyZXNvdXJjZSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICh3b3JrZXIpIHsgcmV0dXJuIHdvcmtlci5maW5kRG9jdW1lbnRTeW1ib2xzKHJlc291cmNlLnRvU3RyaW5nKCkpOyB9KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKGl0ZW1zKSB7XG4gICAgICAgICAgICBpZiAoIWl0ZW1zKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGl0ZW1zLm1hcChmdW5jdGlvbiAoaXRlbSkgeyByZXR1cm4gKHtcbiAgICAgICAgICAgICAgICBuYW1lOiBpdGVtLm5hbWUsXG4gICAgICAgICAgICAgICAgZGV0YWlsOiAnJyxcbiAgICAgICAgICAgICAgICBjb250YWluZXJOYW1lOiBpdGVtLmNvbnRhaW5lck5hbWUsXG4gICAgICAgICAgICAgICAga2luZDogdG9TeW1ib2xLaW5kKGl0ZW0ua2luZCksXG4gICAgICAgICAgICAgICAgdGFnczogW10sXG4gICAgICAgICAgICAgICAgcmFuZ2U6IHRvUmFuZ2UoaXRlbS5sb2NhdGlvbi5yYW5nZSksXG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uUmFuZ2U6IHRvUmFuZ2UoaXRlbS5sb2NhdGlvbi5yYW5nZSlcbiAgICAgICAgICAgIH0pOyB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gRG9jdW1lbnRTeW1ib2xBZGFwdGVyO1xufSgpKTtcbmV4cG9ydCB7IERvY3VtZW50U3ltYm9sQWRhcHRlciB9O1xudmFyIERvY3VtZW50Q29sb3JBZGFwdGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERvY3VtZW50Q29sb3JBZGFwdGVyKF93b3JrZXIpIHtcbiAgICAgICAgdGhpcy5fd29ya2VyID0gX3dvcmtlcjtcbiAgICB9XG4gICAgRG9jdW1lbnRDb2xvckFkYXB0ZXIucHJvdG90eXBlLnByb3ZpZGVEb2N1bWVudENvbG9ycyA9IGZ1bmN0aW9uIChtb2RlbCwgdG9rZW4pIHtcbiAgICAgICAgdmFyIHJlc291cmNlID0gbW9kZWwudXJpO1xuICAgICAgICByZXR1cm4gdGhpcy5fd29ya2VyKHJlc291cmNlKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHdvcmtlcikgeyByZXR1cm4gd29ya2VyLmZpbmREb2N1bWVudENvbG9ycyhyZXNvdXJjZS50b1N0cmluZygpKTsgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChpbmZvcykge1xuICAgICAgICAgICAgaWYgKCFpbmZvcykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpbmZvcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsgcmV0dXJuICh7XG4gICAgICAgICAgICAgICAgY29sb3I6IGl0ZW0uY29sb3IsXG4gICAgICAgICAgICAgICAgcmFuZ2U6IHRvUmFuZ2UoaXRlbS5yYW5nZSlcbiAgICAgICAgICAgIH0pOyB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBEb2N1bWVudENvbG9yQWRhcHRlci5wcm90b3R5cGUucHJvdmlkZUNvbG9yUHJlc2VudGF0aW9ucyA9IGZ1bmN0aW9uIChtb2RlbCwgaW5mbywgdG9rZW4pIHtcbiAgICAgICAgdmFyIHJlc291cmNlID0gbW9kZWwudXJpO1xuICAgICAgICByZXR1cm4gdGhpcy5fd29ya2VyKHJlc291cmNlKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHdvcmtlcikge1xuICAgICAgICAgICAgcmV0dXJuIHdvcmtlci5nZXRDb2xvclByZXNlbnRhdGlvbnMocmVzb3VyY2UudG9TdHJpbmcoKSwgaW5mby5jb2xvciwgZnJvbVJhbmdlKGluZm8ucmFuZ2UpKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChwcmVzZW50YXRpb25zKSB7XG4gICAgICAgICAgICBpZiAoIXByZXNlbnRhdGlvbnMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcHJlc2VudGF0aW9ucy5tYXAoZnVuY3Rpb24gKHByZXNlbnRhdGlvbikge1xuICAgICAgICAgICAgICAgIHZhciBpdGVtID0ge1xuICAgICAgICAgICAgICAgICAgICBsYWJlbDogcHJlc2VudGF0aW9uLmxhYmVsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAocHJlc2VudGF0aW9uLnRleHRFZGl0KSB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0udGV4dEVkaXQgPSB0b1RleHRFZGl0KHByZXNlbnRhdGlvbi50ZXh0RWRpdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChwcmVzZW50YXRpb24uYWRkaXRpb25hbFRleHRFZGl0cykge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLmFkZGl0aW9uYWxUZXh0RWRpdHMgPSBwcmVzZW50YXRpb24uYWRkaXRpb25hbFRleHRFZGl0cy5tYXAodG9UZXh0RWRpdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIERvY3VtZW50Q29sb3JBZGFwdGVyO1xufSgpKTtcbmV4cG9ydCB7IERvY3VtZW50Q29sb3JBZGFwdGVyIH07XG52YXIgRm9sZGluZ1JhbmdlQWRhcHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBGb2xkaW5nUmFuZ2VBZGFwdGVyKF93b3JrZXIpIHtcbiAgICAgICAgdGhpcy5fd29ya2VyID0gX3dvcmtlcjtcbiAgICB9XG4gICAgRm9sZGluZ1JhbmdlQWRhcHRlci5wcm90b3R5cGUucHJvdmlkZUZvbGRpbmdSYW5nZXMgPSBmdW5jdGlvbiAobW9kZWwsIGNvbnRleHQsIHRva2VuKSB7XG4gICAgICAgIHZhciByZXNvdXJjZSA9IG1vZGVsLnVyaTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dvcmtlcihyZXNvdXJjZSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICh3b3JrZXIpIHsgcmV0dXJuIHdvcmtlci5nZXRGb2xkaW5nUmFuZ2VzKHJlc291cmNlLnRvU3RyaW5nKCksIGNvbnRleHQpOyB9KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJhbmdlcykge1xuICAgICAgICAgICAgaWYgKCFyYW5nZXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmFuZ2VzLm1hcChmdW5jdGlvbiAocmFuZ2UpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0ge1xuICAgICAgICAgICAgICAgICAgICBzdGFydDogcmFuZ2Uuc3RhcnRMaW5lICsgMSxcbiAgICAgICAgICAgICAgICAgICAgZW5kOiByYW5nZS5lbmRMaW5lICsgMVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByYW5nZS5raW5kICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQua2luZCA9IHRvRm9sZGluZ1JhbmdlS2luZChyYW5nZS5raW5kKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBGb2xkaW5nUmFuZ2VBZGFwdGVyO1xufSgpKTtcbmV4cG9ydCB7IEZvbGRpbmdSYW5nZUFkYXB0ZXIgfTtcbmZ1bmN0aW9uIHRvRm9sZGluZ1JhbmdlS2luZChraW5kKSB7XG4gICAgc3dpdGNoIChraW5kKSB7XG4gICAgICAgIGNhc2UgY3NzU2VydmljZS5Gb2xkaW5nUmFuZ2VLaW5kLkNvbW1lbnQ6XG4gICAgICAgICAgICByZXR1cm4gbGFuZ3VhZ2VzLkZvbGRpbmdSYW5nZUtpbmQuQ29tbWVudDtcbiAgICAgICAgY2FzZSBjc3NTZXJ2aWNlLkZvbGRpbmdSYW5nZUtpbmQuSW1wb3J0czpcbiAgICAgICAgICAgIHJldHVybiBsYW5ndWFnZXMuRm9sZGluZ1JhbmdlS2luZC5JbXBvcnRzO1xuICAgICAgICBjYXNlIGNzc1NlcnZpY2UuRm9sZGluZ1JhbmdlS2luZC5SZWdpb246XG4gICAgICAgICAgICByZXR1cm4gbGFuZ3VhZ2VzLkZvbGRpbmdSYW5nZUtpbmQuUmVnaW9uO1xuICAgIH1cbn1cbnZhciBTZWxlY3Rpb25SYW5nZUFkYXB0ZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU2VsZWN0aW9uUmFuZ2VBZGFwdGVyKF93b3JrZXIpIHtcbiAgICAgICAgdGhpcy5fd29ya2VyID0gX3dvcmtlcjtcbiAgICB9XG4gICAgU2VsZWN0aW9uUmFuZ2VBZGFwdGVyLnByb3RvdHlwZS5wcm92aWRlU2VsZWN0aW9uUmFuZ2VzID0gZnVuY3Rpb24gKG1vZGVsLCBwb3NpdGlvbnMsIHRva2VuKSB7XG4gICAgICAgIHZhciByZXNvdXJjZSA9IG1vZGVsLnVyaTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dvcmtlcihyZXNvdXJjZSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICh3b3JrZXIpIHsgcmV0dXJuIHdvcmtlci5nZXRTZWxlY3Rpb25SYW5nZXMocmVzb3VyY2UudG9TdHJpbmcoKSwgcG9zaXRpb25zLm1hcChmcm9tUG9zaXRpb24pKTsgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChzZWxlY3Rpb25SYW5nZXMpIHtcbiAgICAgICAgICAgIGlmICghc2VsZWN0aW9uUmFuZ2VzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHNlbGVjdGlvblJhbmdlcy5tYXAoZnVuY3Rpb24gKHNlbGVjdGlvblJhbmdlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgICAgICAgICAgIHdoaWxlIChzZWxlY3Rpb25SYW5nZSkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaCh7IHJhbmdlOiB0b1JhbmdlKHNlbGVjdGlvblJhbmdlLnJhbmdlKSB9KTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uUmFuZ2UgPSBzZWxlY3Rpb25SYW5nZS5wYXJlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gU2VsZWN0aW9uUmFuZ2VBZGFwdGVyO1xufSgpKTtcbmV4cG9ydCB7IFNlbGVjdGlvblJhbmdlQWRhcHRlciB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/languageFeatures.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/language/css/workerManager.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorkerManager\", function() { return WorkerManager; });\n/* harmony import */ var _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./node_modules/monaco-editor/esm/vs/language/css/fillers/monaco-editor-core.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\nvar WorkerManager = /** @class */ (function () {\n    function WorkerManager(defaults) {\n        var _this = this;\n        this._defaults = defaults;\n        this._worker = null;\n        this._idleCheckInterval = window.setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\n        this._lastUsedTime = 0;\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\n    }\n    WorkerManager.prototype._stopWorker = function () {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    };\n    WorkerManager.prototype.dispose = function () {\n        clearInterval(this._idleCheckInterval);\n        this._configChangeListener.dispose();\n        this._stopWorker();\n    };\n    WorkerManager.prototype._checkIfIdle = function () {\n        if (!this._worker) {\n            return;\n        }\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\n            this._stopWorker();\n        }\n    };\n    WorkerManager.prototype._getClient = function () {\n        this._lastUsedTime = Date.now();\n        if (!this._client) {\n            this._worker = _fillers_monaco_editor_core_js__WEBPACK_IMPORTED_MODULE_0__[\"editor\"].createWebWorker({\n                // module that exports the create() method and returns a `CSSWorker` instance\n                moduleId: 'vs/language/css/cssWorker',\n                label: this._defaults.languageId,\n                // passed in to the create() method\n                createData: {\n                    languageSettings: this._defaults.diagnosticsOptions,\n                    languageId: this._defaults.languageId\n                }\n            });\n            this._client = this._worker.getProxy();\n        }\n        return this._client;\n    };\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\n        var _this = this;\n        var resources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            resources[_i] = arguments[_i];\n        }\n        var _client;\n        return this._getClient()\n            .then(function (client) {\n            _client = client;\n        })\n            .then(function (_) {\n            return _this._worker.withSyncedResources(resources);\n        })\n            .then(function (_) { return _client; });\n    };\n    return WorkerManager;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL3dvcmtlck1hbmFnZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvY3NzL3dvcmtlck1hbmFnZXIuanM/YjkzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IGVkaXRvciB9IGZyb20gJy4vZmlsbGVycy9tb25hY28tZWRpdG9yLWNvcmUuanMnO1xudmFyIFNUT1BfV0hFTl9JRExFX0ZPUiA9IDIgKiA2MCAqIDEwMDA7IC8vIDJtaW5cbnZhciBXb3JrZXJNYW5hZ2VyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFdvcmtlck1hbmFnZXIoZGVmYXVsdHMpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5fZGVmYXVsdHMgPSBkZWZhdWx0cztcbiAgICAgICAgdGhpcy5fd29ya2VyID0gbnVsbDtcbiAgICAgICAgdGhpcy5faWRsZUNoZWNrSW50ZXJ2YWwgPSB3aW5kb3cuc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuX2NoZWNrSWZJZGxlKCk7IH0sIDMwICogMTAwMCk7XG4gICAgICAgIHRoaXMuX2xhc3RVc2VkVGltZSA9IDA7XG4gICAgICAgIHRoaXMuX2NvbmZpZ0NoYW5nZUxpc3RlbmVyID0gdGhpcy5fZGVmYXVsdHMub25EaWRDaGFuZ2UoZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuX3N0b3BXb3JrZXIoKTsgfSk7XG4gICAgfVxuICAgIFdvcmtlck1hbmFnZXIucHJvdG90eXBlLl9zdG9wV29ya2VyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5fd29ya2VyKSB7XG4gICAgICAgICAgICB0aGlzLl93b3JrZXIuZGlzcG9zZSgpO1xuICAgICAgICAgICAgdGhpcy5fd29ya2VyID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jbGllbnQgPSBudWxsO1xuICAgIH07XG4gICAgV29ya2VyTWFuYWdlci5wcm90b3R5cGUuZGlzcG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLl9pZGxlQ2hlY2tJbnRlcnZhbCk7XG4gICAgICAgIHRoaXMuX2NvbmZpZ0NoYW5nZUxpc3RlbmVyLmRpc3Bvc2UoKTtcbiAgICAgICAgdGhpcy5fc3RvcFdvcmtlcigpO1xuICAgIH07XG4gICAgV29ya2VyTWFuYWdlci5wcm90b3R5cGUuX2NoZWNrSWZJZGxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuX3dvcmtlcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0aW1lUGFzc2VkU2luY2VMYXN0VXNlZCA9IERhdGUubm93KCkgLSB0aGlzLl9sYXN0VXNlZFRpbWU7XG4gICAgICAgIGlmICh0aW1lUGFzc2VkU2luY2VMYXN0VXNlZCA+IFNUT1BfV0hFTl9JRExFX0ZPUikge1xuICAgICAgICAgICAgdGhpcy5fc3RvcFdvcmtlcigpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBXb3JrZXJNYW5hZ2VyLnByb3RvdHlwZS5fZ2V0Q2xpZW50ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLl9sYXN0VXNlZFRpbWUgPSBEYXRlLm5vdygpO1xuICAgICAgICBpZiAoIXRoaXMuX2NsaWVudCkge1xuICAgICAgICAgICAgdGhpcy5fd29ya2VyID0gZWRpdG9yLmNyZWF0ZVdlYldvcmtlcih7XG4gICAgICAgICAgICAgICAgLy8gbW9kdWxlIHRoYXQgZXhwb3J0cyB0aGUgY3JlYXRlKCkgbWV0aG9kIGFuZCByZXR1cm5zIGEgYENTU1dvcmtlcmAgaW5zdGFuY2VcbiAgICAgICAgICAgICAgICBtb2R1bGVJZDogJ3ZzL2xhbmd1YWdlL2Nzcy9jc3NXb3JrZXInLFxuICAgICAgICAgICAgICAgIGxhYmVsOiB0aGlzLl9kZWZhdWx0cy5sYW5ndWFnZUlkLFxuICAgICAgICAgICAgICAgIC8vIHBhc3NlZCBpbiB0byB0aGUgY3JlYXRlKCkgbWV0aG9kXG4gICAgICAgICAgICAgICAgY3JlYXRlRGF0YToge1xuICAgICAgICAgICAgICAgICAgICBsYW5ndWFnZVNldHRpbmdzOiB0aGlzLl9kZWZhdWx0cy5kaWFnbm9zdGljc09wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgIGxhbmd1YWdlSWQ6IHRoaXMuX2RlZmF1bHRzLmxhbmd1YWdlSWRcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuX2NsaWVudCA9IHRoaXMuX3dvcmtlci5nZXRQcm94eSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQ7XG4gICAgfTtcbiAgICBXb3JrZXJNYW5hZ2VyLnByb3RvdHlwZS5nZXRMYW5ndWFnZVNlcnZpY2VXb3JrZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciByZXNvdXJjZXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIHJlc291cmNlc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIHZhciBfY2xpZW50O1xuICAgICAgICByZXR1cm4gdGhpcy5fZ2V0Q2xpZW50KClcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uIChjbGllbnQpIHtcbiAgICAgICAgICAgIF9jbGllbnQgPSBjbGllbnQ7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoXykge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzLl93b3JrZXIud2l0aFN5bmNlZFJlc291cmNlcyhyZXNvdXJjZXMpO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKF8pIHsgcmV0dXJuIF9jbGllbnQ7IH0pO1xuICAgIH07XG4gICAgcmV0dXJuIFdvcmtlck1hbmFnZXI7XG59KCkpO1xuZXhwb3J0IHsgV29ya2VyTWFuYWdlciB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/css/workerManager.js\n");

/***/ })

}]);