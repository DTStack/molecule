(self["webpackJsonp"] = self["webpackJsonp"] || []).push([[58],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' }\n    ]\n};\nvar language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.shell',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: [\n        'if',\n        'then',\n        'do',\n        'else',\n        'elif',\n        'while',\n        'until',\n        'for',\n        'in',\n        'esac',\n        'fi',\n        'fin',\n        'fil',\n        'done',\n        'exit',\n        'set',\n        'unset',\n        'export',\n        'function'\n    ],\n    builtins: [\n        'ab',\n        'awk',\n        'bash',\n        'beep',\n        'cat',\n        'cc',\n        'cd',\n        'chown',\n        'chmod',\n        'chroot',\n        'clear',\n        'cp',\n        'curl',\n        'cut',\n        'diff',\n        'echo',\n        'find',\n        'gawk',\n        'gcc',\n        'get',\n        'git',\n        'grep',\n        'hg',\n        'kill',\n        'killall',\n        'ln',\n        'ls',\n        'make',\n        'mkdir',\n        'openssl',\n        'mv',\n        'nc',\n        'node',\n        'npm',\n        'ping',\n        'ps',\n        'restart',\n        'rm',\n        'rmdir',\n        'sed',\n        'service',\n        'sh',\n        'shopt',\n        'shred',\n        'source',\n        'sort',\n        'sleep',\n        'ssh',\n        'start',\n        'stop',\n        'su',\n        'sudo',\n        'svn',\n        'tee',\n        'telnet',\n        'top',\n        'touch',\n        'vi',\n        'vim',\n        'wall',\n        'wc',\n        'wget',\n        'who',\n        'write',\n        'yes',\n        'zsh'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            [\n                /[a-zA-Z]\\w*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@builtins': 'type.identifier',\n                        '@default': ''\n                    }\n                }\n            ],\n            { include: '@strings' },\n            { include: '@parameters' },\n            { include: '@heredoc' },\n            [/[{}\\[\\]()]/, '@brackets'],\n            [/-+\\w+/, 'attribute.name'],\n            [/@symbols/, 'delimiter'],\n            { include: '@numbers' },\n            [/[,;]/, 'delimiter']\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/(^#!.*$)/, 'metatag'],\n            [/(^#.*$)/, 'comment']\n        ],\n        numbers: [\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number']\n        ],\n        // Recognize strings, including those broken across lines\n        strings: [\n            [/'/, 'string', '@stringBody'],\n            [/\"/, 'string', '@dblStringBody']\n        ],\n        stringBody: [\n            [/'/, 'string', '@popall'],\n            [/./, 'string']\n        ],\n        dblStringBody: [\n            [/\"/, 'string', '@popall'],\n            [/./, 'string']\n        ],\n        heredoc: [\n            [\n                /(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/,\n                [\n                    'constants',\n                    'white',\n                    'string.heredoc.delimiter',\n                    'string.heredoc',\n                    'string.heredoc.delimiter'\n                ]\n            ]\n        ],\n        parameters: [\n            [/\\$\\d+/, 'variable.predefined'],\n            [/\\$\\w+/, 'variable'],\n            [/\\$[*@#?\\-$!0_]/, 'variable'],\n            [/\\$'/, 'variable', '@parameterBodyQuote'],\n            [/\\$\"/, 'variable', '@parameterBodyDoubleQuote'],\n            [/\\$\\(/, 'variable', '@parameterBodyParen'],\n            [/\\$\\{/, 'variable', '@parameterBodyCurlyBrace']\n        ],\n        parameterBodyQuote: [\n            [/[^#:%*@\\-!_']+/, 'variable'],\n            [/[#:%*@\\-!_]/, 'delimiter'],\n            [/[']/, 'variable', '@pop']\n        ],\n        parameterBodyDoubleQuote: [\n            [/[^#:%*@\\-!_\"]+/, 'variable'],\n            [/[#:%*@\\-!_]/, 'delimiter'],\n            [/[\"]/, 'variable', '@pop']\n        ],\n        parameterBodyParen: [\n            [/[^#:%*@\\-!_)]+/, 'variable'],\n            [/[#:%*@\\-!_]/, 'delimiter'],\n            [/[)]/, 'variable', '@pop']\n        ],\n        parameterBodyCurlyBrace: [\n            [/[^#:%*@\\-!_}]+/, 'variable'],\n            [/[#:%*@\\-!_]/, 'delimiter'],\n            [/[}]/, 'variable', '@pop']\n        ]\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3NoZWxsL3NoZWxsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9zaGVsbC9zaGVsbC5qcz85N2ZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuZXhwb3J0IHZhciBjb25mID0ge1xuICAgIGNvbW1lbnRzOiB7XG4gICAgICAgIGxpbmVDb21tZW50OiAnIydcbiAgICB9LFxuICAgIGJyYWNrZXRzOiBbXG4gICAgICAgIFsneycsICd9J10sXG4gICAgICAgIFsnWycsICddJ10sXG4gICAgICAgIFsnKCcsICcpJ11cbiAgICBdLFxuICAgIGF1dG9DbG9zaW5nUGFpcnM6IFtcbiAgICAgICAgeyBvcGVuOiAneycsIGNsb3NlOiAnfScgfSxcbiAgICAgICAgeyBvcGVuOiAnWycsIGNsb3NlOiAnXScgfSxcbiAgICAgICAgeyBvcGVuOiAnKCcsIGNsb3NlOiAnKScgfSxcbiAgICAgICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJyB9LFxuICAgICAgICB7IG9wZW46IFwiJ1wiLCBjbG9zZTogXCInXCIgfSxcbiAgICAgICAgeyBvcGVuOiAnYCcsIGNsb3NlOiAnYCcgfVxuICAgIF0sXG4gICAgc3Vycm91bmRpbmdQYWlyczogW1xuICAgICAgICB7IG9wZW46ICd7JywgY2xvc2U6ICd9JyB9LFxuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJyB9LFxuICAgICAgICB7IG9wZW46ICcoJywgY2xvc2U6ICcpJyB9LFxuICAgICAgICB7IG9wZW46ICdcIicsIGNsb3NlOiAnXCInIH0sXG4gICAgICAgIHsgb3BlbjogXCInXCIsIGNsb3NlOiBcIidcIiB9LFxuICAgICAgICB7IG9wZW46ICdgJywgY2xvc2U6ICdgJyB9XG4gICAgXVxufTtcbmV4cG9ydCB2YXIgbGFuZ3VhZ2UgPSB7XG4gICAgZGVmYXVsdFRva2VuOiAnJyxcbiAgICBpZ25vcmVDYXNlOiB0cnVlLFxuICAgIHRva2VuUG9zdGZpeDogJy5zaGVsbCcsXG4gICAgYnJhY2tldHM6IFtcbiAgICAgICAgeyB0b2tlbjogJ2RlbGltaXRlci5icmFja2V0Jywgb3BlbjogJ3snLCBjbG9zZTogJ30nIH0sXG4gICAgICAgIHsgdG9rZW46ICdkZWxpbWl0ZXIucGFyZW50aGVzaXMnLCBvcGVuOiAnKCcsIGNsb3NlOiAnKScgfSxcbiAgICAgICAgeyB0b2tlbjogJ2RlbGltaXRlci5zcXVhcmUnLCBvcGVuOiAnWycsIGNsb3NlOiAnXScgfVxuICAgIF0sXG4gICAga2V5d29yZHM6IFtcbiAgICAgICAgJ2lmJyxcbiAgICAgICAgJ3RoZW4nLFxuICAgICAgICAnZG8nLFxuICAgICAgICAnZWxzZScsXG4gICAgICAgICdlbGlmJyxcbiAgICAgICAgJ3doaWxlJyxcbiAgICAgICAgJ3VudGlsJyxcbiAgICAgICAgJ2ZvcicsXG4gICAgICAgICdpbicsXG4gICAgICAgICdlc2FjJyxcbiAgICAgICAgJ2ZpJyxcbiAgICAgICAgJ2ZpbicsXG4gICAgICAgICdmaWwnLFxuICAgICAgICAnZG9uZScsXG4gICAgICAgICdleGl0JyxcbiAgICAgICAgJ3NldCcsXG4gICAgICAgICd1bnNldCcsXG4gICAgICAgICdleHBvcnQnLFxuICAgICAgICAnZnVuY3Rpb24nXG4gICAgXSxcbiAgICBidWlsdGluczogW1xuICAgICAgICAnYWInLFxuICAgICAgICAnYXdrJyxcbiAgICAgICAgJ2Jhc2gnLFxuICAgICAgICAnYmVlcCcsXG4gICAgICAgICdjYXQnLFxuICAgICAgICAnY2MnLFxuICAgICAgICAnY2QnLFxuICAgICAgICAnY2hvd24nLFxuICAgICAgICAnY2htb2QnLFxuICAgICAgICAnY2hyb290JyxcbiAgICAgICAgJ2NsZWFyJyxcbiAgICAgICAgJ2NwJyxcbiAgICAgICAgJ2N1cmwnLFxuICAgICAgICAnY3V0JyxcbiAgICAgICAgJ2RpZmYnLFxuICAgICAgICAnZWNobycsXG4gICAgICAgICdmaW5kJyxcbiAgICAgICAgJ2dhd2snLFxuICAgICAgICAnZ2NjJyxcbiAgICAgICAgJ2dldCcsXG4gICAgICAgICdnaXQnLFxuICAgICAgICAnZ3JlcCcsXG4gICAgICAgICdoZycsXG4gICAgICAgICdraWxsJyxcbiAgICAgICAgJ2tpbGxhbGwnLFxuICAgICAgICAnbG4nLFxuICAgICAgICAnbHMnLFxuICAgICAgICAnbWFrZScsXG4gICAgICAgICdta2RpcicsXG4gICAgICAgICdvcGVuc3NsJyxcbiAgICAgICAgJ212JyxcbiAgICAgICAgJ25jJyxcbiAgICAgICAgJ25vZGUnLFxuICAgICAgICAnbnBtJyxcbiAgICAgICAgJ3BpbmcnLFxuICAgICAgICAncHMnLFxuICAgICAgICAncmVzdGFydCcsXG4gICAgICAgICdybScsXG4gICAgICAgICdybWRpcicsXG4gICAgICAgICdzZWQnLFxuICAgICAgICAnc2VydmljZScsXG4gICAgICAgICdzaCcsXG4gICAgICAgICdzaG9wdCcsXG4gICAgICAgICdzaHJlZCcsXG4gICAgICAgICdzb3VyY2UnLFxuICAgICAgICAnc29ydCcsXG4gICAgICAgICdzbGVlcCcsXG4gICAgICAgICdzc2gnLFxuICAgICAgICAnc3RhcnQnLFxuICAgICAgICAnc3RvcCcsXG4gICAgICAgICdzdScsXG4gICAgICAgICdzdWRvJyxcbiAgICAgICAgJ3N2bicsXG4gICAgICAgICd0ZWUnLFxuICAgICAgICAndGVsbmV0JyxcbiAgICAgICAgJ3RvcCcsXG4gICAgICAgICd0b3VjaCcsXG4gICAgICAgICd2aScsXG4gICAgICAgICd2aW0nLFxuICAgICAgICAnd2FsbCcsXG4gICAgICAgICd3YycsXG4gICAgICAgICd3Z2V0JyxcbiAgICAgICAgJ3dobycsXG4gICAgICAgICd3cml0ZScsXG4gICAgICAgICd5ZXMnLFxuICAgICAgICAnenNoJ1xuICAgIF0sXG4gICAgLy8gd2UgaW5jbHVkZSB0aGVzZSBjb21tb24gcmVndWxhciBleHByZXNzaW9uc1xuICAgIHN5bWJvbHM6IC9bPT48IX4/JnwrXFwtKlxcL1xcXjtcXC4sXSsvLFxuICAgIC8vIFRoZSBtYWluIHRva2VuaXplciBmb3Igb3VyIGxhbmd1YWdlc1xuICAgIHRva2VuaXplcjoge1xuICAgICAgICByb290OiBbXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAd2hpdGVzcGFjZScgfSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAvW2EtekEtWl1cXHcqLyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2VzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnQGtleXdvcmRzJzogJ2tleXdvcmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BidWlsdGlucyc6ICd0eXBlLmlkZW50aWZpZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BkZWZhdWx0JzogJydcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB7IGluY2x1ZGU6ICdAc3RyaW5ncycgfSxcbiAgICAgICAgICAgIHsgaW5jbHVkZTogJ0BwYXJhbWV0ZXJzJyB9LFxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQGhlcmVkb2MnIH0sXG4gICAgICAgICAgICBbL1t7fVxcW1xcXSgpXS8sICdAYnJhY2tldHMnXSxcbiAgICAgICAgICAgIFsvLStcXHcrLywgJ2F0dHJpYnV0ZS5uYW1lJ10sXG4gICAgICAgICAgICBbL0BzeW1ib2xzLywgJ2RlbGltaXRlciddLFxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQG51bWJlcnMnIH0sXG4gICAgICAgICAgICBbL1ssO10vLCAnZGVsaW1pdGVyJ11cbiAgICAgICAgXSxcbiAgICAgICAgd2hpdGVzcGFjZTogW1xuICAgICAgICAgICAgWy9cXHMrLywgJ3doaXRlJ10sXG4gICAgICAgICAgICBbLyheIyEuKiQpLywgJ21ldGF0YWcnXSxcbiAgICAgICAgICAgIFsvKF4jLiokKS8sICdjb21tZW50J11cbiAgICAgICAgXSxcbiAgICAgICAgbnVtYmVyczogW1xuICAgICAgICAgICAgWy9cXGQqXFwuXFxkKyhbZUVdW1xcLStdP1xcZCspPy8sICdudW1iZXIuZmxvYXQnXSxcbiAgICAgICAgICAgIFsvMFt4WF1bMC05YS1mQS1GX10qWzAtOWEtZkEtRl0vLCAnbnVtYmVyLmhleCddLFxuICAgICAgICAgICAgWy9cXGQrLywgJ251bWJlciddXG4gICAgICAgIF0sXG4gICAgICAgIC8vIFJlY29nbml6ZSBzdHJpbmdzLCBpbmNsdWRpbmcgdGhvc2UgYnJva2VuIGFjcm9zcyBsaW5lc1xuICAgICAgICBzdHJpbmdzOiBbXG4gICAgICAgICAgICBbLycvLCAnc3RyaW5nJywgJ0BzdHJpbmdCb2R5J10sXG4gICAgICAgICAgICBbL1wiLywgJ3N0cmluZycsICdAZGJsU3RyaW5nQm9keSddXG4gICAgICAgIF0sXG4gICAgICAgIHN0cmluZ0JvZHk6IFtcbiAgICAgICAgICAgIFsvJy8sICdzdHJpbmcnLCAnQHBvcGFsbCddLFxuICAgICAgICAgICAgWy8uLywgJ3N0cmluZyddXG4gICAgICAgIF0sXG4gICAgICAgIGRibFN0cmluZ0JvZHk6IFtcbiAgICAgICAgICAgIFsvXCIvLCAnc3RyaW5nJywgJ0Bwb3BhbGwnXSxcbiAgICAgICAgICAgIFsvLi8sICdzdHJpbmcnXVxuICAgICAgICBdLFxuICAgICAgICBoZXJlZG9jOiBbXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgLyg8PFstPF0/KShcXHMqKShbJ1wiYF0/KShbXFx3XFwtXSspKFsnXCJgXT8pLyxcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICdjb25zdGFudHMnLFxuICAgICAgICAgICAgICAgICAgICAnd2hpdGUnLFxuICAgICAgICAgICAgICAgICAgICAnc3RyaW5nLmhlcmVkb2MuZGVsaW1pdGVyJyxcbiAgICAgICAgICAgICAgICAgICAgJ3N0cmluZy5oZXJlZG9jJyxcbiAgICAgICAgICAgICAgICAgICAgJ3N0cmluZy5oZXJlZG9jLmRlbGltaXRlcidcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdXG4gICAgICAgIF0sXG4gICAgICAgIHBhcmFtZXRlcnM6IFtcbiAgICAgICAgICAgIFsvXFwkXFxkKy8sICd2YXJpYWJsZS5wcmVkZWZpbmVkJ10sXG4gICAgICAgICAgICBbL1xcJFxcdysvLCAndmFyaWFibGUnXSxcbiAgICAgICAgICAgIFsvXFwkWypAIz9cXC0kITBfXS8sICd2YXJpYWJsZSddLFxuICAgICAgICAgICAgWy9cXCQnLywgJ3ZhcmlhYmxlJywgJ0BwYXJhbWV0ZXJCb2R5UXVvdGUnXSxcbiAgICAgICAgICAgIFsvXFwkXCIvLCAndmFyaWFibGUnLCAnQHBhcmFtZXRlckJvZHlEb3VibGVRdW90ZSddLFxuICAgICAgICAgICAgWy9cXCRcXCgvLCAndmFyaWFibGUnLCAnQHBhcmFtZXRlckJvZHlQYXJlbiddLFxuICAgICAgICAgICAgWy9cXCRcXHsvLCAndmFyaWFibGUnLCAnQHBhcmFtZXRlckJvZHlDdXJseUJyYWNlJ11cbiAgICAgICAgXSxcbiAgICAgICAgcGFyYW1ldGVyQm9keVF1b3RlOiBbXG4gICAgICAgICAgICBbL1teIzolKkBcXC0hXyddKy8sICd2YXJpYWJsZSddLFxuICAgICAgICAgICAgWy9bIzolKkBcXC0hX10vLCAnZGVsaW1pdGVyJ10sXG4gICAgICAgICAgICBbL1snXS8sICd2YXJpYWJsZScsICdAcG9wJ11cbiAgICAgICAgXSxcbiAgICAgICAgcGFyYW1ldGVyQm9keURvdWJsZVF1b3RlOiBbXG4gICAgICAgICAgICBbL1teIzolKkBcXC0hX1wiXSsvLCAndmFyaWFibGUnXSxcbiAgICAgICAgICAgIFsvWyM6JSpAXFwtIV9dLywgJ2RlbGltaXRlciddLFxuICAgICAgICAgICAgWy9bXCJdLywgJ3ZhcmlhYmxlJywgJ0Bwb3AnXVxuICAgICAgICBdLFxuICAgICAgICBwYXJhbWV0ZXJCb2R5UGFyZW46IFtcbiAgICAgICAgICAgIFsvW14jOiUqQFxcLSFfKV0rLywgJ3ZhcmlhYmxlJ10sXG4gICAgICAgICAgICBbL1sjOiUqQFxcLSFfXS8sICdkZWxpbWl0ZXInXSxcbiAgICAgICAgICAgIFsvWyldLywgJ3ZhcmlhYmxlJywgJ0Bwb3AnXVxuICAgICAgICBdLFxuICAgICAgICBwYXJhbWV0ZXJCb2R5Q3VybHlCcmFjZTogW1xuICAgICAgICAgICAgWy9bXiM6JSpAXFwtIV99XSsvLCAndmFyaWFibGUnXSxcbiAgICAgICAgICAgIFsvWyM6JSpAXFwtIV9dLywgJ2RlbGltaXRlciddLFxuICAgICAgICAgICAgWy9bfV0vLCAndmFyaWFibGUnLCAnQHBvcCddXG4gICAgICAgIF1cbiAgICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js\n");

/***/ })

}]);