(self["webpackJsonp"] = self["webpackJsonp"] || []).push([[62],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/st/st.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"conf\", function() { return conf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"language\", function() { return language; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n        ['var', 'end_var'],\n        ['var_input', 'end_var'],\n        ['var_output', 'end_var'],\n        ['var_in_out', 'end_var'],\n        ['var_temp', 'end_var'],\n        ['var_global', 'end_var'],\n        ['var_access', 'end_var'],\n        ['var_external', 'end_var'],\n        ['type', 'end_type'],\n        ['struct', 'end_struct'],\n        ['program', 'end_program'],\n        ['function', 'end_function'],\n        ['function_block', 'end_function_block'],\n        ['action', 'end_action'],\n        ['step', 'end_step'],\n        ['initial_step', 'end_step'],\n        ['transaction', 'end_transaction'],\n        ['configuration', 'end_configuration'],\n        ['tcp', 'end_tcp'],\n        ['recource', 'end_recource'],\n        ['channel', 'end_channel'],\n        ['library', 'end_library'],\n        ['folder', 'end_folder'],\n        ['binaries', 'end_binaries'],\n        ['includes', 'end_includes'],\n        ['sources', 'end_sources']\n    ],\n    autoClosingPairs: [\n        { open: '[', close: ']' },\n        { open: '{', close: '}' },\n        { open: '(', close: ')' },\n        { open: '/*', close: '*/' },\n        { open: \"'\", close: \"'\", notIn: ['string_sq'] },\n        { open: '\"', close: '\"', notIn: ['string_dq'] },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: 'var', close: 'end_var' },\n        { open: 'var_input', close: 'end_var' },\n        { open: 'var_output', close: 'end_var' },\n        { open: 'var_in_out', close: 'end_var' },\n        { open: 'var_temp', close: 'end_var' },\n        { open: 'var_global', close: 'end_var' },\n        { open: 'var_access', close: 'end_var' },\n        { open: 'var_external', close: 'end_var' },\n        { open: 'type', close: 'end_type' },\n        { open: 'struct', close: 'end_struct' },\n        { open: 'program', close: 'end_program' },\n        { open: 'function', close: 'end_function' },\n        { open: 'function_block', close: 'end_function_block' },\n        { open: 'action', close: 'end_action' },\n        { open: 'step', close: 'end_step' },\n        { open: 'initial_step', close: 'end_step' },\n        { open: 'transaction', close: 'end_transaction' },\n        { open: 'configuration', close: 'end_configuration' },\n        { open: 'tcp', close: 'end_tcp' },\n        { open: 'recource', close: 'end_recource' },\n        { open: 'channel', close: 'end_channel' },\n        { open: 'library', close: 'end_library' },\n        { open: 'folder', close: 'end_folder' },\n        { open: 'binaries', close: 'end_binaries' },\n        { open: 'includes', close: 'end_includes' },\n        { open: 'sources', close: 'end_sources' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*#pragma\\\\s+region\\\\b'),\n            end: new RegExp('^\\\\s*#pragma\\\\s+endregion\\\\b')\n        }\n    }\n};\nvar language = {\n    defaultToken: '',\n    tokenPostfix: '.st',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: [\n        'if',\n        'end_if',\n        'elsif',\n        'else',\n        'case',\n        'of',\n        'to',\n        '__try',\n        '__catch',\n        '__finally',\n        'do',\n        'with',\n        'by',\n        'while',\n        'repeat',\n        'end_while',\n        'end_repeat',\n        'end_case',\n        'for',\n        'end_for',\n        'task',\n        'retain',\n        'non_retain',\n        'constant',\n        'with',\n        'at',\n        'exit',\n        'return',\n        'interval',\n        'priority',\n        'address',\n        'port',\n        'on_channel',\n        'then',\n        'iec',\n        'file',\n        'uses',\n        'version',\n        'packagetype',\n        'displayname',\n        'copyright',\n        'summary',\n        'vendor',\n        'common_source',\n        'from',\n        'extends'\n    ],\n    constant: ['false', 'true', 'null'],\n    defineKeywords: [\n        'var',\n        'var_input',\n        'var_output',\n        'var_in_out',\n        'var_temp',\n        'var_global',\n        'var_access',\n        'var_external',\n        'end_var',\n        'type',\n        'end_type',\n        'struct',\n        'end_struct',\n        'program',\n        'end_program',\n        'function',\n        'end_function',\n        'function_block',\n        'end_function_block',\n        'interface',\n        'end_interface',\n        'method',\n        'end_method',\n        'property',\n        'end_property',\n        'namespace',\n        'end_namespace',\n        'configuration',\n        'end_configuration',\n        'tcp',\n        'end_tcp',\n        'resource',\n        'end_resource',\n        'channel',\n        'end_channel',\n        'library',\n        'end_library',\n        'folder',\n        'end_folder',\n        'binaries',\n        'end_binaries',\n        'includes',\n        'end_includes',\n        'sources',\n        'end_sources',\n        'action',\n        'end_action',\n        'step',\n        'initial_step',\n        'end_step',\n        'transaction',\n        'end_transaction'\n    ],\n    typeKeywords: [\n        'int',\n        'sint',\n        'dint',\n        'lint',\n        'usint',\n        'uint',\n        'udint',\n        'ulint',\n        'real',\n        'lreal',\n        'time',\n        'date',\n        'time_of_day',\n        'date_and_time',\n        'string',\n        'bool',\n        'byte',\n        'word',\n        'dword',\n        'array',\n        'pointer',\n        'lword'\n    ],\n    operators: [\n        '=',\n        '>',\n        '<',\n        ':',\n        ':=',\n        '<=',\n        '>=',\n        '<>',\n        '&',\n        '+',\n        '-',\n        '*',\n        '**',\n        'MOD',\n        '^',\n        'or',\n        'and',\n        'not',\n        'xor',\n        'abs',\n        'acos',\n        'asin',\n        'atan',\n        'cos',\n        'exp',\n        'expt',\n        'ln',\n        'log',\n        'sin',\n        'sqrt',\n        'tan',\n        'sel',\n        'max',\n        'min',\n        'limit',\n        'mux',\n        'shl',\n        'shr',\n        'rol',\n        'ror',\n        'indexof',\n        'sizeof',\n        'adr',\n        'adrinst',\n        'bitadr',\n        'is_valid',\n        'ref',\n        'ref_to'\n    ],\n    builtinVariables: [],\n    builtinFunctions: [\n        'sr',\n        'rs',\n        'tp',\n        'ton',\n        'tof',\n        'eq',\n        'ge',\n        'le',\n        'lt',\n        'ne',\n        'round',\n        'trunc',\n        'ctd',\n        'сtu',\n        'ctud',\n        'r_trig',\n        'f_trig',\n        'move',\n        'concat',\n        'delete',\n        'find',\n        'insert',\n        'left',\n        'len',\n        'replace',\n        'right',\n        'rtc'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    // C# style strings\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/(\\.\\.)/, 'delimiter'],\n            [/\\b(16#[0-9A-Fa-f\\_]*)+\\b/, 'number.hex'],\n            [/\\b(2#[01\\_]+)+\\b/, 'number.binary'],\n            [/\\b(8#[0-9\\_]*)+\\b/, 'number.octal'],\n            [/\\b\\d*\\.\\d+([eE][\\-+]?\\d+)?\\b/, 'number.float'],\n            [/\\b(L?REAL)#[0-9\\_\\.e]+\\b/, 'number.float'],\n            [/\\b(BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT)#[0-9\\_]+\\b/, 'number'],\n            [/\\d+/, 'number'],\n            [/\\b(T|DT|TOD)#[0-9:-_shmyd]+\\b/, 'tag'],\n            [/\\%(I|Q|M)(X|B|W|D|L)[0-9\\.]+/, 'tag'],\n            [/\\%(I|Q|M)[0-9\\.]*/, 'tag'],\n            [/\\b[A-Za-z]{1,6}#[0-9]+\\b/, 'tag'],\n            [/\\b(TO_|CTU_|CTD_|CTUD_|MUX_|SEL_)[A_Za-z]+\\b/, 'predefined'],\n            [/\\b[A_Za-z]+(_TO_)[A_Za-z]+\\b/, 'predefined'],\n            [/[;]/, 'delimiter'],\n            [/[.]/, { token: 'delimiter', next: '@params' }],\n            // identifiers and keywords\n            [\n                /[a-zA-Z_]\\w*/,\n                {\n                    cases: {\n                        '@operators': 'operators',\n                        '@keywords': 'keyword',\n                        '@typeKeywords': 'type',\n                        '@defineKeywords': 'variable',\n                        '@constant': 'constant',\n                        '@builtinVariables': 'predefined',\n                        '@builtinFunctions': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }\n            ],\n            { include: '@whitespace' },\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string_dq' }],\n            [/'/, { token: 'string.quote', bracket: '@open', next: '@string_sq' }],\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        params: [\n            [/\\b[A-Za-z0-9_]+\\b(?=\\()/, { token: 'identifier', next: '@pop' }],\n            [/\\b[A-Za-z0-9_]+\\b/, 'variable.name', '@pop']\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            ['\\\\*/', 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        comment2: [\n            [/[^\\(*]+/, 'comment'],\n            [/\\(\\*/, 'comment', '@push'],\n            ['\\\\*\\\\)', 'comment', '@pop'],\n            [/[\\(*]/, 'comment']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\/.*$/, 'comment'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\(\\*/, 'comment', '@comment2']\n        ],\n        string_dq: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        string_sq: [\n            [/[^\\\\']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ]\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3N0L3N0LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9zdC9zdC5qcz9hY2MyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKiAgQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuZXhwb3J0IHZhciBjb25mID0ge1xuICAgIGNvbW1lbnRzOiB7XG4gICAgICAgIGxpbmVDb21tZW50OiAnLy8nLFxuICAgICAgICBibG9ja0NvbW1lbnQ6IFsnKConLCAnKiknXVxuICAgIH0sXG4gICAgYnJhY2tldHM6IFtcbiAgICAgICAgWyd7JywgJ30nXSxcbiAgICAgICAgWydbJywgJ10nXSxcbiAgICAgICAgWycoJywgJyknXSxcbiAgICAgICAgWyd2YXInLCAnZW5kX3ZhciddLFxuICAgICAgICBbJ3Zhcl9pbnB1dCcsICdlbmRfdmFyJ10sXG4gICAgICAgIFsndmFyX291dHB1dCcsICdlbmRfdmFyJ10sXG4gICAgICAgIFsndmFyX2luX291dCcsICdlbmRfdmFyJ10sXG4gICAgICAgIFsndmFyX3RlbXAnLCAnZW5kX3ZhciddLFxuICAgICAgICBbJ3Zhcl9nbG9iYWwnLCAnZW5kX3ZhciddLFxuICAgICAgICBbJ3Zhcl9hY2Nlc3MnLCAnZW5kX3ZhciddLFxuICAgICAgICBbJ3Zhcl9leHRlcm5hbCcsICdlbmRfdmFyJ10sXG4gICAgICAgIFsndHlwZScsICdlbmRfdHlwZSddLFxuICAgICAgICBbJ3N0cnVjdCcsICdlbmRfc3RydWN0J10sXG4gICAgICAgIFsncHJvZ3JhbScsICdlbmRfcHJvZ3JhbSddLFxuICAgICAgICBbJ2Z1bmN0aW9uJywgJ2VuZF9mdW5jdGlvbiddLFxuICAgICAgICBbJ2Z1bmN0aW9uX2Jsb2NrJywgJ2VuZF9mdW5jdGlvbl9ibG9jayddLFxuICAgICAgICBbJ2FjdGlvbicsICdlbmRfYWN0aW9uJ10sXG4gICAgICAgIFsnc3RlcCcsICdlbmRfc3RlcCddLFxuICAgICAgICBbJ2luaXRpYWxfc3RlcCcsICdlbmRfc3RlcCddLFxuICAgICAgICBbJ3RyYW5zYWN0aW9uJywgJ2VuZF90cmFuc2FjdGlvbiddLFxuICAgICAgICBbJ2NvbmZpZ3VyYXRpb24nLCAnZW5kX2NvbmZpZ3VyYXRpb24nXSxcbiAgICAgICAgWyd0Y3AnLCAnZW5kX3RjcCddLFxuICAgICAgICBbJ3JlY291cmNlJywgJ2VuZF9yZWNvdXJjZSddLFxuICAgICAgICBbJ2NoYW5uZWwnLCAnZW5kX2NoYW5uZWwnXSxcbiAgICAgICAgWydsaWJyYXJ5JywgJ2VuZF9saWJyYXJ5J10sXG4gICAgICAgIFsnZm9sZGVyJywgJ2VuZF9mb2xkZXInXSxcbiAgICAgICAgWydiaW5hcmllcycsICdlbmRfYmluYXJpZXMnXSxcbiAgICAgICAgWydpbmNsdWRlcycsICdlbmRfaW5jbHVkZXMnXSxcbiAgICAgICAgWydzb3VyY2VzJywgJ2VuZF9zb3VyY2VzJ11cbiAgICBdLFxuICAgIGF1dG9DbG9zaW5nUGFpcnM6IFtcbiAgICAgICAgeyBvcGVuOiAnWycsIGNsb3NlOiAnXScgfSxcbiAgICAgICAgeyBvcGVuOiAneycsIGNsb3NlOiAnfScgfSxcbiAgICAgICAgeyBvcGVuOiAnKCcsIGNsb3NlOiAnKScgfSxcbiAgICAgICAgeyBvcGVuOiAnLyonLCBjbG9zZTogJyovJyB9LFxuICAgICAgICB7IG9wZW46IFwiJ1wiLCBjbG9zZTogXCInXCIsIG5vdEluOiBbJ3N0cmluZ19zcSddIH0sXG4gICAgICAgIHsgb3BlbjogJ1wiJywgY2xvc2U6ICdcIicsIG5vdEluOiBbJ3N0cmluZ19kcSddIH0sXG4gICAgICAgIHsgb3BlbjogJ3Zhcl9pbnB1dCcsIGNsb3NlOiAnZW5kX3ZhcicgfSxcbiAgICAgICAgeyBvcGVuOiAndmFyX291dHB1dCcsIGNsb3NlOiAnZW5kX3ZhcicgfSxcbiAgICAgICAgeyBvcGVuOiAndmFyX2luX291dCcsIGNsb3NlOiAnZW5kX3ZhcicgfSxcbiAgICAgICAgeyBvcGVuOiAndmFyX3RlbXAnLCBjbG9zZTogJ2VuZF92YXInIH0sXG4gICAgICAgIHsgb3BlbjogJ3Zhcl9nbG9iYWwnLCBjbG9zZTogJ2VuZF92YXInIH0sXG4gICAgICAgIHsgb3BlbjogJ3Zhcl9hY2Nlc3MnLCBjbG9zZTogJ2VuZF92YXInIH0sXG4gICAgICAgIHsgb3BlbjogJ3Zhcl9leHRlcm5hbCcsIGNsb3NlOiAnZW5kX3ZhcicgfSxcbiAgICAgICAgeyBvcGVuOiAndHlwZScsIGNsb3NlOiAnZW5kX3R5cGUnIH0sXG4gICAgICAgIHsgb3BlbjogJ3N0cnVjdCcsIGNsb3NlOiAnZW5kX3N0cnVjdCcgfSxcbiAgICAgICAgeyBvcGVuOiAncHJvZ3JhbScsIGNsb3NlOiAnZW5kX3Byb2dyYW0nIH0sXG4gICAgICAgIHsgb3BlbjogJ2Z1bmN0aW9uJywgY2xvc2U6ICdlbmRfZnVuY3Rpb24nIH0sXG4gICAgICAgIHsgb3BlbjogJ2Z1bmN0aW9uX2Jsb2NrJywgY2xvc2U6ICdlbmRfZnVuY3Rpb25fYmxvY2snIH0sXG4gICAgICAgIHsgb3BlbjogJ2FjdGlvbicsIGNsb3NlOiAnZW5kX2FjdGlvbicgfSxcbiAgICAgICAgeyBvcGVuOiAnc3RlcCcsIGNsb3NlOiAnZW5kX3N0ZXAnIH0sXG4gICAgICAgIHsgb3BlbjogJ2luaXRpYWxfc3RlcCcsIGNsb3NlOiAnZW5kX3N0ZXAnIH0sXG4gICAgICAgIHsgb3BlbjogJ3RyYW5zYWN0aW9uJywgY2xvc2U6ICdlbmRfdHJhbnNhY3Rpb24nIH0sXG4gICAgICAgIHsgb3BlbjogJ2NvbmZpZ3VyYXRpb24nLCBjbG9zZTogJ2VuZF9jb25maWd1cmF0aW9uJyB9LFxuICAgICAgICB7IG9wZW46ICd0Y3AnLCBjbG9zZTogJ2VuZF90Y3AnIH0sXG4gICAgICAgIHsgb3BlbjogJ3JlY291cmNlJywgY2xvc2U6ICdlbmRfcmVjb3VyY2UnIH0sXG4gICAgICAgIHsgb3BlbjogJ2NoYW5uZWwnLCBjbG9zZTogJ2VuZF9jaGFubmVsJyB9LFxuICAgICAgICB7IG9wZW46ICdsaWJyYXJ5JywgY2xvc2U6ICdlbmRfbGlicmFyeScgfSxcbiAgICAgICAgeyBvcGVuOiAnZm9sZGVyJywgY2xvc2U6ICdlbmRfZm9sZGVyJyB9LFxuICAgICAgICB7IG9wZW46ICdiaW5hcmllcycsIGNsb3NlOiAnZW5kX2JpbmFyaWVzJyB9LFxuICAgICAgICB7IG9wZW46ICdpbmNsdWRlcycsIGNsb3NlOiAnZW5kX2luY2x1ZGVzJyB9LFxuICAgICAgICB7IG9wZW46ICdzb3VyY2VzJywgY2xvc2U6ICdlbmRfc291cmNlcycgfVxuICAgIF0sXG4gICAgc3Vycm91bmRpbmdQYWlyczogW1xuICAgICAgICB7IG9wZW46ICd7JywgY2xvc2U6ICd9JyB9LFxuICAgICAgICB7IG9wZW46ICdbJywgY2xvc2U6ICddJyB9LFxuICAgICAgICB7IG9wZW46ICcoJywgY2xvc2U6ICcpJyB9LFxuICAgICAgICB7IG9wZW46ICdcIicsIGNsb3NlOiAnXCInIH0sXG4gICAgICAgIHsgb3BlbjogXCInXCIsIGNsb3NlOiBcIidcIiB9LFxuICAgICAgICB7IG9wZW46ICd2YXInLCBjbG9zZTogJ2VuZF92YXInIH0sXG4gICAgICAgIHsgb3BlbjogJ3Zhcl9pbnB1dCcsIGNsb3NlOiAnZW5kX3ZhcicgfSxcbiAgICAgICAgeyBvcGVuOiAndmFyX291dHB1dCcsIGNsb3NlOiAnZW5kX3ZhcicgfSxcbiAgICAgICAgeyBvcGVuOiAndmFyX2luX291dCcsIGNsb3NlOiAnZW5kX3ZhcicgfSxcbiAgICAgICAgeyBvcGVuOiAndmFyX3RlbXAnLCBjbG9zZTogJ2VuZF92YXInIH0sXG4gICAgICAgIHsgb3BlbjogJ3Zhcl9nbG9iYWwnLCBjbG9zZTogJ2VuZF92YXInIH0sXG4gICAgICAgIHsgb3BlbjogJ3Zhcl9hY2Nlc3MnLCBjbG9zZTogJ2VuZF92YXInIH0sXG4gICAgICAgIHsgb3BlbjogJ3Zhcl9leHRlcm5hbCcsIGNsb3NlOiAnZW5kX3ZhcicgfSxcbiAgICAgICAgeyBvcGVuOiAndHlwZScsIGNsb3NlOiAnZW5kX3R5cGUnIH0sXG4gICAgICAgIHsgb3BlbjogJ3N0cnVjdCcsIGNsb3NlOiAnZW5kX3N0cnVjdCcgfSxcbiAgICAgICAgeyBvcGVuOiAncHJvZ3JhbScsIGNsb3NlOiAnZW5kX3Byb2dyYW0nIH0sXG4gICAgICAgIHsgb3BlbjogJ2Z1bmN0aW9uJywgY2xvc2U6ICdlbmRfZnVuY3Rpb24nIH0sXG4gICAgICAgIHsgb3BlbjogJ2Z1bmN0aW9uX2Jsb2NrJywgY2xvc2U6ICdlbmRfZnVuY3Rpb25fYmxvY2snIH0sXG4gICAgICAgIHsgb3BlbjogJ2FjdGlvbicsIGNsb3NlOiAnZW5kX2FjdGlvbicgfSxcbiAgICAgICAgeyBvcGVuOiAnc3RlcCcsIGNsb3NlOiAnZW5kX3N0ZXAnIH0sXG4gICAgICAgIHsgb3BlbjogJ2luaXRpYWxfc3RlcCcsIGNsb3NlOiAnZW5kX3N0ZXAnIH0sXG4gICAgICAgIHsgb3BlbjogJ3RyYW5zYWN0aW9uJywgY2xvc2U6ICdlbmRfdHJhbnNhY3Rpb24nIH0sXG4gICAgICAgIHsgb3BlbjogJ2NvbmZpZ3VyYXRpb24nLCBjbG9zZTogJ2VuZF9jb25maWd1cmF0aW9uJyB9LFxuICAgICAgICB7IG9wZW46ICd0Y3AnLCBjbG9zZTogJ2VuZF90Y3AnIH0sXG4gICAgICAgIHsgb3BlbjogJ3JlY291cmNlJywgY2xvc2U6ICdlbmRfcmVjb3VyY2UnIH0sXG4gICAgICAgIHsgb3BlbjogJ2NoYW5uZWwnLCBjbG9zZTogJ2VuZF9jaGFubmVsJyB9LFxuICAgICAgICB7IG9wZW46ICdsaWJyYXJ5JywgY2xvc2U6ICdlbmRfbGlicmFyeScgfSxcbiAgICAgICAgeyBvcGVuOiAnZm9sZGVyJywgY2xvc2U6ICdlbmRfZm9sZGVyJyB9LFxuICAgICAgICB7IG9wZW46ICdiaW5hcmllcycsIGNsb3NlOiAnZW5kX2JpbmFyaWVzJyB9LFxuICAgICAgICB7IG9wZW46ICdpbmNsdWRlcycsIGNsb3NlOiAnZW5kX2luY2x1ZGVzJyB9LFxuICAgICAgICB7IG9wZW46ICdzb3VyY2VzJywgY2xvc2U6ICdlbmRfc291cmNlcycgfVxuICAgIF0sXG4gICAgZm9sZGluZzoge1xuICAgICAgICBtYXJrZXJzOiB7XG4gICAgICAgICAgICBzdGFydDogbmV3IFJlZ0V4cCgnXlxcXFxzKiNwcmFnbWFcXFxccytyZWdpb25cXFxcYicpLFxuICAgICAgICAgICAgZW5kOiBuZXcgUmVnRXhwKCdeXFxcXHMqI3ByYWdtYVxcXFxzK2VuZHJlZ2lvblxcXFxiJylcbiAgICAgICAgfVxuICAgIH1cbn07XG5leHBvcnQgdmFyIGxhbmd1YWdlID0ge1xuICAgIGRlZmF1bHRUb2tlbjogJycsXG4gICAgdG9rZW5Qb3N0Zml4OiAnLnN0JyxcbiAgICBpZ25vcmVDYXNlOiB0cnVlLFxuICAgIGJyYWNrZXRzOiBbXG4gICAgICAgIHsgdG9rZW46ICdkZWxpbWl0ZXIuY3VybHknLCBvcGVuOiAneycsIGNsb3NlOiAnfScgfSxcbiAgICAgICAgeyB0b2tlbjogJ2RlbGltaXRlci5wYXJlbnRoZXNpcycsIG9wZW46ICcoJywgY2xvc2U6ICcpJyB9LFxuICAgICAgICB7IHRva2VuOiAnZGVsaW1pdGVyLnNxdWFyZScsIG9wZW46ICdbJywgY2xvc2U6ICddJyB9XG4gICAgXSxcbiAgICBrZXl3b3JkczogW1xuICAgICAgICAnaWYnLFxuICAgICAgICAnZW5kX2lmJyxcbiAgICAgICAgJ2Vsc2lmJyxcbiAgICAgICAgJ2Vsc2UnLFxuICAgICAgICAnY2FzZScsXG4gICAgICAgICdvZicsXG4gICAgICAgICd0bycsXG4gICAgICAgICdfX3RyeScsXG4gICAgICAgICdfX2NhdGNoJyxcbiAgICAgICAgJ19fZmluYWxseScsXG4gICAgICAgICdkbycsXG4gICAgICAgICd3aXRoJyxcbiAgICAgICAgJ2J5JyxcbiAgICAgICAgJ3doaWxlJyxcbiAgICAgICAgJ3JlcGVhdCcsXG4gICAgICAgICdlbmRfd2hpbGUnLFxuICAgICAgICAnZW5kX3JlcGVhdCcsXG4gICAgICAgICdlbmRfY2FzZScsXG4gICAgICAgICdmb3InLFxuICAgICAgICAnZW5kX2ZvcicsXG4gICAgICAgICd0YXNrJyxcbiAgICAgICAgJ3JldGFpbicsXG4gICAgICAgICdub25fcmV0YWluJyxcbiAgICAgICAgJ2NvbnN0YW50JyxcbiAgICAgICAgJ3dpdGgnLFxuICAgICAgICAnYXQnLFxuICAgICAgICAnZXhpdCcsXG4gICAgICAgICdyZXR1cm4nLFxuICAgICAgICAnaW50ZXJ2YWwnLFxuICAgICAgICAncHJpb3JpdHknLFxuICAgICAgICAnYWRkcmVzcycsXG4gICAgICAgICdwb3J0JyxcbiAgICAgICAgJ29uX2NoYW5uZWwnLFxuICAgICAgICAndGhlbicsXG4gICAgICAgICdpZWMnLFxuICAgICAgICAnZmlsZScsXG4gICAgICAgICd1c2VzJyxcbiAgICAgICAgJ3ZlcnNpb24nLFxuICAgICAgICAncGFja2FnZXR5cGUnLFxuICAgICAgICAnZGlzcGxheW5hbWUnLFxuICAgICAgICAnY29weXJpZ2h0JyxcbiAgICAgICAgJ3N1bW1hcnknLFxuICAgICAgICAndmVuZG9yJyxcbiAgICAgICAgJ2NvbW1vbl9zb3VyY2UnLFxuICAgICAgICAnZnJvbScsXG4gICAgICAgICdleHRlbmRzJ1xuICAgIF0sXG4gICAgY29uc3RhbnQ6IFsnZmFsc2UnLCAndHJ1ZScsICdudWxsJ10sXG4gICAgZGVmaW5lS2V5d29yZHM6IFtcbiAgICAgICAgJ3ZhcicsXG4gICAgICAgICd2YXJfaW5wdXQnLFxuICAgICAgICAndmFyX291dHB1dCcsXG4gICAgICAgICd2YXJfaW5fb3V0JyxcbiAgICAgICAgJ3Zhcl90ZW1wJyxcbiAgICAgICAgJ3Zhcl9nbG9iYWwnLFxuICAgICAgICAndmFyX2FjY2VzcycsXG4gICAgICAgICd2YXJfZXh0ZXJuYWwnLFxuICAgICAgICAnZW5kX3ZhcicsXG4gICAgICAgICd0eXBlJyxcbiAgICAgICAgJ2VuZF90eXBlJyxcbiAgICAgICAgJ3N0cnVjdCcsXG4gICAgICAgICdlbmRfc3RydWN0JyxcbiAgICAgICAgJ3Byb2dyYW0nLFxuICAgICAgICAnZW5kX3Byb2dyYW0nLFxuICAgICAgICAnZnVuY3Rpb24nLFxuICAgICAgICAnZW5kX2Z1bmN0aW9uJyxcbiAgICAgICAgJ2Z1bmN0aW9uX2Jsb2NrJyxcbiAgICAgICAgJ2VuZF9mdW5jdGlvbl9ibG9jaycsXG4gICAgICAgICdpbnRlcmZhY2UnLFxuICAgICAgICAnZW5kX2ludGVyZmFjZScsXG4gICAgICAgICdtZXRob2QnLFxuICAgICAgICAnZW5kX21ldGhvZCcsXG4gICAgICAgICdwcm9wZXJ0eScsXG4gICAgICAgICdlbmRfcHJvcGVydHknLFxuICAgICAgICAnbmFtZXNwYWNlJyxcbiAgICAgICAgJ2VuZF9uYW1lc3BhY2UnLFxuICAgICAgICAnY29uZmlndXJhdGlvbicsXG4gICAgICAgICdlbmRfY29uZmlndXJhdGlvbicsXG4gICAgICAgICd0Y3AnLFxuICAgICAgICAnZW5kX3RjcCcsXG4gICAgICAgICdyZXNvdXJjZScsXG4gICAgICAgICdlbmRfcmVzb3VyY2UnLFxuICAgICAgICAnY2hhbm5lbCcsXG4gICAgICAgICdlbmRfY2hhbm5lbCcsXG4gICAgICAgICdsaWJyYXJ5JyxcbiAgICAgICAgJ2VuZF9saWJyYXJ5JyxcbiAgICAgICAgJ2ZvbGRlcicsXG4gICAgICAgICdlbmRfZm9sZGVyJyxcbiAgICAgICAgJ2JpbmFyaWVzJyxcbiAgICAgICAgJ2VuZF9iaW5hcmllcycsXG4gICAgICAgICdpbmNsdWRlcycsXG4gICAgICAgICdlbmRfaW5jbHVkZXMnLFxuICAgICAgICAnc291cmNlcycsXG4gICAgICAgICdlbmRfc291cmNlcycsXG4gICAgICAgICdhY3Rpb24nLFxuICAgICAgICAnZW5kX2FjdGlvbicsXG4gICAgICAgICdzdGVwJyxcbiAgICAgICAgJ2luaXRpYWxfc3RlcCcsXG4gICAgICAgICdlbmRfc3RlcCcsXG4gICAgICAgICd0cmFuc2FjdGlvbicsXG4gICAgICAgICdlbmRfdHJhbnNhY3Rpb24nXG4gICAgXSxcbiAgICB0eXBlS2V5d29yZHM6IFtcbiAgICAgICAgJ2ludCcsXG4gICAgICAgICdzaW50JyxcbiAgICAgICAgJ2RpbnQnLFxuICAgICAgICAnbGludCcsXG4gICAgICAgICd1c2ludCcsXG4gICAgICAgICd1aW50JyxcbiAgICAgICAgJ3VkaW50JyxcbiAgICAgICAgJ3VsaW50JyxcbiAgICAgICAgJ3JlYWwnLFxuICAgICAgICAnbHJlYWwnLFxuICAgICAgICAndGltZScsXG4gICAgICAgICdkYXRlJyxcbiAgICAgICAgJ3RpbWVfb2ZfZGF5JyxcbiAgICAgICAgJ2RhdGVfYW5kX3RpbWUnLFxuICAgICAgICAnc3RyaW5nJyxcbiAgICAgICAgJ2Jvb2wnLFxuICAgICAgICAnYnl0ZScsXG4gICAgICAgICd3b3JkJyxcbiAgICAgICAgJ2R3b3JkJyxcbiAgICAgICAgJ2FycmF5JyxcbiAgICAgICAgJ3BvaW50ZXInLFxuICAgICAgICAnbHdvcmQnXG4gICAgXSxcbiAgICBvcGVyYXRvcnM6IFtcbiAgICAgICAgJz0nLFxuICAgICAgICAnPicsXG4gICAgICAgICc8JyxcbiAgICAgICAgJzonLFxuICAgICAgICAnOj0nLFxuICAgICAgICAnPD0nLFxuICAgICAgICAnPj0nLFxuICAgICAgICAnPD4nLFxuICAgICAgICAnJicsXG4gICAgICAgICcrJyxcbiAgICAgICAgJy0nLFxuICAgICAgICAnKicsXG4gICAgICAgICcqKicsXG4gICAgICAgICdNT0QnLFxuICAgICAgICAnXicsXG4gICAgICAgICdvcicsXG4gICAgICAgICdhbmQnLFxuICAgICAgICAnbm90JyxcbiAgICAgICAgJ3hvcicsXG4gICAgICAgICdhYnMnLFxuICAgICAgICAnYWNvcycsXG4gICAgICAgICdhc2luJyxcbiAgICAgICAgJ2F0YW4nLFxuICAgICAgICAnY29zJyxcbiAgICAgICAgJ2V4cCcsXG4gICAgICAgICdleHB0JyxcbiAgICAgICAgJ2xuJyxcbiAgICAgICAgJ2xvZycsXG4gICAgICAgICdzaW4nLFxuICAgICAgICAnc3FydCcsXG4gICAgICAgICd0YW4nLFxuICAgICAgICAnc2VsJyxcbiAgICAgICAgJ21heCcsXG4gICAgICAgICdtaW4nLFxuICAgICAgICAnbGltaXQnLFxuICAgICAgICAnbXV4JyxcbiAgICAgICAgJ3NobCcsXG4gICAgICAgICdzaHInLFxuICAgICAgICAncm9sJyxcbiAgICAgICAgJ3JvcicsXG4gICAgICAgICdpbmRleG9mJyxcbiAgICAgICAgJ3NpemVvZicsXG4gICAgICAgICdhZHInLFxuICAgICAgICAnYWRyaW5zdCcsXG4gICAgICAgICdiaXRhZHInLFxuICAgICAgICAnaXNfdmFsaWQnLFxuICAgICAgICAncmVmJyxcbiAgICAgICAgJ3JlZl90bydcbiAgICBdLFxuICAgIGJ1aWx0aW5WYXJpYWJsZXM6IFtdLFxuICAgIGJ1aWx0aW5GdW5jdGlvbnM6IFtcbiAgICAgICAgJ3NyJyxcbiAgICAgICAgJ3JzJyxcbiAgICAgICAgJ3RwJyxcbiAgICAgICAgJ3RvbicsXG4gICAgICAgICd0b2YnLFxuICAgICAgICAnZXEnLFxuICAgICAgICAnZ2UnLFxuICAgICAgICAnbGUnLFxuICAgICAgICAnbHQnLFxuICAgICAgICAnbmUnLFxuICAgICAgICAncm91bmQnLFxuICAgICAgICAndHJ1bmMnLFxuICAgICAgICAnY3RkJyxcbiAgICAgICAgJ9GBdHUnLFxuICAgICAgICAnY3R1ZCcsXG4gICAgICAgICdyX3RyaWcnLFxuICAgICAgICAnZl90cmlnJyxcbiAgICAgICAgJ21vdmUnLFxuICAgICAgICAnY29uY2F0JyxcbiAgICAgICAgJ2RlbGV0ZScsXG4gICAgICAgICdmaW5kJyxcbiAgICAgICAgJ2luc2VydCcsXG4gICAgICAgICdsZWZ0JyxcbiAgICAgICAgJ2xlbicsXG4gICAgICAgICdyZXBsYWNlJyxcbiAgICAgICAgJ3JpZ2h0JyxcbiAgICAgICAgJ3J0YydcbiAgICBdLFxuICAgIC8vIHdlIGluY2x1ZGUgdGhlc2UgY29tbW9uIHJlZ3VsYXIgZXhwcmVzc2lvbnNcbiAgICBzeW1ib2xzOiAvWz0+PCF+PzomfCtcXC0qXFwvXFxeJV0rLyxcbiAgICAvLyBDIyBzdHlsZSBzdHJpbmdzXG4gICAgZXNjYXBlczogL1xcXFwoPzpbYWJmbnJ0dlxcXFxcIiddfHhbMC05QS1GYS1mXXsxLDR9fHVbMC05QS1GYS1mXXs0fXxVWzAtOUEtRmEtZl17OH0pLyxcbiAgICAvLyBUaGUgbWFpbiB0b2tlbml6ZXIgZm9yIG91ciBsYW5ndWFnZXNcbiAgICB0b2tlbml6ZXI6IHtcbiAgICAgICAgcm9vdDogW1xuICAgICAgICAgICAgWy8oXFwuXFwuKS8sICdkZWxpbWl0ZXInXSxcbiAgICAgICAgICAgIFsvXFxiKDE2I1swLTlBLUZhLWZcXF9dKikrXFxiLywgJ251bWJlci5oZXgnXSxcbiAgICAgICAgICAgIFsvXFxiKDIjWzAxXFxfXSspK1xcYi8sICdudW1iZXIuYmluYXJ5J10sXG4gICAgICAgICAgICBbL1xcYig4I1swLTlcXF9dKikrXFxiLywgJ251bWJlci5vY3RhbCddLFxuICAgICAgICAgICAgWy9cXGJcXGQqXFwuXFxkKyhbZUVdW1xcLStdP1xcZCspP1xcYi8sICdudW1iZXIuZmxvYXQnXSxcbiAgICAgICAgICAgIFsvXFxiKEw/UkVBTCkjWzAtOVxcX1xcLmVdK1xcYi8sICdudW1iZXIuZmxvYXQnXSxcbiAgICAgICAgICAgIFsvXFxiKEJZVEV8KD86RHxMKT9XT1JEfFU/KD86U3xEfEwpP0lOVCkjWzAtOVxcX10rXFxiLywgJ251bWJlciddLFxuICAgICAgICAgICAgWy9cXGQrLywgJ251bWJlciddLFxuICAgICAgICAgICAgWy9cXGIoVHxEVHxUT0QpI1swLTk6LV9zaG15ZF0rXFxiLywgJ3RhZyddLFxuICAgICAgICAgICAgWy9cXCUoSXxRfE0pKFh8QnxXfER8TClbMC05XFwuXSsvLCAndGFnJ10sXG4gICAgICAgICAgICBbL1xcJShJfFF8TSlbMC05XFwuXSovLCAndGFnJ10sXG4gICAgICAgICAgICBbL1xcYltBLVphLXpdezEsNn0jWzAtOV0rXFxiLywgJ3RhZyddLFxuICAgICAgICAgICAgWy9cXGIoVE9ffENUVV98Q1REX3xDVFVEX3xNVVhffFNFTF8pW0FfWmEtel0rXFxiLywgJ3ByZWRlZmluZWQnXSxcbiAgICAgICAgICAgIFsvXFxiW0FfWmEtel0rKF9UT18pW0FfWmEtel0rXFxiLywgJ3ByZWRlZmluZWQnXSxcbiAgICAgICAgICAgIFsvWztdLywgJ2RlbGltaXRlciddLFxuICAgICAgICAgICAgWy9bLl0vLCB7IHRva2VuOiAnZGVsaW1pdGVyJywgbmV4dDogJ0BwYXJhbXMnIH1dLFxuICAgICAgICAgICAgLy8gaWRlbnRpZmllcnMgYW5kIGtleXdvcmRzXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgL1thLXpBLVpfXVxcdyovLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdAb3BlcmF0b3JzJzogJ29wZXJhdG9ycycsXG4gICAgICAgICAgICAgICAgICAgICAgICAnQGtleXdvcmRzJzogJ2tleXdvcmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0B0eXBlS2V5d29yZHMnOiAndHlwZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAnQGRlZmluZUtleXdvcmRzJzogJ3ZhcmlhYmxlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdAY29uc3RhbnQnOiAnY29uc3RhbnQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BidWlsdGluVmFyaWFibGVzJzogJ3ByZWRlZmluZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BidWlsdGluRnVuY3Rpb25zJzogJ3ByZWRlZmluZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ0BkZWZhdWx0JzogJ2lkZW50aWZpZXInXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgeyBpbmNsdWRlOiAnQHdoaXRlc3BhY2UnIH0sXG4gICAgICAgICAgICBbL1t7fSgpXFxbXFxdXS8sICdAYnJhY2tldHMnXSxcbiAgICAgICAgICAgIFsvXCIoW15cIlxcXFxdfFxcXFwuKSokLywgJ3N0cmluZy5pbnZhbGlkJ10sXG4gICAgICAgICAgICBbL1wiLywgeyB0b2tlbjogJ3N0cmluZy5xdW90ZScsIGJyYWNrZXQ6ICdAb3BlbicsIG5leHQ6ICdAc3RyaW5nX2RxJyB9XSxcbiAgICAgICAgICAgIFsvJy8sIHsgdG9rZW46ICdzdHJpbmcucXVvdGUnLCBicmFja2V0OiAnQG9wZW4nLCBuZXh0OiAnQHN0cmluZ19zcScgfV0sXG4gICAgICAgICAgICBbLydbXlxcXFwnXScvLCAnc3RyaW5nJ10sXG4gICAgICAgICAgICBbLygnKShAZXNjYXBlcykoJykvLCBbJ3N0cmluZycsICdzdHJpbmcuZXNjYXBlJywgJ3N0cmluZyddXSxcbiAgICAgICAgICAgIFsvJy8sICdzdHJpbmcuaW52YWxpZCddXG4gICAgICAgIF0sXG4gICAgICAgIHBhcmFtczogW1xuICAgICAgICAgICAgWy9cXGJbQS1aYS16MC05X10rXFxiKD89XFwoKS8sIHsgdG9rZW46ICdpZGVudGlmaWVyJywgbmV4dDogJ0Bwb3AnIH1dLFxuICAgICAgICAgICAgWy9cXGJbQS1aYS16MC05X10rXFxiLywgJ3ZhcmlhYmxlLm5hbWUnLCAnQHBvcCddXG4gICAgICAgIF0sXG4gICAgICAgIGNvbW1lbnQ6IFtcbiAgICAgICAgICAgIFsvW15cXC8qXSsvLCAnY29tbWVudCddLFxuICAgICAgICAgICAgWy9cXC9cXCovLCAnY29tbWVudCcsICdAcHVzaCddLFxuICAgICAgICAgICAgWydcXFxcKi8nLCAnY29tbWVudCcsICdAcG9wJ10sXG4gICAgICAgICAgICBbL1tcXC8qXS8sICdjb21tZW50J11cbiAgICAgICAgXSxcbiAgICAgICAgY29tbWVudDI6IFtcbiAgICAgICAgICAgIFsvW15cXCgqXSsvLCAnY29tbWVudCddLFxuICAgICAgICAgICAgWy9cXChcXCovLCAnY29tbWVudCcsICdAcHVzaCddLFxuICAgICAgICAgICAgWydcXFxcKlxcXFwpJywgJ2NvbW1lbnQnLCAnQHBvcCddLFxuICAgICAgICAgICAgWy9bXFwoKl0vLCAnY29tbWVudCddXG4gICAgICAgIF0sXG4gICAgICAgIHdoaXRlc3BhY2U6IFtcbiAgICAgICAgICAgIFsvWyBcXHRcXHJcXG5dKy8sICd3aGl0ZSddLFxuICAgICAgICAgICAgWy9cXC9cXC8uKiQvLCAnY29tbWVudCddLFxuICAgICAgICAgICAgWy9cXC9cXCovLCAnY29tbWVudCcsICdAY29tbWVudCddLFxuICAgICAgICAgICAgWy9cXChcXCovLCAnY29tbWVudCcsICdAY29tbWVudDInXVxuICAgICAgICBdLFxuICAgICAgICBzdHJpbmdfZHE6IFtcbiAgICAgICAgICAgIFsvW15cXFxcXCJdKy8sICdzdHJpbmcnXSxcbiAgICAgICAgICAgIFsvQGVzY2FwZXMvLCAnc3RyaW5nLmVzY2FwZSddLFxuICAgICAgICAgICAgWy9cXFxcLi8sICdzdHJpbmcuZXNjYXBlLmludmFsaWQnXSxcbiAgICAgICAgICAgIFsvXCIvLCB7IHRva2VuOiAnc3RyaW5nLnF1b3RlJywgYnJhY2tldDogJ0BjbG9zZScsIG5leHQ6ICdAcG9wJyB9XVxuICAgICAgICBdLFxuICAgICAgICBzdHJpbmdfc3E6IFtcbiAgICAgICAgICAgIFsvW15cXFxcJ10rLywgJ3N0cmluZyddLFxuICAgICAgICAgICAgWy9AZXNjYXBlcy8sICdzdHJpbmcuZXNjYXBlJ10sXG4gICAgICAgICAgICBbL1xcXFwuLywgJ3N0cmluZy5lc2NhcGUuaW52YWxpZCddLFxuICAgICAgICAgICAgWy8nLywgeyB0b2tlbjogJ3N0cmluZy5xdW90ZScsIGJyYWNrZXQ6ICdAY2xvc2UnLCBuZXh0OiAnQHBvcCcgfV1cbiAgICAgICAgXVxuICAgIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/st/st.js\n");

/***/ })

}]);