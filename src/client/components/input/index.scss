@import '../../classNames/style.scss';

$container: prefix('textarea');
$widget: BEMElement($container, 'widget');
$validation: BEMElement($container, 'validation');

$info: BEMModifier($container, 'info');
$warning: BEMModifier($container, 'warning');
$error: BEMModifier($container, 'error');
$validating: BEMModifier($container, 'validating');

$widget-size: 24px;

/* stylelint-disable */
$status-colors: (
    $info: (border: var(--inputValidation-infoBorder), background: var(--inputValidation-infoBackground)),
    $warning: (border: var(--inputValidation-warningBorder), background: var(--inputValidation-warningBackground)),
    $error: (border: var(--inputValidation-errorBorder), background: var(--inputValidation-errorBackground)),
    $validating: (border: var(--inputValidation-infoBorder), background: var(--inputValidation-infoBackground)),
);
/* stylelint-enable */

@mixin status($border, $background) {
    .#{$widget} {
        outline: 1px solid $border;
        outline-offset: -1px;
    }

    .#{$validation} {
        background: $background;
        border: 1px solid $border;
    }
};

.#{$container} {
    position: relative;
    font-size: 14px;

    .#{$widget} {
        background: var(--input-background);
        border: none;
        box-sizing: border-box;
        color: var(--input-foreground);
        font-family: inherit;
        font-size: inherit;
        height: $widget-size;
        min-height: $widget-size;
        overflow: hidden;
        padding: 4px;
        resize: none;
        width: 100%;

        &:focus {
            outline-color: var(--focusBorder);
        }

        // TODO: better to mock a scroll bar
        // invisible scroll bar
        &::-webkit-scrollbar {
            opacity: 0;
        }
    }

    .#{$validation} {
        padding: 4px;
        position: absolute;
        z-index: 99;
        top: calc($widget-size + 1px);
        width: 100%;
        box-sizing: border-box;
    }

    @each $name, $status in $status-colors {
        &.#{$name} {
            @include status(map-get($status, 'border'), map-get($status, 'background'));
        }
    }
}


:export {
    container: $container;
    widget: $widget;
    validation: $validation;
    info: $info;
    warning: $warning;
    error: $error;
    validating: $validating;
}